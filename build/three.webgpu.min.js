/**
 * @license
 * Copyright 2010-2025 Three.js Authors
 * SPDX-License-Identifier: MIT
 */
import{Color as e,Vector2 as t,Vector3 as r,Vector4 as s,Matrix2 as i,Matrix3 as n,Matrix4 as a,EventDispatcher as o,MathUtils as u,WebGLCoordinateSystem as l,WebGPUCoordinateSystem as d,ColorManagement as c,SRGBTransfer as h,NoToneMapping as p,StaticDrawUsage as g,InterleavedBuffer as m,InterleavedBufferAttribute as f,DynamicDrawUsage as y,NoColorSpace as b,Texture as x,UnsignedIntType as T,IntType as _,NearestFilter as v,Sphere as N,BackSide as S,DoubleSide as E,Euler as w,CubeTexture as A,CubeReflectionMapping as R,CubeRefractionMapping as C,TangentSpaceNormalMap as M,ObjectSpaceNormalMap as P,InstancedInterleavedBuffer as B,InstancedBufferAttribute as L,DataArrayTexture as F,FloatType as D,FramebufferTexture as I,LinearMipmapLinearFilter as V,DepthTexture as U,Material as O,NormalBlending as k,LineBasicMaterial as G,LineDashedMaterial as z,NoBlending as H,MeshNormalMaterial as $,SRGBColorSpace as W,WebGLCubeRenderTarget as j,BoxGeometry as q,Mesh as X,Scene as K,LinearFilter as Y,CubeCamera as Q,EquirectangularReflectionMapping as Z,EquirectangularRefractionMapping as J,AddOperation as ee,MixOperation as te,MultiplyOperation as re,MeshBasicMaterial as se,MeshLambertMaterial as ie,MeshPhongMaterial as ne,OrthographicCamera as ae,PerspectiveCamera as oe,RenderTarget as ue,LinearSRGBColorSpace as le,RGBAFormat as de,HalfFloatType as ce,CubeUVReflectionMapping as he,BufferGeometry as pe,BufferAttribute as ge,MeshStandardMaterial as me,MeshPhysicalMaterial as fe,MeshToonMaterial as ye,MeshMatcapMaterial as be,SpriteMaterial as xe,PointsMaterial as Te,ShadowMaterial as _e,Uint32BufferAttribute as ve,Uint16BufferAttribute as Ne,arrayNeedsUint32 as Se,Camera as Ee,DepthStencilFormat as we,DepthFormat as Ae,UnsignedInt248Type as Re,UnsignedByteType as Ce,Plane as Me,Object3D as Pe,LinearMipMapLinearFilter as Be,Float32BufferAttribute as Le,UVMapping as Fe,VSMShadowMap as De,LessCompare as Ie,RGFormat as Ve,BasicShadowMap as Ue,SphereGeometry as Oe,LinearMipmapNearestFilter as ke,NearestMipmapLinearFilter as Ge,Float16BufferAttribute as ze,REVISION as He,ArrayCamera as $e,PlaneGeometry as We,FrontSide as je,CustomBlending as qe,AddEquation as Xe,ZeroFactor as Ke,CylinderGeometry as Ye,Quaternion as Qe,WebXRController as Ze,RAD2DEG as Je,PCFShadowMap as et,FrustumArray as tt,Frustum as rt,DataTexture as st,RedIntegerFormat as it,RedFormat as nt,ShortType as at,ByteType as ot,UnsignedShortType as ut,RGIntegerFormat as lt,RGBIntegerFormat as dt,RGBFormat as ct,RGBAIntegerFormat as ht,warnOnce as pt,createCanvasElement as gt,ReverseSubtractEquation as mt,SubtractEquation as ft,OneMinusDstAlphaFactor as yt,OneMinusDstColorFactor as bt,OneMinusSrcAlphaFactor as xt,OneMinusSrcColorFactor as Tt,DstAlphaFactor as _t,DstColorFactor as vt,SrcAlphaSaturateFactor as Nt,SrcAlphaFactor as St,SrcColorFactor as Et,OneFactor as wt,CullFaceNone as At,CullFaceBack as Rt,CullFaceFront as Ct,MultiplyBlending as Mt,SubtractiveBlending as Pt,AdditiveBlending as Bt,NotEqualDepth as Lt,GreaterDepth as Ft,GreaterEqualDepth as Dt,EqualDepth as It,LessEqualDepth as Vt,LessDepth as Ut,AlwaysDepth as Ot,NeverDepth as kt,UnsignedShort4444Type as Gt,UnsignedShort5551Type as zt,UnsignedInt5999Type as Ht,AlphaFormat as $t,RGB_S3TC_DXT1_Format as Wt,RGBA_S3TC_DXT1_Format as jt,RGBA_S3TC_DXT3_Format as qt,RGBA_S3TC_DXT5_Format as Xt,RGB_PVRTC_4BPPV1_Format as Kt,RGB_PVRTC_2BPPV1_Format as Yt,RGBA_PVRTC_4BPPV1_Format as Qt,RGBA_PVRTC_2BPPV1_Format as Zt,RGB_ETC1_Format as Jt,RGB_ETC2_Format as er,RGBA_ETC2_EAC_Format as tr,RGBA_ASTC_4x4_Format as rr,RGBA_ASTC_5x4_Format as sr,RGBA_ASTC_5x5_Format as ir,RGBA_ASTC_6x5_Format as nr,RGBA_ASTC_6x6_Format as ar,RGBA_ASTC_8x5_Format as or,RGBA_ASTC_8x6_Format as ur,RGBA_ASTC_8x8_Format as lr,RGBA_ASTC_10x5_Format as dr,RGBA_ASTC_10x6_Format as cr,RGBA_ASTC_10x8_Format as hr,RGBA_ASTC_10x10_Format as pr,RGBA_ASTC_12x10_Format as gr,RGBA_ASTC_12x12_Format as mr,RGBA_BPTC_Format as fr,RED_RGTC1_Format as yr,SIGNED_RED_RGTC1_Format as br,RED_GREEN_RGTC2_Format as xr,SIGNED_RED_GREEN_RGTC2_Format as Tr,MirroredRepeatWrapping as _r,ClampToEdgeWrapping as vr,RepeatWrapping as Nr,NearestMipmapNearestFilter as Sr,NotEqualCompare as Er,GreaterCompare as wr,GreaterEqualCompare as Ar,EqualCompare as Rr,LessEqualCompare as Cr,AlwaysCompare as Mr,NeverCompare as Pr,LinearTransfer as Br,NotEqualStencilFunc as Lr,GreaterStencilFunc as Fr,GreaterEqualStencilFunc as Dr,EqualStencilFunc as Ir,LessEqualStencilFunc as Vr,LessStencilFunc as Ur,AlwaysStencilFunc as Or,NeverStencilFunc as kr,DecrementWrapStencilOp as Gr,IncrementWrapStencilOp as zr,DecrementStencilOp as Hr,IncrementStencilOp as $r,InvertStencilOp as Wr,ReplaceStencilOp as jr,ZeroStencilOp as qr,KeepStencilOp as Xr,MaxEquation as Kr,MinEquation as Yr,SpotLight as Qr,PointLight as Zr,DirectionalLight as Jr,RectAreaLight as es,AmbientLight as ts,HemisphereLight as rs,LightProbe as ss,LinearToneMapping as is,ReinhardToneMapping as ns,CineonToneMapping as as,ACESFilmicToneMapping as os,AgXToneMapping as us,NeutralToneMapping as ls,Group as ds,Loader as cs,FileLoader as hs,MaterialLoader as ps,ObjectLoader as gs}from"./three.core.min.js";export{AdditiveAnimationBlendMode,AnimationAction,AnimationClip,AnimationLoader,AnimationMixer,AnimationObjectGroup,AnimationUtils,ArcCurve,ArrowHelper,AttachedBindMode,Audio,AudioAnalyser,AudioContext,AudioListener,AudioLoader,AxesHelper,BasicDepthPacking,BatchedMesh,Bone,BooleanKeyframeTrack,Box2,Box3,Box3Helper,BoxHelper,BufferGeometryLoader,Cache,CameraHelper,CanvasTexture,CapsuleGeometry,CatmullRomCurve3,CircleGeometry,Clock,ColorKeyframeTrack,CompressedArrayTexture,CompressedCubeTexture,CompressedTexture,CompressedTextureLoader,ConeGeometry,ConstantAlphaFactor,ConstantColorFactor,Controls,CubeTextureLoader,CubicBezierCurve,CubicBezierCurve3,CubicInterpolant,CullFaceFrontBack,Curve,CurvePath,CustomToneMapping,Cylindrical,Data3DTexture,DataTextureLoader,DataUtils,DefaultLoadingManager,DetachedBindMode,DirectionalLightHelper,DiscreteInterpolant,DodecahedronGeometry,DynamicCopyUsage,DynamicReadUsage,EdgesGeometry,EllipseCurve,ExtrudeGeometry,Fog,FogExp2,GLBufferAttribute,GLSL1,GLSL3,GridHelper,HemisphereLightHelper,IcosahedronGeometry,ImageBitmapLoader,ImageLoader,ImageUtils,InstancedBufferGeometry,InstancedMesh,Int16BufferAttribute,Int32BufferAttribute,Int8BufferAttribute,Interpolant,InterpolateDiscrete,InterpolateLinear,InterpolateSmooth,InterpolationSamplingMode,InterpolationSamplingType,KeyframeTrack,LOD,LatheGeometry,Layers,Light,Line,Line3,LineCurve,LineCurve3,LineLoop,LineSegments,LinearInterpolant,LinearMipMapNearestFilter,LoaderUtils,LoadingManager,LoopOnce,LoopPingPong,LoopRepeat,MOUSE,MeshDepthMaterial,MeshDistanceMaterial,NearestMipMapLinearFilter,NearestMipMapNearestFilter,NormalAnimationBlendMode,NumberKeyframeTrack,OctahedronGeometry,OneMinusConstantAlphaFactor,OneMinusConstantColorFactor,PCFSoftShadowMap,Path,PlaneHelper,PointLightHelper,Points,PolarGridHelper,PolyhedronGeometry,PositionalAudio,PropertyBinding,PropertyMixer,QuadraticBezierCurve,QuadraticBezierCurve3,QuaternionKeyframeTrack,QuaternionLinearInterpolant,RGBADepthPacking,RGBDepthPacking,RGB_BPTC_SIGNED_Format,RGB_BPTC_UNSIGNED_Format,RGDepthPacking,RawShaderMaterial,Ray,Raycaster,RenderTarget3D,RingGeometry,ShaderMaterial,Shape,ShapeGeometry,ShapePath,ShapeUtils,Skeleton,SkeletonHelper,SkinnedMesh,Source,Spherical,SphericalHarmonics3,SplineCurve,SpotLightHelper,Sprite,StaticCopyUsage,StaticReadUsage,StereoCamera,StreamCopyUsage,StreamDrawUsage,StreamReadUsage,StringKeyframeTrack,TOUCH,TetrahedronGeometry,TextureLoader,TextureUtils,Timer,TimestampQuery,TorusGeometry,TorusKnotGeometry,Triangle,TriangleFanDrawMode,TriangleStripDrawMode,TrianglesDrawMode,TubeGeometry,Uint8BufferAttribute,Uint8ClampedBufferAttribute,Uniform,UniformsGroup,VectorKeyframeTrack,VideoFrameTexture,VideoTexture,WebGL3DRenderTarget,WebGLArrayRenderTarget,WebGLRenderTarget,WireframeGeometry,WrapAroundEnding,ZeroCurvatureEnding,ZeroSlopeEnding}from"./three.core.min.js";const ms=["alphaMap","alphaTest","anisotropy","anisotropyMap","anisotropyRotation","aoMap","aoMapIntensity","attenuationColor","attenuationDistance","bumpMap","clearcoat","clearcoatMap","clearcoatNormalMap","clearcoatNormalScale","clearcoatRoughness","color","dispersion","displacementMap","emissive","emissiveIntensity","emissiveMap","envMap","envMapIntensity","gradientMap","ior","iridescence","iridescenceIOR","iridescenceMap","iridescenceThicknessMap","lightMap","lightMapIntensity","map","matcap","metalness","metalnessMap","normalMap","normalScale","opacity","roughness","roughnessMap","sheen","sheenColor","sheenColorMap","sheenRoughnessMap","shininess","specular","specularColor","specularColorMap","specularIntensity","specularIntensityMap","specularMap","thickness","transmission","transmissionMap"],fs=new WeakMap;class ys{constructor(e){this.renderObjects=new WeakMap,this.hasNode=this.containsNode(e),this.hasAnimation=!0===e.object.isSkinnedMesh,this.refreshUniforms=ms,this.renderId=0}firstInitialization(e){return!1===this.renderObjects.has(e)&&(this.getRenderObjectData(e),!0)}needsVelocity(e){const t=e.getMRT();return null!==t&&t.has("velocity")}getRenderObjectData(e){let t=this.renderObjects.get(e);if(void 0===t){const{geometry:r,material:s,object:i}=e;if(t={material:this.getMaterialData(s),geometry:{id:r.id,attributes:this.getAttributesData(r.attributes),indexVersion:r.index?r.index.version:null,drawRange:{start:r.drawRange.start,count:r.drawRange.count}},worldMatrix:i.matrixWorld.clone()},i.center&&(t.center=i.center.clone()),i.morphTargetInfluences&&(t.morphTargetInfluences=i.morphTargetInfluences.slice()),null!==e.bundle&&(t.version=e.bundle.version),t.material.transmission>0){const{width:r,height:s}=e.context;t.bufferWidth=r,t.bufferHeight=s}t.lights=this.getLightsData(e.lightsNode.getLights()),this.renderObjects.set(e,t)}return t}getAttributesData(e){const t={};for(const r in e){const s=e[r];t[r]={version:s.version}}return t}containsNode(e){const t=e.material;for(const e in t)if(t[e]&&t[e].isNode)return!0;return null!==e.renderer.overrideNodes.modelViewMatrix||null!==e.renderer.overrideNodes.modelNormalViewMatrix}getMaterialData(e){const t={};for(const r of this.refreshUniforms){const s=e[r];null!=s&&("object"==typeof s&&void 0!==s.clone?!0===s.isTexture?t[r]={id:s.id,version:s.version}:t[r]=s.clone():t[r]=s)}return t}equals(e,t){const{object:r,material:s,geometry:i}=e,n=this.getRenderObjectData(e);if(!0!==n.worldMatrix.equals(r.matrixWorld))return n.worldMatrix.copy(r.matrixWorld),!1;const a=n.material;for(const e in a){const t=a[e],r=s[e];if(void 0!==t.equals){if(!1===t.equals(r))return t.copy(r),!1}else if(!0===r.isTexture){if(t.id!==r.id||t.version!==r.version)return t.id=r.id,t.version=r.version,!1}else if(t!==r)return a[e]=r,!1}if(a.transmission>0){const{width:t,height:r}=e.context;if(n.bufferWidth!==t||n.bufferHeight!==r)return n.bufferWidth=t,n.bufferHeight=r,!1}const o=n.geometry,u=i.attributes,l=o.attributes,d=Object.keys(l),c=Object.keys(u);if(o.id!==i.id)return o.id=i.id,!1;if(d.length!==c.length)return n.geometry.attributes=this.getAttributesData(u),!1;for(const e of d){const t=l[e],r=u[e];if(void 0===r)return delete l[e],!1;if(t.version!==r.version)return t.version=r.version,!1}const h=i.index,p=o.indexVersion,g=h?h.version:null;if(p!==g)return o.indexVersion=g,!1;if(o.drawRange.start!==i.drawRange.start||o.drawRange.count!==i.drawRange.count)return o.drawRange.start=i.drawRange.start,o.drawRange.count=i.drawRange.count,!1;if(n.morphTargetInfluences){let e=!1;for(let t=0;t<n.morphTargetInfluences.length;t++)n.morphTargetInfluences[t]!==r.morphTargetInfluences[t]&&(e=!0);if(e)return!0}if(n.lights)for(let e=0;e<t.length;e++)if(n.lights[e].map!==t[e].map)return!1;return n.center&&!1===n.center.equals(r.center)?(n.center.copy(r.center),!0):(null!==e.bundle&&(n.version=e.bundle.version),!0)}getLightsData(e){const t=[];for(const r of e)!0===r.isSpotLight&&null!==r.map&&t.push({map:r.map.version});return t}getLights(e,t){if(fs.has(e)){const r=fs.get(e);if(r.renderId===t)return r.lightsData}const r=this.getLightsData(e.getLights());return fs.set(e,{renderId:t,lightsData:r}),r}needsRefresh(e,t){if(this.hasNode||this.hasAnimation||this.firstInitialization(e)||this.needsVelocity(t.renderer))return!0;const{renderId:r}=t;if(this.renderId!==r)return this.renderId=r,!0;const s=!0===e.object.static,i=null!==e.bundle&&!0===e.bundle.static&&this.getRenderObjectData(e).version===e.bundle.version;if(s||i)return!1;const n=this.getLights(e.lightsNode,r);return!0!==this.equals(e,n)}}function bs(e,t=0){let r=3735928559^t,s=1103547991^t;if(e instanceof Array)for(let t,i=0;i<e.length;i++)t=e[i],r=Math.imul(r^t,2654435761),s=Math.imul(s^t,1597334677);else for(let t,i=0;i<e.length;i++)t=e.charCodeAt(i),r=Math.imul(r^t,2654435761),s=Math.imul(s^t,1597334677);return r=Math.imul(r^r>>>16,2246822507),r^=Math.imul(s^s>>>13,3266489909),s=Math.imul(s^s>>>16,2246822507),s^=Math.imul(r^r>>>13,3266489909),4294967296*(2097151&s)+(r>>>0)}const xs=e=>bs(e),Ts=e=>bs(e),_s=(...e)=>bs(e);function vs(e,t=!1){const r=[];!0===e.isNode&&(r.push(e.id),e=e.getSelf());for(const{property:s,childNode:i}of Ns(e))r.push(bs(s.slice(0,-4)),i.getCacheKey(t));return bs(r)}function*Ns(e,t=!1){for(const r in e){if(!0===r.startsWith("_"))continue;const s=e[r];if(!0===Array.isArray(s))for(let e=0;e<s.length;e++){const i=s[e];i&&(!0===i.isNode||t&&"function"==typeof i.toJSON)&&(yield{property:r,index:e,childNode:i})}else if(s&&!0===s.isNode)yield{property:r,childNode:s};else if("object"==typeof s)for(const e in s){const i=s[e];i&&(!0===i.isNode||t&&"function"==typeof i.toJSON)&&(yield{property:r,index:e,childNode:i})}}}const Ss=new Map([[1,"float"],[2,"vec2"],[3,"vec3"],[4,"vec4"],[9,"mat3"],[16,"mat4"]]),Es=new WeakMap;function ws(e){return Ss.get(e)}function As(e){if(/[iu]?vec\d/.test(e))return e.startsWith("ivec")?Int32Array:e.startsWith("uvec")?Uint32Array:Float32Array;if(/mat\d/.test(e))return Float32Array;if(/float/.test(e))return Float32Array;if(/uint/.test(e))return Uint32Array;if(/int/.test(e))return Int32Array;throw new Error(`THREE.NodeUtils: Unsupported type: ${e}`)}function Rs(e){return/float|int|uint/.test(e)?1:/vec2/.test(e)?2:/vec3/.test(e)?3:/vec4/.test(e)||/mat2/.test(e)?4:/mat3/.test(e)?9:/mat4/.test(e)?16:void console.error("THREE.TSL: Unsupported type:",e)}function Cs(e){return/float|int|uint/.test(e)?1:/vec2/.test(e)?2:/vec3/.test(e)?3:/vec4/.test(e)||/mat2/.test(e)?4:/mat3/.test(e)?12:/mat4/.test(e)?16:void console.error("THREE.TSL: Unsupported type:",e)}function Ms(e){return/float|int|uint/.test(e)?4:/vec2/.test(e)?8:/vec3/.test(e)||/vec4/.test(e)?16:/mat2/.test(e)?8:/mat3/.test(e)?48:/mat4/.test(e)?64:void console.error("THREE.TSL: Unsupported type:",e)}function Ps(e){if(null==e)return null;const t=typeof e;return!0===e.isNode?"node":"number"===t?"float":"boolean"===t?"bool":"string"===t?"string":"function"===t?"shader":!0===e.isVector2?"vec2":!0===e.isVector3?"vec3":!0===e.isVector4?"vec4":!0===e.isMatrix2?"mat2":!0===e.isMatrix3?"mat3":!0===e.isMatrix4?"mat4":!0===e.isColor?"color":e instanceof ArrayBuffer?"ArrayBuffer":null}function Bs(o,...u){const l=o?o.slice(-4):void 0;return 1===u.length&&("vec2"===l?u=[u[0],u[0]]:"vec3"===l?u=[u[0],u[0],u[0]]:"vec4"===l&&(u=[u[0],u[0],u[0],u[0]])),"color"===o?new e(...u):"vec2"===l?new t(...u):"vec3"===l?new r(...u):"vec4"===l?new s(...u):"mat2"===l?new i(...u):"mat3"===l?new n(...u):"mat4"===l?new a(...u):"bool"===o?u[0]||!1:"float"===o||"int"===o||"uint"===o?u[0]||0:"string"===o?u[0]||"":"ArrayBuffer"===o?Ds(u[0]):null}function Ls(e){let t=Es.get(e);return void 0===t&&(t={},Es.set(e,t)),t}function Fs(e){let t="";const r=new Uint8Array(e);for(let e=0;e<r.length;e++)t+=String.fromCharCode(r[e]);return btoa(t)}function Ds(e){return Uint8Array.from(atob(e),e=>e.charCodeAt(0)).buffer}var Is=Object.freeze({__proto__:null,arrayBufferToBase64:Fs,base64ToArrayBuffer:Ds,getByteBoundaryFromType:Ms,getCacheKey:vs,getDataFromObject:Ls,getLengthFromType:Rs,getMemoryLengthFromType:Cs,getNodeChildren:Ns,getTypeFromLength:ws,getTypedArrayFromType:As,getValueFromType:Bs,getValueType:Ps,hash:_s,hashArray:Ts,hashString:xs});const Vs={VERTEX:"vertex",FRAGMENT:"fragment"},Us={NONE:"none",FRAME:"frame",RENDER:"render",OBJECT:"object"},Os={BOOLEAN:"bool",INTEGER:"int",FLOAT:"float",VECTOR2:"vec2",VECTOR3:"vec3",VECTOR4:"vec4",MATRIX2:"mat2",MATRIX3:"mat3",MATRIX4:"mat4"},ks={READ_ONLY:"readOnly",WRITE_ONLY:"writeOnly",READ_WRITE:"readWrite"},Gs=["fragment","vertex"],zs=["setup","analyze","generate"],Hs=[...Gs,"compute"],$s=["x","y","z","w"],Ws={analyze:"setup",generate:"analyze"};let js=0;class qs extends o{static get type(){return"Node"}constructor(e=null){super(),this.nodeType=e,this.updateType=Us.NONE,this.updateBeforeType=Us.NONE,this.updateAfterType=Us.NONE,this.uuid=u.generateUUID(),this.version=0,this.global=!1,this.parents=!1,this.isNode=!0,this._cacheKey=null,this._cacheKeyVersion=0,Object.defineProperty(this,"id",{value:js++})}set needsUpdate(e){!0===e&&this.version++}get type(){return this.constructor.type}onUpdate(e,t){return this.updateType=t,this.update=e.bind(this.getSelf()),this}onFrameUpdate(e){return this.onUpdate(e,Us.FRAME)}onRenderUpdate(e){return this.onUpdate(e,Us.RENDER)}onObjectUpdate(e){return this.onUpdate(e,Us.OBJECT)}onReference(e){return this.updateReference=e.bind(this.getSelf()),this}getSelf(){return this.self||this}updateReference(){return this}isGlobal(){return this.global}*getChildren(){for(const{childNode:e}of Ns(this))yield e}dispose(){this.dispatchEvent({type:"dispose"})}traverse(e){e(this);for(const t of this.getChildren())t.traverse(e)}getCacheKey(e=!1){return!0!==(e=e||this.version!==this._cacheKeyVersion)&&null!==this._cacheKey||(this._cacheKey=_s(vs(this,e),this.customCacheKey()),this._cacheKeyVersion=this.version),this._cacheKey}customCacheKey(){return 0}getScope(){return this}getHash(){return this.uuid}getUpdateType(){return this.updateType}getUpdateBeforeType(){return this.updateBeforeType}getUpdateAfterType(){return this.updateAfterType}getElementType(e){const t=this.getNodeType(e);return e.getElementType(t)}getMemberType(){return"void"}getNodeType(e){const t=e.getNodeProperties(this);return t.outputNode?t.outputNode.getNodeType(e):this.nodeType}getShared(e){const t=this.getHash(e);return e.getNodeFromHash(t)||this}setup(e){const t=e.getNodeProperties(this);let r=0;for(const e of this.getChildren())t["node"+r++]=e;return t.outputNode||null}analyze(e,t=null){const r=e.increaseUsage(this);if(!0===this.parents){const r=e.getDataFromNode(this,"any");r.stages=r.stages||{},r.stages[e.shaderStage]=r.stages[e.shaderStage]||[],r.stages[e.shaderStage].push(t)}if(1===r){const t=e.getNodeProperties(this);for(const r of Object.values(t))r&&!0===r.isNode&&r.build(e,this)}}generate(e,t){const{outputNode:r}=e.getNodeProperties(this);if(r&&!0===r.isNode)return r.build(e,t)}updateBefore(){console.warn("Abstract function.")}updateAfter(){console.warn("Abstract function.")}update(){console.warn("Abstract function.")}build(e,t=null){const r=this.getShared(e);if(this!==r)return r.build(e,t);const s=e.getDataFromNode(this);s.buildStages=s.buildStages||{},s.buildStages[e.buildStage]=!0;const i=Ws[e.buildStage];if(i&&!0!==s.buildStages[i]){const t=e.getBuildStage();e.setBuildStage(i),this.build(e),e.setBuildStage(t)}e.addNode(this),e.addChain(this);let n=null;const a=e.getBuildStage();if("setup"===a){this.updateReference(e);const t=e.getNodeProperties(this);if(!0!==t.initialized){t.initialized=!0,t.outputNode=this.setup(e)||t.outputNode||null;for(const r of Object.values(t))if(r&&!0===r.isNode){if(!0===r.parents){const t=e.getNodeProperties(r);t.parents=t.parents||[],t.parents.push(this)}r.build(e)}}n=t.outputNode}else if("analyze"===a)this.analyze(e,t);else if("generate"===a){if(1===this.generate.length){const r=this.getNodeType(e),s=e.getDataFromNode(this);n=s.snippet,void 0===n?void 0===s.generated?(s.generated=!0,n=this.generate(e)||"",s.snippet=n):(console.warn("THREE.Node: Recursion detected.",this),n="/* Recursion detected. */"):void 0!==s.flowCodes&&void 0!==e.context.nodeBlock&&e.addFlowCodeHierarchy(this,e.context.nodeBlock),n=e.format(n,r,t)}else n=this.generate(e,t)||""}return e.removeChain(this),e.addSequentialNode(this),n}getSerializeChildren(){return Ns(this)}serialize(e){const t=this.getSerializeChildren(),r={};for(const{property:s,index:i,childNode:n}of t)void 0!==i?(void 0===r[s]&&(r[s]=Number.isInteger(i)?[]:{}),r[s][i]=n.toJSON(e.meta).uuid):r[s]=n.toJSON(e.meta).uuid;Object.keys(r).length>0&&(e.inputNodes=r)}deserialize(e){if(void 0!==e.inputNodes){const t=e.meta.nodes;for(const r in e.inputNodes)if(Array.isArray(e.inputNodes[r])){const s=[];for(const i of e.inputNodes[r])s.push(t[i]);this[r]=s}else if("object"==typeof e.inputNodes[r]){const s={};for(const i in e.inputNodes[r]){const n=e.inputNodes[r][i];s[i]=t[n]}this[r]=s}else{const s=e.inputNodes[r];this[r]=t[s]}}}toJSON(e){const{uuid:t,type:r}=this,s=void 0===e||"string"==typeof e;s&&(e={textures:{},images:{},nodes:{}});let i=e.nodes[t];function n(e){const t=[];for(const r in e){const s=e[r];delete s.metadata,t.push(s)}return t}if(void 0===i&&(i={uuid:t,type:r,meta:e,metadata:{version:4.7,type:"Node",generator:"Node.toJSON"}},!0!==s&&(e.nodes[i.uuid]=i),this.serialize(i),delete i.meta),s){const t=n(e.textures),r=n(e.images),s=n(e.nodes);t.length>0&&(i.textures=t),r.length>0&&(i.images=r),s.length>0&&(i.nodes=s)}return i}}class Xs extends qs{static get type(){return"ArrayElementNode"}constructor(e,t){super(),this.node=e,this.indexNode=t,this.isArrayElementNode=!0}getNodeType(e){return this.node.getElementType(e)}generate(e){const t=this.indexNode.getNodeType(e);return`${this.node.build(e)}[ ${this.indexNode.build(e,!e.isVector(t)&&e.isInteger(t)?t:"uint")} ]`}}class Ks extends qs{static get type(){return"ConvertNode"}constructor(e,t){super(),this.node=e,this.convertTo=t}getNodeType(e){const t=this.node.getNodeType(e);let r=null;for(const s of this.convertTo.split("|"))null!==r&&e.getTypeLength(t)!==e.getTypeLength(s)||(r=s);return r}serialize(e){super.serialize(e),e.convertTo=this.convertTo}deserialize(e){super.deserialize(e),this.convertTo=e.convertTo}generate(e,t){const r=this.node,s=this.getNodeType(e),i=r.build(e,s);return e.format(i,s,t)}}class Ys extends qs{static get type(){return"TempNode"}constructor(e=null){super(e),this.isTempNode=!0}hasDependencies(e){return e.getDataFromNode(this).usageCount>1}build(e,t){if("generate"===e.getBuildStage()){const r=e.getVectorType(this.getNodeType(e,t)),s=e.getDataFromNode(this);if(void 0!==s.propertyName)return e.format(s.propertyName,r,t);if("void"!==r&&"void"!==t&&this.hasDependencies(e)){const i=super.build(e,r),n=e.getVarFromNode(this,null,r),a=e.getPropertyName(n);return e.addLineFlowCode(`${a} = ${i}`,this),s.snippet=i,s.propertyName=a,e.format(s.propertyName,r,t)}}return super.build(e,t)}}class Qs extends Ys{static get type(){return"JoinNode"}constructor(e=[],t=null){super(t),this.nodes=e}getNodeType(e){return null!==this.nodeType?e.getVectorType(this.nodeType):e.getTypeFromLength(this.nodes.reduce((t,r)=>t+e.getTypeLength(r.getNodeType(e)),0))}generate(e,t){const r=this.getNodeType(e),s=e.getTypeLength(r),i=this.nodes,n=e.getComponentType(r),a=[];let o=0;for(const t of i){if(o>=s){console.error(`THREE.TSL: Length of parameters exceeds maximum length of function '${r}()' type.`);break}let i,u=t.getNodeType(e),l=e.getTypeLength(u);o+l>s&&(console.error(`THREE.TSL: Length of '${r}()' data exceeds maximum length of output type.`),l=s-o,u=e.getTypeFromLength(l)),o+=l,i=t.build(e,u);const d=e.getComponentType(u);d!==n&&(i=e.format(i,d,n)),a.push(i)}const u=`${e.getType(r)}( ${a.join(", ")} )`;return e.format(u,r,t)}}const Zs=$s.join("");class Js extends qs{static get type(){return"SplitNode"}constructor(e,t="x"){super(),this.node=e,this.components=t,this.isSplitNode=!0}getVectorLength(){let e=this.components.length;for(const t of this.components)e=Math.max($s.indexOf(t)+1,e);return e}getComponentType(e){return e.getComponentType(this.node.getNodeType(e))}getNodeType(e){return e.getTypeFromLength(this.components.length,this.getComponentType(e))}generate(e,t){const r=this.node,s=e.getTypeLength(r.getNodeType(e));let i=null;if(s>1){let n=null;this.getVectorLength()>=s&&(n=e.getTypeFromLength(this.getVectorLength(),this.getComponentType(e)));const a=r.build(e,n);i=this.components.length===s&&this.components===Zs.slice(0,this.components.length)?e.format(a,n,t):e.format(`${a}.${this.components}`,this.getNodeType(e),t)}else i=r.build(e,t);return i}serialize(e){super.serialize(e),e.components=this.components}deserialize(e){super.deserialize(e),this.components=e.components}}class ei extends Ys{static get type(){return"SetNode"}constructor(e,t,r){super(),this.sourceNode=e,this.components=t,this.targetNode=r}getNodeType(e){return this.sourceNode.getNodeType(e)}generate(e){const{sourceNode:t,components:r,targetNode:s}=this,i=this.getNodeType(e),n=e.getComponentType(s.getNodeType(e)),a=e.getTypeFromLength(r.length,n),o=s.build(e,a),u=t.build(e,i),l=e.getTypeLength(i),d=[];for(let e=0;e<l;e++){const t=$s[e];t===r[0]?(d.push(o),e+=r.length-1):d.push(u+"."+t)}return`${e.getType(i)}( ${d.join(", ")} )`}}class ti extends Ys{static get type(){return"FlipNode"}constructor(e,t){super(),this.sourceNode=e,this.components=t}getNodeType(e){return this.sourceNode.getNodeType(e)}generate(e){const{components:t,sourceNode:r}=this,s=this.getNodeType(e),i=r.build(e),n=e.getVarFromNode(this),a=e.getPropertyName(n);e.addLineFlowCode(a+" = "+i,this);const o=e.getTypeLength(s),u=[];let l=0;for(let e=0;e<o;e++){const r=$s[e];r===t[l]?(u.push("1.0 - "+a+"."+r),l++):u.push(a+"."+r)}return`${e.getType(s)}( ${u.join(", ")} )`}}class ri extends qs{static get type(){return"InputNode"}constructor(e,t=null){super(t),this.isInputNode=!0,this.value=e,this.precision=null}getNodeType(){return null===this.nodeType?Ps(this.value):this.nodeType}getInputType(e){return this.getNodeType(e)}setPrecision(e){return this.precision=e,this}serialize(e){super.serialize(e),e.value=this.value,this.value&&this.value.toArray&&(e.value=this.value.toArray()),e.valueType=Ps(this.value),e.nodeType=this.nodeType,"ArrayBuffer"===e.valueType&&(e.value=Fs(e.value)),e.precision=this.precision}deserialize(e){super.deserialize(e),this.nodeType=e.nodeType,this.value=Array.isArray(e.value)?Bs(e.valueType,...e.value):e.value,this.precision=e.precision||null,this.value&&this.value.fromArray&&(this.value=this.value.fromArray(e.value))}generate(){console.warn("Abstract function.")}}const si=/float|u?int/;class ii extends ri{static get type(){return"ConstNode"}constructor(e,t=null){super(e,t),this.isConstNode=!0}generateConst(e){return e.generateConst(this.getNodeType(e),this.value)}generate(e,t){const r=this.getNodeType(e);return si.test(r)&&si.test(t)?e.generateConst(t,this.value):e.format(this.generateConst(e),r,t)}}class ni extends qs{static get type(){return"MemberNode"}constructor(e,t){super(),this.node=e,this.property=t,this.isMemberNode=!0}getNodeType(e){return this.node.getMemberType(e,this.property)}generate(e){return this.node.build(e)+"."+this.property}}let ai=null;const oi=new Map;function ui(e,t){if(oi.has(e))console.warn(`THREE.TSL: Redefinition of method chaining '${e}'.`);else{if("function"!=typeof t)throw new Error(`THREE.TSL: Node element ${e} is not a function`);oi.set(e,t)}}const li=e=>e.replace(/r|s/g,"x").replace(/g|t/g,"y").replace(/b|p/g,"z").replace(/a|q/g,"w"),di=e=>li(e).split("").sort().join(""),ci={setup(e,t){const r=t.shift();return e(Ii(r),...t)},get(e,t,r){if("string"==typeof t&&void 0===e[t]){if(!0!==e.isStackNode&&"assign"===t)return(...e)=>(ai.assign(r,...e),r);if(oi.has(t)){const s=oi.get(t);return e.isStackNode?(...e)=>r.add(s(...e)):(...e)=>s(r,...e)}if("self"===t)return e;if(t.endsWith("Assign")&&oi.has(t.slice(0,t.length-6))){const s=oi.get(t.slice(0,t.length-6));return e.isStackNode?(...e)=>r.assign(e[0],s(...e)):(...e)=>r.assign(s(r,...e))}if(!0===/^[xyzwrgbastpq]{1,4}$/.test(t))return t=li(t),Di(new Js(r,t));if(!0===/^set[XYZWRGBASTPQ]{1,4}$/.test(t))return t=di(t.slice(3).toLowerCase()),r=>Di(new ei(e,t,Di(r)));if(!0===/^flip[XYZWRGBASTPQ]{1,4}$/.test(t))return t=di(t.slice(4).toLowerCase()),()=>Di(new ti(Di(e),t));if("width"===t||"height"===t||"depth"===t)return"width"===t?t="x":"height"===t?t="y":"depth"===t&&(t="z"),Di(new Js(e,t));if(!0===/^\d+$/.test(t))return Di(new Xs(r,new ii(Number(t),"uint")));if(!0===/^get$/.test(t))return e=>Di(new ni(r,e))}return Reflect.get(e,t,r)},set:(e,t,r,s)=>"string"!=typeof t||void 0!==e[t]||!0!==/^[xyzwrgbastpq]{1,4}$/.test(t)&&"width"!==t&&"height"!==t&&"depth"!==t&&!0!==/^\d+$/.test(t)?Reflect.set(e,t,r,s):(s[t].assign(r),!0)},hi=new WeakMap,pi=new WeakMap,gi=function(e,t=null){for(const r in e)e[r]=Di(e[r],t);return e},mi=function(e,t=null){const r=e.length;for(let s=0;s<r;s++)e[s]=Di(e[s],t);return e},fi=function(e,t=null,r=null,s=null){const i=e=>Di(null!==s?Object.assign(e,s):e);let n,a,o,u=t;function l(t){let r;return r=u?/[a-z]/i.test(u)?u+"()":u:e.type,void 0!==a&&t.length<a?(console.error(`THREE.TSL: "${r}" parameter length is less than minimum required.`),t.concat(new Array(a-t.length).fill(0))):void 0!==o&&t.length>o?(console.error(`THREE.TSL: "${r}" parameter length exceeds limit.`),t.slice(0,o)):t}return null===t?n=(...t)=>i(new e(...Vi(l(t)))):null!==r?(r=Di(r),n=(...s)=>i(new e(t,...Vi(l(s)),r))):n=(...r)=>i(new e(t,...Vi(l(r)))),n.setParameterLength=(...e)=>(1===e.length?a=o=e[0]:2===e.length&&([a,o]=e),n),n.setName=e=>(u=e,n),n},yi=function(e,...t){return Di(new e(...Vi(t)))};class bi extends qs{constructor(e,t){super(),this.shaderNode=e,this.inputNodes=t,this.isShaderCallNodeInternal=!0}getNodeType(e){return this.shaderNode.nodeType||this.getOutputNode(e).getNodeType(e)}getMemberType(e,t){return this.getOutputNode(e).getMemberType(e,t)}call(e){const{shaderNode:t,inputNodes:r}=this,s=e.getNodeProperties(t),i=e.getClosestSubBuild(t.subBuilds)||"",n=i||"default";if(s[n])return s[n];const a=e.subBuildFn;e.subBuildFn=i;let o=null;if(t.layout){let s=pi.get(e.constructor);void 0===s&&(s=new WeakMap,pi.set(e.constructor,s));let i=s.get(t);void 0===i&&(i=Di(e.buildFunctionNode(t)),s.set(t,i)),e.addInclude(i),o=Di(i.call(r))}else{const s=t.jsFunc,i=null!==r||s.length>1?s(r||[],e):s(e);o=Di(i)}return e.subBuildFn=a,t.once&&(s[n]=o),o}setupOutput(e){return e.addStack(),e.stack.outputNode=this.call(e),e.removeStack()}getOutputNode(e){const t=e.getNodeProperties(this),r=e.getSubBuildOutput(this);return t[r]=t[r]||this.setupOutput(e),t[r].subBuild=e.getClosestSubBuild(this),t[r]}build(e,t=null){let r=null;const s=e.getBuildStage(),i=e.getNodeProperties(this),n=e.getSubBuildOutput(this),a=this.getOutputNode(e);if("setup"===s){const t=e.getSubBuildProperty("initialized",this);if(!0!==i[t]&&(i[t]=!0,i[n]=this.getOutputNode(e),i[n].build(e),this.shaderNode.subBuilds))for(const t of e.chaining){const r=e.getDataFromNode(t,"any");r.subBuilds=r.subBuilds||new Set;for(const e of this.shaderNode.subBuilds)r.subBuilds.add(e)}r=i[n]}else"analyze"===s?a.build(e,t):"generate"===s&&(r=a.build(e,t)||"");return r}}class xi extends qs{constructor(e,t){super(t),this.jsFunc=e,this.layout=null,this.global=!0,this.once=!1}setLayout(e){return this.layout=e,this}call(e=null){return Ii(e),Di(new bi(this,e))}setup(){return this.call()}}const Ti=[!1,!0],_i=[0,1,2,3],vi=[-1,-2],Ni=[.5,1.5,1/3,1e-6,1e6,Math.PI,2*Math.PI,1/Math.PI,2/Math.PI,1/(2*Math.PI),Math.PI/2],Si=new Map;for(const e of Ti)Si.set(e,new ii(e));const Ei=new Map;for(const e of _i)Ei.set(e,new ii(e,"uint"));const wi=new Map([...Ei].map(e=>new ii(e.value,"int")));for(const e of vi)wi.set(e,new ii(e,"int"));const Ai=new Map([...wi].map(e=>new ii(e.value)));for(const e of Ni)Ai.set(e,new ii(e));for(const e of Ni)Ai.set(-e,new ii(-e));const Ri={bool:Si,uint:Ei,ints:wi,float:Ai},Ci=new Map([...Si,...Ai]),Mi=(e,t)=>Ci.has(e)?Ci.get(e):!0===e.isNode?e:new ii(e,t),Pi=function(e,t=null){return(...r)=>{if((0===r.length||!["bool","float","int","uint"].includes(e)&&r.every(e=>"object"!=typeof e))&&(r=[Bs(e,...r)]),1===r.length&&null!==t&&t.has(r[0]))return Di(t.get(r[0]));if(1===r.length){const t=Mi(r[0],e);return t.nodeType===e?Di(t):Di(new Ks(t,e))}const s=r.map(e=>Mi(e));return Di(new Qs(s,e))}},Bi=e=>"object"==typeof e&&null!==e?e.value:e,Li=e=>null!=e?e.nodeType||e.convertTo||("string"==typeof e?e:null):null;function Fi(e,t){return new Proxy(new xi(e,t),ci)}const Di=(e,t=null)=>function(e,t=null){const r=Ps(e);if("node"===r){let t=hi.get(e);return void 0===t&&(t=new Proxy(e,ci),hi.set(e,t),hi.set(t,t)),t}return null===t&&("float"===r||"boolean"===r)||r&&"shader"!==r&&"string"!==r?Di(Mi(e,t)):"shader"===r?e.isFn?e:Gi(e):e}(e,t),Ii=(e,t=null)=>new gi(e,t),Vi=(e,t=null)=>new mi(e,t),Ui=(...e)=>new fi(...e),Oi=(...e)=>new yi(...e);let ki=0;const Gi=(e,t=null)=>{let r=null;null!==t&&("object"==typeof t?r=t.return:("string"==typeof t?r=t:console.error("THREE.TSL: Invalid layout type."),t=null));const s=new Fi(e,r),i=(...e)=>{let t;Ii(e);t=e[0]&&(e[0].isNode||Object.getPrototypeOf(e[0])!==Object.prototype)?[...e]:e[0];const i=s.call(t);return"void"===r&&i.toStack(),i};if(i.shaderNode=s,i.id=s.id,i.isFn=!0,i.getNodeType=(...e)=>s.getNodeType(...e),i.getCacheKey=(...e)=>s.getCacheKey(...e),i.setLayout=e=>(s.setLayout(e),i),i.once=(e=null)=>(s.once=!0,s.subBuilds=e,i),null!==t){if("object"!=typeof t.inputs){const e={name:"fn"+ki++,type:r,inputs:[]};for(const r in t)"return"!==r&&e.inputs.push({name:r,type:t[r]});t=e}i.setLayout(t)}return i},zi=e=>{ai=e},Hi=()=>ai,$i=(...e)=>ai.If(...e);function Wi(e){return ai&&ai.add(e),e}ui("toStack",Wi);const ji=new Pi("color"),qi=new Pi("float",Ri.float),Xi=new Pi("int",Ri.ints),Ki=new Pi("uint",Ri.uint),Yi=new Pi("bool",Ri.bool),Qi=new Pi("vec2"),Zi=new Pi("ivec2"),Ji=new Pi("uvec2"),en=new Pi("bvec2"),tn=new Pi("vec3"),rn=new Pi("ivec3"),sn=new Pi("uvec3"),nn=new Pi("bvec3"),an=new Pi("vec4"),on=new Pi("ivec4"),un=new Pi("uvec4"),ln=new Pi("bvec4"),dn=new Pi("mat2"),cn=new Pi("mat3"),hn=new Pi("mat4");ui("toColor",ji),ui("toFloat",qi),ui("toInt",Xi),ui("toUint",Ki),ui("toBool",Yi),ui("toVec2",Qi),ui("toIVec2",Zi),ui("toUVec2",Ji),ui("toBVec2",en),ui("toVec3",tn),ui("toIVec3",rn),ui("toUVec3",sn),ui("toBVec3",nn),ui("toVec4",an),ui("toIVec4",on),ui("toUVec4",un),ui("toBVec4",ln),ui("toMat2",dn),ui("toMat3",cn),ui("toMat4",hn);const pn=Ui(Xs).setParameterLength(2),gn=(e,t)=>Di(new Ks(Di(e),t));ui("element",pn),ui("convert",gn);ui("append",e=>(console.warn("THREE.TSL: .append() has been renamed to .toStack()."),Wi(e)));class mn extends qs{static get type(){return"PropertyNode"}constructor(e,t=null,r=!1){super(e),this.name=t,this.varying=r,this.isPropertyNode=!0,this.global=!0}getHash(e){return this.name||super.getHash(e)}generate(e){let t;return!0===this.varying?(t=e.getVaryingFromNode(this,this.name),t.needsInterpolation=!0):t=e.getVarFromNode(this,this.name),e.getPropertyName(t)}}const fn=(e,t)=>Di(new mn(e,t)),yn=(e,t)=>Di(new mn(e,t,!0)),bn=Oi(mn,"vec4","DiffuseColor"),xn=Oi(mn,"vec3","EmissiveColor"),Tn=Oi(mn,"float","Roughness"),_n=Oi(mn,"float","Metalness"),vn=Oi(mn,"float","Clearcoat"),Nn=Oi(mn,"float","ClearcoatRoughness"),Sn=Oi(mn,"vec3","Sheen"),En=Oi(mn,"float","SheenRoughness"),wn=Oi(mn,"float","Iridescence"),An=Oi(mn,"float","IridescenceIOR"),Rn=Oi(mn,"float","IridescenceThickness"),Cn=Oi(mn,"float","AlphaT"),Mn=Oi(mn,"float","Anisotropy"),Pn=Oi(mn,"vec3","AnisotropyT"),Bn=Oi(mn,"vec3","AnisotropyB"),Ln=Oi(mn,"color","SpecularColor"),Fn=Oi(mn,"float","SpecularF90"),Dn=Oi(mn,"float","Shininess"),In=Oi(mn,"vec4","Output"),Vn=Oi(mn,"float","dashSize"),Un=Oi(mn,"float","gapSize"),On=Oi(mn,"float","pointWidth"),kn=Oi(mn,"float","IOR"),Gn=Oi(mn,"float","Transmission"),zn=Oi(mn,"float","Thickness"),Hn=Oi(mn,"float","AttenuationDistance"),$n=Oi(mn,"color","AttenuationColor"),Wn=Oi(mn,"float","Dispersion");class jn extends qs{static get type(){return"UniformGroupNode"}constructor(e,t=!1,r=1){super("string"),this.name=e,this.shared=t,this.order=r,this.isUniformGroup=!0}serialize(e){super.serialize(e),e.name=this.name,e.version=this.version,e.shared=this.shared}deserialize(e){super.deserialize(e),this.name=e.name,this.version=e.version,this.shared=e.shared}}const qn=e=>new jn(e),Xn=(e,t=0)=>new jn(e,!0,t),Kn=Xn("frame"),Yn=Xn("render"),Qn=qn("object");class Zn extends ri{static get type(){return"UniformNode"}constructor(e,t=null){super(e,t),this.isUniformNode=!0,this.name="",this.groupNode=Qn}label(e){return this.name=e,this}setGroup(e){return this.groupNode=e,this}getGroup(){return this.groupNode}getUniformHash(e){return this.getHash(e)}onUpdate(e,t){const r=this.getSelf();return e=e.bind(r),super.onUpdate(t=>{const s=e(t,r);void 0!==s&&(this.value=s)},t)}generate(e,t){const r=this.getNodeType(e),s=this.getUniformHash(e);let i=e.getNodeFromHash(s);void 0===i&&(e.setHashNode(this,s),i=this);const n=i.getInputType(e),a=e.getUniformFromNode(i,n,e.shaderStage,this.name||e.context.label),o=e.getPropertyName(a);return void 0!==e.context.label&&delete e.context.label,e.format(o,r,t)}}const Jn=(e,t)=>{const r=Li(t||e),s=e&&!0===e.isNode?e.node&&e.node.value||e.value:e;return Di(new Zn(s,r))};class ea extends Ys{static get type(){return"ArrayNode"}constructor(e,t,r=null){super(e),this.count=t,this.values=r,this.isArrayNode=!0}getNodeType(e){return null===this.nodeType&&(this.nodeType=this.values[0].getNodeType(e)),this.nodeType}getElementType(e){return this.getNodeType(e)}generate(e){const t=this.getNodeType(e);return e.generateArray(t,this.count,this.values)}}const ta=(...e)=>{let t;if(1===e.length){const r=e[0];t=new ea(null,r.length,r)}else{const r=e[0],s=e[1];t=new ea(r,s)}return Di(t)};ui("toArray",(e,t)=>ta(Array(t).fill(e)));class ra extends Ys{static get type(){return"AssignNode"}constructor(e,t){super(),this.targetNode=e,this.sourceNode=t,this.isAssignNode=!0}hasDependencies(){return!1}getNodeType(e,t){return"void"!==t?this.targetNode.getNodeType(e):"void"}needsSplitAssign(e){const{targetNode:t}=this;if(!1===e.isAvailable("swizzleAssign")&&t.isSplitNode&&t.components.length>1){const r=e.getTypeLength(t.node.getNodeType(e));return $s.join("").slice(0,r)!==t.components}return!1}setup(e){const{targetNode:t,sourceNode:r}=this,s=e.getNodeProperties(this);s.sourceNode=r,s.targetNode=t.context({assign:!0})}generate(e,t){const{targetNode:r,sourceNode:s}=e.getNodeProperties(this),i=this.needsSplitAssign(e),n=r.getNodeType(e),a=r.build(e),o=s.build(e,n),u=s.getNodeType(e),l=e.getDataFromNode(this);let d;if(!0===l.initialized)"void"!==t&&(d=a);else if(i){const s=e.getVarFromNode(this,null,n),i=e.getPropertyName(s);e.addLineFlowCode(`${i} = ${o}`,this);const u=r.node,l=u.node.context({assign:!0}).build(e);for(let t=0;t<u.components.length;t++){const r=u.components[t];e.addLineFlowCode(`${l}.${r} = ${i}[ ${t} ]`,this)}"void"!==t&&(d=a)}else d=`${a} = ${o}`,"void"!==t&&"void"!==u||(e.addLineFlowCode(d,this),"void"!==t&&(d=a));return l.initialized=!0,e.format(d,n,t)}}const sa=Ui(ra).setParameterLength(2);ui("assign",sa);class ia extends Ys{static get type(){return"FunctionCallNode"}constructor(e=null,t={}){super(),this.functionNode=e,this.parameters=t}setParameters(e){return this.parameters=e,this}getParameters(){return this.parameters}getNodeType(e){return this.functionNode.getNodeType(e)}generate(e){const t=[],r=this.functionNode,s=r.getInputs(e),i=this.parameters,n=(t,r)=>{const s=r.type;let i;return i="pointer"===s?"&"+t.build(e):t.build(e,s),i};if(Array.isArray(i)){if(i.length>s.length)console.error("THREE.TSL: The number of provided parameters exceeds the expected number of inputs in 'Fn()'."),i.length=s.length;else if(i.length<s.length)for(console.error("THREE.TSL: The number of provided parameters is less than the expected number of inputs in 'Fn()'.");i.length<s.length;)i.push(qi(0));for(let e=0;e<i.length;e++)t.push(n(i[e],s[e]))}else for(const e of s){const r=i[e.name];void 0!==r?t.push(n(r,e)):(console.error(`THREE.TSL: Input '${e.name}' not found in 'Fn()'.`),t.push(n(qi(0),e)))}return`${r.build(e,"property")}( ${t.join(", ")} )`}}const na=(e,...t)=>(t=t.length>1||t[0]&&!0===t[0].isNode?Vi(t):Ii(t[0]),Di(new ia(Di(e),t)));ui("call",na);const aa={"==":"equal","!=":"notEqual","<":"lessThan",">":"greaterThan","<=":"lessThanEqual",">=":"greaterThanEqual","%":"mod"};class oa extends Ys{static get type(){return"OperatorNode"}constructor(e,t,r,...s){if(super(),s.length>0){let i=new oa(e,t,r);for(let t=0;t<s.length-1;t++)i=new oa(e,i,s[t]);t=i,r=s[s.length-1]}this.op=e,this.aNode=t,this.bNode=r,this.isOperatorNode=!0}getOperatorMethod(e,t){return e.getMethod(aa[this.op],t)}getNodeType(e){const t=this.op,r=this.aNode,s=this.bNode,i=r.getNodeType(e),n=s?s.getNodeType(e):null;if("void"===i||"void"===n)return"void";if("%"===t)return i;if("~"===t||"&"===t||"|"===t||"^"===t||">>"===t||"<<"===t)return e.getIntegerType(i);if("!"===t||"&&"===t||"||"===t||"^^"===t)return"bool";if("=="===t||"!="===t||"<"===t||">"===t||"<="===t||">="===t){const t=Math.max(e.getTypeLength(i),e.getTypeLength(n));return t>1?`bvec${t}`:"bool"}if(e.isMatrix(i)){if("float"===n)return i;if(e.isVector(n))return e.getVectorFromMatrix(i);if(e.isMatrix(n))return i}else if(e.isMatrix(n)){if("float"===i)return n;if(e.isVector(i))return e.getVectorFromMatrix(n)}return e.getTypeLength(n)>e.getTypeLength(i)?n:i}generate(e,t){const r=this.op,{aNode:s,bNode:i}=this,n=this.getNodeType(e);let a=null,o=null;"void"!==n?(a=s.getNodeType(e),o=i?i.getNodeType(e):null,"<"===r||">"===r||"<="===r||">="===r||"=="===r||"!="===r?e.isVector(a)?o=a:e.isVector(o)?a=o:a!==o&&(a=o="float"):">>"===r||"<<"===r?(a=n,o=e.changeComponentType(o,"uint")):"%"===r?(a=n,o=e.isInteger(a)&&e.isInteger(o)?o:a):e.isMatrix(a)?"float"===o?o="float":e.isVector(o)?o=e.getVectorFromMatrix(a):e.isMatrix(o)||(a=o=n):a=e.isMatrix(o)?"float"===a?"float":e.isVector(a)?e.getVectorFromMatrix(o):o=n:o=n):a=o=n;const u=s.build(e,a),d=i?i.build(e,o):null,c=e.getFunctionOperator(r);if("void"!==t){const s=e.renderer.coordinateSystem===l;if("=="===r||"!="===r||"<"===r||">"===r||"<="===r||">="===r)return s&&e.isVector(a)?e.format(`${this.getOperatorMethod(e,t)}( ${u}, ${d} )`,n,t):e.format(`( ${u} ${r} ${d} )`,n,t);if("%"===r)return e.isInteger(o)?e.format(`( ${u} % ${d} )`,n,t):e.format(`${this.getOperatorMethod(e,n)}( ${u}, ${d} )`,n,t);if("!"===r||"~"===r)return e.format(`(${r}${u})`,a,t);if(c)return e.format(`${c}( ${u}, ${d} )`,n,t);if(e.isMatrix(a)&&"float"===o)return e.format(`( ${d} ${r} ${u} )`,n,t);if("float"===a&&e.isMatrix(o))return e.format(`${u} ${r} ${d}`,n,t);{let i=`( ${u} ${r} ${d} )`;return!s&&"bool"===n&&e.isVector(a)&&e.isVector(o)&&(i=`all${i}`),e.format(i,n,t)}}if("void"!==a)return c?e.format(`${c}( ${u}, ${d} )`,n,t):e.isMatrix(a)&&"float"===o?e.format(`${d} ${r} ${u}`,n,t):e.format(`${u} ${r} ${d}`,n,t)}serialize(e){super.serialize(e),e.op=this.op}deserialize(e){super.deserialize(e),this.op=e.op}}const ua=Ui(oa,"+").setParameterLength(2,1/0).setName("add"),la=Ui(oa,"-").setParameterLength(2,1/0).setName("sub"),da=Ui(oa,"*").setParameterLength(2,1/0).setName("mul"),ca=Ui(oa,"/").setParameterLength(2,1/0).setName("div"),ha=Ui(oa,"%").setParameterLength(2).setName("mod"),pa=Ui(oa,"==").setParameterLength(2).setName("equal"),ga=Ui(oa,"!=").setParameterLength(2).setName("notEqual"),ma=Ui(oa,"<").setParameterLength(2).setName("lessThan"),fa=Ui(oa,">").setParameterLength(2).setName("greaterThan"),ya=Ui(oa,"<=").setParameterLength(2).setName("lessThanEqual"),ba=Ui(oa,">=").setParameterLength(2).setName("greaterThanEqual"),xa=Ui(oa,"&&").setParameterLength(2,1/0).setName("and"),Ta=Ui(oa,"||").setParameterLength(2,1/0).setName("or"),_a=Ui(oa,"!").setParameterLength(1).setName("not"),va=Ui(oa,"^^").setParameterLength(2).setName("xor"),Na=Ui(oa,"&").setParameterLength(2).setName("bitAnd"),Sa=Ui(oa,"~").setParameterLength(2).setName("bitNot"),Ea=Ui(oa,"|").setParameterLength(2).setName("bitOr"),wa=Ui(oa,"^").setParameterLength(2).setName("bitXor"),Aa=Ui(oa,"<<").setParameterLength(2).setName("shiftLeft"),Ra=Ui(oa,">>").setParameterLength(2).setName("shiftRight"),Ca=Gi(([e])=>(e.addAssign(1),e)),Ma=Gi(([e])=>(e.subAssign(1),e)),Pa=Gi(([e])=>{const t=Xi(e).toConst();return e.addAssign(1),t}),Ba=Gi(([e])=>{const t=Xi(e).toConst();return e.subAssign(1),t});ui("add",ua),ui("sub",la),ui("mul",da),ui("div",ca),ui("mod",ha),ui("equal",pa),ui("notEqual",ga),ui("lessThan",ma),ui("greaterThan",fa),ui("lessThanEqual",ya),ui("greaterThanEqual",ba),ui("and",xa),ui("or",Ta),ui("not",_a),ui("xor",va),ui("bitAnd",Na),ui("bitNot",Sa),ui("bitOr",Ea),ui("bitXor",wa),ui("shiftLeft",Aa),ui("shiftRight",Ra),ui("incrementBefore",Ca),ui("decrementBefore",Ma),ui("increment",Pa),ui("decrement",Ba);const La=(e,t)=>(console.warn('THREE.TSL: "modInt()" is deprecated. Use "mod( int( ... ) )" instead.'),ha(Xi(e),Xi(t)));ui("modInt",La);class Fa extends Ys{static get type(){return"MathNode"}constructor(e,t,r=null,s=null){if(super(),(e===Fa.MAX||e===Fa.MIN)&&arguments.length>3){let i=new Fa(e,t,r);for(let t=2;t<arguments.length-1;t++)i=new Fa(e,i,arguments[t]);t=i,r=arguments[arguments.length-1],s=null}this.method=e,this.aNode=t,this.bNode=r,this.cNode=s,this.isMathNode=!0}getInputType(e){const t=this.aNode.getNodeType(e),r=this.bNode?this.bNode.getNodeType(e):null,s=this.cNode?this.cNode.getNodeType(e):null,i=e.isMatrix(t)?0:e.getTypeLength(t),n=e.isMatrix(r)?0:e.getTypeLength(r),a=e.isMatrix(s)?0:e.getTypeLength(s);return i>n&&i>a?t:n>a?r:a>i?s:t}getNodeType(e){const t=this.method;return t===Fa.LENGTH||t===Fa.DISTANCE||t===Fa.DOT?"float":t===Fa.CROSS?"vec3":t===Fa.ALL||t===Fa.ANY?"bool":t===Fa.EQUALS?e.changeComponentType(this.aNode.getNodeType(e),"bool"):this.getInputType(e)}setup(e){const{aNode:t,bNode:r,method:s}=this;let i=null;if(s===Fa.ONE_MINUS)i=la(1,t);else if(s===Fa.RECIPROCAL)i=ca(1,t);else if(s===Fa.DIFFERENCE)i=no(la(t,r));else if(s===Fa.TRANSFORM_DIRECTION){let s=t,n=r;e.isMatrix(s.getNodeType(e))?n=an(tn(n),0):s=an(tn(s),0);const a=da(s,n).xyz;i=Qa(a)}return null!==i?i:super.setup(e)}generate(e,t){if(e.getNodeProperties(this).outputNode)return super.generate(e,t);let r=this.method;const s=this.getNodeType(e),i=this.getInputType(e),n=this.aNode,a=this.bNode,o=this.cNode,u=e.renderer.coordinateSystem;if(r===Fa.NEGATE)return e.format("( - "+n.build(e,i)+" )",s,t);{const c=[];return r===Fa.CROSS?c.push(n.build(e,s),a.build(e,s)):u===l&&r===Fa.STEP?c.push(n.build(e,1===e.getTypeLength(n.getNodeType(e))?"float":i),a.build(e,i)):u!==l||r!==Fa.MIN&&r!==Fa.MAX?r===Fa.REFRACT?c.push(n.build(e,i),a.build(e,i),o.build(e,"float")):r===Fa.MIX?c.push(n.build(e,i),a.build(e,i),o.build(e,1===e.getTypeLength(o.getNodeType(e))?"float":i)):(u===d&&r===Fa.ATAN&&null!==a&&(r="atan2"),"fragment"===e.shaderStage||r!==Fa.DFDX&&r!==Fa.DFDY||(console.warn(`THREE.TSL: '${r}' is not supported in the ${e.shaderStage} stage.`),r="/*"+r+"*/"),c.push(n.build(e,i)),null!==a&&c.push(a.build(e,i)),null!==o&&c.push(o.build(e,i))):c.push(n.build(e,i),a.build(e,1===e.getTypeLength(a.getNodeType(e))?"float":i)),e.format(`${e.getMethod(r,s)}( ${c.join(", ")} )`,s,t)}}serialize(e){super.serialize(e),e.method=this.method}deserialize(e){super.deserialize(e),this.method=e.method}}Fa.ALL="all",Fa.ANY="any",Fa.RADIANS="radians",Fa.DEGREES="degrees",Fa.EXP="exp",Fa.EXP2="exp2",Fa.LOG="log",Fa.LOG2="log2",Fa.SQRT="sqrt",Fa.INVERSE_SQRT="inversesqrt",Fa.FLOOR="floor",Fa.CEIL="ceil",Fa.NORMALIZE="normalize",Fa.FRACT="fract",Fa.SIN="sin",Fa.COS="cos",Fa.TAN="tan",Fa.ASIN="asin",Fa.ACOS="acos",Fa.ATAN="atan",Fa.ABS="abs",Fa.SIGN="sign",Fa.LENGTH="length",Fa.NEGATE="negate",Fa.ONE_MINUS="oneMinus",Fa.DFDX="dFdx",Fa.DFDY="dFdy",Fa.ROUND="round",Fa.RECIPROCAL="reciprocal",Fa.TRUNC="trunc",Fa.FWIDTH="fwidth",Fa.TRANSPOSE="transpose",Fa.BITCAST="bitcast",Fa.EQUALS="equals",Fa.MIN="min",Fa.MAX="max",Fa.STEP="step",Fa.REFLECT="reflect",Fa.DISTANCE="distance",Fa.DIFFERENCE="difference",Fa.DOT="dot",Fa.CROSS="cross",Fa.POW="pow",Fa.TRANSFORM_DIRECTION="transformDirection",Fa.MIX="mix",Fa.CLAMP="clamp",Fa.REFRACT="refract",Fa.SMOOTHSTEP="smoothstep",Fa.FACEFORWARD="faceforward";const Da=qi(1e-6),Ia=qi(1e6),Va=qi(Math.PI),Ua=qi(2*Math.PI),Oa=Ui(Fa,Fa.ALL).setParameterLength(1),ka=Ui(Fa,Fa.ANY).setParameterLength(1),Ga=Ui(Fa,Fa.RADIANS).setParameterLength(1),za=Ui(Fa,Fa.DEGREES).setParameterLength(1),Ha=Ui(Fa,Fa.EXP).setParameterLength(1),$a=Ui(Fa,Fa.EXP2).setParameterLength(1),Wa=Ui(Fa,Fa.LOG).setParameterLength(1),ja=Ui(Fa,Fa.LOG2).setParameterLength(1),qa=Ui(Fa,Fa.SQRT).setParameterLength(1),Xa=Ui(Fa,Fa.INVERSE_SQRT).setParameterLength(1),Ka=Ui(Fa,Fa.FLOOR).setParameterLength(1),Ya=Ui(Fa,Fa.CEIL).setParameterLength(1),Qa=Ui(Fa,Fa.NORMALIZE).setParameterLength(1),Za=Ui(Fa,Fa.FRACT).setParameterLength(1),Ja=Ui(Fa,Fa.SIN).setParameterLength(1),eo=Ui(Fa,Fa.COS).setParameterLength(1),to=Ui(Fa,Fa.TAN).setParameterLength(1),ro=Ui(Fa,Fa.ASIN).setParameterLength(1),so=Ui(Fa,Fa.ACOS).setParameterLength(1),io=Ui(Fa,Fa.ATAN).setParameterLength(1,2),no=Ui(Fa,Fa.ABS).setParameterLength(1),ao=Ui(Fa,Fa.SIGN).setParameterLength(1),oo=Ui(Fa,Fa.LENGTH).setParameterLength(1),uo=Ui(Fa,Fa.NEGATE).setParameterLength(1),lo=Ui(Fa,Fa.ONE_MINUS).setParameterLength(1),co=Ui(Fa,Fa.DFDX).setParameterLength(1),ho=Ui(Fa,Fa.DFDY).setParameterLength(1),po=Ui(Fa,Fa.ROUND).setParameterLength(1),go=Ui(Fa,Fa.RECIPROCAL).setParameterLength(1),mo=Ui(Fa,Fa.TRUNC).setParameterLength(1),fo=Ui(Fa,Fa.FWIDTH).setParameterLength(1),yo=Ui(Fa,Fa.TRANSPOSE).setParameterLength(1),bo=Ui(Fa,Fa.BITCAST).setParameterLength(2),xo=(e,t)=>(console.warn('THREE.TSL: "equals" is deprecated. Use "equal" inside a vector instead, like: "bvec*( equal( ... ) )"'),pa(e,t)),To=Ui(Fa,Fa.MIN).setParameterLength(2,1/0),_o=Ui(Fa,Fa.MAX).setParameterLength(2,1/0),vo=Ui(Fa,Fa.STEP).setParameterLength(2),No=Ui(Fa,Fa.REFLECT).setParameterLength(2),So=Ui(Fa,Fa.DISTANCE).setParameterLength(2),Eo=Ui(Fa,Fa.DIFFERENCE).setParameterLength(2),wo=Ui(Fa,Fa.DOT).setParameterLength(2),Ao=Ui(Fa,Fa.CROSS).setParameterLength(2),Ro=Ui(Fa,Fa.POW).setParameterLength(2),Co=Ui(Fa,Fa.POW,2).setParameterLength(1),Mo=Ui(Fa,Fa.POW,3).setParameterLength(1),Po=Ui(Fa,Fa.POW,4).setParameterLength(1),Bo=Ui(Fa,Fa.TRANSFORM_DIRECTION).setParameterLength(2),Lo=e=>da(ao(e),Ro(no(e),1/3)),Fo=e=>wo(e,e),Do=Ui(Fa,Fa.MIX).setParameterLength(3),Io=(e,t=0,r=1)=>Di(new Fa(Fa.CLAMP,Di(e),Di(t),Di(r))),Vo=e=>Io(e),Uo=Ui(Fa,Fa.REFRACT).setParameterLength(3),Oo=Ui(Fa,Fa.SMOOTHSTEP).setParameterLength(3),ko=Ui(Fa,Fa.FACEFORWARD).setParameterLength(3),Go=Gi(([e])=>{const t=wo(e.xy,Qi(12.9898,78.233)),r=ha(t,Va);return Za(Ja(r).mul(43758.5453))}),zo=(e,t,r)=>Do(t,r,e),Ho=(e,t,r)=>Oo(t,r,e),$o=(e,t)=>vo(t,e),Wo=(e,t)=>(console.warn('THREE.TSL: "atan2" is overloaded. Use "atan" instead.'),io(e,t)),jo=ko,qo=Xa;ui("all",Oa),ui("any",ka),ui("equals",xo),ui("radians",Ga),ui("degrees",za),ui("exp",Ha),ui("exp2",$a),ui("log",Wa),ui("log2",ja),ui("sqrt",qa),ui("inverseSqrt",Xa),ui("floor",Ka),ui("ceil",Ya),ui("normalize",Qa),ui("fract",Za),ui("sin",Ja),ui("cos",eo),ui("tan",to),ui("asin",ro),ui("acos",so),ui("atan",io),ui("abs",no),ui("sign",ao),ui("length",oo),ui("lengthSq",Fo),ui("negate",uo),ui("oneMinus",lo),ui("dFdx",co),ui("dFdy",ho),ui("round",po),ui("reciprocal",go),ui("trunc",mo),ui("fwidth",fo),ui("atan2",Wo),ui("min",To),ui("max",_o),ui("step",$o),ui("reflect",No),ui("distance",So),ui("dot",wo),ui("cross",Ao),ui("pow",Ro),ui("pow2",Co),ui("pow3",Mo),ui("pow4",Po),ui("transformDirection",Bo),ui("mix",zo),ui("clamp",Io),ui("refract",Uo),ui("smoothstep",Ho),ui("faceForward",ko),ui("difference",Eo),ui("saturate",Vo),ui("cbrt",Lo),ui("transpose",yo),ui("rand",Go);class Xo extends qs{static get type(){return"ConditionalNode"}constructor(e,t,r=null){super(),this.condNode=e,this.ifNode=t,this.elseNode=r}getNodeType(e){const{ifNode:t,elseNode:r}=e.getNodeProperties(this);if(void 0===t)return this.setup(e),this.getNodeType(e);const s=t.getNodeType(e);if(null!==r){const t=r.getNodeType(e);if(e.getTypeLength(t)>e.getTypeLength(s))return t}return s}setup(e){const t=this.condNode.cache(),r=this.ifNode.cache(),s=this.elseNode?this.elseNode.cache():null,i=e.context.nodeBlock;e.getDataFromNode(r).parentNodeBlock=i,null!==s&&(e.getDataFromNode(s).parentNodeBlock=i);const n=e.getNodeProperties(this);n.condNode=t,n.ifNode=r.context({nodeBlock:r}),n.elseNode=s?s.context({nodeBlock:s}):null}generate(e,t){const r=this.getNodeType(e),s=e.getDataFromNode(this);if(void 0!==s.nodeProperty)return s.nodeProperty;const{condNode:i,ifNode:n,elseNode:a}=e.getNodeProperties(this),o=e.currentFunctionNode,u="void"!==t,l=u?fn(r).build(e):"";s.nodeProperty=l;const d=i.build(e,"bool");e.addFlowCode(`\n${e.tab}if ( ${d} ) {\n\n`).addFlowTab();let c=n.build(e,r);if(c&&(u?c=l+" = "+c+";":(c="return "+c+";",null===o&&(console.warn("THREE.TSL: Return statement used in an inline 'Fn()'. Define a layout struct to allow return values."),c="// "+c))),e.removeFlowTab().addFlowCode(e.tab+"\t"+c+"\n\n"+e.tab+"}"),null!==a){e.addFlowCode(" else {\n\n").addFlowTab();let t=a.build(e,r);t&&(u?t=l+" = "+t+";":(t="return "+t+";",null===o&&(console.warn("THREE.TSL: Return statement used in an inline 'Fn()'. Define a layout struct to allow return values."),t="// "+t))),e.removeFlowTab().addFlowCode(e.tab+"\t"+t+"\n\n"+e.tab+"}\n\n")}else e.addFlowCode("\n\n");return e.format(l,r,t)}}const Ko=Ui(Xo).setParameterLength(2,3);ui("select",Ko);class Yo extends qs{static get type(){return"ContextNode"}constructor(e,t={}){super(),this.isContextNode=!0,this.node=e,this.value=t}getScope(){return this.node.getScope()}getNodeType(e){return this.node.getNodeType(e)}analyze(e){const t=e.getContext();e.setContext({...e.context,...this.value}),this.node.build(e),e.setContext(t)}setup(e){const t=e.getContext();e.setContext({...e.context,...this.value}),this.node.build(e),e.setContext(t)}generate(e,t){const r=e.getContext();e.setContext({...e.context,...this.value});const s=this.node.build(e,t);return e.setContext(r),s}}const Qo=Ui(Yo).setParameterLength(1,2),Zo=(e,t)=>Qo(e,{label:t});ui("context",Qo),ui("label",Zo);class Jo extends qs{static get type(){return"VarNode"}constructor(e,t=null,r=!1){super(),this.node=e,this.name=t,this.global=!0,this.isVarNode=!0,this.readOnly=r,this.parents=!0}getMemberType(e,t){return this.node.getMemberType(e,t)}getElementType(e){return this.node.getElementType(e)}getNodeType(e){return this.node.getNodeType(e)}generate(e){const{node:t,name:r,readOnly:s}=this,{renderer:i}=e,n=!0===i.backend.isWebGPUBackend;let a=!1,o=!1;s&&(a=e.isDeterministic(t),o=n?s:a);const u=e.getVectorType(this.getNodeType(e)),l=t.build(e,u),d=e.getVarFromNode(this,r,u,void 0,o),c=e.getPropertyName(d);let h=c;if(o)if(n)h=a?`const ${c}`:`let ${c}`;else{const r=e.getArrayCount(t);h=`const ${e.getVar(d.type,c,r)}`}return e.addLineFlowCode(`${h} = ${l}`,this),c}}const eu=Ui(Jo),tu=(e,t=null)=>eu(e,t).toStack(),ru=(e,t=null)=>eu(e,t,!0).toStack();ui("toVar",tu),ui("toConst",ru);const su=e=>(console.warn('TSL: "temp( node )" is deprecated. Use "Var( node )" or "node.toVar()" instead.'),eu(e));ui("temp",su);class iu extends qs{static get type(){return"SubBuild"}constructor(e,t,r=null){super(r),this.node=e,this.name=t,this.isSubBuildNode=!0}getNodeType(e){if(null!==this.nodeType)return this.nodeType;e.addSubBuild(this.name);const t=this.node.getNodeType(e);return e.removeSubBuild(),t}build(e,...t){e.addSubBuild(this.name);const r=this.node.build(e,...t);return e.removeSubBuild(),r}}const nu=(e,t,r=null)=>Di(new iu(Di(e),t,r));class au extends qs{static get type(){return"VaryingNode"}constructor(e,t=null){super(),this.node=e,this.name=t,this.isVaryingNode=!0,this.interpolationType=null,this.interpolationSampling=null,this.global=!0}setInterpolation(e,t=null){return this.interpolationType=e,this.interpolationSampling=t,this}getHash(e){return this.name||super.getHash(e)}getNodeType(e){return this.node.getNodeType(e)}setupVarying(e){const t=e.getNodeProperties(this);let r=t.varying;if(void 0===r){const s=this.name,i=this.getNodeType(e),n=this.interpolationType,a=this.interpolationSampling;t.varying=r=e.getVaryingFromNode(this,s,i,n,a),t.node=nu(this.node,"VERTEX")}return r.needsInterpolation||(r.needsInterpolation="fragment"===e.shaderStage),r}setup(e){this.setupVarying(e),e.flowNodeFromShaderStage(Vs.VERTEX,this.node)}analyze(e){this.setupVarying(e),e.flowNodeFromShaderStage(Vs.VERTEX,this.node)}generate(e){const t=e.getSubBuildProperty("property",e.currentStack),r=e.getNodeProperties(this),s=this.setupVarying(e);if(void 0===r[t]){const i=this.getNodeType(e),n=e.getPropertyName(s,Vs.VERTEX);e.flowNodeFromShaderStage(Vs.VERTEX,r.node,i,n),r[t]=n}return e.getPropertyName(s)}}const ou=Ui(au).setParameterLength(1,2),uu=e=>ou(e);ui("toVarying",ou),ui("toVertexStage",uu),ui("varying",(...e)=>(console.warn("THREE.TSL: .varying() has been renamed to .toVarying()."),ou(...e))),ui("vertexStage",(...e)=>(console.warn("THREE.TSL: .vertexStage() has been renamed to .toVertexStage()."),ou(...e)));const lu=Gi(([e])=>{const t=e.mul(.9478672986).add(.0521327014).pow(2.4),r=e.mul(.0773993808),s=e.lessThanEqual(.04045);return Do(t,r,s)}).setLayout({name:"sRGBTransferEOTF",type:"vec3",inputs:[{name:"color",type:"vec3"}]}),du=Gi(([e])=>{const t=e.pow(.41666).mul(1.055).sub(.055),r=e.mul(12.92),s=e.lessThanEqual(.0031308);return Do(t,r,s)}).setLayout({name:"sRGBTransferOETF",type:"vec3",inputs:[{name:"color",type:"vec3"}]}),cu="WorkingColorSpace";class hu extends Ys{static get type(){return"ColorSpaceNode"}constructor(e,t,r){super("vec4"),this.colorNode=e,this.source=t,this.target=r}resolveColorSpace(e,t){return t===cu?c.workingColorSpace:"OutputColorSpace"===t?e.context.outputColorSpace||e.renderer.outputColorSpace:t}setup(e){const{colorNode:t}=this,r=this.resolveColorSpace(e,this.source),s=this.resolveColorSpace(e,this.target);let i=t;return!1!==c.enabled&&r!==s&&r&&s?(c.getTransfer(r)===h&&(i=an(lu(i.rgb),i.a)),c.getPrimaries(r)!==c.getPrimaries(s)&&(i=an(cn(c._getMatrix(new n,r,s)).mul(i.rgb),i.a)),c.getTransfer(s)===h&&(i=an(du(i.rgb),i.a)),i):i}}const pu=(e,t)=>Di(new hu(Di(e),cu,t)),gu=(e,t)=>Di(new hu(Di(e),t,cu));ui("workingToColorSpace",pu),ui("colorSpaceToWorking",gu);let mu=class extends Xs{static get type(){return"ReferenceElementNode"}constructor(e,t){super(e,t),this.referenceNode=e,this.isReferenceElementNode=!0}getNodeType(){return this.referenceNode.uniformType}generate(e){const t=super.generate(e),r=this.referenceNode.getNodeType(),s=this.getNodeType();return e.format(t,r,s)}};class fu extends qs{static get type(){return"ReferenceBaseNode"}constructor(e,t,r=null,s=null){super(),this.property=e,this.uniformType=t,this.object=r,this.count=s,this.properties=e.split("."),this.reference=r,this.node=null,this.group=null,this.updateType=Us.OBJECT}setGroup(e){return this.group=e,this}element(e){return Di(new mu(this,Di(e)))}setNodeType(e){const t=Jn(null,e).getSelf();null!==this.group&&t.setGroup(this.group),this.node=t}getNodeType(e){return null===this.node&&(this.updateReference(e),this.updateValue()),this.node.getNodeType(e)}getValueFromReference(e=this.reference){const{properties:t}=this;let r=e[t[0]];for(let e=1;e<t.length;e++)r=r[t[e]];return r}updateReference(e){return this.reference=null!==this.object?this.object:e.object,this.reference}setup(){return this.updateValue(),this.node}update(){this.updateValue()}updateValue(){null===this.node&&this.setNodeType(this.uniformType);const e=this.getValueFromReference();Array.isArray(e)?this.node.array=e:this.node.value=e}}class yu extends fu{static get type(){return"RendererReferenceNode"}constructor(e,t,r=null){super(e,t,r),this.renderer=r,this.setGroup(Yn)}updateReference(e){return this.reference=null!==this.renderer?this.renderer:e.renderer,this.reference}}const bu=(e,t,r=null)=>Di(new yu(e,t,r));class xu extends Ys{static get type(){return"ToneMappingNode"}constructor(e,t=_u,r=null){super("vec3"),this.toneMapping=e,this.exposureNode=t,this.colorNode=r}customCacheKey(){return _s(this.toneMapping)}setup(e){const t=this.colorNode||e.context.color,r=this.toneMapping;if(r===p)return t;let s=null;const i=e.renderer.library.getToneMappingFunction(r);return null!==i?s=an(i(t.rgb,this.exposureNode),t.a):(console.error("ToneMappingNode: Unsupported Tone Mapping configuration.",r),s=t),s}}const Tu=(e,t,r)=>Di(new xu(e,Di(t),Di(r))),_u=bu("toneMappingExposure","float");ui("toneMapping",(e,t,r)=>Tu(t,r,e));class vu extends ri{static get type(){return"BufferAttributeNode"}constructor(e,t=null,r=0,s=0){super(e,t),this.isBufferNode=!0,this.bufferType=t,this.bufferStride=r,this.bufferOffset=s,this.usage=g,this.instanced=!1,this.attribute=null,this.global=!0,e&&!0===e.isBufferAttribute&&(this.attribute=e,this.usage=e.usage,this.instanced=e.isInstancedBufferAttribute)}getHash(e){if(0===this.bufferStride&&0===this.bufferOffset){let t=e.globalCache.getData(this.value);return void 0===t&&(t={node:this},e.globalCache.setData(this.value,t)),t.node.uuid}return this.uuid}getNodeType(e){return null===this.bufferType&&(this.bufferType=e.getTypeFromAttribute(this.attribute)),this.bufferType}setup(e){if(null!==this.attribute)return;const t=this.getNodeType(e),r=this.value,s=e.getTypeLength(t),i=this.bufferStride||s,n=this.bufferOffset,a=!0===r.isInterleavedBuffer?r:new m(r,i),o=new f(a,s,n);a.setUsage(this.usage),this.attribute=o,this.attribute.isInstancedBufferAttribute=this.instanced}generate(e){const t=this.getNodeType(e),r=e.getBufferAttributeFromNode(this,t),s=e.getPropertyName(r);let i=null;if("vertex"===e.shaderStage||"compute"===e.shaderStage)this.name=s,i=s;else{i=ou(this).build(e,t)}return i}getInputType(){return"bufferAttribute"}setUsage(e){return this.usage=e,this.attribute&&!0===this.attribute.isBufferAttribute&&(this.attribute.usage=e),this}setInstanced(e){return this.instanced=e,this}}const Nu=(e,t=null,r=0,s=0)=>Di(new vu(e,t,r,s)),Su=(e,t=null,r=0,s=0)=>Nu(e,t,r,s).setUsage(y),Eu=(e,t=null,r=0,s=0)=>Nu(e,t,r,s).setInstanced(!0),wu=(e,t=null,r=0,s=0)=>Su(e,t,r,s).setInstanced(!0);ui("toAttribute",e=>Nu(e.value));class Au extends qs{static get type(){return"ComputeNode"}constructor(e,t){super("void"),this.isComputeNode=!0,this.computeNode=e,this.workgroupSize=t,this.count=null,this.version=1,this.name="",this.updateBeforeType=Us.OBJECT,this.onInitFunction=null}setCount(e){return this.count=e,this}getCount(){return this.count}dispose(){this.dispatchEvent({type:"dispose"})}label(e){return this.name=e,this}onInit(e){return this.onInitFunction=e,this}updateBefore({renderer:e}){e.compute(this)}setup(e){const t=this.computeNode.build(e);if(t){e.getNodeProperties(this).outputComputeNode=t.outputNode,t.outputNode=null}return t}generate(e,t){const{shaderStage:r}=e;if("compute"===r){const t=this.computeNode.build(e,"void");""!==t&&e.addLineFlowCode(t,this)}else{const r=e.getNodeProperties(this).outputComputeNode;if(r)return r.build(e,t)}}}const Ru=(e,t=[64])=>{(0===t.length||t.length>3)&&console.error("THREE.TSL: compute() workgroupSize must have 1, 2, or 3 elements");for(let e=0;e<t.length;e++){const r=t[e];("number"!=typeof r||r<=0||!Number.isInteger(r))&&console.error(`THREE.TSL: compute() workgroupSize element at index [ ${e} ] must be a positive integer`)}for(;t.length<3;)t.push(1);return Di(new Au(Di(e),t))},Cu=(e,t,r)=>Ru(e,r).setCount(t);ui("compute",Cu),ui("computeKernel",Ru);class Mu extends qs{static get type(){return"CacheNode"}constructor(e,t=!0){super(),this.node=e,this.parent=t,this.isCacheNode=!0}getNodeType(e){const t=e.getCache(),r=e.getCacheFromNode(this,this.parent);e.setCache(r);const s=this.node.getNodeType(e);return e.setCache(t),s}build(e,...t){const r=e.getCache(),s=e.getCacheFromNode(this,this.parent);e.setCache(s);const i=this.node.build(e,...t);return e.setCache(r),i}}const Pu=(e,t)=>Di(new Mu(Di(e),t));ui("cache",Pu);class Bu extends qs{static get type(){return"BypassNode"}constructor(e,t){super(),this.isBypassNode=!0,this.outputNode=e,this.callNode=t}getNodeType(e){return this.outputNode.getNodeType(e)}generate(e){const t=this.callNode.build(e,"void");return""!==t&&e.addLineFlowCode(t,this),this.outputNode.build(e)}}const Lu=Ui(Bu).setParameterLength(2);ui("bypass",Lu);class Fu extends qs{static get type(){return"RemapNode"}constructor(e,t,r,s=qi(0),i=qi(1)){super(),this.node=e,this.inLowNode=t,this.inHighNode=r,this.outLowNode=s,this.outHighNode=i,this.doClamp=!0}setup(){const{node:e,inLowNode:t,inHighNode:r,outLowNode:s,outHighNode:i,doClamp:n}=this;let a=e.sub(t).div(r.sub(t));return!0===n&&(a=a.clamp()),a.mul(i.sub(s)).add(s)}}const Du=Ui(Fu,null,null,{doClamp:!1}).setParameterLength(3,5),Iu=Ui(Fu).setParameterLength(3,5);ui("remap",Du),ui("remapClamp",Iu);class Vu extends qs{static get type(){return"ExpressionNode"}constructor(e="",t="void"){super(t),this.snippet=e}generate(e,t){const r=this.getNodeType(e),s=this.snippet;if("void"!==r)return e.format(s,r,t);e.addLineFlowCode(s,this)}}const Uu=Ui(Vu).setParameterLength(1,2),Ou=e=>(e?Ko(e,Uu("discard")):Uu("discard")).toStack();ui("discard",Ou);class ku extends Ys{static get type(){return"RenderOutputNode"}constructor(e,t,r){super("vec4"),this.colorNode=e,this.toneMapping=t,this.outputColorSpace=r,this.isRenderOutputNode=!0}setup({context:e}){let t=this.colorNode||e.color;const r=(null!==this.toneMapping?this.toneMapping:e.toneMapping)||p,s=(null!==this.outputColorSpace?this.outputColorSpace:e.outputColorSpace)||b;return r!==p&&(t=t.toneMapping(r)),s!==b&&s!==c.workingColorSpace&&(t=t.workingToColorSpace(s)),t}}const Gu=(e,t=null,r=null)=>Di(new ku(Di(e),t,r));ui("renderOutput",Gu);class zu extends Ys{static get type(){return"DebugNode"}constructor(e,t=null){super(),this.node=e,this.callback=t}getNodeType(e){return this.node.getNodeType(e)}setup(e){return this.node.build(e)}analyze(e){return this.node.build(e)}generate(e){const t=this.callback,r=this.node.build(e),s="--- TSL debug - "+e.shaderStage+" shader ---",i="-".repeat(s.length);let n="";return n+="// #"+s+"#\n",n+=e.flow.code.replace(/^\t/gm,"")+"\n",n+="/* ... */ "+r+" /* ... */\n",n+="// #"+i+"#\n",null!==t?t(e,n):console.log(n),r}}const Hu=(e,t=null)=>Di(new zu(Di(e),t));ui("debug",Hu);class $u extends qs{static get type(){return"AttributeNode"}constructor(e,t=null){super(t),this.global=!0,this._attributeName=e}getHash(e){return this.getAttributeName(e)}getNodeType(e){let t=this.nodeType;if(null===t){const r=this.getAttributeName(e);if(e.hasGeometryAttribute(r)){const s=e.geometry.getAttribute(r);t=e.getTypeFromAttribute(s)}else t="float"}return t}setAttributeName(e){return this._attributeName=e,this}getAttributeName(){return this._attributeName}generate(e){const t=this.getAttributeName(e),r=this.getNodeType(e);if(!0===e.hasGeometryAttribute(t)){const s=e.geometry.getAttribute(t),i=e.getTypeFromAttribute(s),n=e.getAttribute(t,i);if("vertex"===e.shaderStage)return e.format(n.name,i,r);return ou(this).build(e,r)}return console.warn(`AttributeNode: Vertex attribute "${t}" not found on geometry.`),e.generateConst(r)}serialize(e){super.serialize(e),e.global=this.global,e._attributeName=this._attributeName}deserialize(e){super.deserialize(e),this.global=e.global,this._attributeName=e._attributeName}}const Wu=(e,t=null)=>Di(new $u(e,t)),ju=(e=0)=>Wu("uv"+(e>0?e:""),"vec2");class qu extends qs{static get type(){return"TextureSizeNode"}constructor(e,t=null){super("uvec2"),this.isTextureSizeNode=!0,this.textureNode=e,this.levelNode=t}generate(e,t){const r=this.textureNode.build(e,"property"),s=null===this.levelNode?"0":this.levelNode.build(e,"int");return e.format(`${e.getMethod("textureDimensions")}( ${r}, ${s} )`,this.getNodeType(e),t)}}const Xu=Ui(qu).setParameterLength(1,2);class Ku extends Zn{static get type(){return"MaxMipLevelNode"}constructor(e){super(0),this._textureNode=e,this.updateType=Us.FRAME}get textureNode(){return this._textureNode}get texture(){return this._textureNode.value}update(){const e=this.texture,t=e.images,r=t&&t.length>0?t[0]&&t[0].image||t[0]:e.image;if(r&&void 0!==r.width){const{width:e,height:t}=r;this.value=Math.log2(Math.max(e,t))}}}const Yu=Ui(Ku).setParameterLength(1),Qu=new x;class Zu extends Zn{static get type(){return"TextureNode"}constructor(e=Qu,t=null,r=null,s=null){super(e),this.isTextureNode=!0,this.uvNode=t,this.levelNode=r,this.biasNode=s,this.compareNode=null,this.depthNode=null,this.gradNode=null,this.sampler=!0,this.updateMatrix=!1,this.updateType=Us.NONE,this.referenceNode=null,this._value=e,this._matrixUniform=null,this.setUpdateMatrix(null===t)}set value(e){this.referenceNode?this.referenceNode.value=e:this._value=e}get value(){return this.referenceNode?this.referenceNode.value:this._value}getUniformHash(){return this.value.uuid}getNodeType(){return!0===this.value.isDepthTexture?"float":this.value.type===T?"uvec4":this.value.type===_?"ivec4":"vec4"}getInputType(){return"texture"}getDefaultUV(){return ju(this.value.channel)}updateReference(){return this.value}getTransformedUV(e){return null===this._matrixUniform&&(this._matrixUniform=Jn(this.value.matrix)),this._matrixUniform.mul(tn(e,1)).xy}setUpdateMatrix(e){return this.updateMatrix=e,this.updateType=e?Us.OBJECT:Us.NONE,this}setupUV(e,t){const r=this.value;return e.isFlipY()&&(r.image instanceof ImageBitmap&&!0===r.flipY||!0===r.isRenderTargetTexture||!0===r.isFramebufferTexture||!0===r.isDepthTexture)&&(t=this.sampler?t.flipY():t.setY(Xi(Xu(this,this.levelNode).y).sub(t.y).sub(1))),t}setup(e){const t=e.getNodeProperties(this);t.referenceNode=this.referenceNode;const r=this.value;if(!r||!0!==r.isTexture)throw new Error("THREE.TSL: `texture( value )` function expects a valid instance of THREE.Texture().");let s=this.uvNode;null!==s&&!0!==e.context.forceUVContext||!e.context.getUV||(s=e.context.getUV(this,e)),s||(s=this.getDefaultUV()),!0===this.updateMatrix&&(s=this.getTransformedUV(s)),s=this.setupUV(e,s);let i=this.levelNode;null===i&&e.context.getTextureLevel&&(i=e.context.getTextureLevel(this)),t.uvNode=s,t.levelNode=i,t.biasNode=this.biasNode,t.compareNode=this.compareNode,t.gradNode=this.gradNode,t.depthNode=this.depthNode}generateUV(e,t){return t.build(e,!0===this.sampler?"vec2":"ivec2")}generateSnippet(e,t,r,s,i,n,a,o){const u=this.value;let l;return l=s?e.generateTextureLevel(u,t,r,s,n):i?e.generateTextureBias(u,t,r,i,n):o?e.generateTextureGrad(u,t,r,o,n):a?e.generateTextureCompare(u,t,r,a,n):!1===this.sampler?e.generateTextureLoad(u,t,r,n):e.generateTexture(u,t,r,n),l}generate(e,t){const r=this.value,s=e.getNodeProperties(this),i=super.generate(e,"property");if(/^sampler/.test(t))return i+"_sampler";if(e.isReference(t))return i;{const n=e.getDataFromNode(this);let a=n.propertyName;if(void 0===a){const{uvNode:t,levelNode:r,biasNode:o,compareNode:u,depthNode:l,gradNode:d}=s,c=this.generateUV(e,t),h=r?r.build(e,"float"):null,p=o?o.build(e,"float"):null,g=l?l.build(e,"int"):null,m=u?u.build(e,"float"):null,f=d?[d[0].build(e,"vec2"),d[1].build(e,"vec2")]:null,y=e.getVarFromNode(this);a=e.getPropertyName(y);const b=this.generateSnippet(e,i,c,h,p,g,m,f);e.addLineFlowCode(`${a} = ${b}`,this),n.snippet=b,n.propertyName=a}let o=a;const u=this.getNodeType(e);return e.needsToWorkingColorSpace(r)&&(o=gu(Uu(o,u),r.colorSpace).setup(e).build(e,u)),e.format(o,u,t)}}setSampler(e){return this.sampler=e,this}getSampler(){return this.sampler}uv(e){return console.warn("THREE.TextureNode: .uv() has been renamed. Use .sample() instead."),this.sample(e)}sample(e){const t=this.clone();return t.uvNode=Di(e),t.referenceNode=this.getSelf(),Di(t)}blur(e){const t=this.clone();t.biasNode=Di(e).mul(Yu(t)),t.referenceNode=this.getSelf();const r=t.value;return!1===t.generateMipmaps&&(r&&!1===r.generateMipmaps||r.minFilter===v||r.magFilter===v)&&(console.warn("THREE.TSL: texture().blur() requires mipmaps and sampling. Use .generateMipmaps=true and .minFilter/.magFilter=THREE.LinearFilter in the Texture."),t.biasNode=null),Di(t)}level(e){const t=this.clone();return t.levelNode=Di(e),t.referenceNode=this.getSelf(),Di(t)}size(e){return Xu(this,e)}bias(e){const t=this.clone();return t.biasNode=Di(e),t.referenceNode=this.getSelf(),Di(t)}compare(e){const t=this.clone();return t.compareNode=Di(e),t.referenceNode=this.getSelf(),Di(t)}grad(e,t){const r=this.clone();return r.gradNode=[Di(e),Di(t)],r.referenceNode=this.getSelf(),Di(r)}depth(e){const t=this.clone();return t.depthNode=Di(e),t.referenceNode=this.getSelf(),Di(t)}serialize(e){super.serialize(e),e.value=this.value.toJSON(e.meta).uuid,e.sampler=this.sampler,e.updateMatrix=this.updateMatrix,e.updateType=this.updateType}deserialize(e){super.deserialize(e),this.value=e.meta.textures[e.value],this.sampler=e.sampler,this.updateMatrix=e.updateMatrix,this.updateType=e.updateType}update(){const e=this.value,t=this._matrixUniform;null!==t&&(t.value=e.matrix),!0===e.matrixAutoUpdate&&e.updateMatrix()}clone(){const e=new this.constructor(this.value,this.uvNode,this.levelNode,this.biasNode);return e.sampler=this.sampler,e.depthNode=this.depthNode,e.compareNode=this.compareNode,e.gradNode=this.gradNode,e}}const Ju=Ui(Zu).setParameterLength(1,4).setName("texture"),el=(e=Qu,t=null,r=null,s=null)=>{let i;return e&&!0===e.isTextureNode?(i=Di(e.clone()),i.referenceNode=e.getSelf(),null!==t&&(i.uvNode=Di(t)),null!==r&&(i.levelNode=Di(r)),null!==s&&(i.biasNode=Di(s))):i=Ju(e,t,r,s),i},tl=(...e)=>el(...e).setSampler(!1);class rl extends Zn{static get type(){return"BufferNode"}constructor(e,t,r=0){super(e,t),this.isBufferNode=!0,this.bufferType=t,this.bufferCount=r}getElementType(e){return this.getNodeType(e)}getInputType(){return"buffer"}}const sl=(e,t,r)=>Di(new rl(e,t,r));class il extends Xs{static get type(){return"UniformArrayElementNode"}constructor(e,t){super(e,t),this.isArrayBufferElementNode=!0}generate(e){const t=super.generate(e),r=this.getNodeType(),s=this.node.getPaddedType();return e.format(t,s,r)}}class nl extends rl{static get type(){return"UniformArrayNode"}constructor(e,t=null){super(null),this.array=e,this.elementType=null===t?Ps(e[0]):t,this.paddedType=this.getPaddedType(),this.updateType=Us.RENDER,this.isArrayBufferNode=!0}getNodeType(){return this.paddedType}getElementType(){return this.elementType}getPaddedType(){const e=this.elementType;let t="vec4";return"mat2"===e?t="mat2":!0===/mat/.test(e)?t="mat4":"i"===e.charAt(0)?t="ivec4":"u"===e.charAt(0)&&(t="uvec4"),t}update(){const{array:e,value:t}=this,r=this.elementType;if("float"===r||"int"===r||"uint"===r)for(let r=0;r<e.length;r++){t[4*r]=e[r]}else if("color"===r)for(let r=0;r<e.length;r++){const s=4*r,i=e[r];t[s]=i.r,t[s+1]=i.g,t[s+2]=i.b||0}else if("mat2"===r)for(let r=0;r<e.length;r++){const s=4*r,i=e[r];t[s]=i.elements[0],t[s+1]=i.elements[1],t[s+2]=i.elements[2],t[s+3]=i.elements[3]}else if("mat3"===r)for(let r=0;r<e.length;r++){const s=16*r,i=e[r];t[s]=i.elements[0],t[s+1]=i.elements[1],t[s+2]=i.elements[2],t[s+4]=i.elements[3],t[s+5]=i.elements[4],t[s+6]=i.elements[5],t[s+8]=i.elements[6],t[s+9]=i.elements[7],t[s+10]=i.elements[8],t[s+15]=1}else if("mat4"===r)for(let r=0;r<e.length;r++){const s=16*r,i=e[r];for(let e=0;e<i.elements.length;e++)t[s+e]=i.elements[e]}else for(let r=0;r<e.length;r++){const s=4*r,i=e[r];t[s]=i.x,t[s+1]=i.y,t[s+2]=i.z||0,t[s+3]=i.w||0}}setup(e){const t=this.array.length,r=this.elementType;let s=Float32Array;const i=this.paddedType,n=e.getTypeLength(i);return"i"===r.charAt(0)&&(s=Int32Array),"u"===r.charAt(0)&&(s=Uint32Array),this.value=new s(t*n),this.bufferCount=t,this.bufferType=i,super.setup(e)}element(e){return Di(new il(this,Di(e)))}}const al=(e,t)=>Di(new nl(e,t));const ol=Ui(class extends qs{constructor(e){super("float"),this.name=e,this.isBuiltinNode=!0}generate(){return this.name}}).setParameterLength(1),ul=Jn(0,"uint").label("u_cameraIndex").setGroup(Xn("cameraIndex")).toVarying("v_cameraIndex"),ll=Jn("float").label("cameraNear").setGroup(Yn).onRenderUpdate(({camera:e})=>e.near),dl=Jn("float").label("cameraFar").setGroup(Yn).onRenderUpdate(({camera:e})=>e.far),cl=Gi(({camera:e})=>{let t;if(e.isArrayCamera&&e.cameras.length>0){const r=[];for(const t of e.cameras)r.push(t.projectionMatrix);t=al(r).setGroup(Yn).label("cameraProjectionMatrices").element(e.isMultiViewCamera?ol("gl_ViewID_OVR"):ul).toVar("cameraProjectionMatrix")}else t=Jn("mat4").label("cameraProjectionMatrix").setGroup(Yn).onRenderUpdate(({camera:e})=>e.projectionMatrix);return t}).once()(),hl=Gi(({camera:e})=>{let t;if(e.isArrayCamera&&e.cameras.length>0){const r=[];for(const t of e.cameras)r.push(t.projectionMatrixInverse);t=al(r).setGroup(Yn).label("cameraProjectionMatricesInverse").element(e.isMultiViewCamera?ol("gl_ViewID_OVR"):ul).toVar("cameraProjectionMatrixInverse")}else t=Jn("mat4").label("cameraProjectionMatrixInverse").setGroup(Yn).onRenderUpdate(({camera:e})=>e.projectionMatrixInverse);return t}).once()(),pl=Gi(({camera:e})=>{let t;if(e.isArrayCamera&&e.cameras.length>0){const r=[];for(const t of e.cameras)r.push(t.matrixWorldInverse);t=al(r).setGroup(Yn).label("cameraViewMatrices").element(e.isMultiViewCamera?ol("gl_ViewID_OVR"):ul).toVar("cameraViewMatrix")}else t=Jn("mat4").label("cameraViewMatrix").setGroup(Yn).onRenderUpdate(({camera:e})=>e.matrixWorldInverse);return t}).once()(),gl=Jn("mat4").label("cameraWorldMatrix").setGroup(Yn).onRenderUpdate(({camera:e})=>e.matrixWorld),ml=Jn("mat3").label("cameraNormalMatrix").setGroup(Yn).onRenderUpdate(({camera:e})=>e.normalMatrix),fl=Jn(new r).label("cameraPosition").setGroup(Yn).onRenderUpdate(({camera:e},t)=>t.value.setFromMatrixPosition(e.matrixWorld)),yl=new N;class bl extends qs{static get type(){return"Object3DNode"}constructor(e,t=null){super(),this.scope=e,this.object3d=t,this.updateType=Us.OBJECT,this.uniformNode=new Zn(null)}getNodeType(){const e=this.scope;return e===bl.WORLD_MATRIX?"mat4":e===bl.POSITION||e===bl.VIEW_POSITION||e===bl.DIRECTION||e===bl.SCALE?"vec3":e===bl.RADIUS?"float":void 0}update(e){const t=this.object3d,s=this.uniformNode,i=this.scope;if(i===bl.WORLD_MATRIX)s.value=t.matrixWorld;else if(i===bl.POSITION)s.value=s.value||new r,s.value.setFromMatrixPosition(t.matrixWorld);else if(i===bl.SCALE)s.value=s.value||new r,s.value.setFromMatrixScale(t.matrixWorld);else if(i===bl.DIRECTION)s.value=s.value||new r,t.getWorldDirection(s.value);else if(i===bl.VIEW_POSITION){const i=e.camera;s.value=s.value||new r,s.value.setFromMatrixPosition(t.matrixWorld),s.value.applyMatrix4(i.matrixWorldInverse)}else if(i===bl.RADIUS){const r=e.object.geometry;null===r.boundingSphere&&r.computeBoundingSphere(),yl.copy(r.boundingSphere).applyMatrix4(t.matrixWorld),s.value=yl.radius}}generate(e){const t=this.scope;return t===bl.WORLD_MATRIX?this.uniformNode.nodeType="mat4":t===bl.POSITION||t===bl.VIEW_POSITION||t===bl.DIRECTION||t===bl.SCALE?this.uniformNode.nodeType="vec3":t===bl.RADIUS&&(this.uniformNode.nodeType="float"),this.uniformNode.build(e)}serialize(e){super.serialize(e),e.scope=this.scope}deserialize(e){super.deserialize(e),this.scope=e.scope}}bl.WORLD_MATRIX="worldMatrix",bl.POSITION="position",bl.SCALE="scale",bl.VIEW_POSITION="viewPosition",bl.DIRECTION="direction",bl.RADIUS="radius";const xl=Ui(bl,bl.DIRECTION).setParameterLength(1),Tl=Ui(bl,bl.WORLD_MATRIX).setParameterLength(1),_l=Ui(bl,bl.POSITION).setParameterLength(1),vl=Ui(bl,bl.SCALE).setParameterLength(1),Nl=Ui(bl,bl.VIEW_POSITION).setParameterLength(1),Sl=Ui(bl,bl.RADIUS).setParameterLength(1);class El extends bl{static get type(){return"ModelNode"}constructor(e){super(e)}update(e){this.object3d=e.object,super.update(e)}}const wl=Oi(El,El.DIRECTION),Al=Oi(El,El.WORLD_MATRIX),Rl=Oi(El,El.POSITION),Cl=Oi(El,El.SCALE),Ml=Oi(El,El.VIEW_POSITION),Pl=Oi(El,El.RADIUS),Bl=Jn(new n).onObjectUpdate(({object:e},t)=>t.value.getNormalMatrix(e.matrixWorld)),Ll=Jn(new a).onObjectUpdate(({object:e},t)=>t.value.copy(e.matrixWorld).invert()),Fl=Gi(e=>e.renderer.overrideNodes.modelViewMatrix||Dl).once()().toVar("modelViewMatrix"),Dl=pl.mul(Al),Il=Gi(e=>(e.context.isHighPrecisionModelViewMatrix=!0,Jn("mat4").onObjectUpdate(({object:e,camera:t})=>e.modelViewMatrix.multiplyMatrices(t.matrixWorldInverse,e.matrixWorld)))).once()().toVar("highpModelViewMatrix"),Vl=Gi(e=>{const t=e.context.isHighPrecisionModelViewMatrix;return Jn("mat3").onObjectUpdate(({object:e,camera:r})=>(!0!==t&&e.modelViewMatrix.multiplyMatrices(r.matrixWorldInverse,e.matrixWorld),e.normalMatrix.getNormalMatrix(e.modelViewMatrix)))}).once()().toVar("highpModelNormalViewMatrix"),Ul=Wu("position","vec3"),Ol=Ul.toVarying("positionLocal"),kl=Ul.toVarying("positionPrevious"),Gl=Gi(e=>Al.mul(Ol).xyz.toVarying(e.getSubBuildProperty("v_positionWorld")),"vec3").once(["POSITION"])(),zl=Gi(()=>Ol.transformDirection(Al).toVarying("v_positionWorldDirection").normalize().toVar("positionWorldDirection"),"vec3").once(["POSITION"])(),Hl=Gi(e=>e.context.setupPositionView().toVarying("v_positionView"),"vec3").once(["POSITION"])(),$l=Hl.negate().toVarying("v_positionViewDirection").normalize().toVar("positionViewDirection");class Wl extends qs{static get type(){return"FrontFacingNode"}constructor(){super("bool"),this.isFrontFacingNode=!0}generate(e){if("fragment"!==e.shaderStage)return"true";const{renderer:t,material:r}=e;return t.coordinateSystem===l&&r.side===S?"false":e.getFrontFacing()}}const jl=Oi(Wl),ql=qi(jl).mul(2).sub(1),Xl=Gi(([e],{material:t})=>{const r=t.side;return r===S?e=e.mul(-1):r===E&&(e=e.mul(ql)),e}),Kl=Wu("normal","vec3"),Yl=Gi(e=>!1===e.geometry.hasAttribute("normal")?(console.warn('THREE.TSL: Vertex attribute "normal" not found on geometry.'),tn(0,1,0)):Kl,"vec3").once()().toVar("normalLocal"),Ql=Hl.dFdx().cross(Hl.dFdy()).normalize().toVar("normalFlat"),Zl=Gi(e=>{let t;return t=!0===e.material.flatShading?Ql:id(Yl).toVarying("v_normalViewGeometry").normalize(),t},"vec3").once()().toVar("normalViewGeometry"),Jl=Gi(e=>{let t=Zl.transformDirection(pl);return!0!==e.material.flatShading&&(t=t.toVarying("v_normalWorldGeometry")),t.normalize().toVar("normalWorldGeometry")},"vec3").once()(),ed=Gi(({subBuildFn:e,material:t,context:r})=>{let s;return"NORMAL"===e||"VERTEX"===e?(s=Zl,!0!==t.flatShading&&(s=Xl(s))):s=r.setupNormal().context({getUV:null}),s},"vec3").once(["NORMAL","VERTEX"])().toVar("normalView"),td=ed.transformDirection(pl).toVar("normalWorld"),rd=Gi(({subBuildFn:e,context:t})=>{let r;return r="NORMAL"===e||"VERTEX"===e?ed:t.setupClearcoatNormal().context({getUV:null}),r},"vec3").once(["NORMAL","VERTEX"])().toVar("clearcoatNormalView"),sd=Gi(([e,t=Al])=>{const r=cn(t),s=e.div(tn(r[0].dot(r[0]),r[1].dot(r[1]),r[2].dot(r[2])));return r.mul(s).xyz}),id=Gi(([e],t)=>{const r=t.renderer.overrideNodes.modelNormalViewMatrix;if(null!==r)return r.transformDirection(e);const s=Bl.mul(e);return pl.transformDirection(s)}),nd=Gi(()=>(console.warn('THREE.TSL: "transformedNormalView" is deprecated. Use "normalView" instead.'),ed)).once(["NORMAL","VERTEX"])(),ad=Gi(()=>(console.warn('THREE.TSL: "transformedNormalWorld" is deprecated. Use "normalWorld" instead.'),td)).once(["NORMAL","VERTEX"])(),od=Gi(()=>(console.warn('THREE.TSL: "transformedClearcoatNormalView" is deprecated. Use "clearcoatNormalView" instead.'),rd)).once(["NORMAL","VERTEX"])(),ud=new w,ld=new a,dd=Jn(0).onReference(({material:e})=>e).onObjectUpdate(({material:e})=>e.refractionRatio),cd=Jn(1).onReference(({material:e})=>e).onObjectUpdate(function({material:e,scene:t}){return e.envMap?e.envMapIntensity:t.environmentIntensity}),hd=Jn(new a).onReference(function(e){return e.material}).onObjectUpdate(function({material:e,scene:t}){const r=null!==t.environment&&null===e.envMap?t.environmentRotation:e.envMapRotation;return r?(ud.copy(r),ld.makeRotationFromEuler(ud)):ld.identity(),ld}),pd=$l.negate().reflect(ed),gd=$l.negate().refract(ed,dd),md=pd.transformDirection(pl).toVar("reflectVector"),fd=gd.transformDirection(pl).toVar("reflectVector"),yd=new A;class bd extends Zu{static get type(){return"CubeTextureNode"}constructor(e,t=null,r=null,s=null){super(e,t,r,s),this.isCubeTextureNode=!0}getInputType(){return"cubeTexture"}getDefaultUV(){const e=this.value;return e.mapping===R?md:e.mapping===C?fd:(console.error('THREE.CubeTextureNode: Mapping "%s" not supported.',e.mapping),tn(0,0,0))}setUpdateMatrix(){}setupUV(e,t){const r=this.value;return e.renderer.coordinateSystem!==d&&r.isRenderTargetTexture||(t=tn(t.x.negate(),t.yz)),hd.mul(t)}generateUV(e,t){return t.build(e,"vec3")}}const xd=Ui(bd).setParameterLength(1,4).setName("cubeTexture"),Td=(e=yd,t=null,r=null,s=null)=>{let i;return e&&!0===e.isCubeTextureNode?(i=Di(e.clone()),i.referenceNode=e.getSelf(),null!==t&&(i.uvNode=Di(t)),null!==r&&(i.levelNode=Di(r)),null!==s&&(i.biasNode=Di(s))):i=xd(e,t,r,s),i};class _d extends Xs{static get type(){return"ReferenceElementNode"}constructor(e,t){super(e,t),this.referenceNode=e,this.isReferenceElementNode=!0}getNodeType(){return this.referenceNode.uniformType}generate(e){const t=super.generate(e),r=this.referenceNode.getNodeType(),s=this.getNodeType();return e.format(t,r,s)}}class vd extends qs{static get type(){return"ReferenceNode"}constructor(e,t,r=null,s=null){super(),this.property=e,this.uniformType=t,this.object=r,this.count=s,this.properties=e.split("."),this.reference=r,this.node=null,this.group=null,this.name=null,this.updateType=Us.OBJECT}element(e){return Di(new _d(this,Di(e)))}setGroup(e){return this.group=e,this}label(e){return this.name=e,this}setNodeType(e){let t=null;t=null!==this.count?sl(null,e,this.count):Array.isArray(this.getValueFromReference())?al(null,e):"texture"===e?el(null):"cubeTexture"===e?Td(null):Jn(null,e),null!==this.group&&t.setGroup(this.group),null!==this.name&&t.label(this.name),this.node=t.getSelf()}getNodeType(e){return null===this.node&&(this.updateReference(e),this.updateValue()),this.node.getNodeType(e)}getValueFromReference(e=this.reference){const{properties:t}=this;let r=e[t[0]];for(let e=1;e<t.length;e++)r=r[t[e]];return r}updateReference(e){return this.reference=null!==this.object?this.object:e.object,this.reference}setup(){return this.updateValue(),this.node}update(){this.updateValue()}updateValue(){null===this.node&&this.setNodeType(this.uniformType);const e=this.getValueFromReference();Array.isArray(e)?this.node.array=e:this.node.value=e}}const Nd=(e,t,r)=>Di(new vd(e,t,r)),Sd=(e,t,r,s)=>Di(new vd(e,t,s,r));class Ed extends vd{static get type(){return"MaterialReferenceNode"}constructor(e,t,r=null){super(e,t,r),this.material=r,this.isMaterialReferenceNode=!0}updateReference(e){return this.reference=null!==this.material?this.material:e.material,this.reference}}const wd=(e,t,r=null)=>Di(new Ed(e,t,r)),Ad=ju(),Rd=Hl.dFdx(),Cd=Hl.dFdy(),Md=Ad.dFdx(),Pd=Ad.dFdy(),Bd=ed,Ld=Cd.cross(Bd),Fd=Bd.cross(Rd),Dd=Ld.mul(Md.x).add(Fd.mul(Pd.x)),Id=Ld.mul(Md.y).add(Fd.mul(Pd.y)),Vd=Dd.dot(Dd).max(Id.dot(Id)),Ud=Vd.equal(0).select(0,Vd.inverseSqrt()),Od=Dd.mul(Ud).toVar("tangentViewFrame"),kd=Id.mul(Ud).toVar("bitangentViewFrame"),Gd=Gi(e=>(!1===e.geometry.hasAttribute("tangent")&&e.geometry.computeTangents(),Wu("tangent","vec4")))(),zd=Gd.xyz.toVar("tangentLocal"),Hd=Gi(({subBuildFn:e,geometry:t,material:r})=>{let s;return s="VERTEX"===e||t.hasAttribute("tangent")?Fl.mul(an(zd,0)).xyz.toVarying("v_tangentView").normalize():Od,!0!==r.flatShading&&(s=Xl(s)),s},"vec3").once(["NORMAL","VERTEX"])().toVar("tangentView"),$d=Hd.transformDirection(pl).toVarying("v_tangentWorld").normalize().toVar("tangentWorld"),Wd=Gi(([e,t],{subBuildFn:r,material:s})=>{let i=e.mul(Gd.w).xyz;return"NORMAL"===r&&!0!==s.flatShading&&(i=i.toVarying(t)),i}).once(["NORMAL"]),jd=Wd(Kl.cross(Gd),"v_bitangentGeometry").normalize().toVar("bitangentGeometry"),qd=Wd(Yl.cross(zd),"v_bitangentLocal").normalize().toVar("bitangentLocal"),Xd=Gi(({subBuildFn:e,geometry:t,material:r})=>{let s;return s="VERTEX"===e||t.hasAttribute("tangent")?Wd(ed.cross(Hd),"v_bitangentView").normalize():kd,!0!==r.flatShading&&(s=Xl(s)),s},"vec3").once(["NORMAL","VERTEX"])().toVar("bitangentView"),Kd=Wd(td.cross($d),"v_bitangentWorld").normalize().toVar("bitangentWorld"),Yd=cn(Hd,Xd,ed).toVar("TBNViewMatrix"),Qd=$l.mul(Yd),Zd=Gi(()=>{let e=Bn.cross($l);return e=e.cross(Bn).normalize(),e=Do(e,ed,Mn.mul(Tn.oneMinus()).oneMinus().pow2().pow2()).normalize(),e}).once()();class Jd extends Ys{static get type(){return"NormalMapNode"}constructor(e,t=null){super("vec3"),this.node=e,this.scaleNode=t,this.normalMapType=M}setup({material:e}){const{normalMapType:t,scaleNode:r}=this;let s=this.node.mul(2).sub(1);if(null!==r){let t=r;!0===e.flatShading&&(t=Xl(t)),s=tn(s.xy.mul(t),s.z)}let i=null;return t===P?i=id(s):t===M?i=Yd.mul(s).normalize():(console.error(`THREE.NodeMaterial: Unsupported normal map type: ${t}`),i=ed),i}}const ec=Ui(Jd).setParameterLength(1,2),tc=Gi(({textureNode:e,bumpScale:t})=>{const r=t=>e.cache().context({getUV:e=>t(e.uvNode||ju()),forceUVContext:!0}),s=qi(r(e=>e));return Qi(qi(r(e=>e.add(e.dFdx()))).sub(s),qi(r(e=>e.add(e.dFdy()))).sub(s)).mul(t)}),rc=Gi(e=>{const{surf_pos:t,surf_norm:r,dHdxy:s}=e,i=t.dFdx().normalize(),n=r,a=t.dFdy().normalize().cross(n),o=n.cross(i),u=i.dot(a).mul(ql),l=u.sign().mul(s.x.mul(a).add(s.y.mul(o)));return u.abs().mul(r).sub(l).normalize()});class sc extends Ys{static get type(){return"BumpMapNode"}constructor(e,t=null){super("vec3"),this.textureNode=e,this.scaleNode=t}setup(){const e=null!==this.scaleNode?this.scaleNode:1,t=tc({textureNode:this.textureNode,bumpScale:e});return rc({surf_pos:Hl,surf_norm:ed,dHdxy:t})}}const ic=Ui(sc).setParameterLength(1,2),nc=new Map;class ac extends qs{static get type(){return"MaterialNode"}constructor(e){super(),this.scope=e}getCache(e,t){let r=nc.get(e);return void 0===r&&(r=wd(e,t),nc.set(e,r)),r}getFloat(e){return this.getCache(e,"float")}getColor(e){return this.getCache(e,"color")}getTexture(e){return this.getCache("map"===e?"map":e+"Map","texture")}setup(e){const t=e.context.material,r=this.scope;let s=null;if(r===ac.COLOR){const e=void 0!==t.color?this.getColor(r):tn();s=t.map&&!0===t.map.isTexture?e.mul(this.getTexture("map")):e}else if(r===ac.OPACITY){const e=this.getFloat(r);s=t.alphaMap&&!0===t.alphaMap.isTexture?e.mul(this.getTexture("alpha")):e}else if(r===ac.SPECULAR_STRENGTH)s=t.specularMap&&!0===t.specularMap.isTexture?this.getTexture("specular").r:qi(1);else if(r===ac.SPECULAR_INTENSITY){const e=this.getFloat(r);s=t.specularIntensityMap&&!0===t.specularIntensityMap.isTexture?e.mul(this.getTexture(r).a):e}else if(r===ac.SPECULAR_COLOR){const e=this.getColor(r);s=t.specularColorMap&&!0===t.specularColorMap.isTexture?e.mul(this.getTexture(r).rgb):e}else if(r===ac.ROUGHNESS){const e=this.getFloat(r);s=t.roughnessMap&&!0===t.roughnessMap.isTexture?e.mul(this.getTexture(r).g):e}else if(r===ac.METALNESS){const e=this.getFloat(r);s=t.metalnessMap&&!0===t.metalnessMap.isTexture?e.mul(this.getTexture(r).b):e}else if(r===ac.EMISSIVE){const e=this.getFloat("emissiveIntensity"),i=this.getColor(r).mul(e);s=t.emissiveMap&&!0===t.emissiveMap.isTexture?i.mul(this.getTexture(r)):i}else if(r===ac.NORMAL)t.normalMap?(s=ec(this.getTexture("normal"),this.getCache("normalScale","vec2")),s.normalMapType=t.normalMapType):s=t.bumpMap?ic(this.getTexture("bump").r,this.getFloat("bumpScale")):ed;else if(r===ac.CLEARCOAT){const e=this.getFloat(r);s=t.clearcoatMap&&!0===t.clearcoatMap.isTexture?e.mul(this.getTexture(r).r):e}else if(r===ac.CLEARCOAT_ROUGHNESS){const e=this.getFloat(r);s=t.clearcoatRoughnessMap&&!0===t.clearcoatRoughnessMap.isTexture?e.mul(this.getTexture(r).r):e}else if(r===ac.CLEARCOAT_NORMAL)s=t.clearcoatNormalMap?ec(this.getTexture(r),this.getCache(r+"Scale","vec2")):ed;else if(r===ac.SHEEN){const e=this.getColor("sheenColor").mul(this.getFloat("sheen"));s=t.sheenColorMap&&!0===t.sheenColorMap.isTexture?e.mul(this.getTexture("sheenColor").rgb):e}else if(r===ac.SHEEN_ROUGHNESS){const e=this.getFloat(r);s=t.sheenRoughnessMap&&!0===t.sheenRoughnessMap.isTexture?e.mul(this.getTexture(r).a):e,s=s.clamp(.07,1)}else if(r===ac.ANISOTROPY)if(t.anisotropyMap&&!0===t.anisotropyMap.isTexture){const e=this.getTexture(r);s=dn($c.x,$c.y,$c.y.negate(),$c.x).mul(e.rg.mul(2).sub(Qi(1)).normalize().mul(e.b))}else s=$c;else if(r===ac.IRIDESCENCE_THICKNESS){const e=Nd("1","float",t.iridescenceThicknessRange);if(t.iridescenceThicknessMap){const i=Nd("0","float",t.iridescenceThicknessRange);s=e.sub(i).mul(this.getTexture(r).g).add(i)}else s=e}else if(r===ac.TRANSMISSION){const e=this.getFloat(r);s=t.transmissionMap?e.mul(this.getTexture(r).r):e}else if(r===ac.THICKNESS){const e=this.getFloat(r);s=t.thicknessMap?e.mul(this.getTexture(r).g):e}else if(r===ac.IOR)s=this.getFloat(r);else if(r===ac.LIGHT_MAP)s=this.getTexture(r).rgb.mul(this.getFloat("lightMapIntensity"));else if(r===ac.AO)s=this.getTexture(r).r.sub(1).mul(this.getFloat("aoMapIntensity")).add(1);else if(r===ac.LINE_DASH_OFFSET)s=t.dashOffset?this.getFloat(r):qi(0);else{const t=this.getNodeType(e);s=this.getCache(r,t)}return s}}ac.ALPHA_TEST="alphaTest",ac.COLOR="color",ac.OPACITY="opacity",ac.SHININESS="shininess",ac.SPECULAR="specular",ac.SPECULAR_STRENGTH="specularStrength",ac.SPECULAR_INTENSITY="specularIntensity",ac.SPECULAR_COLOR="specularColor",ac.REFLECTIVITY="reflectivity",ac.ROUGHNESS="roughness",ac.METALNESS="metalness",ac.NORMAL="normal",ac.CLEARCOAT="clearcoat",ac.CLEARCOAT_ROUGHNESS="clearcoatRoughness",ac.CLEARCOAT_NORMAL="clearcoatNormal",ac.EMISSIVE="emissive",ac.ROTATION="rotation",ac.SHEEN="sheen",ac.SHEEN_ROUGHNESS="sheenRoughness",ac.ANISOTROPY="anisotropy",ac.IRIDESCENCE="iridescence",ac.IRIDESCENCE_IOR="iridescenceIOR",ac.IRIDESCENCE_THICKNESS="iridescenceThickness",ac.IOR="ior",ac.TRANSMISSION="transmission",ac.THICKNESS="thickness",ac.ATTENUATION_DISTANCE="attenuationDistance",ac.ATTENUATION_COLOR="attenuationColor",ac.LINE_SCALE="scale",ac.LINE_DASH_SIZE="dashSize",ac.LINE_GAP_SIZE="gapSize",ac.LINE_WIDTH="linewidth",ac.LINE_DASH_OFFSET="dashOffset",ac.POINT_SIZE="size",ac.DISPERSION="dispersion",ac.LIGHT_MAP="light",ac.AO="ao";const oc=Oi(ac,ac.ALPHA_TEST),uc=Oi(ac,ac.COLOR),lc=Oi(ac,ac.SHININESS),dc=Oi(ac,ac.EMISSIVE),cc=Oi(ac,ac.OPACITY),hc=Oi(ac,ac.SPECULAR),pc=Oi(ac,ac.SPECULAR_INTENSITY),gc=Oi(ac,ac.SPECULAR_COLOR),mc=Oi(ac,ac.SPECULAR_STRENGTH),fc=Oi(ac,ac.REFLECTIVITY),yc=Oi(ac,ac.ROUGHNESS),bc=Oi(ac,ac.METALNESS),xc=Oi(ac,ac.NORMAL),Tc=Oi(ac,ac.CLEARCOAT),_c=Oi(ac,ac.CLEARCOAT_ROUGHNESS),vc=Oi(ac,ac.CLEARCOAT_NORMAL),Nc=Oi(ac,ac.ROTATION),Sc=Oi(ac,ac.SHEEN),Ec=Oi(ac,ac.SHEEN_ROUGHNESS),wc=Oi(ac,ac.ANISOTROPY),Ac=Oi(ac,ac.IRIDESCENCE),Rc=Oi(ac,ac.IRIDESCENCE_IOR),Cc=Oi(ac,ac.IRIDESCENCE_THICKNESS),Mc=Oi(ac,ac.TRANSMISSION),Pc=Oi(ac,ac.THICKNESS),Bc=Oi(ac,ac.IOR),Lc=Oi(ac,ac.ATTENUATION_DISTANCE),Fc=Oi(ac,ac.ATTENUATION_COLOR),Dc=Oi(ac,ac.LINE_SCALE),Ic=Oi(ac,ac.LINE_DASH_SIZE),Vc=Oi(ac,ac.LINE_GAP_SIZE),Uc=Oi(ac,ac.LINE_WIDTH),Oc=Oi(ac,ac.LINE_DASH_OFFSET),kc=Oi(ac,ac.POINT_SIZE),Gc=Oi(ac,ac.DISPERSION),zc=Oi(ac,ac.LIGHT_MAP),Hc=Oi(ac,ac.AO),$c=Jn(new t).onReference(function(e){return e.material}).onRenderUpdate(function({material:e}){this.value.set(e.anisotropy*Math.cos(e.anisotropyRotation),e.anisotropy*Math.sin(e.anisotropyRotation))}),Wc=Gi(e=>e.context.setupModelViewProjection(),"vec4").once()().toVarying("v_modelViewProjection");class jc extends qs{static get type(){return"IndexNode"}constructor(e){super("uint"),this.scope=e,this.isIndexNode=!0}generate(e){const t=this.getNodeType(e),r=this.scope;let s,i;if(r===jc.VERTEX)s=e.getVertexIndex();else if(r===jc.INSTANCE)s=e.getInstanceIndex();else if(r===jc.DRAW)s=e.getDrawIndex();else if(r===jc.INVOCATION_LOCAL)s=e.getInvocationLocalIndex();else if(r===jc.INVOCATION_SUBGROUP)s=e.getInvocationSubgroupIndex();else{if(r!==jc.SUBGROUP)throw new Error("THREE.IndexNode: Unknown scope: "+r);s=e.getSubgroupIndex()}if("vertex"===e.shaderStage||"compute"===e.shaderStage)i=s;else{i=ou(this).build(e,t)}return i}}jc.VERTEX="vertex",jc.INSTANCE="instance",jc.SUBGROUP="subgroup",jc.INVOCATION_LOCAL="invocationLocal",jc.INVOCATION_SUBGROUP="invocationSubgroup",jc.DRAW="draw";const qc=Oi(jc,jc.VERTEX),Xc=Oi(jc,jc.INSTANCE),Kc=Oi(jc,jc.SUBGROUP),Yc=Oi(jc,jc.INVOCATION_SUBGROUP),Qc=Oi(jc,jc.INVOCATION_LOCAL),Zc=Oi(jc,jc.DRAW);class Jc extends qs{static get type(){return"InstanceNode"}constructor(e,t,r=null){super("void"),this.count=e,this.instanceMatrix=t,this.instanceColor=r,this.instanceMatrixNode=null,this.instanceColorNode=null,this.updateType=Us.FRAME,this.buffer=null,this.bufferColor=null}setup(e){const{count:t,instanceMatrix:r,instanceColor:s}=this;let{instanceMatrixNode:i,instanceColorNode:n}=this;if(null===i){if(t<=1e3)i=sl(r.array,"mat4",Math.max(t,1)).element(Xc);else{const e=new B(r.array,16,1);this.buffer=e;const t=r.usage===y?wu:Eu,s=[t(e,"vec4",16,0),t(e,"vec4",16,4),t(e,"vec4",16,8),t(e,"vec4",16,12)];i=hn(...s)}this.instanceMatrixNode=i}if(s&&null===n){const e=new L(s.array,3),t=s.usage===y?wu:Eu;this.bufferColor=e,n=tn(t(e,"vec3",3,0)),this.instanceColorNode=n}const a=i.mul(Ol).xyz;if(Ol.assign(a),e.hasGeometryAttribute("normal")){const e=sd(Yl,i);Yl.assign(e)}null!==this.instanceColorNode&&yn("vec3","vInstanceColor").assign(this.instanceColorNode)}update(){this.instanceMatrix.usage!==y&&null!==this.buffer&&this.instanceMatrix.version!==this.buffer.version&&(this.buffer.version=this.instanceMatrix.version),this.instanceColor&&this.instanceColor.usage!==y&&null!==this.bufferColor&&this.instanceColor.version!==this.bufferColor.version&&(this.bufferColor.version=this.instanceColor.version)}}const eh=Ui(Jc).setParameterLength(2,3);class th extends Jc{static get type(){return"InstancedMeshNode"}constructor(e){const{count:t,instanceMatrix:r,instanceColor:s}=e;super(t,r,s),this.instancedMesh=e}}const rh=Ui(th).setParameterLength(1);class sh extends qs{static get type(){return"BatchNode"}constructor(e){super("void"),this.batchMesh=e,this.batchingIdNode=null}setup(e){null===this.batchingIdNode&&(null===e.getDrawIndex()?this.batchingIdNode=Xc:this.batchingIdNode=Zc);const t=Gi(([e])=>{const t=Xi(Xu(tl(this.batchMesh._indirectTexture),0).x),r=Xi(e).mod(t),s=Xi(e).div(t);return tl(this.batchMesh._indirectTexture,Zi(r,s)).x}).setLayout({name:"getIndirectIndex",type:"uint",inputs:[{name:"id",type:"int"}]}),r=t(Xi(this.batchingIdNode)),s=this.batchMesh._matricesTexture,i=Xi(Xu(tl(s),0).x),n=qi(r).mul(4).toInt().toVar(),a=n.mod(i),o=n.div(i),u=hn(tl(s,Zi(a,o)),tl(s,Zi(a.add(1),o)),tl(s,Zi(a.add(2),o)),tl(s,Zi(a.add(3),o))),l=this.batchMesh._colorsTexture;if(null!==l){const e=Gi(([e])=>{const t=Xi(Xu(tl(l),0).x),r=e,s=r.mod(t),i=r.div(t);return tl(l,Zi(s,i)).rgb}).setLayout({name:"getBatchingColor",type:"vec3",inputs:[{name:"id",type:"int"}]}),t=e(r);yn("vec3","vBatchColor").assign(t)}const d=cn(u);Ol.assign(u.mul(Ol));const c=Yl.div(tn(d[0].dot(d[0]),d[1].dot(d[1]),d[2].dot(d[2]))),h=d.mul(c).xyz;Yl.assign(h),e.hasGeometryAttribute("tangent")&&zd.mulAssign(d)}}const ih=Ui(sh).setParameterLength(1);class nh extends Xs{static get type(){return"StorageArrayElementNode"}constructor(e,t){super(e,t),this.isStorageArrayElementNode=!0}set storageBufferNode(e){this.node=e}get storageBufferNode(){return this.node}getMemberType(e,t){const r=this.storageBufferNode.structTypeNode;return r?r.getMemberType(e,t):"void"}setup(e){return!1===e.isAvailable("storageBuffer")&&!0===this.node.isPBO&&e.setupPBO(this.node),super.setup(e)}generate(e,t){let r;const s=e.context.assign;if(r=!1===e.isAvailable("storageBuffer")?!0!==this.node.isPBO||!0===s||!this.node.value.isInstancedBufferAttribute&&"compute"===e.shaderStage?this.node.build(e):e.generatePBO(this):super.generate(e),!0!==s){const s=this.getNodeType(e);r=e.format(r,s,t)}return r}}const ah=Ui(nh).setParameterLength(2);class oh extends rl{static get type(){return"StorageBufferNode"}constructor(e,t=null,r=0){let s,i=null;t&&t.isStruct?(s="struct",i=t.layout,(e.isStorageBufferAttribute||e.isStorageInstancedBufferAttribute)&&(r=e.count)):null===t&&(e.isStorageBufferAttribute||e.isStorageInstancedBufferAttribute)?(s=ws(e.itemSize),r=e.count):s=t,super(e,s,r),this.isStorageBufferNode=!0,this.structTypeNode=i,this.access=ks.READ_WRITE,this.isAtomic=!1,this.isPBO=!1,this._attribute=null,this._varying=null,this.global=!0,!0!==e.isStorageBufferAttribute&&!0!==e.isStorageInstancedBufferAttribute&&(e.isInstancedBufferAttribute?e.isStorageInstancedBufferAttribute=!0:e.isStorageBufferAttribute=!0)}getHash(e){if(0===this.bufferCount){let t=e.globalCache.getData(this.value);return void 0===t&&(t={node:this},e.globalCache.setData(this.value,t)),t.node.uuid}return this.uuid}getInputType(){return this.value.isIndirectStorageBufferAttribute?"indirectStorageBuffer":"storageBuffer"}element(e){return ah(this,e)}setPBO(e){return this.isPBO=e,this}getPBO(){return this.isPBO}setAccess(e){return this.access=e,this}toReadOnly(){return this.setAccess(ks.READ_ONLY)}setAtomic(e){return this.isAtomic=e,this}toAtomic(){return this.setAtomic(!0)}getAttributeData(){return null===this._attribute&&(this._attribute=Nu(this.value),this._varying=ou(this._attribute)),{attribute:this._attribute,varying:this._varying}}getNodeType(e){if(null!==this.structTypeNode)return this.structTypeNode.getNodeType(e);if(e.isAvailable("storageBuffer")||e.isAvailable("indirectStorageBuffer"))return super.getNodeType(e);const{attribute:t}=this.getAttributeData();return t.getNodeType(e)}getMemberType(e,t){return null!==this.structTypeNode?this.structTypeNode.getMemberType(e,t):"void"}generate(e){if(null!==this.structTypeNode&&this.structTypeNode.build(e),e.isAvailable("storageBuffer")||e.isAvailable("indirectStorageBuffer"))return super.generate(e);const{attribute:t,varying:r}=this.getAttributeData(),s=r.build(e);return e.registerTransform(s,t),s}}const uh=(e,t=null,r=0)=>Di(new oh(e,t,r)),lh=new WeakMap;class dh extends qs{static get type(){return"SkinningNode"}constructor(e){super("void"),this.skinnedMesh=e,this.updateType=Us.OBJECT,this.skinIndexNode=Wu("skinIndex","uvec4"),this.skinWeightNode=Wu("skinWeight","vec4"),this.bindMatrixNode=Nd("bindMatrix","mat4"),this.bindMatrixInverseNode=Nd("bindMatrixInverse","mat4"),this.boneMatricesNode=Sd("skeleton.boneMatrices","mat4",e.skeleton.bones.length),this.positionNode=Ol,this.toPositionNode=Ol,this.previousBoneMatricesNode=null}getSkinnedPosition(e=this.boneMatricesNode,t=this.positionNode){const{skinIndexNode:r,skinWeightNode:s,bindMatrixNode:i,bindMatrixInverseNode:n}=this,a=e.element(r.x),o=e.element(r.y),u=e.element(r.z),l=e.element(r.w),d=i.mul(t),c=ua(a.mul(s.x).mul(d),o.mul(s.y).mul(d),u.mul(s.z).mul(d),l.mul(s.w).mul(d));return n.mul(c).xyz}getSkinnedNormal(e=this.boneMatricesNode,t=Yl){const{skinIndexNode:r,skinWeightNode:s,bindMatrixNode:i,bindMatrixInverseNode:n}=this,a=e.element(r.x),o=e.element(r.y),u=e.element(r.z),l=e.element(r.w);let d=ua(s.x.mul(a),s.y.mul(o),s.z.mul(u),s.w.mul(l));return d=n.mul(d).mul(i),d.transformDirection(t).xyz}getPreviousSkinnedPosition(e){const t=e.object;return null===this.previousBoneMatricesNode&&(t.skeleton.previousBoneMatrices=new Float32Array(t.skeleton.boneMatrices),this.previousBoneMatricesNode=Sd("skeleton.previousBoneMatrices","mat4",t.skeleton.bones.length)),this.getSkinnedPosition(this.previousBoneMatricesNode,kl)}needsPreviousBoneMatrices(e){const t=e.renderer.getMRT();return t&&t.has("velocity")||!0===Ls(e.object).useVelocity}setup(e){this.needsPreviousBoneMatrices(e)&&kl.assign(this.getPreviousSkinnedPosition(e));const t=this.getSkinnedPosition();if(this.toPositionNode&&this.toPositionNode.assign(t),e.hasGeometryAttribute("normal")){const t=this.getSkinnedNormal();Yl.assign(t),e.hasGeometryAttribute("tangent")&&zd.assign(t)}return t}generate(e,t){if("void"!==t)return super.generate(e,t)}update(e){const t=e.object&&e.object.skeleton?e.object.skeleton:this.skinnedMesh.skeleton;lh.get(t)!==e.frameId&&(lh.set(t,e.frameId),null!==this.previousBoneMatricesNode&&t.previousBoneMatrices.set(t.boneMatrices),t.update())}}const ch=e=>Di(new dh(e));class hh extends qs{static get type(){return"LoopNode"}constructor(e=[]){super(),this.params=e}getVarName(e){return String.fromCharCode("i".charCodeAt(0)+e)}getProperties(e){const t=e.getNodeProperties(this);if(void 0!==t.stackNode)return t;const r={};for(let e=0,t=this.params.length-1;e<t;e++){const t=this.params[e],s=!0!==t.isNode&&t.name||this.getVarName(e),i=!0!==t.isNode&&t.type||"int";r[s]=Uu(s,i)}const s=e.addStack();t.returnsNode=this.params[this.params.length-1](r,e),t.stackNode=s;const i=this.params[0];return!0!==i.isNode&&"function"==typeof i.update&&(t.updateNode=Gi(this.params[0].update)(r)),e.removeStack(),t}getNodeType(e){const{returnsNode:t}=this.getProperties(e);return t?t.getNodeType(e):"void"}setup(e){this.getProperties(e)}generate(e){const t=this.getProperties(e),r=this.params,s=t.stackNode;for(let s=0,i=r.length-1;s<i;s++){const i=r[s];let n,a=!1,o=null,u=null,l=null,d=null,c=null,h=null;if(i.isNode?"bool"===i.getNodeType(e)?(a=!0,d="bool",u=i.build(e,d)):(d="int",l=this.getVarName(s),o="0",u=i.build(e,d),c="<"):(d=i.type||"int",l=i.name||this.getVarName(s),o=i.start,u=i.end,c=i.condition,h=i.update,"number"==typeof o?o=e.generateConst(d,o):o&&o.isNode&&(o=o.build(e,d)),"number"==typeof u?u=e.generateConst(d,u):u&&u.isNode&&(u=u.build(e,d)),void 0!==o&&void 0===u?(o+=" - 1",u="0",c=">="):void 0!==u&&void 0===o&&(o="0",c="<"),void 0===c&&(c=Number(o)>Number(u)?">=":"<")),a)n=`while ( ${u} )`;else{const r={start:o,end:u},s=r.start,i=r.end;let a;const p=()=>c.includes("<")?"+=":"-=";if(null!=h)switch(typeof h){case"function":a=e.flowStagesNode(t.updateNode,"void").code.replace(/\t|;/g,"");break;case"number":a=l+" "+p()+" "+e.generateConst(d,h);break;case"string":a=l+" "+h;break;default:h.isNode?a=l+" "+p()+" "+h.build(e):(console.error("THREE.TSL: 'Loop( { update: ... } )' is not a function, string or number."),a="break /* invalid update */")}else h="int"===d||"uint"===d?c.includes("<")?"++":"--":p()+" 1.",a=l+" "+h;n=`for ( ${e.getVar(d,l)+" = "+s}; ${l+" "+c+" "+i}; ${a} )`}e.addFlowCode((0===s?"\n":"")+e.tab+n+" {\n\n").addFlowTab()}const i=s.build(e,"void"),n=t.returnsNode?t.returnsNode.build(e):"";e.removeFlowTab().addFlowCode("\n"+e.tab+i);for(let t=0,r=this.params.length-1;t<r;t++)e.addFlowCode((0===t?"":e.tab)+"}\n\n").removeFlowTab();return e.addFlowTab(),n}}const ph=(...e)=>Di(new hh(Vi(e,"int"))).toStack(),gh=()=>Uu("break").toStack(),mh=new WeakMap,fh=new s,yh=Gi(({bufferMap:e,influence:t,stride:r,width:s,depth:i,offset:n})=>{const a=Xi(qc).mul(r).add(n),o=a.div(s),u=a.sub(o.mul(s));return tl(e,Zi(u,o)).depth(i).xyz.mul(t)});class bh extends qs{static get type(){return"MorphNode"}constructor(e){super("void"),this.mesh=e,this.morphBaseInfluence=Jn(1),this.updateType=Us.OBJECT}setup(e){const{geometry:r}=e,s=void 0!==r.morphAttributes.position,i=r.hasAttribute("normal")&&void 0!==r.morphAttributes.normal,n=r.morphAttributes.position||r.morphAttributes.normal||r.morphAttributes.color,a=void 0!==n?n.length:0,{texture:o,stride:u,size:l}=function(e){const r=void 0!==e.morphAttributes.position,s=void 0!==e.morphAttributes.normal,i=void 0!==e.morphAttributes.color,n=e.morphAttributes.position||e.morphAttributes.normal||e.morphAttributes.color,a=void 0!==n?n.length:0;let o=mh.get(e);if(void 0===o||o.count!==a){void 0!==o&&o.texture.dispose();const u=e.morphAttributes.position||[],l=e.morphAttributes.normal||[],d=e.morphAttributes.color||[];let c=0;!0===r&&(c=1),!0===s&&(c=2),!0===i&&(c=3);let h=e.attributes.position.count*c,p=1;const g=4096;h>g&&(p=Math.ceil(h/g),h=g);const m=new Float32Array(h*p*4*a),f=new F(m,h,p,a);f.type=D,f.needsUpdate=!0;const y=4*c;for(let x=0;x<a;x++){const T=u[x],_=l[x],v=d[x],N=h*p*4*x;for(let S=0;S<T.count;S++){const E=S*y;!0===r&&(fh.fromBufferAttribute(T,S),m[N+E+0]=fh.x,m[N+E+1]=fh.y,m[N+E+2]=fh.z,m[N+E+3]=0),!0===s&&(fh.fromBufferAttribute(_,S),m[N+E+4]=fh.x,m[N+E+5]=fh.y,m[N+E+6]=fh.z,m[N+E+7]=0),!0===i&&(fh.fromBufferAttribute(v,S),m[N+E+8]=fh.x,m[N+E+9]=fh.y,m[N+E+10]=fh.z,m[N+E+11]=4===v.itemSize?fh.w:1)}}function b(){f.dispose(),mh.delete(e),e.removeEventListener("dispose",b)}o={count:a,texture:f,stride:c,size:new t(h,p)},mh.set(e,o),e.addEventListener("dispose",b)}return o}(r);!0===s&&Ol.mulAssign(this.morphBaseInfluence),!0===i&&Yl.mulAssign(this.morphBaseInfluence);const d=Xi(l.width);ph(a,({i:e})=>{const t=qi(0).toVar();this.mesh.count>1&&null!==this.mesh.morphTexture&&void 0!==this.mesh.morphTexture?t.assign(tl(this.mesh.morphTexture,Zi(Xi(e).add(1),Xi(Xc))).r):t.assign(Nd("morphTargetInfluences","float").element(e).toVar()),$i(t.notEqual(0),()=>{!0===s&&Ol.addAssign(yh({bufferMap:o,influence:t,stride:u,width:d,depth:e,offset:Xi(0)})),!0===i&&Yl.addAssign(yh({bufferMap:o,influence:t,stride:u,width:d,depth:e,offset:Xi(1)}))})})}update(){const e=this.morphBaseInfluence;this.mesh.geometry.morphTargetsRelative?e.value=1:e.value=1-this.mesh.morphTargetInfluences.reduce((e,t)=>e+t,0)}}const xh=Ui(bh).setParameterLength(1);class Th extends qs{static get type(){return"LightingNode"}constructor(){super("vec3"),this.isLightingNode=!0}}class _h extends Th{static get type(){return"AONode"}constructor(e=null){super(),this.aoNode=e}setup(e){e.context.ambientOcclusion.mulAssign(this.aoNode)}}class vh extends Yo{static get type(){return"LightingContextNode"}constructor(e,t=null,r=null,s=null){super(e),this.lightingModel=t,this.backdropNode=r,this.backdropAlphaNode=s,this._value=null}getContext(){const{backdropNode:e,backdropAlphaNode:t}=this,r={directDiffuse:tn().toVar("directDiffuse"),directSpecular:tn().toVar("directSpecular"),indirectDiffuse:tn().toVar("indirectDiffuse"),indirectSpecular:tn().toVar("indirectSpecular")};return{radiance:tn().toVar("radiance"),irradiance:tn().toVar("irradiance"),iblIrradiance:tn().toVar("iblIrradiance"),ambientOcclusion:qi(1).toVar("ambientOcclusion"),reflectedLight:r,backdrop:e,backdropAlpha:t}}setup(e){return this.value=this._value||(this._value=this.getContext()),this.value.lightingModel=this.lightingModel||e.context.lightingModel,super.setup(e)}}const Nh=Ui(vh);class Sh extends Th{static get type(){return"IrradianceNode"}constructor(e){super(),this.node=e}setup(e){e.context.irradiance.addAssign(this.node)}}let Eh,wh;class Ah extends qs{static get type(){return"ScreenNode"}constructor(e){super(),this.scope=e,this.isViewportNode=!0}getNodeType(){return this.scope===Ah.VIEWPORT?"vec4":"vec2"}getUpdateType(){let e=Us.NONE;return this.scope!==Ah.SIZE&&this.scope!==Ah.VIEWPORT||(e=Us.RENDER),this.updateType=e,e}update({renderer:e}){const t=e.getRenderTarget();this.scope===Ah.VIEWPORT?null!==t?wh.copy(t.viewport):(e.getViewport(wh),wh.multiplyScalar(e.getPixelRatio())):null!==t?(Eh.width=t.width,Eh.height=t.height):e.getDrawingBufferSize(Eh)}setup(){const e=this.scope;let r=null;return r=e===Ah.SIZE?Jn(Eh||(Eh=new t)):e===Ah.VIEWPORT?Jn(wh||(wh=new s)):Qi(Mh.div(Ch)),r}generate(e){if(this.scope===Ah.COORDINATE){let t=e.getFragCoord();if(e.isFlipY()){const r=e.getNodeProperties(Ch).outputNode.build(e);t=`${e.getType("vec2")}( ${t}.x, ${r}.y - ${t}.y )`}return t}return super.generate(e)}}Ah.COORDINATE="coordinate",Ah.VIEWPORT="viewport",Ah.SIZE="size",Ah.UV="uv";const Rh=Oi(Ah,Ah.UV),Ch=Oi(Ah,Ah.SIZE),Mh=Oi(Ah,Ah.COORDINATE),Ph=Oi(Ah,Ah.VIEWPORT),Bh=Ph.zw,Lh=Mh.sub(Ph.xy),Fh=Lh.div(Bh),Dh=Gi(()=>(console.warn('THREE.TSL: "viewportResolution" is deprecated. Use "screenSize" instead.'),Ch),"vec2").once()(),Ih=new t;class Vh extends Zu{static get type(){return"ViewportTextureNode"}constructor(e=Rh,t=null,r=null){let s=null;null===r?(s=new I,s.minFilter=V,r=s):s=r,super(r,e,t),this.generateMipmaps=!1,this.defaultFramebuffer=s,this.isOutputTextureNode=!0,this.updateBeforeType=Us.RENDER,this._textures=new WeakMap}getFrameBufferTexture(e=null){const t=this.referenceNode?this.referenceNode.defaultFramebuffer:this.defaultFramebuffer;if(null===e)return t;if(!1===this._textures.has(e)){const r=t.clone();this._textures.set(e,r)}return this._textures.get(e)}updateBefore(e){const t=e.renderer,r=t.getRenderTarget();null===r?t.getDrawingBufferSize(Ih):Ih.set(r.width,r.height);const s=this.getFrameBufferTexture(r);s.image.width===Ih.width&&s.image.height===Ih.height||(s.image.width=Ih.width,s.image.height=Ih.height,s.needsUpdate=!0);const i=s.generateMipmaps;s.generateMipmaps=this.generateMipmaps,t.copyFramebufferToTexture(s),s.generateMipmaps=i,this.value=s}clone(){const e=new this.constructor(this.uvNode,this.levelNode,this.value);return e.generateMipmaps=this.generateMipmaps,e}}const Uh=Ui(Vh).setParameterLength(0,3),Oh=Ui(Vh,null,null,{generateMipmaps:!0}).setParameterLength(0,3);let kh=null;class Gh extends Vh{static get type(){return"ViewportDepthTextureNode"}constructor(e=Rh,t=null){null===kh&&(kh=new U),super(e,t,kh)}}const zh=Ui(Gh).setParameterLength(0,2);class Hh extends qs{static get type(){return"ViewportDepthNode"}constructor(e,t=null){super("float"),this.scope=e,this.valueNode=t,this.isViewportDepthNode=!0}generate(e){const{scope:t}=this;return t===Hh.DEPTH_BASE?e.getFragDepth():super.generate(e)}setup({camera:e}){const{scope:t}=this,r=this.valueNode;let s=null;if(t===Hh.DEPTH_BASE)null!==r&&(s=Xh().assign(r));else if(t===Hh.DEPTH)s=e.isPerspectiveCamera?Wh(Hl.z,ll,dl):$h(Hl.z,ll,dl);else if(t===Hh.LINEAR_DEPTH)if(null!==r)if(e.isPerspectiveCamera){const e=jh(r,ll,dl);s=$h(e,ll,dl)}else s=r;else s=$h(Hl.z,ll,dl);return s}}Hh.DEPTH_BASE="depthBase",Hh.DEPTH="depth",Hh.LINEAR_DEPTH="linearDepth";const $h=(e,t,r)=>e.add(t).div(t.sub(r)),Wh=(e,t,r)=>t.add(e).mul(r).div(r.sub(t).mul(e)),jh=(e,t,r)=>t.mul(r).div(r.sub(t).mul(e).sub(r)),qh=(e,t,r)=>{t=t.max(1e-6).toVar();const s=ja(e.negate().div(t)),i=ja(r.div(t));return s.div(i)},Xh=Ui(Hh,Hh.DEPTH_BASE),Kh=Oi(Hh,Hh.DEPTH),Yh=Ui(Hh,Hh.LINEAR_DEPTH).setParameterLength(0,1),Qh=Yh(zh());Kh.assign=e=>Xh(e);class Zh extends qs{static get type(){return"ClippingNode"}constructor(e=Zh.DEFAULT){super(),this.scope=e}setup(e){super.setup(e);const t=e.clippingContext,{intersectionPlanes:r,unionPlanes:s}=t;return this.hardwareClipping=e.material.hardwareClipping,this.scope===Zh.ALPHA_TO_COVERAGE?this.setupAlphaToCoverage(r,s):this.scope===Zh.HARDWARE?this.setupHardwareClipping(s,e):this.setupDefault(r,s)}setupAlphaToCoverage(e,t){return Gi(()=>{const r=qi().toVar("distanceToPlane"),s=qi().toVar("distanceToGradient"),i=qi(1).toVar("clipOpacity"),n=t.length;if(!1===this.hardwareClipping&&n>0){const e=al(t);ph(n,({i:t})=>{const n=e.element(t);r.assign(Hl.dot(n.xyz).negate().add(n.w)),s.assign(r.fwidth().div(2)),i.mulAssign(Oo(s.negate(),s,r))})}const a=e.length;if(a>0){const t=al(e),n=qi(1).toVar("intersectionClipOpacity");ph(a,({i:e})=>{const i=t.element(e);r.assign(Hl.dot(i.xyz).negate().add(i.w)),s.assign(r.fwidth().div(2)),n.mulAssign(Oo(s.negate(),s,r).oneMinus())}),i.mulAssign(n.oneMinus())}bn.a.mulAssign(i),bn.a.equal(0).discard()})()}setupDefault(e,t){return Gi(()=>{const r=t.length;if(!1===this.hardwareClipping&&r>0){const e=al(t);ph(r,({i:t})=>{const r=e.element(t);Hl.dot(r.xyz).greaterThan(r.w).discard()})}const s=e.length;if(s>0){const t=al(e),r=Yi(!0).toVar("clipped");ph(s,({i:e})=>{const s=t.element(e);r.assign(Hl.dot(s.xyz).greaterThan(s.w).and(r))}),r.discard()}})()}setupHardwareClipping(e,t){const r=e.length;return t.enableHardwareClipping(r),Gi(()=>{const s=al(e),i=ol(t.getClipDistance());ph(r,({i:e})=>{const t=s.element(e),r=Hl.dot(t.xyz).sub(t.w).negate();i.element(e).assign(r)})})()}}Zh.ALPHA_TO_COVERAGE="alphaToCoverage",Zh.DEFAULT="default",Zh.HARDWARE="hardware";const Jh=Gi(([e])=>Za(da(1e4,Ja(da(17,e.x).add(da(.1,e.y)))).mul(ua(.1,no(Ja(da(13,e.y).add(e.x))))))),ep=Gi(([e])=>Jh(Qi(Jh(e.xy),e.z))),tp=Gi(([e])=>{const t=_o(oo(co(e.xyz)),oo(ho(e.xyz))),r=qi(1).div(qi(.05).mul(t)).toVar("pixScale"),s=Qi($a(Ka(ja(r))),$a(Ya(ja(r)))),i=Qi(ep(Ka(s.x.mul(e.xyz))),ep(Ka(s.y.mul(e.xyz)))),n=Za(ja(r)),a=ua(da(n.oneMinus(),i.x),da(n,i.y)),o=To(n,n.oneMinus()),u=tn(a.mul(a).div(da(2,o).mul(la(1,o))),a.sub(da(.5,o)).div(la(1,o)),la(1,la(1,a).mul(la(1,a)).div(da(2,o).mul(la(1,o))))),l=a.lessThan(o.oneMinus()).select(a.lessThan(o).select(u.x,u.y),u.z);return Io(l,1e-6,1)}).setLayout({name:"getAlphaHashThreshold",type:"float",inputs:[{name:"position",type:"vec3"}]});class rp extends $u{static get type(){return"VertexColorNode"}constructor(e){super(null,"vec4"),this.isVertexColorNode=!0,this.index=e}getAttributeName(){const e=this.index;return"color"+(e>0?e:"")}generate(e){const t=this.getAttributeName(e);let r;return r=!0===e.hasGeometryAttribute(t)?super.generate(e):e.generateConst(this.nodeType,new s(1,1,1,1)),r}serialize(e){super.serialize(e),e.index=this.index}deserialize(e){super.deserialize(e),this.index=e.index}}const sp=(e=0)=>Di(new rp(e)),ip=Gi(([e,t])=>To(1,e.oneMinus().div(t)).oneMinus()).setLayout({name:"blendBurn",type:"vec3",inputs:[{name:"base",type:"vec3"},{name:"blend",type:"vec3"}]}),np=Gi(([e,t])=>To(e.div(t.oneMinus()),1)).setLayout({name:"blendDodge",type:"vec3",inputs:[{name:"base",type:"vec3"},{name:"blend",type:"vec3"}]}),ap=Gi(([e,t])=>e.oneMinus().mul(t.oneMinus()).oneMinus()).setLayout({name:"blendScreen",type:"vec3",inputs:[{name:"base",type:"vec3"},{name:"blend",type:"vec3"}]}),op=Gi(([e,t])=>Do(e.mul(2).mul(t),e.oneMinus().mul(2).mul(t.oneMinus()).oneMinus(),vo(.5,e))).setLayout({name:"blendOverlay",type:"vec3",inputs:[{name:"base",type:"vec3"},{name:"blend",type:"vec3"}]}),up=Gi(([e,t])=>{const r=t.a.add(e.a.mul(t.a.oneMinus()));return an(t.rgb.mul(t.a).add(e.rgb.mul(e.a).mul(t.a.oneMinus())).div(r),r)}).setLayout({name:"blendColor",type:"vec4",inputs:[{name:"base",type:"vec4"},{name:"blend",type:"vec4"}]}),lp=Gi(([e])=>an(e.rgb.mul(e.a),e.a),{color:"vec4",return:"vec4"}),dp=Gi(([e])=>($i(e.a.equal(0),()=>an(0)),an(e.rgb.div(e.a),e.a)),{color:"vec4",return:"vec4"});class cp extends O{static get type(){return"NodeMaterial"}get type(){return this.constructor.type}set type(e){}constructor(){super(),this.isNodeMaterial=!0,this.fog=!0,this.lights=!1,this.hardwareClipping=!1,this.lightsNode=null,this.envNode=null,this.aoNode=null,this.colorNode=null,this.normalNode=null,this.opacityNode=null,this.backdropNode=null,this.backdropAlphaNode=null,this.alphaTestNode=null,this.maskNode=null,this.positionNode=null,this.geometryNode=null,this.depthNode=null,this.receivedShadowPositionNode=null,this.castShadowPositionNode=null,this.receivedShadowNode=null,this.castShadowNode=null,this.outputNode=null,this.mrtNode=null,this.fragmentNode=null,this.vertexNode=null,Object.defineProperty(this,"shadowPositionNode",{get:()=>this.receivedShadowPositionNode,set:e=>{console.warn('THREE.NodeMaterial: ".shadowPositionNode" was renamed to ".receivedShadowPositionNode".'),this.receivedShadowPositionNode=e}})}customProgramCacheKey(){return this.type+vs(this)}build(e){this.setup(e)}setupObserver(e){return new ys(e)}setup(e){e.context.setupNormal=()=>nu(this.setupNormal(e),"NORMAL","vec3"),e.context.setupPositionView=()=>this.setupPositionView(e),e.context.setupModelViewProjection=()=>this.setupModelViewProjection(e);const t=e.renderer,r=t.getRenderTarget();e.addStack();const s=nu(this.setupVertex(e),"VERTEX"),i=this.vertexNode||s;let n;e.stack.outputNode=i,this.setupHardwareClipping(e),null!==this.geometryNode&&(e.stack.outputNode=e.stack.outputNode.bypass(this.geometryNode)),e.addFlow("vertex",e.removeStack()),e.addStack();const a=this.setupClipping(e);if(!0!==this.depthWrite&&!0!==this.depthTest||(null!==r?!0===r.depthBuffer&&this.setupDepth(e):!0===t.depth&&this.setupDepth(e)),null===this.fragmentNode){this.setupDiffuseColor(e),this.setupVariants(e);const s=this.setupLighting(e);null!==a&&e.stack.add(a);const i=an(s,bn.a).max(0);n=this.setupOutput(e,i),In.assign(n);const o=null!==this.outputNode;if(o&&(n=this.outputNode),null!==r){const e=t.getMRT(),r=this.mrtNode;null!==e?(o&&In.assign(n),n=e,null!==r&&(n=e.merge(r))):null!==r&&(n=r)}}else{let t=this.fragmentNode;!0!==t.isOutputStructNode&&(t=an(t)),n=this.setupOutput(e,t)}e.stack.outputNode=n,e.addFlow("fragment",e.removeStack()),e.observer=this.setupObserver(e)}setupClipping(e){if(null===e.clippingContext)return null;const{unionPlanes:t,intersectionPlanes:r}=e.clippingContext;let s=null;if(t.length>0||r.length>0){const t=e.renderer.samples;this.alphaToCoverage&&t>1?s=Di(new Zh(Zh.ALPHA_TO_COVERAGE)):e.stack.add(Di(new Zh))}return s}setupHardwareClipping(e){if(this.hardwareClipping=!1,null===e.clippingContext)return;const t=e.clippingContext.unionPlanes.length;t>0&&t<=8&&e.isAvailable("clipDistance")&&(e.stack.add(Di(new Zh(Zh.HARDWARE))),this.hardwareClipping=!0)}setupDepth(e){const{renderer:t,camera:r}=e;let s=this.depthNode;if(null===s){const e=t.getMRT();e&&e.has("depth")?s=e.get("depth"):!0===t.logarithmicDepthBuffer&&(s=r.isPerspectiveCamera?qh(Hl.z,ll,dl):$h(Hl.z,ll,dl))}null!==s&&Kh.assign(s).toStack()}setupPositionView(){return Fl.mul(Ol).xyz}setupModelViewProjection(){return cl.mul(Hl)}setupVertex(e){return e.addStack(),this.setupPosition(e),e.context.vertex=e.removeStack(),Wc}setupPosition(e){const{object:t,geometry:r}=e;if((r.morphAttributes.position||r.morphAttributes.normal||r.morphAttributes.color)&&xh(t).toStack(),!0===t.isSkinnedMesh&&ch(t).toStack(),this.displacementMap){const e=wd("displacementMap","texture"),t=wd("displacementScale","float"),r=wd("displacementBias","float");Ol.addAssign(Yl.normalize().mul(e.x.mul(t).add(r)))}return t.isBatchedMesh&&ih(t).toStack(),t.isInstancedMesh&&t.instanceMatrix&&!0===t.instanceMatrix.isInstancedBufferAttribute&&rh(t).toStack(),null!==this.positionNode&&Ol.assign(nu(this.positionNode,"POSITION","vec3")),Ol}setupDiffuseColor({object:e,geometry:t}){null!==this.maskNode&&Yi(this.maskNode).not().discard();let r=this.colorNode?an(this.colorNode):uc;if(!0===this.vertexColors&&t.hasAttribute("color")&&(r=r.mul(sp())),e.instanceColor){r=yn("vec3","vInstanceColor").mul(r)}if(e.isBatchedMesh&&e._colorsTexture){r=yn("vec3","vBatchColor").mul(r)}bn.assign(r);const s=this.opacityNode?qi(this.opacityNode):cc;bn.a.assign(bn.a.mul(s));let i=null;(null!==this.alphaTestNode||this.alphaTest>0)&&(i=null!==this.alphaTestNode?qi(this.alphaTestNode):oc,bn.a.lessThanEqual(i).discard()),!0===this.alphaHash&&bn.a.lessThan(tp(Ol)).discard();!1===this.transparent&&this.blending===k&&!1===this.alphaToCoverage?bn.a.assign(1):null===i&&bn.a.lessThanEqual(0).discard()}setupVariants(){}setupOutgoingLight(){return!0===this.lights?tn(0):bn.rgb}setupNormal(){return this.normalNode?tn(this.normalNode):xc}setupEnvironment(){let e=null;return this.envNode?e=this.envNode:this.envMap&&(e=this.envMap.isCubeTexture?wd("envMap","cubeTexture"):wd("envMap","texture")),e}setupLightMap(e){let t=null;return e.material.lightMap&&(t=new Sh(zc)),t}setupLights(e){const t=[],r=this.setupEnvironment(e);r&&r.isLightingNode&&t.push(r);const s=this.setupLightMap(e);if(s&&s.isLightingNode&&t.push(s),null!==this.aoNode||e.material.aoMap){const e=null!==this.aoNode?this.aoNode:Hc;t.push(new _h(e))}let i=this.lightsNode||e.lightsNode;return t.length>0&&(i=e.renderer.lighting.createNode([...i.getLights(),...t])),i}setupLightingModel(){}setupLighting(e){const{material:t}=e,{backdropNode:r,backdropAlphaNode:s,emissiveNode:i}=this,n=!0===this.lights||null!==this.lightsNode?this.setupLights(e):null;let a=this.setupOutgoingLight(e);if(n&&n.getScope().hasLights){const t=this.setupLightingModel(e)||null;a=Nh(n,t,r,s)}else null!==r&&(a=tn(null!==s?Do(a,r,s):r));return(i&&!0===i.isNode||t.emissive&&!0===t.emissive.isColor)&&(xn.assign(tn(i||dc)),a=a.add(xn)),a}setupFog(e,t){const r=e.fogNode;return r&&(In.assign(t),t=an(r.toStack())),t}setupPremultipliedAlpha(e,t){return lp(t)}setupOutput(e,t){return!0===this.fog&&(t=this.setupFog(e,t)),!0===this.premultipliedAlpha&&(t=this.setupPremultipliedAlpha(e,t)),t}setDefaultValues(e){for(const t in e){const r=e[t];void 0===this[t]&&(this[t]=r,r&&r.clone&&(this[t]=r.clone()))}const t=Object.getOwnPropertyDescriptors(e.constructor.prototype);for(const e in t)void 0===Object.getOwnPropertyDescriptor(this.constructor.prototype,e)&&void 0!==t[e].get&&Object.defineProperty(this.constructor.prototype,e,t[e])}toJSON(e){const t=void 0===e||"string"==typeof e;t&&(e={textures:{},images:{},nodes:{}});const r=O.prototype.toJSON.call(this,e),s=Ns(this);r.inputNodes={};for(const{property:t,childNode:i}of s)r.inputNodes[t]=i.toJSON(e).uuid;function i(e){const t=[];for(const r in e){const s=e[r];delete s.metadata,t.push(s)}return t}if(t){const t=i(e.textures),s=i(e.images),n=i(e.nodes);t.length>0&&(r.textures=t),s.length>0&&(r.images=s),n.length>0&&(r.nodes=n)}return r}copy(e){return this.lightsNode=e.lightsNode,this.envNode=e.envNode,this.colorNode=e.colorNode,this.normalNode=e.normalNode,this.opacityNode=e.opacityNode,this.backdropNode=e.backdropNode,this.backdropAlphaNode=e.backdropAlphaNode,this.alphaTestNode=e.alphaTestNode,this.maskNode=e.maskNode,this.positionNode=e.positionNode,this.geometryNode=e.geometryNode,this.depthNode=e.depthNode,this.receivedShadowPositionNode=e.receivedShadowPositionNode,this.castShadowPositionNode=e.castShadowPositionNode,this.receivedShadowNode=e.receivedShadowNode,this.castShadowNode=e.castShadowNode,this.outputNode=e.outputNode,this.mrtNode=e.mrtNode,this.fragmentNode=e.fragmentNode,this.vertexNode=e.vertexNode,super.copy(e)}}const hp=new G;class pp extends cp{static get type(){return"LineBasicNodeMaterial"}constructor(e){super(),this.isLineBasicNodeMaterial=!0,this.setDefaultValues(hp),this.setValues(e)}}const gp=new z;class mp extends cp{static get type(){return"LineDashedNodeMaterial"}constructor(e){super(),this.isLineDashedNodeMaterial=!0,this.setDefaultValues(gp),this.dashOffset=0,this.offsetNode=null,this.dashScaleNode=null,this.dashSizeNode=null,this.gapSizeNode=null,this.setValues(e)}setupVariants(){const e=this.offsetNode?qi(this.offsetNode):Oc,t=this.dashScaleNode?qi(this.dashScaleNode):Dc,r=this.dashSizeNode?qi(this.dashSizeNode):Ic,s=this.gapSizeNode?qi(this.gapSizeNode):Vc;Vn.assign(r),Un.assign(s);const i=ou(Wu("lineDistance").mul(t));(e?i.add(e):i).mod(Vn.add(Un)).greaterThan(Vn).discard()}}let fp=null;class yp extends Vh{static get type(){return"ViewportSharedTextureNode"}constructor(e=Rh,t=null){null===fp&&(fp=new I),super(e,t,fp)}updateReference(){return this}}const bp=Ui(yp).setParameterLength(0,2),xp=new z;class Tp extends cp{static get type(){return"Line2NodeMaterial"}constructor(e={}){super(),this.isLine2NodeMaterial=!0,this.setDefaultValues(xp),this.useColor=e.vertexColors,this.dashOffset=0,this.lineColorNode=null,this.offsetNode=null,this.dashScaleNode=null,this.dashSizeNode=null,this.gapSizeNode=null,this.blending=H,this._useDash=e.dashed,this._useAlphaToCoverage=!0,this._useWorldUnits=!1,this.setValues(e)}setup(e){const{renderer:t}=e,r=this._useAlphaToCoverage,s=this.useColor,i=this._useDash,n=this._useWorldUnits,a=Gi(({start:e,end:t})=>{const r=cl.element(2).element(2),s=cl.element(3).element(2).mul(-.5).div(r).sub(e.z).div(t.z.sub(e.z));return an(Do(e.xyz,t.xyz,s),t.w)}).setLayout({name:"trimSegment",type:"vec4",inputs:[{name:"start",type:"vec4"},{name:"end",type:"vec4"}]});this.vertexNode=Gi(()=>{const e=Wu("instanceStart"),t=Wu("instanceEnd"),r=an(Fl.mul(an(e,1))).toVar("start"),s=an(Fl.mul(an(t,1))).toVar("end");if(i){const e=this.dashScaleNode?qi(this.dashScaleNode):Dc,t=this.offsetNode?qi(this.offsetNode):Oc,r=Wu("instanceDistanceStart"),s=Wu("instanceDistanceEnd");let i=Ul.y.lessThan(.5).select(e.mul(r),e.mul(s));i=i.add(t),yn("float","lineDistance").assign(i)}n&&(yn("vec3","worldStart").assign(r.xyz),yn("vec3","worldEnd").assign(s.xyz));const o=Ph.z.div(Ph.w),u=cl.element(2).element(3).equal(-1);$i(u,()=>{$i(r.z.lessThan(0).and(s.z.greaterThan(0)),()=>{s.assign(a({start:r,end:s}))}).ElseIf(s.z.lessThan(0).and(r.z.greaterThanEqual(0)),()=>{r.assign(a({start:s,end:r}))})});const l=cl.mul(r),d=cl.mul(s),c=l.xyz.div(l.w),h=d.xyz.div(d.w),p=h.xy.sub(c.xy).toVar();p.x.assign(p.x.mul(o)),p.assign(p.normalize());const g=an().toVar();if(n){const e=s.xyz.sub(r.xyz).normalize(),t=Do(r.xyz,s.xyz,.5).normalize(),n=e.cross(t).normalize(),a=e.cross(n),o=yn("vec4","worldPos");o.assign(Ul.y.lessThan(.5).select(r,s));const u=Uc.mul(.5);o.addAssign(an(Ul.x.lessThan(0).select(n.mul(u),n.mul(u).negate()),0)),i||(o.addAssign(an(Ul.y.lessThan(.5).select(e.mul(u).negate(),e.mul(u)),0)),o.addAssign(an(a.mul(u),0)),$i(Ul.y.greaterThan(1).or(Ul.y.lessThan(0)),()=>{o.subAssign(an(a.mul(2).mul(u),0))})),g.assign(cl.mul(o));const l=tn().toVar();l.assign(Ul.y.lessThan(.5).select(c,h)),g.z.assign(l.z.mul(g.w))}else{const e=Qi(p.y,p.x.negate()).toVar("offset");p.x.assign(p.x.div(o)),e.x.assign(e.x.div(o)),e.assign(Ul.x.lessThan(0).select(e.negate(),e)),$i(Ul.y.lessThan(0),()=>{e.assign(e.sub(p))}).ElseIf(Ul.y.greaterThan(1),()=>{e.assign(e.add(p))}),e.assign(e.mul(Uc)),e.assign(e.div(Ph.w)),g.assign(Ul.y.lessThan(.5).select(l,d)),e.assign(e.mul(g.w)),g.assign(g.add(an(e,0,0)))}return g})();const o=Gi(({p1:e,p2:t,p3:r,p4:s})=>{const i=e.sub(r),n=s.sub(r),a=t.sub(e),o=i.dot(n),u=n.dot(a),l=i.dot(a),d=n.dot(n),c=a.dot(a).mul(d).sub(u.mul(u)),h=o.mul(u).sub(l.mul(d)).div(c).clamp(),p=o.add(u.mul(h)).div(d).clamp();return Qi(h,p)});if(this.colorNode=Gi(()=>{const e=ju();if(i){const t=this.dashSizeNode?qi(this.dashSizeNode):Ic,r=this.gapSizeNode?qi(this.gapSizeNode):Vc;Vn.assign(t),Un.assign(r);const s=yn("float","lineDistance");e.y.lessThan(-1).or(e.y.greaterThan(1)).discard(),s.mod(Vn.add(Un)).greaterThan(Vn).discard()}const a=qi(1).toVar("alpha");if(n){const e=yn("vec3","worldStart"),s=yn("vec3","worldEnd"),n=yn("vec4","worldPos").xyz.normalize().mul(1e5),u=s.sub(e),l=o({p1:e,p2:s,p3:tn(0,0,0),p4:n}),d=e.add(u.mul(l.x)),c=n.mul(l.y),h=d.sub(c).length().div(Uc);if(!i)if(r&&t.samples>1){const e=h.fwidth();a.assign(Oo(e.negate().add(.5),e.add(.5),h).oneMinus())}else h.greaterThan(.5).discard()}else if(r&&t.samples>1){const t=e.x,r=e.y.greaterThan(0).select(e.y.sub(1),e.y.add(1)),s=t.mul(t).add(r.mul(r)),i=qi(s.fwidth()).toVar("dlen");$i(e.y.abs().greaterThan(1),()=>{a.assign(Oo(i.oneMinus(),i.add(1),s).oneMinus())})}else $i(e.y.abs().greaterThan(1),()=>{const t=e.x,r=e.y.greaterThan(0).select(e.y.sub(1),e.y.add(1));t.mul(t).add(r.mul(r)).greaterThan(1).discard()});let u;if(this.lineColorNode)u=this.lineColorNode;else if(s){const e=Wu("instanceColorStart"),t=Wu("instanceColorEnd");u=Ul.y.lessThan(.5).select(e,t).mul(uc)}else u=uc;return an(u,a)})(),this.transparent){const e=this.opacityNode?qi(this.opacityNode):cc;this.outputNode=an(this.colorNode.rgb.mul(e).add(bp().rgb.mul(e.oneMinus())),this.colorNode.a)}super.setup(e)}get worldUnits(){return this._useWorldUnits}set worldUnits(e){this._useWorldUnits!==e&&(this._useWorldUnits=e,this.needsUpdate=!0)}get dashed(){return this._useDash}set dashed(e){this._useDash!==e&&(this._useDash=e,this.needsUpdate=!0)}get alphaToCoverage(){return this._useAlphaToCoverage}set alphaToCoverage(e){this._useAlphaToCoverage!==e&&(this._useAlphaToCoverage=e,this.needsUpdate=!0)}}const _p=e=>Di(e).mul(.5).add(.5),vp=new $;class Np extends cp{static get type(){return"MeshNormalNodeMaterial"}constructor(e){super(),this.isMeshNormalNodeMaterial=!0,this.setDefaultValues(vp),this.setValues(e)}setupDiffuseColor(){const e=this.opacityNode?qi(this.opacityNode):cc;bn.assign(gu(an(_p(ed),e),W))}}const Sp=Gi(([e=zl])=>{const t=e.z.atan(e.x).mul(1/(2*Math.PI)).add(.5),r=e.y.clamp(-1,1).asin().mul(1/Math.PI).add(.5);return Qi(t,r)});class Ep extends j{constructor(e=1,t={}){super(e,t),this.isCubeRenderTarget=!0}fromEquirectangularTexture(e,t){const r=t.minFilter,s=t.generateMipmaps;t.generateMipmaps=!0,this.texture.type=t.type,this.texture.colorSpace=t.colorSpace,this.texture.generateMipmaps=t.generateMipmaps,this.texture.minFilter=t.minFilter,this.texture.magFilter=t.magFilter;const i=new q(5,5,5),n=Sp(zl),a=new cp;a.colorNode=el(t,n,0),a.side=S,a.blending=H;const o=new X(i,a),u=new K;u.add(o),t.minFilter===V&&(t.minFilter=Y);const l=new Q(1,10,this),d=e.getMRT();return e.setMRT(null),l.update(e,u),e.setMRT(d),t.minFilter=r,t.currentGenerateMipmaps=s,o.geometry.dispose(),o.material.dispose(),this}}const wp=new WeakMap;class Ap extends Ys{static get type(){return"CubeMapNode"}constructor(e){super("vec3"),this.envNode=e,this._cubeTexture=null,this._cubeTextureNode=Td(null);const t=new A;t.isRenderTargetTexture=!0,this._defaultTexture=t,this.updateBeforeType=Us.RENDER}updateBefore(e){const{renderer:t,material:r}=e,s=this.envNode;if(s.isTextureNode||s.isMaterialReferenceNode){const e=s.isTextureNode?s.value:r[s.property];if(e&&e.isTexture){const r=e.mapping;if(r===Z||r===J){if(wp.has(e)){const t=wp.get(e);Cp(t,e.mapping),this._cubeTexture=t}else{const r=e.image;if(function(e){return null!=e&&e.height>0}(r)){const s=new Ep(r.height);s.fromEquirectangularTexture(t,e),Cp(s.texture,e.mapping),this._cubeTexture=s.texture,wp.set(e,s.texture),e.addEventListener("dispose",Rp)}else this._cubeTexture=this._defaultTexture}this._cubeTextureNode.value=this._cubeTexture}else this._cubeTextureNode=this.envNode}}}setup(e){return this.updateBefore(e),this._cubeTextureNode}}function Rp(e){const t=e.target;t.removeEventListener("dispose",Rp);const r=wp.get(t);void 0!==r&&(wp.delete(t),r.dispose())}function Cp(e,t){t===Z?e.mapping=R:t===J&&(e.mapping=C)}const Mp=Ui(Ap).setParameterLength(1);class Pp extends Th{static get type(){return"BasicEnvironmentNode"}constructor(e=null){super(),this.envNode=e}setup(e){e.context.environment=Mp(this.envNode)}}class Bp extends Th{static get type(){return"BasicLightMapNode"}constructor(e=null){super(),this.lightMapNode=e}setup(e){const t=qi(1/Math.PI);e.context.irradianceLightMap=this.lightMapNode.mul(t)}}class Lp{start(e){e.lightsNode.setupLights(e,e.lightsNode.getLightNodes(e)),this.indirect(e)}finish(){}direct(){}directRectArea(){}indirect(){}ambientOcclusion(){}}class Fp extends Lp{constructor(){super()}indirect({context:e}){const t=e.ambientOcclusion,r=e.reflectedLight,s=e.irradianceLightMap;r.indirectDiffuse.assign(an(0)),s?r.indirectDiffuse.addAssign(s):r.indirectDiffuse.addAssign(an(1,1,1,0)),r.indirectDiffuse.mulAssign(t),r.indirectDiffuse.mulAssign(bn.rgb)}finish(e){const{material:t,context:r}=e,s=r.outgoingLight,i=e.context.environment;if(i)switch(t.combine){case re:s.rgb.assign(Do(s.rgb,s.rgb.mul(i.rgb),mc.mul(fc)));break;case te:s.rgb.assign(Do(s.rgb,i.rgb,mc.mul(fc)));break;case ee:s.rgb.addAssign(i.rgb.mul(mc.mul(fc)));break;default:console.warn("THREE.BasicLightingModel: Unsupported .combine value:",t.combine)}}}const Dp=new se;class Ip extends cp{static get type(){return"MeshBasicNodeMaterial"}constructor(e){super(),this.isMeshBasicNodeMaterial=!0,this.lights=!0,this.setDefaultValues(Dp),this.setValues(e)}setupNormal(){return Xl(Zl)}setupEnvironment(e){const t=super.setupEnvironment(e);return t?new Pp(t):null}setupLightMap(e){let t=null;return e.material.lightMap&&(t=new Bp(zc)),t}setupOutgoingLight(){return bn.rgb}setupLightingModel(){return new Fp}}const Vp=Gi(({f0:e,f90:t,dotVH:r})=>{const s=r.mul(-5.55473).sub(6.98316).mul(r).exp2();return e.mul(s.oneMinus()).add(t.mul(s))}),Up=Gi(e=>e.diffuseColor.mul(1/Math.PI)),Op=Gi(({dotNH:e})=>Dn.mul(qi(.5)).add(1).mul(qi(1/Math.PI)).mul(e.pow(Dn))),kp=Gi(({lightDirection:e})=>{const t=e.add($l).normalize(),r=ed.dot(t).clamp(),s=$l.dot(t).clamp(),i=Vp({f0:Ln,f90:1,dotVH:s}),n=qi(.25),a=Op({dotNH:r});return i.mul(n).mul(a)});class Gp extends Fp{constructor(e=!0){super(),this.specular=e}direct({lightDirection:e,lightColor:t,reflectedLight:r}){const s=ed.dot(e).clamp().mul(t);r.directDiffuse.addAssign(s.mul(Up({diffuseColor:bn.rgb}))),!0===this.specular&&r.directSpecular.addAssign(s.mul(kp({lightDirection:e})).mul(mc))}indirect(e){const{ambientOcclusion:t,irradiance:r,reflectedLight:s}=e.context;s.indirectDiffuse.addAssign(r.mul(Up({diffuseColor:bn}))),s.indirectDiffuse.mulAssign(t)}}const zp=new ie;class Hp extends cp{static get type(){return"MeshLambertNodeMaterial"}constructor(e){super(),this.isMeshLambertNodeMaterial=!0,this.lights=!0,this.setDefaultValues(zp),this.setValues(e)}setupEnvironment(e){const t=super.setupEnvironment(e);return t?new Pp(t):null}setupLightingModel(){return new Gp(!1)}}const $p=new ne;class Wp extends cp{static get type(){return"MeshPhongNodeMaterial"}constructor(e){super(),this.isMeshPhongNodeMaterial=!0,this.lights=!0,this.shininessNode=null,this.specularNode=null,this.setDefaultValues($p),this.setValues(e)}setupEnvironment(e){const t=super.setupEnvironment(e);return t?new Pp(t):null}setupLightingModel(){return new Gp}setupVariants(){const e=(this.shininessNode?qi(this.shininessNode):lc).max(1e-4);Dn.assign(e);const t=this.specularNode||hc;Ln.assign(t)}copy(e){return this.shininessNode=e.shininessNode,this.specularNode=e.specularNode,super.copy(e)}}const jp=Gi(e=>{if(!1===e.geometry.hasAttribute("normal"))return qi(0);const t=Zl.dFdx().abs().max(Zl.dFdy().abs());return t.x.max(t.y).max(t.z)}),qp=Gi(e=>{const{roughness:t}=e,r=jp();let s=t.max(.0525);return s=s.add(r),s=s.min(1),s}),Xp=Gi(({alpha:e,dotNL:t,dotNV:r})=>{const s=e.pow2(),i=t.mul(s.add(s.oneMinus().mul(r.pow2())).sqrt()),n=r.mul(s.add(s.oneMinus().mul(t.pow2())).sqrt());return ca(.5,i.add(n).max(Da))}).setLayout({name:"V_GGX_SmithCorrelated",type:"float",inputs:[{name:"alpha",type:"float"},{name:"dotNL",type:"float"},{name:"dotNV",type:"float"}]}),Kp=Gi(({alphaT:e,alphaB:t,dotTV:r,dotBV:s,dotTL:i,dotBL:n,dotNV:a,dotNL:o})=>{const u=o.mul(tn(e.mul(r),t.mul(s),a).length()),l=a.mul(tn(e.mul(i),t.mul(n),o).length());return ca(.5,u.add(l)).saturate()}).setLayout({name:"V_GGX_SmithCorrelated_Anisotropic",type:"float",inputs:[{name:"alphaT",type:"float",qualifier:"in"},{name:"alphaB",type:"float",qualifier:"in"},{name:"dotTV",type:"float",qualifier:"in"},{name:"dotBV",type:"float",qualifier:"in"},{name:"dotTL",type:"float",qualifier:"in"},{name:"dotBL",type:"float",qualifier:"in"},{name:"dotNV",type:"float",qualifier:"in"},{name:"dotNL",type:"float",qualifier:"in"}]}),Yp=Gi(({alpha:e,dotNH:t})=>{const r=e.pow2(),s=t.pow2().mul(r.oneMinus()).oneMinus();return r.div(s.pow2()).mul(1/Math.PI)}).setLayout({name:"D_GGX",type:"float",inputs:[{name:"alpha",type:"float"},{name:"dotNH",type:"float"}]}),Qp=qi(1/Math.PI),Zp=Gi(({alphaT:e,alphaB:t,dotNH:r,dotTH:s,dotBH:i})=>{const n=e.mul(t),a=tn(t.mul(s),e.mul(i),n.mul(r)),o=a.dot(a),u=n.div(o);return Qp.mul(n.mul(u.pow2()))}).setLayout({name:"D_GGX_Anisotropic",type:"float",inputs:[{name:"alphaT",type:"float",qualifier:"in"},{name:"alphaB",type:"float",qualifier:"in"},{name:"dotNH",type:"float",qualifier:"in"},{name:"dotTH",type:"float",qualifier:"in"},{name:"dotBH",type:"float",qualifier:"in"}]}),Jp=Gi(({lightDirection:e,f0:t,f90:r,roughness:s,f:i,normalView:n=ed,USE_IRIDESCENCE:a,USE_ANISOTROPY:o})=>{const u=s.pow2(),l=e.add($l).normalize(),d=n.dot(e).clamp(),c=n.dot($l).clamp(),h=n.dot(l).clamp(),p=$l.dot(l).clamp();let g,m,f=Vp({f0:t,f90:r,dotVH:p});if(Bi(a)&&(f=wn.mix(f,i)),Bi(o)){const t=Pn.dot(e),r=Pn.dot($l),s=Pn.dot(l),i=Bn.dot(e),n=Bn.dot($l),a=Bn.dot(l);g=Kp({alphaT:Cn,alphaB:u,dotTV:r,dotBV:n,dotTL:t,dotBL:i,dotNV:c,dotNL:d}),m=Zp({alphaT:Cn,alphaB:u,dotNH:h,dotTH:s,dotBH:a})}else g=Xp({alpha:u,dotNL:d,dotNV:c}),m=Yp({alpha:u,dotNH:h});return f.mul(g).mul(m)}),eg=Gi(({roughness:e,dotNV:t})=>{const r=an(-1,-.0275,-.572,.022),s=an(1,.0425,1.04,-.04),i=e.mul(r).add(s),n=i.x.mul(i.x).min(t.mul(-9.28).exp2()).mul(i.x).add(i.y);return Qi(-1.04,1.04).mul(n).add(i.zw)}).setLayout({name:"DFGApprox",type:"vec2",inputs:[{name:"roughness",type:"float"},{name:"dotNV",type:"vec3"}]}),tg=Gi(e=>{const{dotNV:t,specularColor:r,specularF90:s,roughness:i}=e,n=eg({dotNV:t,roughness:i});return r.mul(n.x).add(s.mul(n.y))}),rg=Gi(({f:e,f90:t,dotVH:r})=>{const s=r.oneMinus().saturate(),i=s.mul(s),n=s.mul(i,i).clamp(0,.9999);return e.sub(tn(t).mul(n)).div(n.oneMinus())}).setLayout({name:"Schlick_to_F0",type:"vec3",inputs:[{name:"f",type:"vec3"},{name:"f90",type:"float"},{name:"dotVH",type:"float"}]}),sg=Gi(({roughness:e,dotNH:t})=>{const r=e.pow2(),s=qi(1).div(r),i=t.pow2().oneMinus().max(.0078125);return qi(2).add(s).mul(i.pow(s.mul(.5))).div(2*Math.PI)}).setLayout({name:"D_Charlie",type:"float",inputs:[{name:"roughness",type:"float"},{name:"dotNH",type:"float"}]}),ig=Gi(({dotNV:e,dotNL:t})=>qi(1).div(qi(4).mul(t.add(e).sub(t.mul(e))))).setLayout({name:"V_Neubelt",type:"float",inputs:[{name:"dotNV",type:"float"},{name:"dotNL",type:"float"}]}),ng=Gi(({lightDirection:e})=>{const t=e.add($l).normalize(),r=ed.dot(e).clamp(),s=ed.dot($l).clamp(),i=ed.dot(t).clamp(),n=sg({roughness:En,dotNH:i}),a=ig({dotNV:s,dotNL:r});return Sn.mul(n).mul(a)}),ag=Gi(({N:e,V:t,roughness:r})=>{const s=e.dot(t).saturate(),i=Qi(r,s.oneMinus().sqrt());return i.assign(i.mul(.984375).add(.0078125)),i}).setLayout({name:"LTC_Uv",type:"vec2",inputs:[{name:"N",type:"vec3"},{name:"V",type:"vec3"},{name:"roughness",type:"float"}]}),og=Gi(({f:e})=>{const t=e.length();return _o(t.mul(t).add(e.z).div(t.add(1)),0)}).setLayout({name:"LTC_ClippedSphereFormFactor",type:"float",inputs:[{name:"f",type:"vec3"}]}),ug=Gi(({v1:e,v2:t})=>{const r=e.dot(t),s=r.abs().toVar(),i=s.mul(.0145206).add(.4965155).mul(s).add(.8543985).toVar(),n=s.add(4.1616724).mul(s).add(3.417594).toVar(),a=i.div(n),o=r.greaterThan(0).select(a,_o(r.mul(r).oneMinus(),1e-7).inverseSqrt().mul(.5).sub(a));return e.cross(t).mul(o)}).setLayout({name:"LTC_EdgeVectorFormFactor",type:"vec3",inputs:[{name:"v1",type:"vec3"},{name:"v2",type:"vec3"}]}),lg=Gi(({N:e,V:t,P:r,mInv:s,p0:i,p1:n,p2:a,p3:o})=>{const u=n.sub(i).toVar(),l=o.sub(i).toVar(),d=u.cross(l),c=tn().toVar();return $i(d.dot(r.sub(i)).greaterThanEqual(0),()=>{const u=t.sub(e.mul(t.dot(e))).normalize(),l=e.cross(u).negate(),d=s.mul(cn(u,l,e).transpose()).toVar(),h=d.mul(i.sub(r)).normalize().toVar(),p=d.mul(n.sub(r)).normalize().toVar(),g=d.mul(a.sub(r)).normalize().toVar(),m=d.mul(o.sub(r)).normalize().toVar(),f=tn(0).toVar();f.addAssign(ug({v1:h,v2:p})),f.addAssign(ug({v1:p,v2:g})),f.addAssign(ug({v1:g,v2:m})),f.addAssign(ug({v1:m,v2:h})),c.assign(tn(og({f:f})))}),c}).setLayout({name:"LTC_Evaluate",type:"vec3",inputs:[{name:"N",type:"vec3"},{name:"V",type:"vec3"},{name:"P",type:"vec3"},{name:"mInv",type:"mat3"},{name:"p0",type:"vec3"},{name:"p1",type:"vec3"},{name:"p2",type:"vec3"},{name:"p3",type:"vec3"}]}),dg=Gi(({P:e,p0:t,p1:r,p2:s,p3:i})=>{const n=r.sub(t).toVar(),a=i.sub(t).toVar(),o=n.cross(a),u=tn().toVar();return $i(o.dot(e.sub(t)).greaterThanEqual(0),()=>{const n=t.sub(e).normalize().toVar(),a=r.sub(e).normalize().toVar(),o=s.sub(e).normalize().toVar(),l=i.sub(e).normalize().toVar(),d=tn(0).toVar();d.addAssign(ug({v1:n,v2:a})),d.addAssign(ug({v1:a,v2:o})),d.addAssign(ug({v1:o,v2:l})),d.addAssign(ug({v1:l,v2:n})),u.assign(tn(og({f:d.abs()})))}),u}).setLayout({name:"LTC_Evaluate",type:"vec3",inputs:[{name:"P",type:"vec3"},{name:"p0",type:"vec3"},{name:"p1",type:"vec3"},{name:"p2",type:"vec3"},{name:"p3",type:"vec3"}]}),cg=1/6,hg=e=>da(cg,da(e,da(e,e.negate().add(3)).sub(3)).add(1)),pg=e=>da(cg,da(e,da(e,da(3,e).sub(6))).add(4)),gg=e=>da(cg,da(e,da(e,da(-3,e).add(3)).add(3)).add(1)),mg=e=>da(cg,Ro(e,3)),fg=e=>hg(e).add(pg(e)),yg=e=>gg(e).add(mg(e)),bg=e=>ua(-1,pg(e).div(hg(e).add(pg(e)))),xg=e=>ua(1,mg(e).div(gg(e).add(mg(e)))),Tg=(e,t,r)=>{const s=e.uvNode,i=da(s,t.zw).add(.5),n=Ka(i),a=Za(i),o=fg(a.x),u=yg(a.x),l=bg(a.x),d=xg(a.x),c=bg(a.y),h=xg(a.y),p=Qi(n.x.add(l),n.y.add(c)).sub(.5).mul(t.xy),g=Qi(n.x.add(d),n.y.add(c)).sub(.5).mul(t.xy),m=Qi(n.x.add(l),n.y.add(h)).sub(.5).mul(t.xy),f=Qi(n.x.add(d),n.y.add(h)).sub(.5).mul(t.xy),y=fg(a.y).mul(ua(o.mul(e.sample(p).level(r)),u.mul(e.sample(g).level(r)))),b=yg(a.y).mul(ua(o.mul(e.sample(m).level(r)),u.mul(e.sample(f).level(r))));return y.add(b)},_g=Gi(([e,t])=>{const r=Qi(e.size(Xi(t))),s=Qi(e.size(Xi(t.add(1)))),i=ca(1,r),n=ca(1,s),a=Tg(e,an(i,r),Ka(t)),o=Tg(e,an(n,s),Ya(t));return Za(t).mix(a,o)}),vg=Gi(([e,t])=>{const r=t.mul(Yu(e));return _g(e,r)}),Ng=Gi(([e,t,r,s,i])=>{const n=tn(Uo(t.negate(),Qa(e),ca(1,s))),a=tn(oo(i[0].xyz),oo(i[1].xyz),oo(i[2].xyz));return Qa(n).mul(r.mul(a))}).setLayout({name:"getVolumeTransmissionRay",type:"vec3",inputs:[{name:"n",type:"vec3"},{name:"v",type:"vec3"},{name:"thickness",type:"float"},{name:"ior",type:"float"},{name:"modelMatrix",type:"mat4"}]}),Sg=Gi(([e,t])=>e.mul(Io(t.mul(2).sub(2),0,1))).setLayout({name:"applyIorToRoughness",type:"float",inputs:[{name:"roughness",type:"float"},{name:"ior",type:"float"}]}),Eg=Oh(),wg=Oh(),Ag=Gi(([e,t,r],{material:s})=>{const i=(s.side===S?Eg:wg).sample(e),n=ja(Ch.x).mul(Sg(t,r));return _g(i,n)}),Rg=Gi(([e,t,r])=>($i(r.notEqual(0),()=>{const s=Wa(t).negate().div(r);return Ha(s.negate().mul(e))}),tn(1))).setLayout({name:"volumeAttenuation",type:"vec3",inputs:[{name:"transmissionDistance",type:"float"},{name:"attenuationColor",type:"vec3"},{name:"attenuationDistance",type:"float"}]}),Cg=Gi(([e,t,r,s,i,n,a,o,u,l,d,c,h,p,g])=>{let m,f;if(g){m=an().toVar(),f=tn().toVar();const i=d.sub(1).mul(g.mul(.025)),n=tn(d.sub(i),d,d.add(i));ph({start:0,end:3},({i:i})=>{const d=n.element(i),g=Ng(e,t,c,d,o),y=a.add(g),b=l.mul(u.mul(an(y,1))),x=Qi(b.xy.div(b.w)).toVar();x.addAssign(1),x.divAssign(2),x.assign(Qi(x.x,x.y.oneMinus()));const T=Ag(x,r,d);m.element(i).assign(T.element(i)),m.a.addAssign(T.a),f.element(i).assign(s.element(i).mul(Rg(oo(g),h,p).element(i)))}),m.a.divAssign(3)}else{const i=Ng(e,t,c,d,o),n=a.add(i),g=l.mul(u.mul(an(n,1))),y=Qi(g.xy.div(g.w)).toVar();y.addAssign(1),y.divAssign(2),y.assign(Qi(y.x,y.y.oneMinus())),m=Ag(y,r,d),f=s.mul(Rg(oo(i),h,p))}const y=f.rgb.mul(m.rgb),b=e.dot(t).clamp(),x=tn(tg({dotNV:b,specularColor:i,specularF90:n,roughness:r})),T=f.r.add(f.g,f.b).div(3);return an(x.oneMinus().mul(y),m.a.oneMinus().mul(T).oneMinus())}),Mg=cn(3.2404542,-.969266,.0556434,-1.5371385,1.8760108,-.2040259,-.4985314,.041556,1.0572252),Pg=(e,t)=>e.sub(t).div(e.add(t)).pow2(),Bg=Gi(({outsideIOR:e,eta2:t,cosTheta1:r,thinFilmThickness:s,baseF0:i})=>{const n=Do(e,t,Oo(0,.03,s)),a=e.div(n).pow2().mul(r.pow2().oneMinus()).oneMinus();$i(a.lessThan(0),()=>tn(1));const o=a.sqrt(),u=Pg(n,e),l=Vp({f0:u,f90:1,dotVH:r}),d=l.oneMinus(),c=n.lessThan(e).select(Math.PI,0),h=qi(Math.PI).sub(c),p=(e=>{const t=e.sqrt();return tn(1).add(t).div(tn(1).sub(t))})(i.clamp(0,.9999)),g=Pg(p,n.toVec3()),m=Vp({f0:g,f90:1,dotVH:o}),f=tn(p.x.lessThan(n).select(Math.PI,0),p.y.lessThan(n).select(Math.PI,0),p.z.lessThan(n).select(Math.PI,0)),y=n.mul(s,o,2),b=tn(h).add(f),x=l.mul(m).clamp(1e-5,.9999),T=x.sqrt(),_=d.pow2().mul(m).div(tn(1).sub(x)),v=l.add(_).toVar(),N=_.sub(d).toVar();return ph({start:1,end:2,condition:"<=",name:"m"},({m:e})=>{N.mulAssign(T);const t=((e,t)=>{const r=e.mul(2*Math.PI*1e-9),s=tn(54856e-17,44201e-17,52481e-17),i=tn(1681e3,1795300,2208400),n=tn(43278e5,93046e5,66121e5),a=qi(9747e-17*Math.sqrt(2*Math.PI*45282e5)).mul(r.mul(2239900).add(t.x).cos()).mul(r.pow2().mul(-45282e5).exp());let o=s.mul(n.mul(2*Math.PI).sqrt()).mul(i.mul(r).add(t).cos()).mul(r.pow2().negate().mul(n).exp());return o=tn(o.x.add(a),o.y,o.z).div(1.0685e-7),Mg.mul(o)})(qi(e).mul(y),qi(e).mul(b)).mul(2);v.addAssign(N.mul(t))}),v.max(tn(0))}).setLayout({name:"evalIridescence",type:"vec3",inputs:[{name:"outsideIOR",type:"float"},{name:"eta2",type:"float"},{name:"cosTheta1",type:"float"},{name:"thinFilmThickness",type:"float"},{name:"baseF0",type:"vec3"}]}),Lg=Gi(({normal:e,viewDir:t,roughness:r})=>{const s=e.dot(t).saturate(),i=r.pow2(),n=Ko(r.lessThan(.25),qi(-339.2).mul(i).add(qi(161.4).mul(r)).sub(25.9),qi(-8.48).mul(i).add(qi(14.3).mul(r)).sub(9.95)),a=Ko(r.lessThan(.25),qi(44).mul(i).sub(qi(23.7).mul(r)).add(3.26),qi(1.97).mul(i).sub(qi(3.27).mul(r)).add(.72));return Ko(r.lessThan(.25),0,qi(.1).mul(r).sub(.025)).add(n.mul(s).add(a).exp()).mul(1/Math.PI).saturate()}),Fg=tn(.04),Dg=qi(1);class Ig extends Lp{constructor(e=!1,t=!1,r=!1,s=!1,i=!1,n=!1){super(),this.clearcoat=e,this.sheen=t,this.iridescence=r,this.anisotropy=s,this.transmission=i,this.dispersion=n,this.clearcoatRadiance=null,this.clearcoatSpecularDirect=null,this.clearcoatSpecularIndirect=null,this.sheenSpecularDirect=null,this.sheenSpecularIndirect=null,this.iridescenceFresnel=null,this.iridescenceF0=null}start(e){if(!0===this.clearcoat&&(this.clearcoatRadiance=tn().toVar("clearcoatRadiance"),this.clearcoatSpecularDirect=tn().toVar("clearcoatSpecularDirect"),this.clearcoatSpecularIndirect=tn().toVar("clearcoatSpecularIndirect")),!0===this.sheen&&(this.sheenSpecularDirect=tn().toVar("sheenSpecularDirect"),this.sheenSpecularIndirect=tn().toVar("sheenSpecularIndirect")),!0===this.iridescence){const e=ed.dot($l).clamp();this.iridescenceFresnel=Bg({outsideIOR:qi(1),eta2:An,cosTheta1:e,thinFilmThickness:Rn,baseF0:Ln}),this.iridescenceF0=rg({f:this.iridescenceFresnel,f90:1,dotVH:e})}if(!0===this.transmission){const t=Gl,r=fl.sub(Gl).normalize(),s=td,i=e.context;i.backdrop=Cg(s,r,Tn,bn,Ln,Fn,t,Al,pl,cl,kn,zn,$n,Hn,this.dispersion?Wn:null),i.backdropAlpha=Gn,bn.a.mulAssign(Do(1,i.backdrop.a,Gn))}super.start(e)}computeMultiscattering(e,t,r){const s=ed.dot($l).clamp(),i=eg({roughness:Tn,dotNV:s}),n=(this.iridescenceF0?wn.mix(Ln,this.iridescenceF0):Ln).mul(i.x).add(r.mul(i.y)),a=i.x.add(i.y).oneMinus(),o=Ln.add(Ln.oneMinus().mul(.047619)),u=n.mul(o).div(a.mul(o).oneMinus());e.addAssign(n),t.addAssign(u.mul(a))}direct({lightDirection:e,lightColor:t,reflectedLight:r}){const s=ed.dot(e).clamp().mul(t);if(!0===this.sheen&&this.sheenSpecularDirect.addAssign(s.mul(ng({lightDirection:e}))),!0===this.clearcoat){const r=rd.dot(e).clamp().mul(t);this.clearcoatSpecularDirect.addAssign(r.mul(Jp({lightDirection:e,f0:Fg,f90:Dg,roughness:Nn,normalView:rd})))}r.directDiffuse.addAssign(s.mul(Up({diffuseColor:bn.rgb}))),r.directSpecular.addAssign(s.mul(Jp({lightDirection:e,f0:Ln,f90:1,roughness:Tn,iridescence:this.iridescence,f:this.iridescenceFresnel,USE_IRIDESCENCE:this.iridescence,USE_ANISOTROPY:this.anisotropy})))}directRectArea({lightColor:e,lightPosition:t,halfWidth:r,halfHeight:s,reflectedLight:i,ltc_1:n,ltc_2:a}){const o=t.add(r).sub(s),u=t.sub(r).sub(s),l=t.sub(r).add(s),d=t.add(r).add(s),c=ed,h=$l,p=Hl.toVar(),g=ag({N:c,V:h,roughness:Tn}),m=n.sample(g).toVar(),f=a.sample(g).toVar(),y=cn(tn(m.x,0,m.y),tn(0,1,0),tn(m.z,0,m.w)).toVar(),b=Ln.mul(f.x).add(Ln.oneMinus().mul(f.y)).toVar();i.directSpecular.addAssign(e.mul(b).mul(lg({N:c,V:h,P:p,mInv:y,p0:o,p1:u,p2:l,p3:d}))),i.directDiffuse.addAssign(e.mul(bn).mul(lg({N:c,V:h,P:p,mInv:cn(1,0,0,0,1,0,0,0,1),p0:o,p1:u,p2:l,p3:d})))}indirect(e){this.indirectDiffuse(e),this.indirectSpecular(e),this.ambientOcclusion(e)}indirectDiffuse(e){const{irradiance:t,reflectedLight:r}=e.context;r.indirectDiffuse.addAssign(t.mul(Up({diffuseColor:bn})))}indirectSpecular(e){const{radiance:t,iblIrradiance:r,reflectedLight:s}=e.context;if(!0===this.sheen&&this.sheenSpecularIndirect.addAssign(r.mul(Sn,Lg({normal:ed,viewDir:$l,roughness:En}))),!0===this.clearcoat){const e=rd.dot($l).clamp(),t=tg({dotNV:e,specularColor:Fg,specularF90:Dg,roughness:Nn});this.clearcoatSpecularIndirect.addAssign(this.clearcoatRadiance.mul(t))}const i=tn().toVar("singleScattering"),n=tn().toVar("multiScattering"),a=r.mul(1/Math.PI);this.computeMultiscattering(i,n,Fn);const o=i.add(n),u=bn.mul(o.r.max(o.g).max(o.b).oneMinus());s.indirectSpecular.addAssign(t.mul(i)),s.indirectSpecular.addAssign(n.mul(a)),s.indirectDiffuse.addAssign(u.mul(a))}ambientOcclusion(e){const{ambientOcclusion:t,reflectedLight:r}=e.context,s=ed.dot($l).clamp().add(t),i=Tn.mul(-16).oneMinus().negate().exp2(),n=t.sub(s.pow(i).oneMinus()).clamp();!0===this.clearcoat&&this.clearcoatSpecularIndirect.mulAssign(t),!0===this.sheen&&this.sheenSpecularIndirect.mulAssign(t),r.indirectDiffuse.mulAssign(t),r.indirectSpecular.mulAssign(n)}finish({context:e}){const{outgoingLight:t}=e;if(!0===this.clearcoat){const e=rd.dot($l).clamp(),r=Vp({dotVH:e,f0:Fg,f90:Dg}),s=t.mul(vn.mul(r).oneMinus()).add(this.clearcoatSpecularDirect.add(this.clearcoatSpecularIndirect).mul(vn));t.assign(s)}if(!0===this.sheen){const e=Sn.r.max(Sn.g).max(Sn.b).mul(.157).oneMinus(),r=t.mul(e).add(this.sheenSpecularDirect,this.sheenSpecularIndirect);t.assign(r)}}}const Vg=qi(1),Ug=qi(-2),Og=qi(.8),kg=qi(-1),Gg=qi(.4),zg=qi(2),Hg=qi(.305),$g=qi(3),Wg=qi(.21),jg=qi(4),qg=qi(4),Xg=qi(16),Kg=Gi(([e])=>{const t=tn(no(e)).toVar(),r=qi(-1).toVar();return $i(t.x.greaterThan(t.z),()=>{$i(t.x.greaterThan(t.y),()=>{r.assign(Ko(e.x.greaterThan(0),0,3))}).Else(()=>{r.assign(Ko(e.y.greaterThan(0),1,4))})}).Else(()=>{$i(t.z.greaterThan(t.y),()=>{r.assign(Ko(e.z.greaterThan(0),2,5))}).Else(()=>{r.assign(Ko(e.y.greaterThan(0),1,4))})}),r}).setLayout({name:"getFace",type:"float",inputs:[{name:"direction",type:"vec3"}]}),Yg=Gi(([e,t])=>{const r=Qi().toVar();return $i(t.equal(0),()=>{r.assign(Qi(e.z,e.y).div(no(e.x)))}).ElseIf(t.equal(1),()=>{r.assign(Qi(e.x.negate(),e.z.negate()).div(no(e.y)))}).ElseIf(t.equal(2),()=>{r.assign(Qi(e.x.negate(),e.y).div(no(e.z)))}).ElseIf(t.equal(3),()=>{r.assign(Qi(e.z.negate(),e.y).div(no(e.x)))}).ElseIf(t.equal(4),()=>{r.assign(Qi(e.x.negate(),e.z).div(no(e.y)))}).Else(()=>{r.assign(Qi(e.x,e.y).div(no(e.z)))}),da(.5,r.add(1))}).setLayout({name:"getUV",type:"vec2",inputs:[{name:"direction",type:"vec3"},{name:"face",type:"float"}]}),Qg=Gi(([e])=>{const t=qi(0).toVar();return $i(e.greaterThanEqual(Og),()=>{t.assign(Vg.sub(e).mul(kg.sub(Ug)).div(Vg.sub(Og)).add(Ug))}).ElseIf(e.greaterThanEqual(Gg),()=>{t.assign(Og.sub(e).mul(zg.sub(kg)).div(Og.sub(Gg)).add(kg))}).ElseIf(e.greaterThanEqual(Hg),()=>{t.assign(Gg.sub(e).mul($g.sub(zg)).div(Gg.sub(Hg)).add(zg))}).ElseIf(e.greaterThanEqual(Wg),()=>{t.assign(Hg.sub(e).mul(jg.sub($g)).div(Hg.sub(Wg)).add($g))}).Else(()=>{t.assign(qi(-2).mul(ja(da(1.16,e))))}),t}).setLayout({name:"roughnessToMip",type:"float",inputs:[{name:"roughness",type:"float"}]}),Zg=Gi(([e,t])=>{const r=e.toVar();r.assign(da(2,r).sub(1));const s=tn(r,1).toVar();return $i(t.equal(0),()=>{s.assign(s.zyx)}).ElseIf(t.equal(1),()=>{s.assign(s.xzy),s.xz.mulAssign(-1)}).ElseIf(t.equal(2),()=>{s.x.mulAssign(-1)}).ElseIf(t.equal(3),()=>{s.assign(s.zyx),s.xz.mulAssign(-1)}).ElseIf(t.equal(4),()=>{s.assign(s.xzy),s.xy.mulAssign(-1)}).ElseIf(t.equal(5),()=>{s.z.mulAssign(-1)}),s}).setLayout({name:"getDirection",type:"vec3",inputs:[{name:"uv",type:"vec2"},{name:"face",type:"float"}]}),Jg=Gi(([e,t,r,s,i,n])=>{const a=qi(r),o=tn(t),u=Io(Qg(a),Ug,n),l=Za(u),d=Ka(u),c=tn(em(e,o,d,s,i,n)).toVar();return $i(l.notEqual(0),()=>{const t=tn(em(e,o,d.add(1),s,i,n)).toVar();c.assign(Do(c,t,l))}),c}),em=Gi(([e,t,r,s,i,n])=>{const a=qi(r).toVar(),o=tn(t),u=qi(Kg(o)).toVar(),l=qi(_o(qg.sub(a),0)).toVar();a.assign(_o(a,qg));const d=qi($a(a)).toVar(),c=Qi(Yg(o,u).mul(d.sub(2)).add(1)).toVar();return $i(u.greaterThan(2),()=>{c.y.addAssign(d),u.subAssign(3)}),c.x.addAssign(u.mul(d)),c.x.addAssign(l.mul(da(3,Xg))),c.y.addAssign(da(4,$a(n).sub(d))),c.x.mulAssign(s),c.y.mulAssign(i),e.sample(c).grad(Qi(),Qi())}),tm=Gi(({envMap:e,mipInt:t,outputDirection:r,theta:s,axis:i,CUBEUV_TEXEL_WIDTH:n,CUBEUV_TEXEL_HEIGHT:a,CUBEUV_MAX_MIP:o})=>{const u=eo(s),l=r.mul(u).add(i.cross(r).mul(Ja(s))).add(i.mul(i.dot(r).mul(u.oneMinus())));return em(e,l,t,n,a,o)}),rm=Gi(({n:e,latitudinal:t,poleAxis:r,outputDirection:s,weights:i,samples:n,dTheta:a,mipInt:o,envMap:u,CUBEUV_TEXEL_WIDTH:l,CUBEUV_TEXEL_HEIGHT:d,CUBEUV_MAX_MIP:c})=>{const h=tn(Ko(t,r,Ao(r,s))).toVar();$i(h.equal(tn(0)),()=>{h.assign(tn(s.z,0,s.x.negate()))}),h.assign(Qa(h));const p=tn().toVar();return p.addAssign(i.element(0).mul(tm({theta:0,axis:h,outputDirection:s,mipInt:o,envMap:u,CUBEUV_TEXEL_WIDTH:l,CUBEUV_TEXEL_HEIGHT:d,CUBEUV_MAX_MIP:c}))),ph({start:Xi(1),end:e},({i:e})=>{$i(e.greaterThanEqual(n),()=>{gh()});const t=qi(a.mul(qi(e))).toVar();p.addAssign(i.element(e).mul(tm({theta:t.mul(-1),axis:h,outputDirection:s,mipInt:o,envMap:u,CUBEUV_TEXEL_WIDTH:l,CUBEUV_TEXEL_HEIGHT:d,CUBEUV_MAX_MIP:c}))),p.addAssign(i.element(e).mul(tm({theta:t,axis:h,outputDirection:s,mipInt:o,envMap:u,CUBEUV_TEXEL_WIDTH:l,CUBEUV_TEXEL_HEIGHT:d,CUBEUV_MAX_MIP:c})))}),an(p,1)}),sm=[.125,.215,.35,.446,.526,.582],im=20,nm=new ae(-1,1,1,-1,0,1),am=new oe(90,1),om=new e;let um=null,lm=0,dm=0;const cm=(1+Math.sqrt(5))/2,hm=1/cm,pm=[new r(-cm,hm,0),new r(cm,hm,0),new r(-hm,0,cm),new r(hm,0,cm),new r(0,cm,-hm),new r(0,cm,hm),new r(-1,1,-1),new r(1,1,-1),new r(-1,1,1),new r(1,1,1)],gm=new r,mm=new WeakMap,fm=[3,1,5,0,4,2],ym=Zg(ju(),Wu("faceIndex")).normalize(),bm=tn(ym.x,ym.y,ym.z);class xm{constructor(e){this._renderer=e,this._pingPongRenderTarget=null,this._lodMax=0,this._cubeSize=0,this._lodPlanes=[],this._sizeLods=[],this._sigmas=[],this._lodMeshes=[],this._blurMaterial=null,this._cubemapMaterial=null,this._equirectMaterial=null,this._backgroundBox=null}get _hasInitialized(){return this._renderer.hasInitialized()}fromScene(e,t=0,r=.1,s=100,i={}){const{size:n=256,position:a=gm,renderTarget:o=null}=i;if(this._setSize(n),!1===this._hasInitialized){console.warn("THREE.PMREMGenerator: .fromScene() called before the backend is initialized. Try using .fromSceneAsync() instead.");const n=o||this._allocateTarget();return i.renderTarget=n,this.fromSceneAsync(e,t,r,s,i),n}um=this._renderer.getRenderTarget(),lm=this._renderer.getActiveCubeFace(),dm=this._renderer.getActiveMipmapLevel();const u=o||this._allocateTarget();return u.depthBuffer=!0,this._init(u),this._sceneToCubeUV(e,r,s,u,a),t>0&&this._blur(u,0,0,t),this._applyPMREM(u),this._cleanup(u),u}async fromSceneAsync(e,t=0,r=.1,s=100,i={}){return!1===this._hasInitialized&&await this._renderer.init(),this.fromScene(e,t,r,s,i)}fromEquirectangular(e,t=null){if(!1===this._hasInitialized){console.warn("THREE.PMREMGenerator: .fromEquirectangular() called before the backend is initialized. Try using .fromEquirectangularAsync() instead."),this._setSizeFromTexture(e);const r=t||this._allocateTarget();return this.fromEquirectangularAsync(e,r),r}return this._fromTexture(e,t)}async fromEquirectangularAsync(e,t=null){return!1===this._hasInitialized&&await this._renderer.init(),this._fromTexture(e,t)}fromCubemap(e,t=null){if(!1===this._hasInitialized){console.warn("THREE.PMREMGenerator: .fromCubemap() called before the backend is initialized. Try using .fromCubemapAsync() instead."),this._setSizeFromTexture(e);const r=t||this._allocateTarget();return this.fromCubemapAsync(e,t),r}return this._fromTexture(e,t)}async fromCubemapAsync(e,t=null){return!1===this._hasInitialized&&await this._renderer.init(),this._fromTexture(e,t)}async compileCubemapShader(){null===this._cubemapMaterial&&(this._cubemapMaterial=Nm(),await this._compileMaterial(this._cubemapMaterial))}async compileEquirectangularShader(){null===this._equirectMaterial&&(this._equirectMaterial=Sm(),await this._compileMaterial(this._equirectMaterial))}dispose(){this._dispose(),null!==this._cubemapMaterial&&this._cubemapMaterial.dispose(),null!==this._equirectMaterial&&this._equirectMaterial.dispose(),null!==this._backgroundBox&&(this._backgroundBox.geometry.dispose(),this._backgroundBox.material.dispose())}_setSizeFromTexture(e){e.mapping===R||e.mapping===C?this._setSize(0===e.image.length?16:e.image[0].width||e.image[0].image.width):this._setSize(e.image.width/4)}_setSize(e){this._lodMax=Math.floor(Math.log2(e)),this._cubeSize=Math.pow(2,this._lodMax)}_dispose(){null!==this._blurMaterial&&this._blurMaterial.dispose(),null!==this._pingPongRenderTarget&&this._pingPongRenderTarget.dispose();for(let e=0;e<this._lodPlanes.length;e++)this._lodPlanes[e].dispose()}_cleanup(e){this._renderer.setRenderTarget(um,lm,dm),e.scissorTest=!1,_m(e,0,0,e.width,e.height)}_fromTexture(e,t){this._setSizeFromTexture(e),um=this._renderer.getRenderTarget(),lm=this._renderer.getActiveCubeFace(),dm=this._renderer.getActiveMipmapLevel();const r=t||this._allocateTarget();return this._init(r),this._textureToCubeUV(e,r),this._applyPMREM(r),this._cleanup(r),r}_allocateTarget(){return Tm(3*Math.max(this._cubeSize,112),4*this._cubeSize)}_init(e){if(null===this._pingPongRenderTarget||this._pingPongRenderTarget.width!==e.width||this._pingPongRenderTarget.height!==e.height){null!==this._pingPongRenderTarget&&this._dispose(),this._pingPongRenderTarget=Tm(e.width,e.height);const{_lodMax:t}=this;({sizeLods:this._sizeLods,lodPlanes:this._lodPlanes,sigmas:this._sigmas,lodMeshes:this._lodMeshes}=function(e){const t=[],r=[],s=[],i=[];let n=e;const a=e-4+1+sm.length;for(let o=0;o<a;o++){const a=Math.pow(2,n);r.push(a);let u=1/a;o>e-4?u=sm[o-e+4-1]:0===o&&(u=0),s.push(u);const l=1/(a-2),d=-l,c=1+l,h=[d,d,c,d,c,c,d,d,c,c,d,c],p=6,g=6,m=3,f=2,y=1,b=new Float32Array(m*g*p),x=new Float32Array(f*g*p),T=new Float32Array(y*g*p);for(let e=0;e<p;e++){const t=e%3*2/3-1,r=e>2?0:-1,s=[t,r,0,t+2/3,r,0,t+2/3,r+1,0,t,r,0,t+2/3,r+1,0,t,r+1,0],i=fm[e];b.set(s,m*g*i),x.set(h,f*g*i);const n=[i,i,i,i,i,i];T.set(n,y*g*i)}const _=new pe;_.setAttribute("position",new ge(b,m)),_.setAttribute("uv",new ge(x,f)),_.setAttribute("faceIndex",new ge(T,y)),t.push(_),i.push(new X(_,null)),n>4&&n--}return{lodPlanes:t,sizeLods:r,sigmas:s,lodMeshes:i}}(t)),this._blurMaterial=function(e,t,s){const i=al(new Array(im).fill(0)),n=Jn(new r(0,1,0)),a=Jn(0),o=qi(im),u=Jn(0),l=Jn(1),d=el(null),c=Jn(0),h=qi(1/t),p=qi(1/s),g=qi(e),m={n:o,latitudinal:u,weights:i,poleAxis:n,outputDirection:bm,dTheta:a,samples:l,envMap:d,mipInt:c,CUBEUV_TEXEL_WIDTH:h,CUBEUV_TEXEL_HEIGHT:p,CUBEUV_MAX_MIP:g},f=vm("blur");return f.fragmentNode=rm({...m,latitudinal:u.equal(1)}),mm.set(f,m),f}(t,e.width,e.height)}}async _compileMaterial(e){const t=new X(this._lodPlanes[0],e);await this._renderer.compile(t,nm)}_sceneToCubeUV(e,t,r,s,i){const n=am;n.near=t,n.far=r;const a=[1,1,1,1,-1,1],o=[1,-1,1,-1,1,-1],u=this._renderer,l=u.autoClear;u.getClearColor(om),u.autoClear=!1;let d=this._backgroundBox;if(null===d){const e=new se({name:"PMREM.Background",side:S,depthWrite:!1,depthTest:!1});d=new X(new q,e)}let c=!1;const h=e.background;h?h.isColor&&(d.material.color.copy(h),e.background=null,c=!0):(d.material.color.copy(om),c=!0),u.setRenderTarget(s),u.clear(),c&&u.render(d,n);for(let t=0;t<6;t++){const r=t%3;0===r?(n.up.set(0,a[t],0),n.position.set(i.x,i.y,i.z),n.lookAt(i.x+o[t],i.y,i.z)):1===r?(n.up.set(0,0,a[t]),n.position.set(i.x,i.y,i.z),n.lookAt(i.x,i.y+o[t],i.z)):(n.up.set(0,a[t],0),n.position.set(i.x,i.y,i.z),n.lookAt(i.x,i.y,i.z+o[t]));const l=this._cubeSize;_m(s,r*l,t>2?l:0,l,l),u.render(e,n)}u.autoClear=l,e.background=h}_textureToCubeUV(e,t){const r=this._renderer,s=e.mapping===R||e.mapping===C;s?null===this._cubemapMaterial&&(this._cubemapMaterial=Nm(e)):null===this._equirectMaterial&&(this._equirectMaterial=Sm(e));const i=s?this._cubemapMaterial:this._equirectMaterial;i.fragmentNode.value=e;const n=this._lodMeshes[0];n.material=i;const a=this._cubeSize;_m(t,0,0,3*a,2*a),r.setRenderTarget(t),r.render(n,nm)}_applyPMREM(e){const t=this._renderer,r=t.autoClear;t.autoClear=!1;const s=this._lodPlanes.length;for(let t=1;t<s;t++){const r=Math.sqrt(this._sigmas[t]*this._sigmas[t]-this._sigmas[t-1]*this._sigmas[t-1]),i=pm[(s-t-1)%pm.length];this._blur(e,t-1,t,r,i)}t.autoClear=r}_blur(e,t,r,s,i){const n=this._pingPongRenderTarget;this._halfBlur(e,n,t,r,s,"latitudinal",i),this._halfBlur(n,e,r,r,s,"longitudinal",i)}_halfBlur(e,t,r,s,i,n,a){const o=this._renderer,u=this._blurMaterial;"latitudinal"!==n&&"longitudinal"!==n&&console.error("blur direction must be either latitudinal or longitudinal!");const l=this._lodMeshes[s];l.material=u;const d=mm.get(u),c=this._sizeLods[r]-1,h=isFinite(i)?Math.PI/(2*c):2*Math.PI/39,p=i/h,g=isFinite(i)?1+Math.floor(3*p):im;g>im&&console.warn(`sigmaRadians, ${i}, is too large and will clip, as it requested ${g} samples when the maximum is set to 20`);const m=[];let f=0;for(let e=0;e<im;++e){const t=e/p,r=Math.exp(-t*t/2);m.push(r),0===e?f+=r:e<g&&(f+=2*r)}for(let e=0;e<m.length;e++)m[e]=m[e]/f;e.texture.frame=(e.texture.frame||0)+1,d.envMap.value=e.texture,d.samples.value=g,d.weights.array=m,d.latitudinal.value="latitudinal"===n?1:0,a&&(d.poleAxis.value=a);const{_lodMax:y}=this;d.dTheta.value=h,d.mipInt.value=y-r;const b=this._sizeLods[s];_m(t,3*b*(s>y-4?s-y+4:0),4*(this._cubeSize-b),3*b,2*b),o.setRenderTarget(t),o.render(l,nm)}}function Tm(e,t){const r=new ue(e,t,{magFilter:Y,minFilter:Y,generateMipmaps:!1,type:ce,format:de,colorSpace:le});return r.texture.mapping=he,r.texture.name="PMREM.cubeUv",r.texture.isPMREMTexture=!0,r.scissorTest=!0,r}function _m(e,t,r,s,i){e.viewport.set(t,r,s,i),e.scissor.set(t,r,s,i)}function vm(e){const t=new cp;return t.depthTest=!1,t.depthWrite=!1,t.blending=H,t.name=`PMREM_${e}`,t}function Nm(e){const t=vm("cubemap");return t.fragmentNode=Td(e,bm),t}function Sm(e){const t=vm("equirect");return t.fragmentNode=el(e,Sp(bm),0),t}const Em=new WeakMap;function wm(e,t,r){const s=function(e){let t=Em.get(e);void 0===t&&(t=new WeakMap,Em.set(e,t));return t}(t);let i=s.get(e);if((void 0!==i?i.pmremVersion:-1)!==e.pmremVersion){const t=e.image;if(e.isCubeTexture){if(!function(e){if(null==e)return!1;let t=0;const r=6;for(let s=0;s<r;s++)void 0!==e[s]&&t++;return t===r}(t))return null;i=r.fromCubemap(e,i)}else{if(!function(e){return null!=e&&e.height>0}(t))return null;i=r.fromEquirectangular(e,i)}i.pmremVersion=e.pmremVersion,s.set(e,i)}return i.texture}class Am extends Ys{static get type(){return"PMREMNode"}constructor(e,t=null,r=null){super("vec3"),this._value=e,this._pmrem=null,this.uvNode=t,this.levelNode=r,this._generator=null;const s=new x;s.isRenderTargetTexture=!0,this._texture=el(s),this._width=Jn(0),this._height=Jn(0),this._maxMip=Jn(0),this.updateBeforeType=Us.RENDER}set value(e){this._value=e,this._pmrem=null}get value(){return this._value}updateFromTexture(e){const t=function(e){const t=Math.log2(e)-2,r=1/e;return{texelWidth:1/(3*Math.max(Math.pow(2,t),112)),texelHeight:r,maxMip:t}}(e.image.height);this._texture.value=e,this._width.value=t.texelWidth,this._height.value=t.texelHeight,this._maxMip.value=t.maxMip}updateBefore(e){let t=this._pmrem;const r=t?t.pmremVersion:-1,s=this._value;r!==s.pmremVersion&&(t=!0===s.isPMREMTexture?s:wm(s,e.renderer,this._generator),null!==t&&(this._pmrem=t,this.updateFromTexture(t)))}setup(e){null===this._generator&&(this._generator=new xm(e.renderer)),this.updateBefore(e);let t=this.uvNode;null===t&&e.context.getUV&&(t=e.context.getUV(this)),t=hd.mul(tn(t.x,t.y.negate(),t.z));let r=this.levelNode;return null===r&&e.context.getTextureLevel&&(r=e.context.getTextureLevel(this)),Jg(this._texture,t,r,this._width,this._height,this._maxMip)}dispose(){super.dispose(),null!==this._generator&&this._generator.dispose()}}const Rm=Ui(Am).setParameterLength(1,3),Cm=new WeakMap;class Mm extends Th{static get type(){return"EnvironmentNode"}constructor(e=null){super(),this.envNode=e}setup(e){const{material:t}=e;let r=this.envNode;if(r.isTextureNode||r.isMaterialReferenceNode){const e=r.isTextureNode?r.value:t[r.property];let s=Cm.get(e);void 0===s&&(s=Rm(e),Cm.set(e,s)),r=s}const s=!0===t.useAnisotropy||t.anisotropy>0?Zd:ed,i=r.context(Pm(Tn,s)).mul(cd),n=r.context(Bm(td)).mul(Math.PI).mul(cd),a=Pu(i),o=Pu(n);e.context.radiance.addAssign(a),e.context.iblIrradiance.addAssign(o);const u=e.context.lightingModel.clearcoatRadiance;if(u){const e=r.context(Pm(Nn,rd)).mul(cd),t=Pu(e);u.addAssign(t)}}}const Pm=(e,t)=>{let r=null;return{getUV:()=>(null===r&&(r=$l.negate().reflect(t),r=e.mul(e).mix(r,t).normalize(),r=r.transformDirection(pl)),r),getTextureLevel:()=>e}},Bm=e=>({getUV:()=>e,getTextureLevel:()=>qi(1)}),Lm=new me;class Fm extends cp{static get type(){return"MeshStandardNodeMaterial"}constructor(e){super(),this.isMeshStandardNodeMaterial=!0,this.lights=!0,this.emissiveNode=null,this.metalnessNode=null,this.roughnessNode=null,this.setDefaultValues(Lm),this.setValues(e)}setupEnvironment(e){let t=super.setupEnvironment(e);return null===t&&e.environmentNode&&(t=e.environmentNode),t?new Mm(t):null}setupLightingModel(){return new Ig}setupSpecular(){const e=Do(tn(.04),bn.rgb,_n);Ln.assign(e),Fn.assign(1)}setupVariants(){const e=this.metalnessNode?qi(this.metalnessNode):bc;_n.assign(e);let t=this.roughnessNode?qi(this.roughnessNode):yc;t=qp({roughness:t}),Tn.assign(t),this.setupSpecular(),bn.assign(an(bn.rgb.mul(e.oneMinus()),bn.a))}copy(e){return this.emissiveNode=e.emissiveNode,this.metalnessNode=e.metalnessNode,this.roughnessNode=e.roughnessNode,super.copy(e)}}const Dm=new fe;class Im extends Fm{static get type(){return"MeshPhysicalNodeMaterial"}constructor(e){super(),this.isMeshPhysicalNodeMaterial=!0,this.clearcoatNode=null,this.clearcoatRoughnessNode=null,this.clearcoatNormalNode=null,this.sheenNode=null,this.sheenRoughnessNode=null,this.iridescenceNode=null,this.iridescenceIORNode=null,this.iridescenceThicknessNode=null,this.specularIntensityNode=null,this.specularColorNode=null,this.iorNode=null,this.transmissionNode=null,this.thicknessNode=null,this.attenuationDistanceNode=null,this.attenuationColorNode=null,this.dispersionNode=null,this.anisotropyNode=null,this.setDefaultValues(Dm),this.setValues(e)}get useClearcoat(){return this.clearcoat>0||null!==this.clearcoatNode}get useIridescence(){return this.iridescence>0||null!==this.iridescenceNode}get useSheen(){return this.sheen>0||null!==this.sheenNode}get useAnisotropy(){return this.anisotropy>0||null!==this.anisotropyNode}get useTransmission(){return this.transmission>0||null!==this.transmissionNode}get useDispersion(){return this.dispersion>0||null!==this.dispersionNode}setupSpecular(){const e=this.iorNode?qi(this.iorNode):Bc;kn.assign(e),Ln.assign(Do(To(Co(kn.sub(1).div(kn.add(1))).mul(gc),tn(1)).mul(pc),bn.rgb,_n)),Fn.assign(Do(pc,1,_n))}setupLightingModel(){return new Ig(this.useClearcoat,this.useSheen,this.useIridescence,this.useAnisotropy,this.useTransmission,this.useDispersion)}setupVariants(e){if(super.setupVariants(e),this.useClearcoat){const e=this.clearcoatNode?qi(this.clearcoatNode):Tc,t=this.clearcoatRoughnessNode?qi(this.clearcoatRoughnessNode):_c;vn.assign(e),Nn.assign(qp({roughness:t}))}if(this.useSheen){const e=this.sheenNode?tn(this.sheenNode):Sc,t=this.sheenRoughnessNode?qi(this.sheenRoughnessNode):Ec;Sn.assign(e),En.assign(t)}if(this.useIridescence){const e=this.iridescenceNode?qi(this.iridescenceNode):Ac,t=this.iridescenceIORNode?qi(this.iridescenceIORNode):Rc,r=this.iridescenceThicknessNode?qi(this.iridescenceThicknessNode):Cc;wn.assign(e),An.assign(t),Rn.assign(r)}if(this.useAnisotropy){const e=(this.anisotropyNode?Qi(this.anisotropyNode):wc).toVar();Mn.assign(e.length()),$i(Mn.equal(0),()=>{e.assign(Qi(1,0))}).Else(()=>{e.divAssign(Qi(Mn)),Mn.assign(Mn.saturate())}),Cn.assign(Mn.pow2().mix(Tn.pow2(),1)),Pn.assign(Yd[0].mul(e.x).add(Yd[1].mul(e.y))),Bn.assign(Yd[1].mul(e.x).sub(Yd[0].mul(e.y)))}if(this.useTransmission){const e=this.transmissionNode?qi(this.transmissionNode):Mc,t=this.thicknessNode?qi(this.thicknessNode):Pc,r=this.attenuationDistanceNode?qi(this.attenuationDistanceNode):Lc,s=this.attenuationColorNode?tn(this.attenuationColorNode):Fc;if(Gn.assign(e),zn.assign(t),Hn.assign(r),$n.assign(s),this.useDispersion){const e=this.dispersionNode?qi(this.dispersionNode):Gc;Wn.assign(e)}}}setupClearcoatNormal(){return this.clearcoatNormalNode?tn(this.clearcoatNormalNode):vc}setup(e){e.context.setupClearcoatNormal=()=>nu(this.setupClearcoatNormal(e),"NORMAL","vec3"),super.setup(e)}copy(e){return this.clearcoatNode=e.clearcoatNode,this.clearcoatRoughnessNode=e.clearcoatRoughnessNode,this.clearcoatNormalNode=e.clearcoatNormalNode,this.sheenNode=e.sheenNode,this.sheenRoughnessNode=e.sheenRoughnessNode,this.iridescenceNode=e.iridescenceNode,this.iridescenceIORNode=e.iridescenceIORNode,this.iridescenceThicknessNode=e.iridescenceThicknessNode,this.specularIntensityNode=e.specularIntensityNode,this.specularColorNode=e.specularColorNode,this.transmissionNode=e.transmissionNode,this.thicknessNode=e.thicknessNode,this.attenuationDistanceNode=e.attenuationDistanceNode,this.attenuationColorNode=e.attenuationColorNode,this.dispersionNode=e.dispersionNode,this.anisotropyNode=e.anisotropyNode,super.copy(e)}}class Vm extends Ig{constructor(e=!1,t=!1,r=!1,s=!1,i=!1,n=!1,a=!1){super(e,t,r,s,i,n),this.useSSS=a}direct({lightDirection:e,lightColor:t,reflectedLight:r},s){if(!0===this.useSSS){const i=s.material,{thicknessColorNode:n,thicknessDistortionNode:a,thicknessAmbientNode:o,thicknessAttenuationNode:u,thicknessPowerNode:l,thicknessScaleNode:d}=i,c=e.add(ed.mul(a)).normalize(),h=qi($l.dot(c.negate()).saturate().pow(l).mul(d)),p=tn(h.add(o).mul(n));r.directDiffuse.addAssign(p.mul(u.mul(t)))}super.direct({lightDirection:e,lightColor:t,reflectedLight:r},s)}}class Um extends Im{static get type(){return"MeshSSSNodeMaterial"}constructor(e){super(e),this.thicknessColorNode=null,this.thicknessDistortionNode=qi(.1),this.thicknessAmbientNode=qi(0),this.thicknessAttenuationNode=qi(.1),this.thicknessPowerNode=qi(2),this.thicknessScaleNode=qi(10)}get useSSS(){return null!==this.thicknessColorNode}setupLightingModel(){return new Vm(this.useClearcoat,this.useSheen,this.useIridescence,this.useAnisotropy,this.useTransmission,this.useDispersion,this.useSSS)}copy(e){return this.thicknessColorNode=e.thicknessColorNode,this.thicknessDistortionNode=e.thicknessDistortionNode,this.thicknessAmbientNode=e.thicknessAmbientNode,this.thicknessAttenuationNode=e.thicknessAttenuationNode,this.thicknessPowerNode=e.thicknessPowerNode,this.thicknessScaleNode=e.thicknessScaleNode,super.copy(e)}}const Om=Gi(({normal:e,lightDirection:t,builder:r})=>{const s=e.dot(t),i=Qi(s.mul(.5).add(.5),0);if(r.material.gradientMap){const e=wd("gradientMap","texture").context({getUV:()=>i});return tn(e.r)}{const e=i.fwidth().mul(.5);return Do(tn(.7),tn(1),Oo(qi(.7).sub(e.x),qi(.7).add(e.x),i.x))}});class km extends Lp{direct({lightDirection:e,lightColor:t,reflectedLight:r},s){const i=Om({normal:Kl,lightDirection:e,builder:s}).mul(t);r.directDiffuse.addAssign(i.mul(Up({diffuseColor:bn.rgb})))}indirect(e){const{ambientOcclusion:t,irradiance:r,reflectedLight:s}=e.context;s.indirectDiffuse.addAssign(r.mul(Up({diffuseColor:bn}))),s.indirectDiffuse.mulAssign(t)}}const Gm=new ye;class zm extends cp{static get type(){return"MeshToonNodeMaterial"}constructor(e){super(),this.isMeshToonNodeMaterial=!0,this.lights=!0,this.setDefaultValues(Gm),this.setValues(e)}setupLightingModel(){return new km}}const Hm=Gi(()=>{const e=tn($l.z,0,$l.x.negate()).normalize(),t=$l.cross(e);return Qi(e.dot(ed),t.dot(ed)).mul(.495).add(.5)}).once(["NORMAL","VERTEX"])().toVar("matcapUV"),$m=new be;class Wm extends cp{static get type(){return"MeshMatcapNodeMaterial"}constructor(e){super(),this.isMeshMatcapNodeMaterial=!0,this.setDefaultValues($m),this.setValues(e)}setupVariants(e){const t=Hm;let r;r=e.material.matcap?wd("matcap","texture").context({getUV:()=>t}):tn(Do(.2,.8,t.y)),bn.rgb.mulAssign(r.rgb)}}class jm extends Ys{static get type(){return"RotateNode"}constructor(e,t){super(),this.positionNode=e,this.rotationNode=t}getNodeType(e){return this.positionNode.getNodeType(e)}setup(e){const{rotationNode:t,positionNode:r}=this;if("vec2"===this.getNodeType(e)){const e=t.cos(),s=t.sin();return dn(e,s,s.negate(),e).mul(r)}{const e=t,s=hn(an(1,0,0,0),an(0,eo(e.x),Ja(e.x).negate(),0),an(0,Ja(e.x),eo(e.x),0),an(0,0,0,1)),i=hn(an(eo(e.y),0,Ja(e.y),0),an(0,1,0,0),an(Ja(e.y).negate(),0,eo(e.y),0),an(0,0,0,1)),n=hn(an(eo(e.z),Ja(e.z).negate(),0,0),an(Ja(e.z),eo(e.z),0,0),an(0,0,1,0),an(0,0,0,1));return s.mul(i).mul(n).mul(an(r,1)).xyz}}}const qm=Ui(jm).setParameterLength(2),Xm=new xe;class Km extends cp{static get type(){return"SpriteNodeMaterial"}constructor(e){super(),this.isSpriteNodeMaterial=!0,this._useSizeAttenuation=!0,this.positionNode=null,this.rotationNode=null,this.scaleNode=null,this.transparent=!0,this.setDefaultValues(Xm),this.setValues(e)}setupPositionView(e){const{object:t,camera:r}=e,s=this.sizeAttenuation,{positionNode:i,rotationNode:n,scaleNode:a}=this,o=Fl.mul(tn(i||0));let u=Qi(Al[0].xyz.length(),Al[1].xyz.length());if(null!==a&&(u=u.mul(Qi(a))),!1===s)if(r.isPerspectiveCamera)u=u.mul(o.z.negate());else{const e=qi(2).div(cl.element(1).element(1));u=u.mul(e.mul(2))}let l=Ul.xy;if(t.center&&!0===t.center.isVector2){const e=((e,t,r)=>Di(new fu(e,t,r)))("center","vec2",t);l=l.sub(e.sub(.5))}l=l.mul(u);const d=qi(n||Nc),c=qm(l,d);return an(o.xy.add(c),o.zw)}copy(e){return this.positionNode=e.positionNode,this.rotationNode=e.rotationNode,this.scaleNode=e.scaleNode,super.copy(e)}get sizeAttenuation(){return this._useSizeAttenuation}set sizeAttenuation(e){this._useSizeAttenuation!==e&&(this._useSizeAttenuation=e,this.needsUpdate=!0)}}const Ym=new Te;class Qm extends Km{static get type(){return"PointsNodeMaterial"}constructor(e){super(),this.sizeNode=null,this.isPointsNodeMaterial=!0,this.setDefaultValues(Ym),this.setValues(e)}setupPositionView(){const{positionNode:e}=this;return Fl.mul(tn(e||Ol)).xyz}setupVertex(e){const t=super.setupVertex(e);if(!0!==e.material.isNodeMaterial)return t;const{rotationNode:r,scaleNode:s,sizeNode:i}=this,n=Ul.xy.toVar(),a=Ph.z.div(Ph.w);if(r&&r.isNode){const e=qi(r);n.assign(qm(n,e))}let o=null!==i?Qi(i):kc;return!0===this.sizeAttenuation&&(o=o.mul(o.div(Hl.z.negate()))),s&&s.isNode&&(o=o.mul(Qi(s))),n.mulAssign(o.mul(2)),n.assign(n.div(Ph.z)),n.y.assign(n.y.mul(a)),n.assign(n.mul(t.w)),t.addAssign(an(n,0,0)),t}get alphaToCoverage(){return this._useAlphaToCoverage}set alphaToCoverage(e){this._useAlphaToCoverage!==e&&(this._useAlphaToCoverage=e,this.needsUpdate=!0)}}class Zm extends Lp{constructor(){super(),this.shadowNode=qi(1).toVar("shadowMask")}direct({lightNode:e}){null!==e.shadowNode&&this.shadowNode.mulAssign(e.shadowNode)}finish({context:e}){bn.a.mulAssign(this.shadowNode.oneMinus()),e.outgoingLight.rgb.assign(bn.rgb)}}const Jm=new _e;class ef extends cp{static get type(){return"ShadowNodeMaterial"}constructor(e){super(),this.isShadowNodeMaterial=!0,this.lights=!0,this.transparent=!0,this.setDefaultValues(Jm),this.setValues(e)}setupLightingModel(){return new Zm}}const tf=fn("vec3"),rf=fn("vec3"),sf=fn("vec3");class nf extends Lp{constructor(){super()}start(e){const{material:t,context:r}=e,s=fn("vec3"),i=fn("vec3");$i(fl.sub(Gl).length().greaterThan(Pl.mul(2)),()=>{s.assign(fl),i.assign(Gl)}).Else(()=>{s.assign(Gl),i.assign(fl)});const n=i.sub(s),a=Jn("int").onRenderUpdate(({material:e})=>e.steps),o=n.length().div(a).toVar(),u=n.normalize().toVar(),l=qi(0).toVar(),d=tn(1).toVar();t.offsetNode&&l.addAssign(t.offsetNode.mul(o)),ph(a,()=>{const i=s.add(u.mul(l)),n=pl.mul(an(i,1)).xyz;let a;null!==t.depthNode&&(rf.assign(Yh(Wh(n.z,ll,dl))),r.sceneDepthNode=Yh(t.depthNode).toVar()),r.positionWorld=i,r.shadowPositionWorld=i,r.positionView=n,tf.assign(0),t.scatteringNode&&(a=t.scatteringNode({positionRay:i})),super.start(e),a&&tf.mulAssign(a);const c=tf.mul(.01).negate().mul(o).exp();d.mulAssign(c),l.addAssign(o)}),sf.addAssign(d.saturate().oneMinus())}scatteringLight(e,t){const r=t.context.sceneDepthNode;r?$i(r.greaterThanEqual(rf),()=>{tf.addAssign(e)}):tf.addAssign(e)}direct({lightNode:e,lightColor:t},r){if(void 0===e.light.distance)return;const s=t.xyz.toVar();s.mulAssign(e.shadowNode),this.scatteringLight(s,r)}directRectArea({lightColor:e,lightPosition:t,halfWidth:r,halfHeight:s},i){const n=t.add(r).sub(s),a=t.sub(r).sub(s),o=t.sub(r).add(s),u=t.add(r).add(s),l=i.context.positionView,d=e.xyz.mul(dg({P:l,p0:n,p1:a,p2:o,p3:u})).pow(1.5);this.scatteringLight(d,i)}finish(e){e.context.outgoingLight.assign(sf)}}class af extends cp{static get type(){return"VolumeNodeMaterial"}constructor(e){super(),this.isVolumeNodeMaterial=!0,this.steps=25,this.offsetNode=null,this.scatteringNode=null,this.lights=!0,this.transparent=!0,this.side=S,this.depthTest=!1,this.depthWrite=!1,this.setValues(e)}setupLightingModel(){return new nf}}class of{constructor(e,t){this.nodes=e,this.info=t,this._context="undefined"!=typeof self?self:null,this._animationLoop=null,this._requestId=null}start(){const e=(t,r)=>{this._requestId=this._context.requestAnimationFrame(e),!0===this.info.autoReset&&this.info.reset(),this.nodes.nodeFrame.update(),this.info.frame=this.nodes.nodeFrame.frameId,null!==this._animationLoop&&this._animationLoop(t,r)};e()}stop(){this._context.cancelAnimationFrame(this._requestId),this._requestId=null}getAnimationLoop(){return this._animationLoop}setAnimationLoop(e){this._animationLoop=e}getContext(){return this._context}setContext(e){this._context=e}dispose(){this.stop()}}class uf{constructor(){this.weakMap=new WeakMap}get(e){let t=this.weakMap;for(let r=0;r<e.length-1;r++)if(t=t.get(e[r]),void 0===t)return;return t.get(e[e.length-1])}set(e,t){let r=this.weakMap;for(let t=0;t<e.length-1;t++){const s=e[t];!1===r.has(s)&&r.set(s,new WeakMap),r=r.get(s)}return r.set(e[e.length-1],t),this}delete(e){let t=this.weakMap;for(let r=0;r<e.length-1;r++)if(t=t.get(e[r]),void 0===t)return!1;return t.delete(e[e.length-1])}}let lf=0;class df{constructor(e,t,r,s,i,n,a,o,u,l){this.id=lf++,this._nodes=e,this._geometries=t,this.renderer=r,this.object=s,this.material=i,this.scene=n,this.camera=a,this.lightsNode=o,this.context=u,this.geometry=s.geometry,this.version=i.version,this.drawRange=null,this.attributes=null,this.attributesId=null,this.pipeline=null,this.group=null,this.vertexBuffers=null,this.drawParams=null,this.bundle=null,this.clippingContext=l,this.clippingContextCacheKey=null!==l?l.cacheKey:"",this.initialNodesCacheKey=this.getDynamicCacheKey(),this.initialCacheKey=this.getCacheKey(),this._nodeBuilderState=null,this._bindings=null,this._monitor=null,this.onDispose=null,this.isRenderObject=!0,this.onMaterialDispose=()=>{this.dispose()},this.onGeometryDispose=()=>{this.attributes=null,this.attributesId=null},this.material.addEventListener("dispose",this.onMaterialDispose),this.geometry.addEventListener("dispose",this.onGeometryDispose)}updateClipping(e){this.clippingContext=e}get clippingNeedsUpdate(){return null!==this.clippingContext&&this.clippingContext.cacheKey!==this.clippingContextCacheKey&&(this.clippingContextCacheKey=this.clippingContext.cacheKey,!0)}get hardwareClippingPlanes(){return!0===this.material.hardwareClipping?this.clippingContext.unionClippingCount:0}getNodeBuilderState(){return this._nodeBuilderState||(this._nodeBuilderState=this._nodes.getForRender(this))}getMonitor(){return this._monitor||(this._monitor=this.getNodeBuilderState().observer)}getBindings(){return this._bindings||(this._bindings=this.getNodeBuilderState().createBindings())}getBindingGroup(e){for(const t of this.getBindings())if(t.name===e)return t}getIndex(){return this._geometries.getIndex(this)}getIndirect(){return this._geometries.getIndirect(this)}getChainArray(){return[this.object,this.material,this.context,this.lightsNode]}setGeometry(e){this.geometry=e,this.attributes=null,this.attributesId=null}getAttributes(){if(null!==this.attributes)return this.attributes;const e=this.getNodeBuilderState().nodeAttributes,t=this.geometry,r=[],s=new Set,i={};for(const n of e){let e;if(n.node&&n.node.attribute?e=n.node.attribute:(e=t.getAttribute(n.name),i[n.name]=e.version),void 0===e)continue;r.push(e);const a=e.isInterleavedBufferAttribute?e.data:e;s.add(a)}return this.attributes=r,this.attributesId=i,this.vertexBuffers=Array.from(s.values()),r}getVertexBuffers(){return null===this.vertexBuffers&&this.getAttributes(),this.vertexBuffers}getDrawParameters(){const{object:e,material:t,geometry:r,group:s,drawRange:i}=this,n=this.drawParams||(this.drawParams={vertexCount:0,firstVertex:0,instanceCount:0,firstInstance:0}),a=this.getIndex(),o=null!==a;let u=1;if(!0===r.isInstancedBufferGeometry?u=r.instanceCount:void 0!==e.count&&(u=Math.max(0,e.count)),0===u)return null;if(n.instanceCount=u,!0===e.isBatchedMesh)return n;let l=1;!0!==t.wireframe||e.isPoints||e.isLineSegments||e.isLine||e.isLineLoop||(l=2);let d=i.start*l,c=(i.start+i.count)*l;null!==s&&(d=Math.max(d,s.start*l),c=Math.min(c,(s.start+s.count)*l));const h=r.attributes.position;let p=1/0;o?p=a.count:null!=h&&(p=h.count),d=Math.max(d,0),c=Math.min(c,p);const g=c-d;return g<0||g===1/0?null:(n.vertexCount=g,n.firstVertex=d,n)}getGeometryCacheKey(){const{geometry:e}=this;let t="";for(const r of Object.keys(e.attributes).sort()){const s=e.attributes[r];t+=r+",",s.data&&(t+=s.data.stride+","),s.offset&&(t+=s.offset+","),s.itemSize&&(t+=s.itemSize+","),s.normalized&&(t+="n,")}for(const r of Object.keys(e.morphAttributes).sort()){const s=e.morphAttributes[r];t+="morph-"+r+",";for(let e=0,r=s.length;e<r;e++){t+=s[e].id+","}}return e.index&&(t+="index,"),t}getMaterialCacheKey(){const{object:e,material:t}=this;let r=t.customProgramCacheKey();for(const e of function(e){const t=Object.keys(e);let r=Object.getPrototypeOf(e);for(;r;){const e=Object.getOwnPropertyDescriptors(r);for(const r in e)if(void 0!==e[r]){const s=e[r];s&&"function"==typeof s.get&&t.push(r)}r=Object.getPrototypeOf(r)}return t}(t)){if(/^(is[A-Z]|_)|^(visible|version|uuid|name|opacity|userData)$/.test(e))continue;const s=t[e];let i;if(null!==s){const e=typeof s;"number"===e?i=0!==s?"1":"0":"object"===e?(i="{",s.isTexture&&(i+=s.mapping),i+="}"):i=String(s)}else i=String(s);r+=i+","}return r+=this.clippingContextCacheKey+",",e.geometry&&(r+=this.getGeometryCacheKey()),e.skeleton&&(r+=e.skeleton.bones.length+","),e.isBatchedMesh&&(r+=e._matricesTexture.uuid+",",null!==e._colorsTexture&&(r+=e._colorsTexture.uuid+",")),e.count>1&&(r+=e.uuid+","),r+=e.receiveShadow+",",xs(r)}get needsGeometryUpdate(){if(this.geometry.id!==this.object.geometry.id)return!0;if(null!==this.attributes){const e=this.attributesId;for(const t in e){const r=this.geometry.getAttribute(t);if(void 0===r||e[t]!==r.id)return!0}}return!1}get needsUpdate(){return this.initialNodesCacheKey!==this.getDynamicCacheKey()||this.clippingNeedsUpdate}getDynamicCacheKey(){let e=0;return!0!==this.material.isShadowPassMaterial&&(e=this._nodes.getCacheKey(this.scene,this.lightsNode)),this.camera.isArrayCamera&&(e=_s(e,this.camera.cameras.length)),this.object.receiveShadow&&(e=_s(e,1)),e}getCacheKey(){return this.getMaterialCacheKey()+this.getDynamicCacheKey()}dispose(){this.material.removeEventListener("dispose",this.onMaterialDispose),this.geometry.removeEventListener("dispose",this.onGeometryDispose),this.onDispose()}}const cf=[];class hf{constructor(e,t,r,s,i,n){this.renderer=e,this.nodes=t,this.geometries=r,this.pipelines=s,this.bindings=i,this.info=n,this.chainMaps={}}get(e,t,r,s,i,n,a,o){const u=this.getChainMap(o);cf[0]=e,cf[1]=t,cf[2]=n,cf[3]=i;let l=u.get(cf);return void 0===l?(l=this.createRenderObject(this.nodes,this.geometries,this.renderer,e,t,r,s,i,n,a,o),u.set(cf,l)):(l.updateClipping(a),l.needsGeometryUpdate&&l.setGeometry(e.geometry),(l.version!==t.version||l.needsUpdate)&&(l.initialCacheKey!==l.getCacheKey()?(l.dispose(),l=this.get(e,t,r,s,i,n,a,o)):l.version=t.version)),cf.length=0,l}getChainMap(e="default"){return this.chainMaps[e]||(this.chainMaps[e]=new uf)}dispose(){this.chainMaps={}}createRenderObject(e,t,r,s,i,n,a,o,u,l,d){const c=this.getChainMap(d),h=new df(e,t,r,s,i,n,a,o,u,l);return h.onDispose=()=>{this.pipelines.delete(h),this.bindings.delete(h),this.nodes.delete(h),c.delete(h.getChainArray())},h}}class pf{constructor(){this.data=new WeakMap}get(e){let t=this.data.get(e);return void 0===t&&(t={},this.data.set(e,t)),t}delete(e){let t=null;return this.data.has(e)&&(t=this.data.get(e),this.data.delete(e)),t}has(e){return this.data.has(e)}dispose(){this.data=new WeakMap}}const gf=1,mf=2,ff=3,yf=4,bf=16;class xf extends pf{constructor(e){super(),this.backend=e}delete(e){const t=super.delete(e);return null!==t&&this.backend.destroyAttribute(e),t}update(e,t){const r=this.get(e);if(void 0===r.version)t===gf?this.backend.createAttribute(e):t===mf?this.backend.createIndexAttribute(e):t===ff?this.backend.createStorageAttribute(e):t===yf&&this.backend.createIndirectStorageAttribute(e),r.version=this._getBufferAttribute(e).version;else{const t=this._getBufferAttribute(e);(r.version<t.version||t.usage===y)&&(this.backend.updateAttribute(e),r.version=t.version)}}_getBufferAttribute(e){return e.isInterleavedBufferAttribute&&(e=e.data),e}}function Tf(e){return null!==e.index?e.index.version:e.attributes.position.version}function _f(e){const t=[],r=e.index,s=e.attributes.position;if(null!==r){const e=r.array;for(let r=0,s=e.length;r<s;r+=3){const s=e[r+0],i=e[r+1],n=e[r+2];t.push(s,i,i,n,n,s)}}else{for(let e=0,r=s.array.length/3-1;e<r;e+=3){const r=e+0,s=e+1,i=e+2;t.push(r,s,s,i,i,r)}}const i=new(Se(t)?ve:Ne)(t,1);return i.version=Tf(e),i}class vf extends pf{constructor(e,t){super(),this.attributes=e,this.info=t,this.wireframes=new WeakMap,this.attributeCall=new WeakMap}has(e){const t=e.geometry;return super.has(t)&&!0===this.get(t).initialized}updateForRender(e){!1===this.has(e)&&this.initGeometry(e),this.updateAttributes(e)}initGeometry(e){const t=e.geometry;this.get(t).initialized=!0,this.info.memory.geometries++;const r=()=>{this.info.memory.geometries--;const s=t.index,i=e.getAttributes();null!==s&&this.attributes.delete(s);for(const e of i)this.attributes.delete(e);const n=this.wireframes.get(t);void 0!==n&&this.attributes.delete(n),t.removeEventListener("dispose",r)};t.addEventListener("dispose",r)}updateAttributes(e){const t=e.getAttributes();for(const e of t)e.isStorageBufferAttribute||e.isStorageInstancedBufferAttribute?this.updateAttribute(e,ff):this.updateAttribute(e,gf);const r=this.getIndex(e);null!==r&&this.updateAttribute(r,mf);const s=e.geometry.indirect;null!==s&&this.updateAttribute(s,yf)}updateAttribute(e,t){const r=this.info.render.calls;e.isInterleavedBufferAttribute?void 0===this.attributeCall.get(e)?(this.attributes.update(e,t),this.attributeCall.set(e,r)):this.attributeCall.get(e.data)!==r&&(this.attributes.update(e,t),this.attributeCall.set(e.data,r),this.attributeCall.set(e,r)):this.attributeCall.get(e)!==r&&(this.attributes.update(e,t),this.attributeCall.set(e,r))}getIndirect(e){return e.geometry.indirect}getIndex(e){const{geometry:t,material:r}=e;let s=t.index;if(!0===r.wireframe){const e=this.wireframes;let r=e.get(t);void 0===r?(r=_f(t),e.set(t,r)):r.version!==Tf(t)&&(this.attributes.delete(r),r=_f(t),e.set(t,r)),s=r}return s}}class Nf{constructor(){this.autoReset=!0,this.frame=0,this.calls=0,this.render={calls:0,frameCalls:0,drawCalls:0,triangles:0,points:0,lines:0,timestamp:0},this.compute={calls:0,frameCalls:0,timestamp:0},this.memory={geometries:0,textures:0}}update(e,t,r){this.render.drawCalls++,e.isMesh||e.isSprite?this.render.triangles+=r*(t/3):e.isPoints?this.render.points+=r*t:e.isLineSegments?this.render.lines+=r*(t/2):e.isLine?this.render.lines+=r*(t-1):console.error("THREE.WebGPUInfo: Unknown object type.")}reset(){this.render.drawCalls=0,this.render.frameCalls=0,this.compute.frameCalls=0,this.render.triangles=0,this.render.points=0,this.render.lines=0}dispose(){this.reset(),this.calls=0,this.render.calls=0,this.compute.calls=0,this.render.timestamp=0,this.compute.timestamp=0,this.memory.geometries=0,this.memory.textures=0}}class Sf{constructor(e){this.cacheKey=e,this.usedTimes=0}}class Ef extends Sf{constructor(e,t,r){super(e),this.vertexProgram=t,this.fragmentProgram=r}}class wf extends Sf{constructor(e,t){super(e),this.computeProgram=t,this.isComputePipeline=!0}}let Af=0;class Rf{constructor(e,t,r,s=null,i=null){this.id=Af++,this.code=e,this.stage=t,this.name=r,this.transforms=s,this.attributes=i,this.usedTimes=0}}class Cf extends pf{constructor(e,t){super(),this.backend=e,this.nodes=t,this.bindings=null,this.caches=new Map,this.programs={vertex:new Map,fragment:new Map,compute:new Map}}getForCompute(e,t){const{backend:r}=this,s=this.get(e);if(this._needsComputeUpdate(e)){const i=s.pipeline;i&&(i.usedTimes--,i.computeProgram.usedTimes--);const n=this.nodes.getForCompute(e);let a=this.programs.compute.get(n.computeShader);void 0===a&&(i&&0===i.computeProgram.usedTimes&&this._releaseProgram(i.computeProgram),a=new Rf(n.computeShader,"compute",e.name,n.transforms,n.nodeAttributes),this.programs.compute.set(n.computeShader,a),r.createProgram(a));const o=this._getComputeCacheKey(e,a);let u=this.caches.get(o);void 0===u&&(i&&0===i.usedTimes&&this._releasePipeline(i),u=this._getComputePipeline(e,a,o,t)),u.usedTimes++,a.usedTimes++,s.version=e.version,s.pipeline=u}return s.pipeline}getForRender(e,t=null){const{backend:r}=this,s=this.get(e);if(this._needsRenderUpdate(e)){const i=s.pipeline;i&&(i.usedTimes--,i.vertexProgram.usedTimes--,i.fragmentProgram.usedTimes--);const n=e.getNodeBuilderState(),a=e.material?e.material.name:"";let o=this.programs.vertex.get(n.vertexShader);void 0===o&&(i&&0===i.vertexProgram.usedTimes&&this._releaseProgram(i.vertexProgram),o=new Rf(n.vertexShader,"vertex",a),this.programs.vertex.set(n.vertexShader,o),r.createProgram(o));let u=this.programs.fragment.get(n.fragmentShader);void 0===u&&(i&&0===i.fragmentProgram.usedTimes&&this._releaseProgram(i.fragmentProgram),u=new Rf(n.fragmentShader,"fragment",a),this.programs.fragment.set(n.fragmentShader,u),r.createProgram(u));const l=this._getRenderCacheKey(e,o,u);let d=this.caches.get(l);void 0===d?(i&&0===i.usedTimes&&this._releasePipeline(i),d=this._getRenderPipeline(e,o,u,l,t)):e.pipeline=d,d.usedTimes++,o.usedTimes++,u.usedTimes++,s.pipeline=d}return s.pipeline}delete(e){const t=this.get(e).pipeline;return t&&(t.usedTimes--,0===t.usedTimes&&this._releasePipeline(t),t.isComputePipeline?(t.computeProgram.usedTimes--,0===t.computeProgram.usedTimes&&this._releaseProgram(t.computeProgram)):(t.fragmentProgram.usedTimes--,t.vertexProgram.usedTimes--,0===t.vertexProgram.usedTimes&&this._releaseProgram(t.vertexProgram),0===t.fragmentProgram.usedTimes&&this._releaseProgram(t.fragmentProgram))),super.delete(e)}dispose(){super.dispose(),this.caches=new Map,this.programs={vertex:new Map,fragment:new Map,compute:new Map}}updateForRender(e){this.getForRender(e)}_getComputePipeline(e,t,r,s){r=r||this._getComputeCacheKey(e,t);let i=this.caches.get(r);return void 0===i&&(i=new wf(r,t),this.caches.set(r,i),this.backend.createComputePipeline(i,s)),i}_getRenderPipeline(e,t,r,s,i){s=s||this._getRenderCacheKey(e,t,r);let n=this.caches.get(s);return void 0===n&&(n=new Ef(s,t,r),this.caches.set(s,n),e.pipeline=n,this.backend.createRenderPipeline(e,i)),n}_getComputeCacheKey(e,t){return e.id+","+t.id}_getRenderCacheKey(e,t,r){return t.id+","+r.id+","+this.backend.getRenderCacheKey(e)}_releasePipeline(e){this.caches.delete(e.cacheKey)}_releaseProgram(e){const t=e.code,r=e.stage;this.programs[r].delete(t)}_needsComputeUpdate(e){const t=this.get(e);return void 0===t.pipeline||t.version!==e.version}_needsRenderUpdate(e){return void 0===this.get(e).pipeline||this.backend.needsRenderUpdate(e)}}class Mf extends pf{constructor(e,t,r,s,i,n){super(),this.backend=e,this.textures=r,this.pipelines=i,this.attributes=s,this.nodes=t,this.info=n,this.pipelines.bindings=this}getForRender(e){const t=e.getBindings();for(const e of t){const r=this.get(e);void 0===r.bindGroup&&(this._init(e),this.backend.createBindings(e,t,0),r.bindGroup=e)}return t}getForCompute(e){const t=this.nodes.getForCompute(e).bindings;for(const e of t){const r=this.get(e);void 0===r.bindGroup&&(this._init(e),this.backend.createBindings(e,t,0),r.bindGroup=e)}return t}updateForCompute(e){this._updateBindings(this.getForCompute(e))}updateForRender(e){this._updateBindings(this.getForRender(e))}_updateBindings(e){for(const t of e)this._update(t,e)}_init(e){for(const t of e.bindings)if(t.isSampledTexture)this.textures.updateTexture(t.texture);else if(t.isStorageBuffer){const e=t.attribute,r=e.isIndirectStorageBufferAttribute?yf:ff;this.attributes.update(e,r)}}_update(e,t){const{backend:r}=this;let s=!1,i=!0,n=0,a=0;for(const t of e.bindings){if(t.isNodeUniformsGroup){if(!1===this.nodes.updateGroup(t))continue}if(t.isStorageBuffer){const e=t.attribute,r=e.isIndirectStorageBufferAttribute?yf:ff;this.attributes.update(e,r)}if(t.isUniformBuffer){t.update()&&r.updateBinding(t)}else if(t.isSampler)t.update();else if(t.isSampledTexture){const e=this.textures.get(t.texture);t.needsBindingsUpdate(e.generation)&&(s=!0);const o=t.update(),u=t.texture;o&&this.textures.updateTexture(u);const l=r.get(u);if(void 0!==l.externalTexture||e.isDefaultTexture?i=!1:(n=10*n+u.id,a+=u.version),!0===r.isWebGPUBackend&&void 0===l.texture&&void 0===l.externalTexture&&(console.error("Bindings._update: binding should be available:",t,o,u,t.textureNode.value,s),this.textures.updateTexture(u),s=!0),!0===u.isStorageTexture){const e=this.get(u);!0===t.store?e.needsMipmap=!0:this.textures.needsMipmaps(u)&&!0===e.needsMipmap&&(this.backend.generateMipmaps(u),e.needsMipmap=!1)}}}!0===s&&this.backend.updateBindings(e,t,i?n:0,a)}}function Pf(e,t){return e.groupOrder!==t.groupOrder?e.groupOrder-t.groupOrder:e.renderOrder!==t.renderOrder?e.renderOrder-t.renderOrder:e.z!==t.z?e.z-t.z:e.id-t.id}function Bf(e,t){return e.groupOrder!==t.groupOrder?e.groupOrder-t.groupOrder:e.renderOrder!==t.renderOrder?e.renderOrder-t.renderOrder:e.z!==t.z?t.z-e.z:e.id-t.id}function Lf(e){return(e.transmission>0||e.transmissionNode)&&e.side===E&&!1===e.forceSinglePass}class Ff{constructor(e,t,r){this.renderItems=[],this.renderItemsIndex=0,this.opaque=[],this.transparentDoublePass=[],this.transparent=[],this.bundles=[],this.lightsNode=e.getNode(t,r),this.lightsArray=[],this.scene=t,this.camera=r,this.occlusionQueryCount=0}begin(){return this.renderItemsIndex=0,this.opaque.length=0,this.transparentDoublePass.length=0,this.transparent.length=0,this.bundles.length=0,this.lightsArray.length=0,this.occlusionQueryCount=0,this}getNextRenderItem(e,t,r,s,i,n,a){let o=this.renderItems[this.renderItemsIndex];return void 0===o?(o={id:e.id,object:e,geometry:t,material:r,groupOrder:s,renderOrder:e.renderOrder,z:i,group:n,clippingContext:a},this.renderItems[this.renderItemsIndex]=o):(o.id=e.id,o.object=e,o.geometry=t,o.material=r,o.groupOrder=s,o.renderOrder=e.renderOrder,o.z=i,o.group=n,o.clippingContext=a),this.renderItemsIndex++,o}push(e,t,r,s,i,n,a){const o=this.getNextRenderItem(e,t,r,s,i,n,a);!0===e.occlusionTest&&this.occlusionQueryCount++,!0===r.transparent||r.transmission>0?(Lf(r)&&this.transparentDoublePass.push(o),this.transparent.push(o)):this.opaque.push(o)}unshift(e,t,r,s,i,n,a){const o=this.getNextRenderItem(e,t,r,s,i,n,a);!0===r.transparent||r.transmission>0?(Lf(r)&&this.transparentDoublePass.unshift(o),this.transparent.unshift(o)):this.opaque.unshift(o)}pushBundle(e){this.bundles.push(e)}pushLight(e){this.lightsArray.push(e)}sort(e,t){this.opaque.length>1&&this.opaque.sort(e||Pf),this.transparentDoublePass.length>1&&this.transparentDoublePass.sort(t||Bf),this.transparent.length>1&&this.transparent.sort(t||Bf)}finish(){this.lightsNode.setLights(this.lightsArray);for(let e=this.renderItemsIndex,t=this.renderItems.length;e<t;e++){const t=this.renderItems[e];if(null===t.id)break;t.id=null,t.object=null,t.geometry=null,t.material=null,t.groupOrder=null,t.renderOrder=null,t.z=null,t.group=null,t.clippingContext=null}}}const Df=[];class If{constructor(e){this.lighting=e,this.lists=new uf}get(e,t){const r=this.lists;Df[0]=e,Df[1]=t;let s=r.get(Df);return void 0===s&&(s=new Ff(this.lighting,e,t),r.set(Df,s)),Df.length=0,s}dispose(){this.lists=new uf}}let Vf=0;class Uf{constructor(){this.id=Vf++,this.color=!0,this.clearColor=!0,this.clearColorValue={r:0,g:0,b:0,a:1},this.depth=!0,this.clearDepth=!0,this.clearDepthValue=1,this.stencil=!1,this.clearStencil=!0,this.clearStencilValue=1,this.viewport=!1,this.viewportValue=new s,this.scissor=!1,this.scissorValue=new s,this.renderTarget=null,this.textures=null,this.depthTexture=null,this.activeCubeFace=0,this.activeMipmapLevel=0,this.sampleCount=1,this.width=0,this.height=0,this.occlusionQueryCount=0,this.clippingContext=null,this.isRenderContext=!0}getCacheKey(){return Of(this)}}function Of(e){const{textures:t,activeCubeFace:r}=e,s=[r];for(const e of t)s.push(e.id);return Ts(s)}const kf=[],Gf=new K,zf=new Ee;class Hf{constructor(){this.chainMaps={}}get(e,t,r=null){let s;if(kf[0]=e,kf[1]=t,null===r)s="default";else{const e=r.texture.format;s=`${r.textures.length}:${e}:${r.samples}:${r.depthBuffer}:${r.stencilBuffer}`}const i=this._getChainMap(s);let n=i.get(kf);return void 0===n&&(n=new Uf,i.set(kf,n)),kf.length=0,null!==r&&(n.sampleCount=0===r.samples?1:r.samples),n}getForClear(e=null){return this.get(Gf,zf,e)}_getChainMap(e){return this.chainMaps[e]||(this.chainMaps[e]=new uf)}dispose(){this.chainMaps={}}}const $f=new r;class Wf extends pf{constructor(e,t,r){super(),this.renderer=e,this.backend=t,this.info=r}updateRenderTarget(e,t=0){const r=this.get(e),s=0===e.samples?1:e.samples,i=r.depthTextureMips||(r.depthTextureMips={}),n=e.textures,a=this.getSize(n[0]),o=a.width>>t,u=a.height>>t;let l=e.depthTexture||i[t];const d=!0===e.depthBuffer||!0===e.stencilBuffer;let c=!1;void 0===l&&d&&(l=new U,l.format=e.stencilBuffer?we:Ae,l.type=e.stencilBuffer?Re:T,l.image.width=o,l.image.height=u,l.image.depth=a.depth,l.isArrayTexture=!0===e.multiview&&a.depth>1,i[t]=l),r.width===a.width&&a.height===r.height||(c=!0,l&&(l.needsUpdate=!0,l.image.width=o,l.image.height=u,l.image.depth=l.isArrayTexture?l.image.depth:1)),r.width=a.width,r.height=a.height,r.textures=n,r.depthTexture=l||null,r.depth=e.depthBuffer,r.stencil=e.stencilBuffer,r.renderTarget=e,r.sampleCount!==s&&(c=!0,l&&(l.needsUpdate=!0),r.sampleCount=s);const h={sampleCount:s};if(!0!==e.isXRRenderTarget){for(let e=0;e<n.length;e++){const t=n[e];c&&(t.needsUpdate=!0),this.updateTexture(t,h)}l&&this.updateTexture(l,h)}if(!0!==r.initialized){r.initialized=!0;const t=()=>{e.removeEventListener("dispose",t);for(let e=0;e<n.length;e++)this._destroyTexture(n[e]);l&&this._destroyTexture(l),this.delete(e)};e.addEventListener("dispose",t)}}updateTexture(e,t={}){const r=this.get(e);if(!0===r.initialized&&r.version===e.version)return;const s=e.isRenderTargetTexture||e.isDepthTexture||e.isFramebufferTexture,i=this.backend;if(s&&!0===r.initialized&&(i.destroySampler(e),i.destroyTexture(e)),e.isFramebufferTexture){const t=this.renderer.getRenderTarget();e.type=t?t.texture.type:Ce}const{width:n,height:a,depth:o}=this.getSize(e);if(t.width=n,t.height=a,t.depth=o,t.needsMipmaps=this.needsMipmaps(e),t.levels=t.needsMipmaps?this.getMipLevels(e,n,a):1,s||!0===e.isStorageTexture)i.createSampler(e),i.createTexture(e,t),r.generation=e.version;else{if(!0!==r.initialized&&i.createSampler(e),e.version>0){const s=e.image;if(void 0===s)console.warn("THREE.Renderer: Texture marked for update but image is undefined.");else if(!1===s.complete)console.warn("THREE.Renderer: Texture marked for update but image is incomplete.");else{if(e.images){const r=[];for(const t of e.images)r.push(t);t.images=r}else t.image=s;void 0!==r.isDefaultTexture&&!0!==r.isDefaultTexture||(i.createTexture(e,t),r.isDefaultTexture=!1,r.generation=e.version),!0===e.source.dataReady&&i.updateTexture(e,t),t.needsMipmaps&&0===e.mipmaps.length&&i.generateMipmaps(e)}}else i.createDefaultTexture(e),r.isDefaultTexture=!0,r.generation=e.version}if(!0!==r.initialized){r.initialized=!0,r.generation=e.version,this.info.memory.textures++;const t=()=>{e.removeEventListener("dispose",t),this._destroyTexture(e)};e.addEventListener("dispose",t)}r.version=e.version}getSize(e,t=$f){let r=e.images?e.images[0]:e.image;return r?(void 0!==r.image&&(r=r.image),r instanceof HTMLVideoElement?(t.width=r.videoWidth||1,t.height=r.videoHeight||1,t.depth=1):r instanceof VideoFrame?(t.width=r.displayWidth||1,t.height=r.displayHeight||1,t.depth=1):(t.width=r.width||1,t.height=r.height||1,t.depth=e.isCubeTexture?6:r.depth||1)):t.width=t.height=t.depth=1,t}getMipLevels(e,t,r){let s;return s=e.isCompressedTexture?e.mipmaps?e.mipmaps.length:1:Math.floor(Math.log2(Math.max(t,r)))+1,s}needsMipmaps(e){return!0===e.isCompressedTexture||e.generateMipmaps}_destroyTexture(e){!0===this.has(e)&&(this.backend.destroySampler(e),this.backend.destroyTexture(e),this.delete(e),this.info.memory.textures--)}}class jf extends e{constructor(e,t,r,s=1){super(e,t,r),this.a=s}set(e,t,r,s=1){return this.a=s,super.set(e,t,r)}copy(e){return void 0!==e.a&&(this.a=e.a),super.copy(e)}clone(){return new this.constructor(this.r,this.g,this.b,this.a)}}class qf extends mn{static get type(){return"ParameterNode"}constructor(e,t=null){super(e,t),this.isParameterNode=!0}getHash(){return this.uuid}generate(){return this.name}}class Xf extends qs{static get type(){return"StackNode"}constructor(e=null){super(),this.nodes=[],this.outputNode=null,this.parent=e,this._currentCond=null,this._expressionNode=null,this.isStackNode=!0}getNodeType(e){return this.outputNode?this.outputNode.getNodeType(e):"void"}getMemberType(e,t){return this.outputNode?this.outputNode.getMemberType(e,t):"void"}add(e){return this.nodes.push(e),this}If(e,t){const r=new Fi(t);return this._currentCond=Ko(e,r),this.add(this._currentCond)}ElseIf(e,t){const r=new Fi(t),s=Ko(e,r);return this._currentCond.elseNode=s,this._currentCond=s,this}Else(e){return this._currentCond.elseNode=new Fi(e),this}Switch(e){return this._expressionNode=Di(e),this}Case(...e){const t=[];if(!(e.length>=2))throw new Error("TSL: Invalid parameter length. Case() requires at least two parameters.");for(let r=0;r<e.length-1;r++)t.push(this._expressionNode.equal(Di(e[r])));const r=new Fi(e[e.length-1]);let s=t[0];for(let e=1;e<t.length;e++)s=s.or(t[e]);const i=Ko(s,r);return null===this._currentCond?(this._currentCond=i,this.add(this._currentCond)):(this._currentCond.elseNode=i,this._currentCond=i,this)}Default(e){return this.Else(e),this}build(e,...t){const r=e.currentStack,s=Hi();zi(this),e.currentStack=this;const i=e.buildStage;for(const t of this.nodes)if("setup"===i)t.build(e);else if("analyze"===i)t.build(e,this);else if("generate"===i){const r=e.getDataFromNode(t,"any").stages,s=r&&r[e.shaderStage];if(t.isVarNode&&s&&1===s.length&&s[0]&&s[0].isStackNode)continue;t.build(e,"void")}const n=this.outputNode?this.outputNode.build(e,...t):super.build(e,...t);return zi(s),e.currentStack=r,n}}const Kf=Ui(Xf).setParameterLength(0,1);class Yf extends qs{static get type(){return"StructTypeNode"}constructor(e,t=null){var r;super("struct"),this.membersLayout=(r=e,Object.entries(r).map(([e,t])=>"string"==typeof t?{name:e,type:t,atomic:!1}:{name:e,type:t.type,atomic:t.atomic||!1})),this.name=t,this.isStructLayoutNode=!0}getLength(){const e=Float32Array.BYTES_PER_ELEMENT;let t=0;for(const r of this.membersLayout){const s=r.type,i=Cs(s)*e,n=t%8,a=n%Ms(s),o=n+a;t+=a,0!==o&&8-o<i&&(t+=8-o),t+=i}return 8*Math.ceil(t/8)/e}getMemberType(e,t){const r=this.membersLayout.find(e=>e.name===t);return r?r.type:"void"}getNodeType(e){return e.getStructTypeFromNode(this,this.membersLayout,this.name).name}setup(e){e.addInclude(this)}generate(e){return this.getNodeType(e)}}class Qf extends qs{static get type(){return"StructNode"}constructor(e,t){super("vec3"),this.structLayoutNode=e,this.values=t,this.isStructNode=!0}getNodeType(e){return this.structLayoutNode.getNodeType(e)}getMemberType(e,t){return this.structLayoutNode.getMemberType(e,t)}generate(e){const t=e.getVarFromNode(this),r=t.type,s=e.getPropertyName(t);return e.addLineFlowCode(`${s} = ${e.generateStruct(r,this.structLayoutNode.membersLayout,this.values)}`,this),t.name}}class Zf extends qs{static get type(){return"OutputStructNode"}constructor(...e){super(),this.members=e,this.isOutputStructNode=!0}getNodeType(e){const t=e.getNodeProperties(this);if(void 0===t.membersLayout){const r=this.members,s=[];for(let t=0;t<r.length;t++){const i="m"+t,n=r[t].getNodeType(e);s.push({name:i,type:n,index:t})}t.membersLayout=s,t.structType=e.getOutputStructTypeFromNode(this,t.membersLayout)}return t.structType.name}generate(e){const t=e.getOutputStructName(),r=this.members,s=""!==t?t+".":"";for(let t=0;t<r.length;t++){const i=r[t].build(e);e.addLineFlowCode(`${s}m${t} = ${i}`,this)}return t}}const Jf=Ui(Zf);function ey(e,t){for(let r=0;r<e.length;r++)if(e[r].name===t)return r;return-1}class ty extends Zf{static get type(){return"MRTNode"}constructor(e){super(),this.outputNodes=e,this.isMRTNode=!0}has(e){return void 0!==this.outputNodes[e]}get(e){return this.outputNodes[e]}merge(e){const t={...this.outputNodes,...e.outputNodes};return ry(t)}setup(e){const t=this.outputNodes,r=[],s=e.renderer.getRenderTarget().textures;for(const e in t){r[ey(s,e)]=an(t[e])}return this.members=r,super.setup(e)}}const ry=Ui(ty),sy=Gi(([e])=>{const t=e.toUint().mul(747796405).add(2891336453),r=t.shiftRight(t.shiftRight(28).add(4)).bitXor(t).mul(277803737);return r.shiftRight(22).bitXor(r).toFloat().mul(1/2**32)}),iy=(e,t)=>Ro(da(4,e.mul(la(1,e))),t),ny=Gi(([e])=>e.fract().sub(.5).abs()).setLayout({name:"tri",type:"float",inputs:[{name:"x",type:"float"}]}),ay=Gi(([e])=>tn(ny(e.z.add(ny(e.y.mul(1)))),ny(e.z.add(ny(e.x.mul(1)))),ny(e.y.add(ny(e.x.mul(1)))))).setLayout({name:"tri3",type:"vec3",inputs:[{name:"p",type:"vec3"}]}),oy=Gi(([e,t,r])=>{const s=tn(e).toVar(),i=qi(1.4).toVar(),n=qi(0).toVar(),a=tn(s).toVar();return ph({start:qi(0),end:qi(3),type:"float",condition:"<="},()=>{const e=tn(ay(a.mul(2))).toVar();s.addAssign(e.add(r.mul(qi(.1).mul(t)))),a.mulAssign(1.8),i.mulAssign(1.5),s.mulAssign(1.2);const o=qi(ny(s.z.add(ny(s.x.add(ny(s.y)))))).toVar();n.addAssign(o.div(i)),a.addAssign(.14)}),n}).setLayout({name:"triNoise3D",type:"float",inputs:[{name:"position",type:"vec3"},{name:"speed",type:"float"},{name:"time",type:"float"}]});class uy extends qs{static get type(){return"FunctionOverloadingNode"}constructor(e=[],...t){super(),this.functionNodes=e,this.parametersNodes=t,this._candidateFnCall=null,this.global=!0}getNodeType(){return this.functionNodes[0].shaderNode.layout.type}setup(e){const t=this.parametersNodes;let r=this._candidateFnCall;if(null===r){let s=null,i=-1;for(const r of this.functionNodes){const n=r.shaderNode.layout;if(null===n)throw new Error("FunctionOverloadingNode: FunctionNode must be a layout.");const a=n.inputs;if(t.length===a.length){let n=0;for(let r=0;r<t.length;r++){const s=t[r],i=a[r];s.getNodeType(e)===i.type?n++:n=0}n>i&&(s=r,i=n)}}this._candidateFnCall=r=s(...t)}return r}}const ly=Ui(uy),dy=e=>(...t)=>ly(e,...t),cy=Jn(0).setGroup(Yn).onRenderUpdate(e=>e.time),hy=Jn(0).setGroup(Yn).onRenderUpdate(e=>e.deltaTime),py=Jn(0,"uint").setGroup(Yn).onRenderUpdate(e=>e.frameId),gy=Gi(([e,t,r=Qi(.5)])=>qm(e.sub(r),t).add(r)),my=Gi(([e,t,r=Qi(.5)])=>{const s=e.sub(r),i=s.dot(s),n=i.mul(i).mul(t);return e.add(s.mul(n))}),fy=Gi(({position:e=null,horizontal:t=!0,vertical:r=!1})=>{let s;null!==e?(s=Al.toVar(),s[3][0]=e.x,s[3][1]=e.y,s[3][2]=e.z):s=Al;const i=pl.mul(s);return Bi(t)&&(i[0][0]=Al[0].length(),i[0][1]=0,i[0][2]=0),Bi(r)&&(i[1][0]=0,i[1][1]=Al[1].length(),i[1][2]=0),i[2][0]=0,i[2][1]=0,i[2][2]=1,cl.mul(i).mul(Ol)}),yy=Gi(([e=null])=>{const t=Yh();return Yh(zh(e)).sub(t).lessThan(0).select(Rh,e)});class by extends qs{static get type(){return"SpriteSheetUVNode"}constructor(e,t=ju(),r=qi(0)){super("vec2"),this.countNode=e,this.uvNode=t,this.frameNode=r}setup(){const{frameNode:e,uvNode:t,countNode:r}=this,{width:s,height:i}=r,n=e.mod(s.mul(i)).floor(),a=n.mod(s),o=i.sub(n.add(1).div(s).ceil()),u=r.reciprocal(),l=Qi(a,o);return t.add(l).mul(u)}}const xy=Ui(by).setParameterLength(3),Ty=Gi(([e,t=null,r=null,s=qi(1),i=Ol,n=Yl])=>{let a=n.abs().normalize();a=a.div(a.dot(tn(1)));const o=i.yz.mul(s),u=i.zx.mul(s),l=i.xy.mul(s),d=e.value,c=null!==t?t.value:d,h=null!==r?r.value:d,p=el(d,o).mul(a.x),g=el(c,u).mul(a.y),m=el(h,l).mul(a.z);return ua(p,g,m)}),_y=new Me,vy=new r,Ny=new r,Sy=new r,Ey=new a,wy=new r(0,0,-1),Ay=new s,Ry=new r,Cy=new r,My=new s,Py=new t,By=new ue,Ly=Rh.flipX();By.depthTexture=new U(1,1);let Fy=!1;class Dy extends Zu{static get type(){return"ReflectorNode"}constructor(e={}){super(e.defaultTexture||By.texture,Ly),this._reflectorBaseNode=e.reflector||new Iy(this,e),this._depthNode=null,this.setUpdateMatrix(!1)}get reflector(){return this._reflectorBaseNode}get target(){return this._reflectorBaseNode.target}getDepthNode(){if(null===this._depthNode){if(!0!==this._reflectorBaseNode.depth)throw new Error("THREE.ReflectorNode: Depth node can only be requested when the reflector is created with { depth: true }. ");this._depthNode=Di(new Dy({defaultTexture:By.depthTexture,reflector:this._reflectorBaseNode}))}return this._depthNode}setup(e){return e.object.isQuadMesh||this._reflectorBaseNode.build(e),super.setup(e)}clone(){const e=new this.constructor(this.reflectorNode);return e.uvNode=this.uvNode,e.levelNode=this.levelNode,e.biasNode=this.biasNode,e.sampler=this.sampler,e.depthNode=this.depthNode,e.compareNode=this.compareNode,e.gradNode=this.gradNode,e._reflectorBaseNode=this._reflectorBaseNode,e}dispose(){super.dispose(),this._reflectorBaseNode.dispose()}}class Iy extends qs{static get type(){return"ReflectorBaseNode"}constructor(e,t={}){super();const{target:r=new Pe,resolution:s=1,generateMipmaps:i=!1,bounces:n=!0,depth:a=!1}=t;this.textureNode=e,this.target=r,this.resolution=s,this.generateMipmaps=i,this.bounces=n,this.depth=a,this.updateBeforeType=n?Us.RENDER:Us.FRAME,this.virtualCameras=new WeakMap,this.renderTargets=new Map,this.forceUpdate=!1,this.hasOutput=!1}_updateResolution(e,t){const r=this.resolution;t.getDrawingBufferSize(Py),e.setSize(Math.round(Py.width*r),Math.round(Py.height*r))}setup(e){return this._updateResolution(By,e.renderer),super.setup(e)}dispose(){super.dispose();for(const e of this.renderTargets.values())e.dispose()}getVirtualCamera(e){let t=this.virtualCameras.get(e);return void 0===t&&(t=e.clone(),this.virtualCameras.set(e,t)),t}getRenderTarget(e){let t=this.renderTargets.get(e);return void 0===t&&(t=new ue(0,0,{type:ce}),!0===this.generateMipmaps&&(t.texture.minFilter=Be,t.texture.generateMipmaps=!0),!0===this.depth&&(t.depthTexture=new U),this.renderTargets.set(e,t)),t}updateBefore(e){if(!1===this.bounces&&Fy)return!1;Fy=!0;const{scene:t,camera:r,renderer:s,material:i}=e,{target:n}=this,a=this.getVirtualCamera(r),o=this.getRenderTarget(a);s.getDrawingBufferSize(Py),this._updateResolution(o,s),Ny.setFromMatrixPosition(n.matrixWorld),Sy.setFromMatrixPosition(r.matrixWorld),Ey.extractRotation(n.matrixWorld),vy.set(0,0,1),vy.applyMatrix4(Ey),Ry.subVectors(Ny,Sy);let u=!1;if(!0===Ry.dot(vy)>0&&!1===this.forceUpdate){if(!1===this.hasOutput)return void(Fy=!1);u=!0}Ry.reflect(vy).negate(),Ry.add(Ny),Ey.extractRotation(r.matrixWorld),wy.set(0,0,-1),wy.applyMatrix4(Ey),wy.add(Sy),Cy.subVectors(Ny,wy),Cy.reflect(vy).negate(),Cy.add(Ny),a.coordinateSystem=r.coordinateSystem,a.position.copy(Ry),a.up.set(0,1,0),a.up.applyMatrix4(Ey),a.up.reflect(vy),a.lookAt(Cy),a.near=r.near,a.far=r.far,a.updateMatrixWorld(),a.projectionMatrix.copy(r.projectionMatrix),_y.setFromNormalAndCoplanarPoint(vy,Ny),_y.applyMatrix4(a.matrixWorldInverse),Ay.set(_y.normal.x,_y.normal.y,_y.normal.z,_y.constant);const l=a.projectionMatrix;My.x=(Math.sign(Ay.x)+l.elements[8])/l.elements[0],My.y=(Math.sign(Ay.y)+l.elements[9])/l.elements[5],My.z=-1,My.w=(1+l.elements[10])/l.elements[14],Ay.multiplyScalar(1/Ay.dot(My));l.elements[2]=Ay.x,l.elements[6]=Ay.y,l.elements[10]=s.coordinateSystem===d?Ay.z-0:Ay.z+1-0,l.elements[14]=Ay.w,this.textureNode.value=o.texture,!0===this.depth&&(this.textureNode.getDepthNode().value=o.depthTexture),i.visible=!1;const c=s.getRenderTarget(),h=s.getMRT(),p=s.autoClear;s.setMRT(null),s.setRenderTarget(o),s.autoClear=!0,u?(s.clear(),this.hasOutput=!1):(s.render(t,a),this.hasOutput=!0),s.setMRT(h),s.setRenderTarget(c),s.autoClear=p,i.visible=!0,Fy=!1,this.forceUpdate=!1}}const Vy=new ae(-1,1,1,-1,0,1);class Uy extends pe{constructor(e=!1){super();const t=!1===e?[0,-1,0,1,2,1]:[0,2,0,0,2,0];this.setAttribute("position",new Le([-1,3,0,-1,-1,0,3,-1,0],3)),this.setAttribute("uv",new Le(t,2))}}const Oy=new Uy;class ky extends X{constructor(e=null){super(Oy,e),this.camera=Vy,this.isQuadMesh=!0}async renderAsync(e){return e.renderAsync(this,Vy)}render(e){e.render(this,Vy)}}const Gy=new t;class zy extends Zu{static get type(){return"RTTNode"}constructor(e,t=null,r=null,s={type:ce}){const i=new ue(t,r,s);super(i.texture,ju()),this.isRTTNode=!0,this.node=e,this.width=t,this.height=r,this.pixelRatio=1,this.renderTarget=i,this.textureNeedsUpdate=!0,this.autoUpdate=!0,this._rttNode=null,this._quadMesh=new ky(new cp),this.updateBeforeType=Us.RENDER}get autoResize(){return null===this.width}setup(e){return this._rttNode=this.node.context(e.getSharedContext()),this._quadMesh.material.name="RTT",this._quadMesh.material.needsUpdate=!0,super.setup(e)}setSize(e,t){this.width=e,this.height=t;const r=e*this.pixelRatio,s=t*this.pixelRatio;this.renderTarget.setSize(r,s),this.textureNeedsUpdate=!0}setPixelRatio(e){this.pixelRatio=e,this.setSize(this.width,this.height)}updateBefore({renderer:e}){if(!1===this.textureNeedsUpdate&&!1===this.autoUpdate)return;if(this.textureNeedsUpdate=!1,!0===this.autoResize){const t=e.getPixelRatio(),r=e.getSize(Gy),s=r.width*t,i=r.height*t;s===this.renderTarget.width&&i===this.renderTarget.height||(this.renderTarget.setSize(s,i),this.textureNeedsUpdate=!0)}this._quadMesh.material.fragmentNode=this._rttNode;const t=e.getRenderTarget();e.setRenderTarget(this.renderTarget),this._quadMesh.render(e),e.setRenderTarget(t)}clone(){const e=new Zu(this.value,this.uvNode,this.levelNode);return e.sampler=this.sampler,e.referenceNode=this,e}}const Hy=(e,...t)=>Di(new zy(Di(e),...t)),$y=Gi(([e,t,r],s)=>{let i;s.renderer.coordinateSystem===d?(e=Qi(e.x,e.y.oneMinus()).mul(2).sub(1),i=an(tn(e,t),1)):i=an(tn(e.x,e.y.oneMinus(),t).mul(2).sub(1),1);const n=an(r.mul(i));return n.xyz.div(n.w)}),Wy=Gi(([e,t])=>{const r=t.mul(an(e,1)),s=r.xy.div(r.w).mul(.5).add(.5).toVar();return Qi(s.x,s.y.oneMinus())}),jy=Gi(([e,t,r])=>{const s=Xu(tl(t)),i=Zi(e.mul(s)).toVar(),n=tl(t,i).toVar(),a=tl(t,i.sub(Zi(2,0))).toVar(),o=tl(t,i.sub(Zi(1,0))).toVar(),u=tl(t,i.add(Zi(1,0))).toVar(),l=tl(t,i.add(Zi(2,0))).toVar(),d=tl(t,i.add(Zi(0,2))).toVar(),c=tl(t,i.add(Zi(0,1))).toVar(),h=tl(t,i.sub(Zi(0,1))).toVar(),p=tl(t,i.sub(Zi(0,2))).toVar(),g=no(la(qi(2).mul(o).sub(a),n)).toVar(),m=no(la(qi(2).mul(u).sub(l),n)).toVar(),f=no(la(qi(2).mul(c).sub(d),n)).toVar(),y=no(la(qi(2).mul(h).sub(p),n)).toVar(),b=$y(e,n,r).toVar(),x=g.lessThan(m).select(b.sub($y(e.sub(Qi(qi(1).div(s.x),0)),o,r)),b.negate().add($y(e.add(Qi(qi(1).div(s.x),0)),u,r))),T=f.lessThan(y).select(b.sub($y(e.add(Qi(0,qi(1).div(s.y))),c,r)),b.negate().add($y(e.sub(Qi(0,qi(1).div(s.y))),h,r)));return Qa(Ao(x,T))});class qy extends qs{static get type(){return"SampleNode"}constructor(e){super(),this.callback=e,this.isSampleNode=!0}setup(){return this.sample(ju())}sample(e){return this.callback(e)}}class Xy extends L{constructor(e,t,r=Float32Array){super(ArrayBuffer.isView(e)?e:new r(e*t),t),this.isStorageInstancedBufferAttribute=!0}}class Ky extends ge{constructor(e,t,r=Float32Array){super(ArrayBuffer.isView(e)?e:new r(e*t),t),this.isStorageBufferAttribute=!0}}class Yy extends qs{static get type(){return"PointUVNode"}constructor(){super("vec2"),this.isPointUVNode=!0}generate(){return"vec2( gl_PointCoord.x, 1.0 - gl_PointCoord.y )"}}const Qy=Oi(Yy),Zy=new w,Jy=new a;class eb extends qs{static get type(){return"SceneNode"}constructor(e=eb.BACKGROUND_BLURRINESS,t=null){super(),this.scope=e,this.scene=t}setup(e){const t=this.scope,r=null!==this.scene?this.scene:e.scene;let s;return t===eb.BACKGROUND_BLURRINESS?s=Nd("backgroundBlurriness","float",r):t===eb.BACKGROUND_INTENSITY?s=Nd("backgroundIntensity","float",r):t===eb.BACKGROUND_ROTATION?s=Jn("mat4").label("backgroundRotation").setGroup(Yn).onRenderUpdate(()=>{const e=r.background;return null!==e&&e.isTexture&&e.mapping!==Fe?(Zy.copy(r.backgroundRotation),Zy.x*=-1,Zy.y*=-1,Zy.z*=-1,Jy.makeRotationFromEuler(Zy)):Jy.identity(),Jy}):console.error("THREE.SceneNode: Unknown scope:",t),s}}eb.BACKGROUND_BLURRINESS="backgroundBlurriness",eb.BACKGROUND_INTENSITY="backgroundIntensity",eb.BACKGROUND_ROTATION="backgroundRotation";const tb=Oi(eb,eb.BACKGROUND_BLURRINESS),rb=Oi(eb,eb.BACKGROUND_INTENSITY),sb=Oi(eb,eb.BACKGROUND_ROTATION);class ib extends Zu{static get type(){return"StorageTextureNode"}constructor(e,t,r=null){super(e,t),this.storeNode=r,this.isStorageTextureNode=!0,this.access=ks.WRITE_ONLY}getInputType(){return"storageTexture"}setup(e){super.setup(e);const t=e.getNodeProperties(this);return t.storeNode=this.storeNode,t}setAccess(e){return this.access=e,this}generate(e,t){let r;return r=null!==this.storeNode?this.generateStore(e):super.generate(e,t),r}toReadWrite(){return this.setAccess(ks.READ_WRITE)}toReadOnly(){return this.setAccess(ks.READ_ONLY)}toWriteOnly(){return this.setAccess(ks.WRITE_ONLY)}generateStore(e){const t=e.getNodeProperties(this),{uvNode:r,storeNode:s,depthNode:i}=t,n=super.generate(e,"property"),a=r.build(e,!0===this.value.is3DTexture?"uvec3":"uvec2"),o=s.build(e,"vec4"),u=i?i.build(e,"int"):null,l=e.generateTextureStore(e,n,a,u,o);e.addLineFlowCode(l,this)}clone(){const e=super.clone();return e.storeNode=this.storeNode,e}}const nb=Ui(ib).setParameterLength(1,3),ab=Gi(({texture:e,uv:t})=>{const r=1e-4,s=tn().toVar();return $i(t.x.lessThan(r),()=>{s.assign(tn(1,0,0))}).ElseIf(t.y.lessThan(r),()=>{s.assign(tn(0,1,0))}).ElseIf(t.z.lessThan(r),()=>{s.assign(tn(0,0,1))}).ElseIf(t.x.greaterThan(.9999),()=>{s.assign(tn(-1,0,0))}).ElseIf(t.y.greaterThan(.9999),()=>{s.assign(tn(0,-1,0))}).ElseIf(t.z.greaterThan(.9999),()=>{s.assign(tn(0,0,-1))}).Else(()=>{const r=.01,i=e.sample(t.add(tn(-.01,0,0))).r.sub(e.sample(t.add(tn(r,0,0))).r),n=e.sample(t.add(tn(0,-.01,0))).r.sub(e.sample(t.add(tn(0,r,0))).r),a=e.sample(t.add(tn(0,0,-.01))).r.sub(e.sample(t.add(tn(0,0,r))).r);s.assign(tn(i,n,a))}),s.normalize()});class ob extends Zu{static get type(){return"Texture3DNode"}constructor(e,t=null,r=null){super(e,t,r),this.isTexture3DNode=!0}getInputType(){return"texture3D"}getDefaultUV(){return tn(.5,.5,.5)}setUpdateMatrix(){}setupUV(e,t){const r=this.value;return!e.isFlipY()||!0!==r.isRenderTargetTexture&&!0!==r.isFramebufferTexture||(t=this.sampler?t.flipY():t.setY(Xi(Xu(this,this.levelNode).y).sub(t.y).sub(1))),t}generateUV(e,t){return t.build(e,"vec3")}normal(e){return ab({texture:this,uv:e})}}const ub=Ui(ob).setParameterLength(1,3);class lb extends vd{static get type(){return"UserDataNode"}constructor(e,t,r=null){super(e,t,r),this.userData=r}updateReference(e){return this.reference=null!==this.userData?this.userData:e.object.userData,this.reference}}const db=new WeakMap;class cb extends Ys{static get type(){return"VelocityNode"}constructor(){super("vec2"),this.projectionMatrix=null,this.updateType=Us.OBJECT,this.updateAfterType=Us.OBJECT,this.previousModelWorldMatrix=Jn(new a),this.previousProjectionMatrix=Jn(new a).setGroup(Yn),this.previousCameraViewMatrix=Jn(new a)}setProjectionMatrix(e){this.projectionMatrix=e}update({frameId:e,camera:t,object:r}){const s=pb(r);this.previousModelWorldMatrix.value.copy(s);const i=hb(t);i.frameId!==e&&(i.frameId=e,void 0===i.previousProjectionMatrix?(i.previousProjectionMatrix=new a,i.previousCameraViewMatrix=new a,i.currentProjectionMatrix=new a,i.currentCameraViewMatrix=new a,i.previousProjectionMatrix.copy(this.projectionMatrix||t.projectionMatrix),i.previousCameraViewMatrix.copy(t.matrixWorldInverse)):(i.previousProjectionMatrix.copy(i.currentProjectionMatrix),i.previousCameraViewMatrix.copy(i.currentCameraViewMatrix)),i.currentProjectionMatrix.copy(this.projectionMatrix||t.projectionMatrix),i.currentCameraViewMatrix.copy(t.matrixWorldInverse),this.previousProjectionMatrix.value.copy(i.previousProjectionMatrix),this.previousCameraViewMatrix.value.copy(i.previousCameraViewMatrix))}updateAfter({object:e}){pb(e).copy(e.matrixWorld)}setup(){const e=null===this.projectionMatrix?cl:Jn(this.projectionMatrix),t=this.previousCameraViewMatrix.mul(this.previousModelWorldMatrix),r=e.mul(Fl).mul(Ol),s=this.previousProjectionMatrix.mul(t).mul(kl),i=r.xy.div(r.w),n=s.xy.div(s.w);return la(i,n)}}function hb(e){let t=db.get(e);return void 0===t&&(t={},db.set(e,t)),t}function pb(e,t=0){const r=hb(e);let s=r[t];return void 0===s&&(r[t]=s=new a,r[t].copy(e.matrixWorld)),s}const gb=Oi(cb),mb=Gi(([e])=>xb(e.rgb)),fb=Gi(([e,t=qi(1)])=>t.mix(xb(e.rgb),e.rgb)),yb=Gi(([e,t=qi(1)])=>{const r=ua(e.r,e.g,e.b).div(3),s=e.r.max(e.g.max(e.b)),i=s.sub(r).mul(t).mul(-3);return Do(e.rgb,s,i)}),bb=Gi(([e,t=qi(1)])=>{const r=tn(.57735,.57735,.57735),s=t.cos();return tn(e.rgb.mul(s).add(r.cross(e.rgb).mul(t.sin()).add(r.mul(wo(r,e.rgb).mul(s.oneMinus())))))}),xb=(e,t=tn(c.getLuminanceCoefficients(new r)))=>wo(e,t),Tb=Gi(([e,t=tn(1),s=tn(0),i=tn(1),n=qi(1),a=tn(c.getLuminanceCoefficients(new r,le))])=>{const o=e.rgb.dot(tn(a)),u=_o(e.rgb.mul(t).add(s),0).toVar(),l=u.pow(i).toVar();return $i(u.r.greaterThan(0),()=>{u.r.assign(l.r)}),$i(u.g.greaterThan(0),()=>{u.g.assign(l.g)}),$i(u.b.greaterThan(0),()=>{u.b.assign(l.b)}),u.assign(o.add(u.sub(o).mul(n))),an(u.rgb,e.a)});class _b extends Ys{static get type(){return"PosterizeNode"}constructor(e,t){super(),this.sourceNode=e,this.stepsNode=t}setup(){const{sourceNode:e,stepsNode:t}=this;return e.mul(t).floor().div(t)}}const vb=Ui(_b).setParameterLength(2),Nb=new t;class Sb extends Zu{static get type(){return"PassTextureNode"}constructor(e,t){super(t),this.passNode=e,this.setUpdateMatrix(!1)}setup(e){return this.passNode.build(e),super.setup(e)}clone(){return new this.constructor(this.passNode,this.value)}}class Eb extends Sb{static get type(){return"PassMultipleTextureNode"}constructor(e,t,r=!1){super(e,null),this.textureName=t,this.previousTexture=r}updateTexture(){this.value=this.previousTexture?this.passNode.getPreviousTexture(this.textureName):this.passNode.getTexture(this.textureName)}setup(e){return this.updateTexture(),super.setup(e)}clone(){const e=new this.constructor(this.passNode,this.textureName,this.previousTexture);return e.uvNode=this.uvNode,e.levelNode=this.levelNode,e.biasNode=this.biasNode,e.sampler=this.sampler,e.depthNode=this.depthNode,e.compareNode=this.compareNode,e.gradNode=this.gradNode,e}}class wb extends Ys{static get type(){return"PassNode"}constructor(e,t,r,s={}){super("vec4"),this.scope=e,this.scene=t,this.camera=r,this.options=s,this._pixelRatio=1,this._width=1,this._height=1;const i=new U;i.isRenderTargetTexture=!0,i.name="depth";const n=new ue(this._width*this._pixelRatio,this._height*this._pixelRatio,{type:ce,...s});n.texture.name="output",n.depthTexture=i,this.renderTarget=n,this._textures={output:n.texture,depth:i},this._textureNodes={},this._linearDepthNodes={},this._viewZNodes={},this._previousTextures={},this._previousTextureNodes={},this._cameraNear=Jn(0),this._cameraFar=Jn(0),this._mrt=null,this._layers=null,this._resolution=1,this._viewport=null,this._scissor=null,this.isPassNode=!0,this.updateBeforeType=Us.FRAME,this.global=!0}setResolution(e){return this._resolution=e,this}getResolution(){return this._resolution}setLayers(e){return this._layers=e,this}getLayers(){return this._layers}setMRT(e){return this._mrt=e,this}getMRT(){return this._mrt}getTexture(e){let t=this._textures[e];if(void 0===t){t=this.renderTarget.texture.clone(),t.name=e,this._textures[e]=t,this.renderTarget.textures.push(t)}return t}getPreviousTexture(e){let t=this._previousTextures[e];return void 0===t&&(t=this.getTexture(e).clone(),this._previousTextures[e]=t),t}toggleTexture(e){const t=this._previousTextures[e];if(void 0!==t){const r=this._textures[e],s=this.renderTarget.textures.indexOf(r);this.renderTarget.textures[s]=t,this._textures[e]=t,this._previousTextures[e]=r,this._textureNodes[e].updateTexture(),this._previousTextureNodes[e].updateTexture()}}getTextureNode(e="output"){let t=this._textureNodes[e];return void 0===t&&(t=Di(new Eb(this,e)),t.updateTexture(),this._textureNodes[e]=t),t}getPreviousTextureNode(e="output"){let t=this._previousTextureNodes[e];return void 0===t&&(void 0===this._textureNodes[e]&&this.getTextureNode(e),t=Di(new Eb(this,e,!0)),t.updateTexture(),this._previousTextureNodes[e]=t),t}getViewZNode(e="depth"){let t=this._viewZNodes[e];if(void 0===t){const r=this._cameraNear,s=this._cameraFar;this._viewZNodes[e]=t=jh(this.getTextureNode(e),r,s)}return t}getLinearDepthNode(e="depth"){let t=this._linearDepthNodes[e];if(void 0===t){const r=this._cameraNear,s=this._cameraFar,i=this.getViewZNode(e);this._linearDepthNodes[e]=t=$h(i,r,s)}return t}setup({renderer:e}){return this.renderTarget.samples=void 0===this.options.samples?e.samples:this.options.samples,this.renderTarget.texture.type=e.getColorBufferType(),this.scope===wb.COLOR?this.getTextureNode():this.getLinearDepthNode()}updateBefore(e){const{renderer:t}=e,{scene:r}=this;let s,i;const n=t.getOutputRenderTarget();n&&!0===n.isXRRenderTarget?(i=1,s=t.xr.getCamera(),t.xr.updateCamera(s),Nb.set(n.width,n.height)):(s=this.camera,i=t.getPixelRatio(),t.getSize(Nb)),this._pixelRatio=i,this.setSize(Nb.width,Nb.height);const a=t.getRenderTarget(),o=t.getMRT(),u=s.layers.mask;this._cameraNear.value=s.near,this._cameraFar.value=s.far,null!==this._layers&&(s.layers.mask=this._layers.mask);for(const e in this._previousTextures)this.toggleTexture(e);t.setRenderTarget(this.renderTarget),t.setMRT(this._mrt),t.render(r,s),t.setRenderTarget(a),t.setMRT(o),s.layers.mask=u}setSize(e,t){this._width=e,this._height=t;const r=this._width*this._pixelRatio*this._resolution,s=this._height*this._pixelRatio*this._resolution;this.renderTarget.setSize(r,s),null!==this._scissor&&this.renderTarget.scissor.copy(this._scissor),null!==this._viewport&&this.renderTarget.viewport.copy(this._viewport)}setScissor(e,t,r,i){null===e?this._scissor=null:(null===this._scissor&&(this._scissor=new s),e.isVector4?this._scissor.copy(e):this._scissor.set(e,t,r,i),this._scissor.multiplyScalar(this._pixelRatio*this._resolution).floor())}setViewport(e,t,r,i){null===e?this._viewport=null:(null===this._viewport&&(this._viewport=new s),e.isVector4?this._viewport.copy(e):this._viewport.set(e,t,r,i),this._viewport.multiplyScalar(this._pixelRatio*this._resolution).floor())}setPixelRatio(e){this._pixelRatio=e,this.setSize(this._width,this._height)}dispose(){this.renderTarget.dispose()}}wb.COLOR="color",wb.DEPTH="depth";class Ab extends wb{static get type(){return"ToonOutlinePassNode"}constructor(e,t,r,s,i){super(wb.COLOR,e,t),this.colorNode=r,this.thicknessNode=s,this.alphaNode=i,this._materialCache=new WeakMap}updateBefore(e){const{renderer:t}=e,r=t.getRenderObjectFunction();t.setRenderObjectFunction((e,r,s,i,n,a,o,u)=>{if((n.isMeshToonMaterial||n.isMeshToonNodeMaterial)&&!1===n.wireframe){const l=this._getOutlineMaterial(n);t.renderObject(e,r,s,i,l,a,o,u)}t.renderObject(e,r,s,i,n,a,o,u)}),super.updateBefore(e),t.setRenderObjectFunction(r)}_createMaterial(){const e=new cp;e.isMeshToonOutlineMaterial=!0,e.name="Toon_Outline",e.side=S;const t=Yl.negate(),r=cl.mul(Fl),s=qi(1),i=r.mul(an(Ol,1)),n=r.mul(an(Ol.add(t),1)),a=Qa(i.sub(n));return e.vertexNode=i.add(a.mul(this.thicknessNode).mul(i.w).mul(s)),e.colorNode=an(this.colorNode,this.alphaNode),e}_getOutlineMaterial(e){let t=this._materialCache.get(e);return void 0===t&&(t=this._createMaterial(),this._materialCache.set(e,t)),t}}const Rb=Gi(([e,t])=>e.mul(t).clamp()).setLayout({name:"linearToneMapping",type:"vec3",inputs:[{name:"color",type:"vec3"},{name:"exposure",type:"float"}]}),Cb=Gi(([e,t])=>(e=e.mul(t)).div(e.add(1)).clamp()).setLayout({name:"reinhardToneMapping",type:"vec3",inputs:[{name:"color",type:"vec3"},{name:"exposure",type:"float"}]}),Mb=Gi(([e,t])=>{const r=(e=(e=e.mul(t)).sub(.004).max(0)).mul(e.mul(6.2).add(.5)),s=e.mul(e.mul(6.2).add(1.7)).add(.06);return r.div(s).pow(2.2)}).setLayout({name:"cineonToneMapping",type:"vec3",inputs:[{name:"color",type:"vec3"},{name:"exposure",type:"float"}]}),Pb=Gi(([e])=>{const t=e.mul(e.add(.0245786)).sub(90537e-9),r=e.mul(e.add(.432951).mul(.983729)).add(.238081);return t.div(r)}),Bb=Gi(([e,t])=>{const r=cn(.59719,.35458,.04823,.076,.90834,.01566,.0284,.13383,.83777),s=cn(1.60475,-.53108,-.07367,-.10208,1.10813,-.00605,-.00327,-.07276,1.07602);return e=e.mul(t).div(.6),e=r.mul(e),e=Pb(e),(e=s.mul(e)).clamp()}).setLayout({name:"acesFilmicToneMapping",type:"vec3",inputs:[{name:"color",type:"vec3"},{name:"exposure",type:"float"}]}),Lb=cn(tn(1.6605,-.1246,-.0182),tn(-.5876,1.1329,-.1006),tn(-.0728,-.0083,1.1187)),Fb=cn(tn(.6274,.0691,.0164),tn(.3293,.9195,.088),tn(.0433,.0113,.8956)),Db=Gi(([e])=>{const t=tn(e).toVar(),r=tn(t.mul(t)).toVar(),s=tn(r.mul(r)).toVar();return qi(15.5).mul(s.mul(r)).sub(da(40.14,s.mul(t))).add(da(31.96,s).sub(da(6.868,r.mul(t))).add(da(.4298,r).add(da(.1191,t).sub(.00232))))}),Ib=Gi(([e,t])=>{const r=tn(e).toVar(),s=cn(tn(.856627153315983,.137318972929847,.11189821299995),tn(.0951212405381588,.761241990602591,.0767994186031903),tn(.0482516061458583,.101439036467562,.811302368396859)),i=cn(tn(1.1271005818144368,-.1413297634984383,-.14132976349843826),tn(-.11060664309660323,1.157823702216272,-.11060664309660294),tn(-.016493938717834573,-.016493938717834257,1.2519364065950405)),n=qi(-12.47393),a=qi(4.026069);return r.mulAssign(t),r.assign(Fb.mul(r)),r.assign(s.mul(r)),r.assign(_o(r,1e-10)),r.assign(ja(r)),r.assign(r.sub(n).div(a.sub(n))),r.assign(Io(r,0,1)),r.assign(Db(r)),r.assign(i.mul(r)),r.assign(Ro(_o(tn(0),r),tn(2.2))),r.assign(Lb.mul(r)),r.assign(Io(r,0,1)),r}).setLayout({name:"agxToneMapping",type:"vec3",inputs:[{name:"color",type:"vec3"},{name:"exposure",type:"float"}]}),Vb=Gi(([e,t])=>{const r=qi(.76),s=qi(.15);e=e.mul(t);const i=To(e.r,To(e.g,e.b)),n=Ko(i.lessThan(.08),i.sub(da(6.25,i.mul(i))),.04);e.subAssign(n);const a=_o(e.r,_o(e.g,e.b));$i(a.lessThan(r),()=>e);const o=la(1,r),u=la(1,o.mul(o).div(a.add(o.sub(r))));e.mulAssign(u.div(a));const l=la(1,ca(1,s.mul(a.sub(u)).add(1)));return Do(e,tn(u),l)}).setLayout({name:"neutralToneMapping",type:"vec3",inputs:[{name:"color",type:"vec3"},{name:"exposure",type:"float"}]});class Ub extends qs{static get type(){return"CodeNode"}constructor(e="",t=[],r=""){super("code"),this.isCodeNode=!0,this.global=!0,this.code=e,this.includes=t,this.language=r}setIncludes(e){return this.includes=e,this}getIncludes(){return this.includes}generate(e){const t=this.getIncludes(e);for(const r of t)r.build(e);const r=e.getCodeFromNode(this,this.getNodeType(e));return r.code=this.code,r.code}serialize(e){super.serialize(e),e.code=this.code,e.language=this.language}deserialize(e){super.deserialize(e),this.code=e.code,this.language=e.language}}const Ob=Ui(Ub).setParameterLength(1,3);class kb extends Ub{static get type(){return"FunctionNode"}constructor(e="",t=[],r=""){super(e,t,r)}getNodeType(e){return this.getNodeFunction(e).type}getInputs(e){return this.getNodeFunction(e).inputs}getNodeFunction(e){const t=e.getDataFromNode(this);let r=t.nodeFunction;return void 0===r&&(r=e.parser.parseFunction(this.code),t.nodeFunction=r),r}generate(e,t){super.generate(e);const r=this.getNodeFunction(e),s=r.name,i=r.type,n=e.getCodeFromNode(this,i);""!==s&&(n.name=s);const a=e.getPropertyName(n),o=this.getNodeFunction(e).getCode(a);return n.code=o+"\n","property"===t?a:e.format(`${a}()`,i,t)}}const Gb=(e,t=[],r="")=>{for(let e=0;e<t.length;e++){const r=t[e];"function"==typeof r&&(t[e]=r.functionNode)}const s=Di(new kb(e,t,r)),i=(...e)=>s.call(...e);return i.functionNode=s,i};class zb extends qs{static get type(){return"ScriptableValueNode"}constructor(e=null){super(),this._value=e,this._cache=null,this.inputType=null,this.outputType=null,this.events=new o,this.isScriptableValueNode=!0}get isScriptableOutputNode(){return null!==this.outputType}set value(e){this._value!==e&&(this._cache&&"URL"===this.inputType&&this.value.value instanceof ArrayBuffer&&(URL.revokeObjectURL(this._cache),this._cache=null),this._value=e,this.events.dispatchEvent({type:"change"}),this.refresh())}get value(){return this._value}refresh(){this.events.dispatchEvent({type:"refresh"})}getValue(){const e=this.value;if(e&&null===this._cache&&"URL"===this.inputType&&e.value instanceof ArrayBuffer)this._cache=URL.createObjectURL(new Blob([e.value]));else if(e&&null!==e.value&&void 0!==e.value&&(("URL"===this.inputType||"String"===this.inputType)&&"string"==typeof e.value||"Number"===this.inputType&&"number"==typeof e.value||"Vector2"===this.inputType&&e.value.isVector2||"Vector3"===this.inputType&&e.value.isVector3||"Vector4"===this.inputType&&e.value.isVector4||"Color"===this.inputType&&e.value.isColor||"Matrix3"===this.inputType&&e.value.isMatrix3||"Matrix4"===this.inputType&&e.value.isMatrix4))return e.value;return this._cache||e}getNodeType(e){return this.value&&this.value.isNode?this.value.getNodeType(e):"float"}setup(){return this.value&&this.value.isNode?this.value:qi()}serialize(e){super.serialize(e),null!==this.value?"ArrayBuffer"===this.inputType?e.value=Fs(this.value):e.value=this.value?this.value.toJSON(e.meta).uuid:null:e.value=null,e.inputType=this.inputType,e.outputType=this.outputType}deserialize(e){super.deserialize(e);let t=null;null!==e.value&&(t="ArrayBuffer"===e.inputType?Ds(e.value):"Texture"===e.inputType?e.meta.textures[e.value]:e.meta.nodes[e.value]||null),this.value=t,this.inputType=e.inputType,this.outputType=e.outputType}}const Hb=Ui(zb).setParameterLength(1);class $b extends Map{get(e,t=null,...r){if(this.has(e))return super.get(e);if(null!==t){const s=t(...r);return this.set(e,s),s}}}class Wb{constructor(e){this.scriptableNode=e}get parameters(){return this.scriptableNode.parameters}get layout(){return this.scriptableNode.getLayout()}getInputLayout(e){return this.scriptableNode.getInputLayout(e)}get(e){const t=this.parameters[e];return t?t.getValue():null}}const jb=new $b;class qb extends qs{static get type(){return"ScriptableNode"}constructor(e=null,t={}){super(),this.codeNode=e,this.parameters=t,this._local=new $b,this._output=Hb(null),this._outputs={},this._source=this.source,this._method=null,this._object=null,this._value=null,this._needsOutputUpdate=!0,this.onRefresh=this.onRefresh.bind(this),this.isScriptableNode=!0}get source(){return this.codeNode?this.codeNode.code:""}setLocal(e,t){return this._local.set(e,t)}getLocal(e){return this._local.get(e)}onRefresh(){this._refresh()}getInputLayout(e){for(const t of this.getLayout())if(t.inputType&&(t.id===e||t.name===e))return t}getOutputLayout(e){for(const t of this.getLayout())if(t.outputType&&(t.id===e||t.name===e))return t}setOutput(e,t){const r=this._outputs;return void 0===r[e]?r[e]=Hb(t):r[e].value=t,this}getOutput(e){return this._outputs[e]}getParameter(e){return this.parameters[e]}setParameter(e,t){const r=this.parameters;return t&&t.isScriptableNode?(this.deleteParameter(e),r[e]=t,r[e].getDefaultOutput().events.addEventListener("refresh",this.onRefresh)):t&&t.isScriptableValueNode?(this.deleteParameter(e),r[e]=t,r[e].events.addEventListener("refresh",this.onRefresh)):void 0===r[e]?(r[e]=Hb(t),r[e].events.addEventListener("refresh",this.onRefresh)):r[e].value=t,this}getValue(){return this.getDefaultOutput().getValue()}deleteParameter(e){let t=this.parameters[e];return t&&(t.isScriptableNode&&(t=t.getDefaultOutput()),t.events.removeEventListener("refresh",this.onRefresh)),this}clearParameters(){for(const e of Object.keys(this.parameters))this.deleteParameter(e);return this.needsUpdate=!0,this}call(e,...t){const r=this.getObject()[e];if("function"==typeof r)return r(...t)}async callAsync(e,...t){const r=this.getObject()[e];if("function"==typeof r)return"AsyncFunction"===r.constructor.name?await r(...t):r(...t)}getNodeType(e){return this.getDefaultOutputNode().getNodeType(e)}refresh(e=null){null!==e?this.getOutput(e).refresh():this._refresh()}getObject(){if(this.needsUpdate&&this.dispose(),null!==this._object)return this._object;const e=new Wb(this),t=jb.get("THREE"),r=jb.get("TSL"),s=this.getMethod(),i=[e,this._local,jb,()=>this.refresh(),(e,t)=>this.setOutput(e,t),t,r];this._object=s(...i);const n=this._object.layout;if(n&&(!1===n.cache&&this._local.clear(),this._output.outputType=n.outputType||null,Array.isArray(n.elements)))for(const e of n.elements){const t=e.id||e.name;e.inputType&&(void 0===this.getParameter(t)&&this.setParameter(t,null),this.getParameter(t).inputType=e.inputType),e.outputType&&(void 0===this.getOutput(t)&&this.setOutput(t,null),this.getOutput(t).outputType=e.outputType)}return this._object}deserialize(e){super.deserialize(e);for(const e in this.parameters){let t=this.parameters[e];t.isScriptableNode&&(t=t.getDefaultOutput()),t.events.addEventListener("refresh",this.onRefresh)}}getLayout(){return this.getObject().layout}getDefaultOutputNode(){const e=this.getDefaultOutput().value;return e&&e.isNode?e:qi()}getDefaultOutput(){return this._exec()._output}getMethod(){if(this.needsUpdate&&this.dispose(),null!==this._method)return this._method;const e=["layout","init","main","dispose"].join(", "),t="\nreturn { ...output, "+e+" };",r="var "+e+"; var output = {};\n"+this.codeNode.code+t;return this._method=new Function(...["parameters","local","global","refresh","setOutput","THREE","TSL"],r),this._method}dispose(){null!==this._method&&(this._object&&"function"==typeof this._object.dispose&&this._object.dispose(),this._method=null,this._object=null,this._source=null,this._value=null,this._needsOutputUpdate=!0,this._output.value=null,this._outputs={})}setup(){return this.getDefaultOutputNode()}getCacheKey(e){const t=[xs(this.source),this.getDefaultOutputNode().getCacheKey(e)];for(const r in this.parameters)t.push(this.parameters[r].getCacheKey(e));return Ts(t)}set needsUpdate(e){!0===e&&this.dispose()}get needsUpdate(){return this.source!==this._source}_exec(){return null===this.codeNode||(!0===this._needsOutputUpdate&&(this._value=this.call("main"),this._needsOutputUpdate=!1),this._output.value=this._value),this}_refresh(){this.needsUpdate=!0,this._exec(),this._output.refresh()}}const Xb=Ui(qb).setParameterLength(1,2);function Kb(e){let t;const r=e.context.getViewZ;return void 0!==r&&(t=r(this)),(t||Hl.z).negate()}const Yb=Gi(([e,t],r)=>{const s=Kb(r);return Oo(e,t,s)}),Qb=Gi(([e],t)=>{const r=Kb(t);return e.mul(e,r,r).negate().exp().oneMinus()}),Zb=Gi(([e,t])=>an(t.toFloat().mix(In.rgb,e.toVec3()),In.a));let Jb=null,ex=null;class tx extends qs{static get type(){return"RangeNode"}constructor(e=qi(),t=qi()){super(),this.minNode=e,this.maxNode=t}getVectorLength(e){const t=e.getTypeLength(Ps(this.minNode.value)),r=e.getTypeLength(Ps(this.maxNode.value));return t>r?t:r}getNodeType(e){return e.object.count>1?e.getTypeFromLength(this.getVectorLength(e)):"float"}setup(e){const t=e.object;let r=null;if(t.count>1){const i=this.minNode.value,n=this.maxNode.value,a=e.getTypeLength(Ps(i)),o=e.getTypeLength(Ps(n));Jb=Jb||new s,ex=ex||new s,Jb.setScalar(0),ex.setScalar(0),1===a?Jb.setScalar(i):i.isColor?Jb.set(i.r,i.g,i.b,1):Jb.set(i.x,i.y,i.z||0,i.w||0),1===o?ex.setScalar(n):n.isColor?ex.set(n.r,n.g,n.b,1):ex.set(n.x,n.y,n.z||0,n.w||0);const l=4,d=l*t.count,c=new Float32Array(d);for(let e=0;e<d;e++){const t=e%l,r=Jb.getComponent(t),s=ex.getComponent(t);c[e]=u.lerp(r,s,Math.random())}const h=this.getNodeType(e);if(t.count<=4096)r=sl(c,"vec4",t.count).element(Xc).convert(h);else{const t=new L(c,4);e.geometry.setAttribute("__range"+this.id,t),r=Eu(t).convert(h)}}else r=qi(0);return r}}const rx=Ui(tx).setParameterLength(2);class sx extends qs{static get type(){return"ComputeBuiltinNode"}constructor(e,t){super(t),this._builtinName=e}getHash(e){return this.getBuiltinName(e)}getNodeType(){return this.nodeType}setBuiltinName(e){return this._builtinName=e,this}getBuiltinName(){return this._builtinName}hasBuiltin(e){return e.hasBuiltin(this._builtinName)}generate(e,t){const r=this.getBuiltinName(e),s=this.getNodeType(e);return"compute"===e.shaderStage?e.format(r,s,t):(console.warn(`ComputeBuiltinNode: Compute built-in value ${r} can not be accessed in the ${e.shaderStage} stage`),e.generateConst(s))}serialize(e){super.serialize(e),e.global=this.global,e._builtinName=this._builtinName}deserialize(e){super.deserialize(e),this.global=e.global,this._builtinName=e._builtinName}}const ix=(e,t)=>Di(new sx(e,t)),nx=ix("numWorkgroups","uvec3"),ax=ix("workgroupId","uvec3"),ox=ix("globalId","uvec3"),ux=ix("localId","uvec3"),lx=ix("subgroupSize","uint");const dx=Ui(class extends qs{constructor(e){super(),this.scope=e}generate(e){const{scope:t}=this,{renderer:r}=e;!0===r.backend.isWebGLBackend?e.addFlowCode(`\t// ${t}Barrier \n`):e.addLineFlowCode(`${t}Barrier()`,this)}});class cx extends Xs{constructor(e,t){super(e,t),this.isWorkgroupInfoElementNode=!0}generate(e,t){let r;const s=e.context.assign;if(r=super.generate(e),!0!==s){const s=this.getNodeType(e);r=e.format(r,s,t)}return r}}class hx extends qs{constructor(e,t,r=0){super(t),this.bufferType=t,this.bufferCount=r,this.isWorkgroupInfoNode=!0,this.elementType=t,this.scope=e}label(e){return this.name=e,this}setScope(e){return this.scope=e,this}getElementType(){return this.elementType}getInputType(){return`${this.scope}Array`}element(e){return Di(new cx(this,e))}generate(e){return e.getScopedArray(this.name||`${this.scope}Array_${this.id}`,this.scope.toLowerCase(),this.bufferType,this.bufferCount)}}class px extends qs{static get type(){return"AtomicFunctionNode"}constructor(e,t,r){super("uint"),this.method=e,this.pointerNode=t,this.valueNode=r,this.parents=!0}getInputType(e){return this.pointerNode.getNodeType(e)}getNodeType(e){return this.getInputType(e)}generate(e){const t=e.getNodeProperties(this),r=t.parents,s=this.method,i=this.getNodeType(e),n=this.getInputType(e),a=this.pointerNode,o=this.valueNode,u=[];u.push(`&${a.build(e,n)}`),null!==o&&u.push(o.build(e,n));const l=`${e.getMethod(s,i)}( ${u.join(", ")} )`;if(!(1===r.length&&!0===r[0].isStackNode))return void 0===t.constNode&&(t.constNode=Uu(l,i).toConst()),t.constNode.build(e);e.addLineFlowCode(l,this)}}px.ATOMIC_LOAD="atomicLoad",px.ATOMIC_STORE="atomicStore",px.ATOMIC_ADD="atomicAdd",px.ATOMIC_SUB="atomicSub",px.ATOMIC_MAX="atomicMax",px.ATOMIC_MIN="atomicMin",px.ATOMIC_AND="atomicAnd",px.ATOMIC_OR="atomicOr",px.ATOMIC_XOR="atomicXor";const gx=Ui(px),mx=(e,t,r)=>gx(e,t,r).toStack();let fx;function yx(e){fx=fx||new WeakMap;let t=fx.get(e);return void 0===t&&fx.set(e,t={}),t}function bx(e){const t=yx(e);return t.shadowMatrix||(t.shadowMatrix=Jn("mat4").setGroup(Yn).onRenderUpdate(t=>(!0===e.castShadow&&!1!==t.renderer.shadowMap.enabled||e.shadow.updateMatrices(e),e.shadow.matrix)))}function xx(e,t=Gl){const r=bx(e).mul(t);return r.xyz.div(r.w)}function Tx(e){const t=yx(e);return t.position||(t.position=Jn(new r).setGroup(Yn).onRenderUpdate((t,r)=>r.value.setFromMatrixPosition(e.matrixWorld)))}function _x(e){const t=yx(e);return t.targetPosition||(t.targetPosition=Jn(new r).setGroup(Yn).onRenderUpdate((t,r)=>r.value.setFromMatrixPosition(e.target.matrixWorld)))}function vx(e){const t=yx(e);return t.viewPosition||(t.viewPosition=Jn(new r).setGroup(Yn).onRenderUpdate(({camera:t},s)=>{s.value=s.value||new r,s.value.setFromMatrixPosition(e.matrixWorld),s.value.applyMatrix4(t.matrixWorldInverse)}))}const Nx=e=>pl.transformDirection(Tx(e).sub(_x(e))),Sx=(e,t)=>{for(const r of t)if(r.isAnalyticLightNode&&r.light.id===e)return r;return null},Ex=new WeakMap,wx=[];class Ax extends qs{static get type(){return"LightsNode"}constructor(){super("vec3"),this.totalDiffuseNode=fn("vec3","totalDiffuse"),this.totalSpecularNode=fn("vec3","totalSpecular"),this.outgoingLightNode=fn("vec3","outgoingLight"),this._lights=[],this._lightNodes=null,this._lightNodesHash=null,this.global=!0}customCacheKey(){const e=this._lights;for(let t=0;t<e.length;t++){const r=e[t];if(wx.push(r.id),wx.push(r.castShadow?1:0),!0===r.isSpotLight){const e=null!==r.map?r.map.id:-1,t=r.colorNode?r.colorNode.getCacheKey():-1;wx.push(e,t)}}const t=Ts(wx);return wx.length=0,t}getHash(e){if(null===this._lightNodesHash){null===this._lightNodes&&this.setupLightsNode(e);const t=[];for(const e of this._lightNodes)t.push(e.getSelf().getHash());this._lightNodesHash="lights-"+t.join(",")}return this._lightNodesHash}analyze(e){const t=e.getNodeProperties(this);for(const r of t.nodes)r.build(e);t.outputNode.build(e)}setupLightsNode(e){const t=[],r=this._lightNodes,s=(e=>e.sort((e,t)=>e.id-t.id))(this._lights),i=e.renderer.library;for(const e of s)if(e.isNode)t.push(Di(e));else{let s=null;if(null!==r&&(s=Sx(e.id,r)),null===s){const r=i.getLightNodeClass(e.constructor);if(null===r){console.warn(`LightsNode.setupNodeLights: Light node not found for ${e.constructor.name}`);continue}let s=null;Ex.has(e)?s=Ex.get(e):(s=Di(new r(e)),Ex.set(e,s)),t.push(s)}}this._lightNodes=t}setupDirectLight(e,t,r){const{lightingModel:s,reflectedLight:i}=e.context;s.direct({...r,lightNode:t,reflectedLight:i},e)}setupDirectRectAreaLight(e,t,r){const{lightingModel:s,reflectedLight:i}=e.context;s.directRectArea({...r,lightNode:t,reflectedLight:i},e)}setupLights(e,t){for(const r of t)r.build(e)}getLightNodes(e){return null===this._lightNodes&&this.setupLightsNode(e),this._lightNodes}setup(e){const t=e.lightsNode;e.lightsNode=this;let r=this.outgoingLightNode;const s=e.context,i=s.lightingModel,n=e.getNodeProperties(this);if(i){const{totalDiffuseNode:t,totalSpecularNode:a}=this;s.outgoingLight=r;const o=e.addStack();n.nodes=o.nodes,i.start(e);const{backdrop:u,backdropAlpha:l}=s,{directDiffuse:d,directSpecular:c,indirectDiffuse:h,indirectSpecular:p}=s.reflectedLight;let g=d.add(h);null!==u&&(g=tn(null!==l?l.mix(g,u):u),s.material.transparent=!0),t.assign(g),a.assign(c.add(p)),r.assign(t.add(a)),i.finish(e),r=r.bypass(e.removeStack())}else n.nodes=[];return e.lightsNode=t,r}setLights(e){return this._lights=e,this._lightNodes=null,this._lightNodesHash=null,this}getLights(){return this._lights}get hasLights(){return this._lights.length>0}}class Rx extends qs{static get type(){return"ShadowBaseNode"}constructor(e){super(),this.light=e,this.updateBeforeType=Us.RENDER,this.isShadowBaseNode=!0}setupShadowPosition({context:e,material:t}){Cx.assign(t.receivedShadowPositionNode||e.shadowPositionWorld||Gl)}}const Cx=fn("vec3","shadowPositionWorld");function Mx(t,r={}){return r.toneMapping=t.toneMapping,r.toneMappingExposure=t.toneMappingExposure,r.outputColorSpace=t.outputColorSpace,r.renderTarget=t.getRenderTarget(),r.activeCubeFace=t.getActiveCubeFace(),r.activeMipmapLevel=t.getActiveMipmapLevel(),r.renderObjectFunction=t.getRenderObjectFunction(),r.pixelRatio=t.getPixelRatio(),r.mrt=t.getMRT(),r.clearColor=t.getClearColor(r.clearColor||new e),r.clearAlpha=t.getClearAlpha(),r.autoClear=t.autoClear,r.scissorTest=t.getScissorTest(),r}function Px(e,t){return t=Mx(e,t),e.setMRT(null),e.setRenderObjectFunction(null),e.setClearColor(0,1),e.autoClear=!0,t}function Bx(e,t){e.toneMapping=t.toneMapping,e.toneMappingExposure=t.toneMappingExposure,e.outputColorSpace=t.outputColorSpace,e.setRenderTarget(t.renderTarget,t.activeCubeFace,t.activeMipmapLevel),e.setRenderObjectFunction(t.renderObjectFunction),e.setPixelRatio(t.pixelRatio),e.setMRT(t.mrt),e.setClearColor(t.clearColor,t.clearAlpha),e.autoClear=t.autoClear,e.setScissorTest(t.scissorTest)}function Lx(e,t={}){return t.background=e.background,t.backgroundNode=e.backgroundNode,t.overrideMaterial=e.overrideMaterial,t}function Fx(e,t){return t=Lx(e,t),e.background=null,e.backgroundNode=null,e.overrideMaterial=null,t}function Dx(e,t){e.background=t.background,e.backgroundNode=t.backgroundNode,e.overrideMaterial=t.overrideMaterial}function Ix(e,t,r){return r=Fx(t,r=Px(e,r))}function Vx(e,t,r){Bx(e,r),Dx(t,r)}var Ux=Object.freeze({__proto__:null,resetRendererAndSceneState:Ix,resetRendererState:Px,resetSceneState:Fx,restoreRendererAndSceneState:Vx,restoreRendererState:Bx,restoreSceneState:Dx,saveRendererAndSceneState:function(e,t,r={}){return r=Lx(t,r=Mx(e,r))},saveRendererState:Mx,saveSceneState:Lx});const Ox=new WeakMap,kx=Gi(({depthTexture:e,shadowCoord:t,depthLayer:r})=>{let s=el(e,t.xy).label("t_basic");return e.isArrayTexture&&(s=s.depth(r)),s.compare(t.z)}),Gx=Gi(({depthTexture:e,shadowCoord:t,shadow:r,depthLayer:s})=>{const i=(t,r)=>{let i=el(e,t);return e.isArrayTexture&&(i=i.depth(s)),i.compare(r)},n=Nd("mapSize","vec2",r).setGroup(Yn),a=Nd("radius","float",r).setGroup(Yn),o=Qi(1).div(n),u=o.x.negate().mul(a),l=o.y.negate().mul(a),d=o.x.mul(a),c=o.y.mul(a),h=u.div(2),p=l.div(2),g=d.div(2),m=c.div(2);return ua(i(t.xy.add(Qi(u,l)),t.z),i(t.xy.add(Qi(0,l)),t.z),i(t.xy.add(Qi(d,l)),t.z),i(t.xy.add(Qi(h,p)),t.z),i(t.xy.add(Qi(0,p)),t.z),i(t.xy.add(Qi(g,p)),t.z),i(t.xy.add(Qi(u,0)),t.z),i(t.xy.add(Qi(h,0)),t.z),i(t.xy,t.z),i(t.xy.add(Qi(g,0)),t.z),i(t.xy.add(Qi(d,0)),t.z),i(t.xy.add(Qi(h,m)),t.z),i(t.xy.add(Qi(0,m)),t.z),i(t.xy.add(Qi(g,m)),t.z),i(t.xy.add(Qi(u,c)),t.z),i(t.xy.add(Qi(0,c)),t.z),i(t.xy.add(Qi(d,c)),t.z)).mul(1/17)}),zx=Gi(({depthTexture:e,shadowCoord:t,shadow:r,depthLayer:s})=>{const i=(t,r)=>{let i=el(e,t);return e.isArrayTexture&&(i=i.depth(s)),i.compare(r)},n=Nd("mapSize","vec2",r).setGroup(Yn),a=Qi(1).div(n),o=a.x,u=a.y,l=t.xy,d=Za(l.mul(n).add(.5));return l.subAssign(d.mul(a)),ua(i(l,t.z),i(l.add(Qi(o,0)),t.z),i(l.add(Qi(0,u)),t.z),i(l.add(a),t.z),Do(i(l.add(Qi(o.negate(),0)),t.z),i(l.add(Qi(o.mul(2),0)),t.z),d.x),Do(i(l.add(Qi(o.negate(),u)),t.z),i(l.add(Qi(o.mul(2),u)),t.z),d.x),Do(i(l.add(Qi(0,u.negate())),t.z),i(l.add(Qi(0,u.mul(2))),t.z),d.y),Do(i(l.add(Qi(o,u.negate())),t.z),i(l.add(Qi(o,u.mul(2))),t.z),d.y),Do(Do(i(l.add(Qi(o.negate(),u.negate())),t.z),i(l.add(Qi(o.mul(2),u.negate())),t.z),d.x),Do(i(l.add(Qi(o.negate(),u.mul(2))),t.z),i(l.add(Qi(o.mul(2),u.mul(2))),t.z),d.x),d.y)).mul(1/9)}),Hx=Gi(({depthTexture:e,shadowCoord:t,depthLayer:r})=>{const s=qi(1).toVar();let i=el(e).sample(t.xy);e.isArrayTexture&&(i=i.depth(r)),i=i.rg;const n=vo(t.z,i.x);return $i(n.notEqual(qi(1)),()=>{const e=t.z.sub(i.x),r=_o(0,i.y.mul(i.y));let a=r.div(r.add(e.mul(e)));a=Io(la(a,.3).div(.95-.3)),s.assign(Io(_o(n,a)))}),s}),$x=Gi(([e,t,r])=>{let s=Gl.sub(e).length();return s=s.sub(t).div(r.sub(t)),s=s.saturate(),s}),Wx=e=>{let t=Ox.get(e);if(void 0===t){const r=e.isPointLight?(e=>{const t=e.shadow.camera,r=Nd("near","float",t).setGroup(Yn),s=Nd("far","float",t).setGroup(Yn),i=_l(e);return $x(i,r,s)})(e):null;t=new cp,t.colorNode=an(0,0,0,1),t.depthNode=r,t.isShadowPassMaterial=!0,t.name="ShadowMaterial",t.fog=!1,Ox.set(e,t)}return t},jx=new uf,qx=[],Xx=(e,t,r,s)=>{qx[0]=e,qx[1]=t;let i=jx.get(qx);return void 0!==i&&i.shadowType===r&&i.useVelocity===s||(i=(i,n,a,o,u,l,...d)=>{(!0===i.castShadow||i.receiveShadow&&r===De)&&(s&&(Ls(i).useVelocity=!0),i.onBeforeShadow(e,i,a,t.camera,o,n.overrideMaterial,l),e.renderObject(i,n,a,o,u,l,...d),i.onAfterShadow(e,i,a,t.camera,o,n.overrideMaterial,l))},i.shadowType=r,i.useVelocity=s,jx.set(qx,i)),qx[0]=null,qx[1]=null,i},Kx=Gi(({samples:e,radius:t,size:r,shadowPass:s,depthLayer:i})=>{const n=qi(0).toVar("meanVertical"),a=qi(0).toVar("squareMeanVertical"),o=e.lessThanEqual(qi(1)).select(qi(0),qi(2).div(e.sub(1))),u=e.lessThanEqual(qi(1)).select(qi(0),qi(-1));ph({start:Xi(0),end:Xi(e),type:"int",condition:"<"},({i:e})=>{const l=u.add(qi(e).mul(o));let d=s.sample(ua(Mh.xy,Qi(0,l).mul(t)).div(r));s.value.isArrayTexture&&(d=d.depth(i)),d=d.x,n.addAssign(d),a.addAssign(d.mul(d))}),n.divAssign(e),a.divAssign(e);const l=qa(a.sub(n.mul(n)));return Qi(n,l)}),Yx=Gi(({samples:e,radius:t,size:r,shadowPass:s,depthLayer:i})=>{const n=qi(0).toVar("meanHorizontal"),a=qi(0).toVar("squareMeanHorizontal"),o=e.lessThanEqual(qi(1)).select(qi(0),qi(2).div(e.sub(1))),u=e.lessThanEqual(qi(1)).select(qi(0),qi(-1));ph({start:Xi(0),end:Xi(e),type:"int",condition:"<"},({i:e})=>{const l=u.add(qi(e).mul(o));let d=s.sample(ua(Mh.xy,Qi(l,0).mul(t)).div(r));s.value.isArrayTexture&&(d=d.depth(i)),n.addAssign(d.x),a.addAssign(ua(d.y.mul(d.y),d.x.mul(d.x)))}),n.divAssign(e),a.divAssign(e);const l=qa(a.sub(n.mul(n)));return Qi(n,l)}),Qx=[kx,Gx,zx,Hx];let Zx;const Jx=new ky;class eT extends Rx{static get type(){return"ShadowNode"}constructor(e,t=null){super(e),this.shadow=t||e.shadow,this.shadowMap=null,this.vsmShadowMapVertical=null,this.vsmShadowMapHorizontal=null,this.vsmMaterialVertical=null,this.vsmMaterialHorizontal=null,this._node=null,this._cameraFrameId=new WeakMap,this.isShadowNode=!0,this.depthLayer=0}setupShadowFilter(e,{filterFn:t,depthTexture:r,shadowCoord:s,shadow:i,depthLayer:n}){const a=s.x.greaterThanEqual(0).and(s.x.lessThanEqual(1)).and(s.y.greaterThanEqual(0)).and(s.y.lessThanEqual(1)).and(s.z.lessThanEqual(1)),o=t({depthTexture:r,shadowCoord:s,shadow:i,depthLayer:n});return a.select(o,qi(1))}setupShadowCoord(e,t){const{shadow:r}=this,{renderer:s}=e,i=Nd("bias","float",r).setGroup(Yn);let n,a=t;if(r.camera.isOrthographicCamera||!0!==s.logarithmicDepthBuffer)a=a.xyz.div(a.w),n=a.z,s.coordinateSystem===d&&(n=n.mul(2).sub(1));else{const e=a.w;a=a.xy.div(e);const t=Nd("near","float",r.camera).setGroup(Yn),s=Nd("far","float",r.camera).setGroup(Yn);n=qh(e.negate(),t,s)}return a=tn(a.x,a.y.oneMinus(),n.add(i)),a}getShadowFilterFn(e){return Qx[e]}setupRenderTarget(e,t){const r=new U(e.mapSize.width,e.mapSize.height);r.name="ShadowDepthTexture",r.compareFunction=Ie;const s=t.createRenderTarget(e.mapSize.width,e.mapSize.height);return s.texture.name="ShadowMap",s.texture.type=e.mapType,s.depthTexture=r,{shadowMap:s,depthTexture:r}}setupShadow(e){const{renderer:t}=e,{light:r,shadow:s}=this,i=t.shadowMap.type,{depthTexture:n,shadowMap:a}=this.setupRenderTarget(s,e);if(s.camera.updateProjectionMatrix(),i===De&&!0!==s.isPointLightShadow){n.compareFunction=null,a.depth>1?(a._vsmShadowMapVertical||(a._vsmShadowMapVertical=e.createRenderTarget(s.mapSize.width,s.mapSize.height,{format:Ve,type:ce,depth:a.depth,depthBuffer:!1}),a._vsmShadowMapVertical.texture.name="VSMVertical"),this.vsmShadowMapVertical=a._vsmShadowMapVertical,a._vsmShadowMapHorizontal||(a._vsmShadowMapHorizontal=e.createRenderTarget(s.mapSize.width,s.mapSize.height,{format:Ve,type:ce,depth:a.depth,depthBuffer:!1}),a._vsmShadowMapHorizontal.texture.name="VSMHorizontal"),this.vsmShadowMapHorizontal=a._vsmShadowMapHorizontal):(this.vsmShadowMapVertical=e.createRenderTarget(s.mapSize.width,s.mapSize.height,{format:Ve,type:ce,depthBuffer:!1}),this.vsmShadowMapHorizontal=e.createRenderTarget(s.mapSize.width,s.mapSize.height,{format:Ve,type:ce,depthBuffer:!1}));let t=el(n);n.isArrayTexture&&(t=t.depth(this.depthLayer));let r=el(this.vsmShadowMapVertical.texture);n.isArrayTexture&&(r=r.depth(this.depthLayer));const i=Nd("blurSamples","float",s).setGroup(Yn),o=Nd("radius","float",s).setGroup(Yn),u=Nd("mapSize","vec2",s).setGroup(Yn);let l=this.vsmMaterialVertical||(this.vsmMaterialVertical=new cp);l.fragmentNode=Kx({samples:i,radius:o,size:u,shadowPass:t,depthLayer:this.depthLayer}).context(e.getSharedContext()),l.name="VSMVertical",l=this.vsmMaterialHorizontal||(this.vsmMaterialHorizontal=new cp),l.fragmentNode=Yx({samples:i,radius:o,size:u,shadowPass:r,depthLayer:this.depthLayer}).context(e.getSharedContext()),l.name="VSMHorizontal"}const o=Nd("intensity","float",s).setGroup(Yn),u=Nd("normalBias","float",s).setGroup(Yn),l=bx(r).mul(Cx.add(td.mul(u))),d=this.setupShadowCoord(e,l),c=s.filterNode||this.getShadowFilterFn(t.shadowMap.type)||null;if(null===c)throw new Error("THREE.WebGPURenderer: Shadow map type not supported yet.");const h=i===De&&!0!==s.isPointLightShadow?this.vsmShadowMapHorizontal.texture:n,p=this.setupShadowFilter(e,{filterFn:c,shadowTexture:a.texture,depthTexture:h,shadowCoord:d,shadow:s,depthLayer:this.depthLayer});let g=el(a.texture,d);n.isArrayTexture&&(g=g.depth(this.depthLayer));const m=Do(1,p.rgb.mix(g,1),o.mul(g.a)).toVar();return this.shadowMap=a,this.shadow.map=a,m}setup(e){if(!1!==e.renderer.shadowMap.enabled)return Gi(()=>{let t=this._node;return this.setupShadowPosition(e),null===t&&(this._node=t=this.setupShadow(e)),e.material.shadowNode&&console.warn('THREE.NodeMaterial: ".shadowNode" is deprecated. Use ".castShadowNode" instead.'),e.material.receivedShadowNode&&(t=e.material.receivedShadowNode(t)),t})()}renderShadow(e){const{shadow:t,shadowMap:r,light:s}=this,{renderer:i,scene:n}=e;t.updateMatrices(s),r.setSize(t.mapSize.width,t.mapSize.height,r.depth),i.render(n,t.camera)}updateShadow(e){const{shadowMap:t,light:r,shadow:s}=this,{renderer:i,scene:n,camera:a}=e,o=i.shadowMap.type,u=t.depthTexture.version;this._depthVersionCached=u;const l=s.camera.layers.mask;4294967294&s.camera.layers.mask||(s.camera.layers.mask=a.layers.mask);const d=i.getRenderObjectFunction(),c=i.getMRT(),h=!!c&&c.has("velocity");Zx=Ix(i,n,Zx),n.overrideMaterial=Wx(r),i.setRenderObjectFunction(Xx(i,s,o,h)),i.setClearColor(0,0),i.setRenderTarget(t),this.renderShadow(e),i.setRenderObjectFunction(d),o===De&&!0!==s.isPointLightShadow&&this.vsmPass(i),s.camera.layers.mask=l,Vx(i,n,Zx)}vsmPass(e){const{shadow:t}=this,r=this.shadowMap.depth;this.vsmShadowMapVertical.setSize(t.mapSize.width,t.mapSize.height,r),this.vsmShadowMapHorizontal.setSize(t.mapSize.width,t.mapSize.height,r),e.setRenderTarget(this.vsmShadowMapVertical),Jx.material=this.vsmMaterialVertical,Jx.render(e),e.setRenderTarget(this.vsmShadowMapHorizontal),Jx.material=this.vsmMaterialHorizontal,Jx.render(e)}dispose(){this.shadowMap.dispose(),this.shadowMap=null,null!==this.vsmShadowMapVertical&&(this.vsmShadowMapVertical.dispose(),this.vsmShadowMapVertical=null,this.vsmMaterialVertical.dispose(),this.vsmMaterialVertical=null),null!==this.vsmShadowMapHorizontal&&(this.vsmShadowMapHorizontal.dispose(),this.vsmShadowMapHorizontal=null,this.vsmMaterialHorizontal.dispose(),this.vsmMaterialHorizontal=null),super.dispose()}updateBefore(e){const{shadow:t}=this;let r=t.needsUpdate||t.autoUpdate;r&&(this._cameraFrameId[e.camera]===e.frameId&&(r=!1),this._cameraFrameId[e.camera]=e.frameId),r&&(this.updateShadow(e),this.shadowMap.depthTexture.version===this._depthVersionCached&&(t.needsUpdate=!1))}}const tT=(e,t)=>Di(new eT(e,t)),rT=new e,sT=Gi(([e,t])=>{const r=e.toVar(),s=no(r),i=ca(1,_o(s.x,_o(s.y,s.z)));s.mulAssign(i),r.mulAssign(i.mul(t.mul(2).oneMinus()));const n=Qi(r.xy).toVar(),a=t.mul(1.5).oneMinus();return $i(s.z.greaterThanEqual(a),()=>{$i(r.z.greaterThan(0),()=>{n.x.assign(la(4,r.x))})}).ElseIf(s.x.greaterThanEqual(a),()=>{const e=ao(r.x);n.x.assign(r.z.mul(e).add(e.mul(2)))}).ElseIf(s.y.greaterThanEqual(a),()=>{const e=ao(r.y);n.x.assign(r.x.add(e.mul(2)).add(2)),n.y.assign(r.z.mul(e).sub(2))}),Qi(.125,.25).mul(n).add(Qi(.375,.75)).flipY()}).setLayout({name:"cubeToUV",type:"vec2",inputs:[{name:"pos",type:"vec3"},{name:"texelSizeY",type:"float"}]}),iT=Gi(({depthTexture:e,bd3D:t,dp:r,texelSize:s})=>el(e,sT(t,s.y)).compare(r)),nT=Gi(({depthTexture:e,bd3D:t,dp:r,texelSize:s,shadow:i})=>{const n=Nd("radius","float",i).setGroup(Yn),a=Qi(-1,1).mul(n).mul(s.y);return el(e,sT(t.add(a.xyy),s.y)).compare(r).add(el(e,sT(t.add(a.yyy),s.y)).compare(r)).add(el(e,sT(t.add(a.xyx),s.y)).compare(r)).add(el(e,sT(t.add(a.yyx),s.y)).compare(r)).add(el(e,sT(t,s.y)).compare(r)).add(el(e,sT(t.add(a.xxy),s.y)).compare(r)).add(el(e,sT(t.add(a.yxy),s.y)).compare(r)).add(el(e,sT(t.add(a.xxx),s.y)).compare(r)).add(el(e,sT(t.add(a.yxx),s.y)).compare(r)).mul(1/9)}),aT=Gi(({filterFn:e,depthTexture:t,shadowCoord:r,shadow:s})=>{const i=r.xyz.toVar(),n=i.length(),a=Jn("float").setGroup(Yn).onRenderUpdate(()=>s.camera.near),o=Jn("float").setGroup(Yn).onRenderUpdate(()=>s.camera.far),u=Nd("bias","float",s).setGroup(Yn),l=Jn(s.mapSize).setGroup(Yn),d=qi(1).toVar();return $i(n.sub(o).lessThanEqual(0).and(n.sub(a).greaterThanEqual(0)),()=>{const r=n.sub(a).div(o.sub(a)).toVar();r.addAssign(u);const c=i.normalize(),h=Qi(1).div(l.mul(Qi(4,2)));d.assign(e({depthTexture:t,bd3D:c,dp:r,texelSize:h,shadow:s}))}),d}),oT=new s,uT=new t,lT=new t;class dT extends eT{static get type(){return"PointShadowNode"}constructor(e,t=null){super(e,t)}getShadowFilterFn(e){return e===Ue?iT:nT}setupShadowCoord(e,t){return t}setupShadowFilter(e,{filterFn:t,shadowTexture:r,depthTexture:s,shadowCoord:i,shadow:n}){return aT({filterFn:t,shadowTexture:r,depthTexture:s,shadowCoord:i,shadow:n})}renderShadow(e){const{shadow:t,shadowMap:r,light:s}=this,{renderer:i,scene:n}=e,a=t.getFrameExtents();lT.copy(t.mapSize),lT.multiply(a),r.setSize(lT.width,lT.height),uT.copy(t.mapSize);const o=i.autoClear,u=i.getClearColor(rT),l=i.getClearAlpha();i.autoClear=!1,i.setClearColor(t.clearColor,t.clearAlpha),i.clear();const d=t.getViewportCount();for(let e=0;e<d;e++){const a=t.getViewport(e),o=uT.x*a.x,u=lT.y-uT.y-uT.y*a.y;oT.set(o,u,uT.x*a.z,uT.y*a.w),r.viewport.copy(oT),t.updateMatrices(s,e),i.render(n,t.camera)}i.autoClear=o,i.setClearColor(u,l)}}const cT=(e,t)=>Di(new dT(e,t));class hT extends Th{static get type(){return"AnalyticLightNode"}constructor(t=null){super(),this.light=t,this.color=new e,this.colorNode=t&&t.colorNode||Jn(this.color).setGroup(Yn),this.baseColorNode=null,this.shadowNode=null,this.shadowColorNode=null,this.isAnalyticLightNode=!0,this.updateType=Us.FRAME}getHash(){return this.light.uuid}getLightVector(e){return vx(this.light).sub(e.context.positionView||Hl)}setupDirect(){}setupDirectRectArea(){}setupShadowNode(){return tT(this.light)}setupShadow(e){const{renderer:t}=e;if(!1===t.shadowMap.enabled)return;let r=this.shadowColorNode;if(null===r){const e=this.light.shadow.shadowNode;let t;t=void 0!==e?Di(e):this.setupShadowNode(),this.shadowNode=t,this.shadowColorNode=r=this.colorNode.mul(t),this.baseColorNode=this.colorNode}this.colorNode=r}setup(e){this.colorNode=this.baseColorNode||this.colorNode,this.light.castShadow?e.object.receiveShadow&&this.setupShadow(e):null!==this.shadowNode&&(this.shadowNode.dispose(),this.shadowNode=null,this.shadowColorNode=null);const t=this.setupDirect(e),r=this.setupDirectRectArea(e);t&&e.lightsNode.setupDirectLight(e,this,t),r&&e.lightsNode.setupDirectRectAreaLight(e,this,r)}update(){const{light:e}=this;this.color.copy(e.color).multiplyScalar(e.intensity)}}const pT=Gi(({lightDistance:e,cutoffDistance:t,decayExponent:r})=>{const s=e.pow(r).max(.01).reciprocal();return t.greaterThan(0).select(s.mul(e.div(t).pow4().oneMinus().clamp().pow2()),s)}),gT=({color:e,lightVector:t,cutoffDistance:r,decayExponent:s})=>{const i=t.normalize(),n=t.length(),a=pT({lightDistance:n,cutoffDistance:r,decayExponent:s});return{lightDirection:i,lightColor:e.mul(a)}};class mT extends hT{static get type(){return"PointLightNode"}constructor(e=null){super(e),this.cutoffDistanceNode=Jn(0).setGroup(Yn),this.decayExponentNode=Jn(2).setGroup(Yn)}update(e){const{light:t}=this;super.update(e),this.cutoffDistanceNode.value=t.distance,this.decayExponentNode.value=t.decay}setupShadowNode(){return cT(this.light)}setupDirect(e){return gT({color:this.colorNode,lightVector:this.getLightVector(e),cutoffDistance:this.cutoffDistanceNode,decayExponent:this.decayExponentNode})}}const fT=Gi(([e=ju()])=>{const t=e.mul(2),r=t.x.floor(),s=t.y.floor();return r.add(s).mod(2).sign()}),yT=Gi(([e=ju()],{renderer:t,material:r})=>{const s=Fo(e.mul(2).sub(1));let i;if(r.alphaToCoverage&&t.samples>1){const e=qi(s.fwidth()).toVar();i=Oo(e.oneMinus(),e.add(1),s).oneMinus()}else i=Ko(s.greaterThan(1),0,1);return i}),bT=Gi(([e,t,r])=>{const s=qi(r).toVar(),i=qi(t).toVar(),n=Yi(e).toVar();return Ko(n,i,s)}).setLayout({name:"mx_select",type:"float",inputs:[{name:"b",type:"bool"},{name:"t",type:"float"},{name:"f",type:"float"}]}),xT=Gi(([e,t])=>{const r=Yi(t).toVar(),s=qi(e).toVar();return Ko(r,s.negate(),s)}).setLayout({name:"mx_negate_if",type:"float",inputs:[{name:"val",type:"float"},{name:"b",type:"bool"}]}),TT=Gi(([e])=>{const t=qi(e).toVar();return Xi(Ka(t))}).setLayout({name:"mx_floor",type:"int",inputs:[{name:"x",type:"float"}]}),_T=Gi(([e,t])=>{const r=qi(e).toVar();return t.assign(TT(r)),r.sub(qi(t))}),vT=dy([Gi(([e,t,r,s,i,n])=>{const a=qi(n).toVar(),o=qi(i).toVar(),u=qi(s).toVar(),l=qi(r).toVar(),d=qi(t).toVar(),c=qi(e).toVar(),h=qi(la(1,o)).toVar();return la(1,a).mul(c.mul(h).add(d.mul(o))).add(a.mul(l.mul(h).add(u.mul(o))))}).setLayout({name:"mx_bilerp_0",type:"float",inputs:[{name:"v0",type:"float"},{name:"v1",type:"float"},{name:"v2",type:"float"},{name:"v3",type:"float"},{name:"s",type:"float"},{name:"t",type:"float"}]}),Gi(([e,t,r,s,i,n])=>{const a=qi(n).toVar(),o=qi(i).toVar(),u=tn(s).toVar(),l=tn(r).toVar(),d=tn(t).toVar(),c=tn(e).toVar(),h=qi(la(1,o)).toVar();return la(1,a).mul(c.mul(h).add(d.mul(o))).add(a.mul(l.mul(h).add(u.mul(o))))}).setLayout({name:"mx_bilerp_1",type:"vec3",inputs:[{name:"v0",type:"vec3"},{name:"v1",type:"vec3"},{name:"v2",type:"vec3"},{name:"v3",type:"vec3"},{name:"s",type:"float"},{name:"t",type:"float"}]})]),NT=dy([Gi(([e,t,r,s,i,n,a,o,u,l,d])=>{const c=qi(d).toVar(),h=qi(l).toVar(),p=qi(u).toVar(),g=qi(o).toVar(),m=qi(a).toVar(),f=qi(n).toVar(),y=qi(i).toVar(),b=qi(s).toVar(),x=qi(r).toVar(),T=qi(t).toVar(),_=qi(e).toVar(),v=qi(la(1,p)).toVar(),N=qi(la(1,h)).toVar();return qi(la(1,c)).toVar().mul(N.mul(_.mul(v).add(T.mul(p))).add(h.mul(x.mul(v).add(b.mul(p))))).add(c.mul(N.mul(y.mul(v).add(f.mul(p))).add(h.mul(m.mul(v).add(g.mul(p))))))}).setLayout({name:"mx_trilerp_0",type:"float",inputs:[{name:"v0",type:"float"},{name:"v1",type:"float"},{name:"v2",type:"float"},{name:"v3",type:"float"},{name:"v4",type:"float"},{name:"v5",type:"float"},{name:"v6",type:"float"},{name:"v7",type:"float"},{name:"s",type:"float"},{name:"t",type:"float"},{name:"r",type:"float"}]}),Gi(([e,t,r,s,i,n,a,o,u,l,d])=>{const c=qi(d).toVar(),h=qi(l).toVar(),p=qi(u).toVar(),g=tn(o).toVar(),m=tn(a).toVar(),f=tn(n).toVar(),y=tn(i).toVar(),b=tn(s).toVar(),x=tn(r).toVar(),T=tn(t).toVar(),_=tn(e).toVar(),v=qi(la(1,p)).toVar(),N=qi(la(1,h)).toVar();return qi(la(1,c)).toVar().mul(N.mul(_.mul(v).add(T.mul(p))).add(h.mul(x.mul(v).add(b.mul(p))))).add(c.mul(N.mul(y.mul(v).add(f.mul(p))).add(h.mul(m.mul(v).add(g.mul(p))))))}).setLayout({name:"mx_trilerp_1",type:"vec3",inputs:[{name:"v0",type:"vec3"},{name:"v1",type:"vec3"},{name:"v2",type:"vec3"},{name:"v3",type:"vec3"},{name:"v4",type:"vec3"},{name:"v5",type:"vec3"},{name:"v6",type:"vec3"},{name:"v7",type:"vec3"},{name:"s",type:"float"},{name:"t",type:"float"},{name:"r",type:"float"}]})]),ST=Gi(([e,t,r])=>{const s=qi(r).toVar(),i=qi(t).toVar(),n=Ki(e).toVar(),a=Ki(n.bitAnd(Ki(7))).toVar(),o=qi(bT(a.lessThan(Ki(4)),i,s)).toVar(),u=qi(da(2,bT(a.lessThan(Ki(4)),s,i))).toVar();return xT(o,Yi(a.bitAnd(Ki(1)))).add(xT(u,Yi(a.bitAnd(Ki(2)))))}).setLayout({name:"mx_gradient_float_0",type:"float",inputs:[{name:"hash",type:"uint"},{name:"x",type:"float"},{name:"y",type:"float"}]}),ET=Gi(([e,t,r,s])=>{const i=qi(s).toVar(),n=qi(r).toVar(),a=qi(t).toVar(),o=Ki(e).toVar(),u=Ki(o.bitAnd(Ki(15))).toVar(),l=qi(bT(u.lessThan(Ki(8)),a,n)).toVar(),d=qi(bT(u.lessThan(Ki(4)),n,bT(u.equal(Ki(12)).or(u.equal(Ki(14))),a,i))).toVar();return xT(l,Yi(u.bitAnd(Ki(1)))).add(xT(d,Yi(u.bitAnd(Ki(2)))))}).setLayout({name:"mx_gradient_float_1",type:"float",inputs:[{name:"hash",type:"uint"},{name:"x",type:"float"},{name:"y",type:"float"},{name:"z",type:"float"}]}),wT=dy([ST,ET]),AT=Gi(([e,t,r])=>{const s=qi(r).toVar(),i=qi(t).toVar(),n=sn(e).toVar();return tn(wT(n.x,i,s),wT(n.y,i,s),wT(n.z,i,s))}).setLayout({name:"mx_gradient_vec3_0",type:"vec3",inputs:[{name:"hash",type:"uvec3"},{name:"x",type:"float"},{name:"y",type:"float"}]}),RT=Gi(([e,t,r,s])=>{const i=qi(s).toVar(),n=qi(r).toVar(),a=qi(t).toVar(),o=sn(e).toVar();return tn(wT(o.x,a,n,i),wT(o.y,a,n,i),wT(o.z,a,n,i))}).setLayout({name:"mx_gradient_vec3_1",type:"vec3",inputs:[{name:"hash",type:"uvec3"},{name:"x",type:"float"},{name:"y",type:"float"},{name:"z",type:"float"}]}),CT=dy([AT,RT]),MT=Gi(([e])=>{const t=qi(e).toVar();return da(.6616,t)}).setLayout({name:"mx_gradient_scale2d_0",type:"float",inputs:[{name:"v",type:"float"}]}),PT=Gi(([e])=>{const t=qi(e).toVar();return da(.982,t)}).setLayout({name:"mx_gradient_scale3d_0",type:"float",inputs:[{name:"v",type:"float"}]}),BT=dy([MT,Gi(([e])=>{const t=tn(e).toVar();return da(.6616,t)}).setLayout({name:"mx_gradient_scale2d_1",type:"vec3",inputs:[{name:"v",type:"vec3"}]})]),LT=dy([PT,Gi(([e])=>{const t=tn(e).toVar();return da(.982,t)}).setLayout({name:"mx_gradient_scale3d_1",type:"vec3",inputs:[{name:"v",type:"vec3"}]})]),FT=Gi(([e,t])=>{const r=Xi(t).toVar(),s=Ki(e).toVar();return s.shiftLeft(r).bitOr(s.shiftRight(Xi(32).sub(r)))}).setLayout({name:"mx_rotl32",type:"uint",inputs:[{name:"x",type:"uint"},{name:"k",type:"int"}]}),DT=Gi(([e,t,r])=>{e.subAssign(r),e.bitXorAssign(FT(r,Xi(4))),r.addAssign(t),t.subAssign(e),t.bitXorAssign(FT(e,Xi(6))),e.addAssign(r),r.subAssign(t),r.bitXorAssign(FT(t,Xi(8))),t.addAssign(e),e.subAssign(r),e.bitXorAssign(FT(r,Xi(16))),r.addAssign(t),t.subAssign(e),t.bitXorAssign(FT(e,Xi(19))),e.addAssign(r),r.subAssign(t),r.bitXorAssign(FT(t,Xi(4))),t.addAssign(e)}),IT=Gi(([e,t,r])=>{const s=Ki(r).toVar(),i=Ki(t).toVar(),n=Ki(e).toVar();return s.bitXorAssign(i),s.subAssign(FT(i,Xi(14))),n.bitXorAssign(s),n.subAssign(FT(s,Xi(11))),i.bitXorAssign(n),i.subAssign(FT(n,Xi(25))),s.bitXorAssign(i),s.subAssign(FT(i,Xi(16))),n.bitXorAssign(s),n.subAssign(FT(s,Xi(4))),i.bitXorAssign(n),i.subAssign(FT(n,Xi(14))),s.bitXorAssign(i),s.subAssign(FT(i,Xi(24))),s}).setLayout({name:"mx_bjfinal",type:"uint",inputs:[{name:"a",type:"uint"},{name:"b",type:"uint"},{name:"c",type:"uint"}]}),VT=Gi(([e])=>{const t=Ki(e).toVar();return qi(t).div(qi(Ki(Xi(4294967295))))}).setLayout({name:"mx_bits_to_01",type:"float",inputs:[{name:"bits",type:"uint"}]}),UT=Gi(([e])=>{const t=qi(e).toVar();return t.mul(t).mul(t).mul(t.mul(t.mul(6).sub(15)).add(10))}).setLayout({name:"mx_fade",type:"float",inputs:[{name:"t",type:"float"}]}),OT=dy([Gi(([e])=>{const t=Xi(e).toVar(),r=Ki(Ki(1)).toVar(),s=Ki(Ki(Xi(3735928559)).add(r.shiftLeft(Ki(2))).add(Ki(13))).toVar();return IT(s.add(Ki(t)),s,s)}).setLayout({name:"mx_hash_int_0",type:"uint",inputs:[{name:"x",type:"int"}]}),Gi(([e,t])=>{const r=Xi(t).toVar(),s=Xi(e).toVar(),i=Ki(Ki(2)).toVar(),n=Ki().toVar(),a=Ki().toVar(),o=Ki().toVar();return n.assign(a.assign(o.assign(Ki(Xi(3735928559)).add(i.shiftLeft(Ki(2))).add(Ki(13))))),n.addAssign(Ki(s)),a.addAssign(Ki(r)),IT(n,a,o)}).setLayout({name:"mx_hash_int_1",type:"uint",inputs:[{name:"x",type:"int"},{name:"y",type:"int"}]}),Gi(([e,t,r])=>{const s=Xi(r).toVar(),i=Xi(t).toVar(),n=Xi(e).toVar(),a=Ki(Ki(3)).toVar(),o=Ki().toVar(),u=Ki().toVar(),l=Ki().toVar();return o.assign(u.assign(l.assign(Ki(Xi(3735928559)).add(a.shiftLeft(Ki(2))).add(Ki(13))))),o.addAssign(Ki(n)),u.addAssign(Ki(i)),l.addAssign(Ki(s)),IT(o,u,l)}).setLayout({name:"mx_hash_int_2",type:"uint",inputs:[{name:"x",type:"int"},{name:"y",type:"int"},{name:"z",type:"int"}]}),Gi(([e,t,r,s])=>{const i=Xi(s).toVar(),n=Xi(r).toVar(),a=Xi(t).toVar(),o=Xi(e).toVar(),u=Ki(Ki(4)).toVar(),l=Ki().toVar(),d=Ki().toVar(),c=Ki().toVar();return l.assign(d.assign(c.assign(Ki(Xi(3735928559)).add(u.shiftLeft(Ki(2))).add(Ki(13))))),l.addAssign(Ki(o)),d.addAssign(Ki(a)),c.addAssign(Ki(n)),DT(l,d,c),l.addAssign(Ki(i)),IT(l,d,c)}).setLayout({name:"mx_hash_int_3",type:"uint",inputs:[{name:"x",type:"int"},{name:"y",type:"int"},{name:"z",type:"int"},{name:"xx",type:"int"}]}),Gi(([e,t,r,s,i])=>{const n=Xi(i).toVar(),a=Xi(s).toVar(),o=Xi(r).toVar(),u=Xi(t).toVar(),l=Xi(e).toVar(),d=Ki(Ki(5)).toVar(),c=Ki().toVar(),h=Ki().toVar(),p=Ki().toVar();return c.assign(h.assign(p.assign(Ki(Xi(3735928559)).add(d.shiftLeft(Ki(2))).add(Ki(13))))),c.addAssign(Ki(l)),h.addAssign(Ki(u)),p.addAssign(Ki(o)),DT(c,h,p),c.addAssign(Ki(a)),h.addAssign(Ki(n)),IT(c,h,p)}).setLayout({name:"mx_hash_int_4",type:"uint",inputs:[{name:"x",type:"int"},{name:"y",type:"int"},{name:"z",type:"int"},{name:"xx",type:"int"},{name:"yy",type:"int"}]})]),kT=dy([Gi(([e,t])=>{const r=Xi(t).toVar(),s=Xi(e).toVar(),i=Ki(OT(s,r)).toVar(),n=sn().toVar();return n.x.assign(i.bitAnd(Xi(255))),n.y.assign(i.shiftRight(Xi(8)).bitAnd(Xi(255))),n.z.assign(i.shiftRight(Xi(16)).bitAnd(Xi(255))),n}).setLayout({name:"mx_hash_vec3_0",type:"uvec3",inputs:[{name:"x",type:"int"},{name:"y",type:"int"}]}),Gi(([e,t,r])=>{const s=Xi(r).toVar(),i=Xi(t).toVar(),n=Xi(e).toVar(),a=Ki(OT(n,i,s)).toVar(),o=sn().toVar();return o.x.assign(a.bitAnd(Xi(255))),o.y.assign(a.shiftRight(Xi(8)).bitAnd(Xi(255))),o.z.assign(a.shiftRight(Xi(16)).bitAnd(Xi(255))),o}).setLayout({name:"mx_hash_vec3_1",type:"uvec3",inputs:[{name:"x",type:"int"},{name:"y",type:"int"},{name:"z",type:"int"}]})]),GT=dy([Gi(([e])=>{const t=Qi(e).toVar(),r=Xi().toVar(),s=Xi().toVar(),i=qi(_T(t.x,r)).toVar(),n=qi(_T(t.y,s)).toVar(),a=qi(UT(i)).toVar(),o=qi(UT(n)).toVar(),u=qi(vT(wT(OT(r,s),i,n),wT(OT(r.add(Xi(1)),s),i.sub(1),n),wT(OT(r,s.add(Xi(1))),i,n.sub(1)),wT(OT(r.add(Xi(1)),s.add(Xi(1))),i.sub(1),n.sub(1)),a,o)).toVar();return BT(u)}).setLayout({name:"mx_perlin_noise_float_0",type:"float",inputs:[{name:"p",type:"vec2"}]}),Gi(([e])=>{const t=tn(e).toVar(),r=Xi().toVar(),s=Xi().toVar(),i=Xi().toVar(),n=qi(_T(t.x,r)).toVar(),a=qi(_T(t.y,s)).toVar(),o=qi(_T(t.z,i)).toVar(),u=qi(UT(n)).toVar(),l=qi(UT(a)).toVar(),d=qi(UT(o)).toVar(),c=qi(NT(wT(OT(r,s,i),n,a,o),wT(OT(r.add(Xi(1)),s,i),n.sub(1),a,o),wT(OT(r,s.add(Xi(1)),i),n,a.sub(1),o),wT(OT(r.add(Xi(1)),s.add(Xi(1)),i),n.sub(1),a.sub(1),o),wT(OT(r,s,i.add(Xi(1))),n,a,o.sub(1)),wT(OT(r.add(Xi(1)),s,i.add(Xi(1))),n.sub(1),a,o.sub(1)),wT(OT(r,s.add(Xi(1)),i.add(Xi(1))),n,a.sub(1),o.sub(1)),wT(OT(r.add(Xi(1)),s.add(Xi(1)),i.add(Xi(1))),n.sub(1),a.sub(1),o.sub(1)),u,l,d)).toVar();return LT(c)}).setLayout({name:"mx_perlin_noise_float_1",type:"float",inputs:[{name:"p",type:"vec3"}]})]),zT=dy([Gi(([e])=>{const t=Qi(e).toVar(),r=Xi().toVar(),s=Xi().toVar(),i=qi(_T(t.x,r)).toVar(),n=qi(_T(t.y,s)).toVar(),a=qi(UT(i)).toVar(),o=qi(UT(n)).toVar(),u=tn(vT(CT(kT(r,s),i,n),CT(kT(r.add(Xi(1)),s),i.sub(1),n),CT(kT(r,s.add(Xi(1))),i,n.sub(1)),CT(kT(r.add(Xi(1)),s.add(Xi(1))),i.sub(1),n.sub(1)),a,o)).toVar();return BT(u)}).setLayout({name:"mx_perlin_noise_vec3_0",type:"vec3",inputs:[{name:"p",type:"vec2"}]}),Gi(([e])=>{const t=tn(e).toVar(),r=Xi().toVar(),s=Xi().toVar(),i=Xi().toVar(),n=qi(_T(t.x,r)).toVar(),a=qi(_T(t.y,s)).toVar(),o=qi(_T(t.z,i)).toVar(),u=qi(UT(n)).toVar(),l=qi(UT(a)).toVar(),d=qi(UT(o)).toVar(),c=tn(NT(CT(kT(r,s,i),n,a,o),CT(kT(r.add(Xi(1)),s,i),n.sub(1),a,o),CT(kT(r,s.add(Xi(1)),i),n,a.sub(1),o),CT(kT(r.add(Xi(1)),s.add(Xi(1)),i),n.sub(1),a.sub(1),o),CT(kT(r,s,i.add(Xi(1))),n,a,o.sub(1)),CT(kT(r.add(Xi(1)),s,i.add(Xi(1))),n.sub(1),a,o.sub(1)),CT(kT(r,s.add(Xi(1)),i.add(Xi(1))),n,a.sub(1),o.sub(1)),CT(kT(r.add(Xi(1)),s.add(Xi(1)),i.add(Xi(1))),n.sub(1),a.sub(1),o.sub(1)),u,l,d)).toVar();return LT(c)}).setLayout({name:"mx_perlin_noise_vec3_1",type:"vec3",inputs:[{name:"p",type:"vec3"}]})]),HT=dy([Gi(([e])=>{const t=qi(e).toVar(),r=Xi(TT(t)).toVar();return VT(OT(r))}).setLayout({name:"mx_cell_noise_float_0",type:"float",inputs:[{name:"p",type:"float"}]}),Gi(([e])=>{const t=Qi(e).toVar(),r=Xi(TT(t.x)).toVar(),s=Xi(TT(t.y)).toVar();return VT(OT(r,s))}).setLayout({name:"mx_cell_noise_float_1",type:"float",inputs:[{name:"p",type:"vec2"}]}),Gi(([e])=>{const t=tn(e).toVar(),r=Xi(TT(t.x)).toVar(),s=Xi(TT(t.y)).toVar(),i=Xi(TT(t.z)).toVar();return VT(OT(r,s,i))}).setLayout({name:"mx_cell_noise_float_2",type:"float",inputs:[{name:"p",type:"vec3"}]}),Gi(([e])=>{const t=an(e).toVar(),r=Xi(TT(t.x)).toVar(),s=Xi(TT(t.y)).toVar(),i=Xi(TT(t.z)).toVar(),n=Xi(TT(t.w)).toVar();return VT(OT(r,s,i,n))}).setLayout({name:"mx_cell_noise_float_3",type:"float",inputs:[{name:"p",type:"vec4"}]})]),$T=dy([Gi(([e])=>{const t=qi(e).toVar(),r=Xi(TT(t)).toVar();return tn(VT(OT(r,Xi(0))),VT(OT(r,Xi(1))),VT(OT(r,Xi(2))))}).setLayout({name:"mx_cell_noise_vec3_0",type:"vec3",inputs:[{name:"p",type:"float"}]}),Gi(([e])=>{const t=Qi(e).toVar(),r=Xi(TT(t.x)).toVar(),s=Xi(TT(t.y)).toVar();return tn(VT(OT(r,s,Xi(0))),VT(OT(r,s,Xi(1))),VT(OT(r,s,Xi(2))))}).setLayout({name:"mx_cell_noise_vec3_1",type:"vec3",inputs:[{name:"p",type:"vec2"}]}),Gi(([e])=>{const t=tn(e).toVar(),r=Xi(TT(t.x)).toVar(),s=Xi(TT(t.y)).toVar(),i=Xi(TT(t.z)).toVar();return tn(VT(OT(r,s,i,Xi(0))),VT(OT(r,s,i,Xi(1))),VT(OT(r,s,i,Xi(2))))}).setLayout({name:"mx_cell_noise_vec3_2",type:"vec3",inputs:[{name:"p",type:"vec3"}]}),Gi(([e])=>{const t=an(e).toVar(),r=Xi(TT(t.x)).toVar(),s=Xi(TT(t.y)).toVar(),i=Xi(TT(t.z)).toVar(),n=Xi(TT(t.w)).toVar();return tn(VT(OT(r,s,i,n,Xi(0))),VT(OT(r,s,i,n,Xi(1))),VT(OT(r,s,i,n,Xi(2))))}).setLayout({name:"mx_cell_noise_vec3_3",type:"vec3",inputs:[{name:"p",type:"vec4"}]})]),WT=Gi(([e,t,r,s])=>{const i=qi(s).toVar(),n=qi(r).toVar(),a=Xi(t).toVar(),o=tn(e).toVar(),u=qi(0).toVar(),l=qi(1).toVar();return ph(a,()=>{u.addAssign(l.mul(GT(o))),l.mulAssign(i),o.mulAssign(n)}),u}).setLayout({name:"mx_fractal_noise_float",type:"float",inputs:[{name:"p",type:"vec3"},{name:"octaves",type:"int"},{name:"lacunarity",type:"float"},{name:"diminish",type:"float"}]}),jT=Gi(([e,t,r,s])=>{const i=qi(s).toVar(),n=qi(r).toVar(),a=Xi(t).toVar(),o=tn(e).toVar(),u=tn(0).toVar(),l=qi(1).toVar();return ph(a,()=>{u.addAssign(l.mul(zT(o))),l.mulAssign(i),o.mulAssign(n)}),u}).setLayout({name:"mx_fractal_noise_vec3",type:"vec3",inputs:[{name:"p",type:"vec3"},{name:"octaves",type:"int"},{name:"lacunarity",type:"float"},{name:"diminish",type:"float"}]}),qT=Gi(([e,t,r,s])=>{const i=qi(s).toVar(),n=qi(r).toVar(),a=Xi(t).toVar(),o=tn(e).toVar();return Qi(WT(o,a,n,i),WT(o.add(tn(Xi(19),Xi(193),Xi(17))),a,n,i))}).setLayout({name:"mx_fractal_noise_vec2",type:"vec2",inputs:[{name:"p",type:"vec3"},{name:"octaves",type:"int"},{name:"lacunarity",type:"float"},{name:"diminish",type:"float"}]}),XT=Gi(([e,t,r,s])=>{const i=qi(s).toVar(),n=qi(r).toVar(),a=Xi(t).toVar(),o=tn(e).toVar(),u=tn(jT(o,a,n,i)).toVar(),l=qi(WT(o.add(tn(Xi(19),Xi(193),Xi(17))),a,n,i)).toVar();return an(u,l)}).setLayout({name:"mx_fractal_noise_vec4",type:"vec4",inputs:[{name:"p",type:"vec3"},{name:"octaves",type:"int"},{name:"lacunarity",type:"float"},{name:"diminish",type:"float"}]}),KT=dy([Gi(([e,t,r,s,i,n,a])=>{const o=Xi(a).toVar(),u=qi(n).toVar(),l=Xi(i).toVar(),d=Xi(s).toVar(),c=Xi(r).toVar(),h=Xi(t).toVar(),p=Qi(e).toVar(),g=tn($T(Qi(h.add(d),c.add(l)))).toVar(),m=Qi(g.x,g.y).toVar();m.subAssign(.5),m.mulAssign(u),m.addAssign(.5);const f=Qi(Qi(qi(h),qi(c)).add(m)).toVar(),y=Qi(f.sub(p)).toVar();return $i(o.equal(Xi(2)),()=>no(y.x).add(no(y.y))),$i(o.equal(Xi(3)),()=>_o(no(y.x),no(y.y))),wo(y,y)}).setLayout({name:"mx_worley_distance_0",type:"float",inputs:[{name:"p",type:"vec2"},{name:"x",type:"int"},{name:"y",type:"int"},{name:"xoff",type:"int"},{name:"yoff",type:"int"},{name:"jitter",type:"float"},{name:"metric",type:"int"}]}),Gi(([e,t,r,s,i,n,a,o,u])=>{const l=Xi(u).toVar(),d=qi(o).toVar(),c=Xi(a).toVar(),h=Xi(n).toVar(),p=Xi(i).toVar(),g=Xi(s).toVar(),m=Xi(r).toVar(),f=Xi(t).toVar(),y=tn(e).toVar(),b=tn($T(tn(f.add(p),m.add(h),g.add(c)))).toVar();b.subAssign(.5),b.mulAssign(d),b.addAssign(.5);const x=tn(tn(qi(f),qi(m),qi(g)).add(b)).toVar(),T=tn(x.sub(y)).toVar();return $i(l.equal(Xi(2)),()=>no(T.x).add(no(T.y)).add(no(T.z))),$i(l.equal(Xi(3)),()=>_o(no(T.x),no(T.y),no(T.z))),wo(T,T)}).setLayout({name:"mx_worley_distance_1",type:"float",inputs:[{name:"p",type:"vec3"},{name:"x",type:"int"},{name:"y",type:"int"},{name:"z",type:"int"},{name:"xoff",type:"int"},{name:"yoff",type:"int"},{name:"zoff",type:"int"},{name:"jitter",type:"float"},{name:"metric",type:"int"}]})]),YT=Gi(([e,t,r])=>{const s=Xi(r).toVar(),i=qi(t).toVar(),n=Qi(e).toVar(),a=Xi().toVar(),o=Xi().toVar(),u=Qi(_T(n.x,a),_T(n.y,o)).toVar(),l=qi(1e6).toVar();return ph({start:-1,end:Xi(1),name:"x",condition:"<="},({x:e})=>{ph({start:-1,end:Xi(1),name:"y",condition:"<="},({y:t})=>{const r=qi(KT(u,e,t,a,o,i,s)).toVar();l.assign(To(l,r))})}),$i(s.equal(Xi(0)),()=>{l.assign(qa(l))}),l}).setLayout({name:"mx_worley_noise_float_0",type:"float",inputs:[{name:"p",type:"vec2"},{name:"jitter",type:"float"},{name:"metric",type:"int"}]}),QT=Gi(([e,t,r])=>{const s=Xi(r).toVar(),i=qi(t).toVar(),n=Qi(e).toVar(),a=Xi().toVar(),o=Xi().toVar(),u=Qi(_T(n.x,a),_T(n.y,o)).toVar(),l=Qi(1e6,1e6).toVar();return ph({start:-1,end:Xi(1),name:"x",condition:"<="},({x:e})=>{ph({start:-1,end:Xi(1),name:"y",condition:"<="},({y:t})=>{const r=qi(KT(u,e,t,a,o,i,s)).toVar();$i(r.lessThan(l.x),()=>{l.y.assign(l.x),l.x.assign(r)}).ElseIf(r.lessThan(l.y),()=>{l.y.assign(r)})})}),$i(s.equal(Xi(0)),()=>{l.assign(qa(l))}),l}).setLayout({name:"mx_worley_noise_vec2_0",type:"vec2",inputs:[{name:"p",type:"vec2"},{name:"jitter",type:"float"},{name:"metric",type:"int"}]}),ZT=Gi(([e,t,r])=>{const s=Xi(r).toVar(),i=qi(t).toVar(),n=Qi(e).toVar(),a=Xi().toVar(),o=Xi().toVar(),u=Qi(_T(n.x,a),_T(n.y,o)).toVar(),l=tn(1e6,1e6,1e6).toVar();return ph({start:-1,end:Xi(1),name:"x",condition:"<="},({x:e})=>{ph({start:-1,end:Xi(1),name:"y",condition:"<="},({y:t})=>{const r=qi(KT(u,e,t,a,o,i,s)).toVar();$i(r.lessThan(l.x),()=>{l.z.assign(l.y),l.y.assign(l.x),l.x.assign(r)}).ElseIf(r.lessThan(l.y),()=>{l.z.assign(l.y),l.y.assign(r)}).ElseIf(r.lessThan(l.z),()=>{l.z.assign(r)})})}),$i(s.equal(Xi(0)),()=>{l.assign(qa(l))}),l}).setLayout({name:"mx_worley_noise_vec3_0",type:"vec3",inputs:[{name:"p",type:"vec2"},{name:"jitter",type:"float"},{name:"metric",type:"int"}]}),JT=dy([YT,Gi(([e,t,r])=>{const s=Xi(r).toVar(),i=qi(t).toVar(),n=tn(e).toVar(),a=Xi().toVar(),o=Xi().toVar(),u=Xi().toVar(),l=tn(_T(n.x,a),_T(n.y,o),_T(n.z,u)).toVar(),d=qi(1e6).toVar();return ph({start:-1,end:Xi(1),name:"x",condition:"<="},({x:e})=>{ph({start:-1,end:Xi(1),name:"y",condition:"<="},({y:t})=>{ph({start:-1,end:Xi(1),name:"z",condition:"<="},({z:r})=>{const n=qi(KT(l,e,t,r,a,o,u,i,s)).toVar();d.assign(To(d,n))})})}),$i(s.equal(Xi(0)),()=>{d.assign(qa(d))}),d}).setLayout({name:"mx_worley_noise_float_1",type:"float",inputs:[{name:"p",type:"vec3"},{name:"jitter",type:"float"},{name:"metric",type:"int"}]})]),e_=dy([QT,Gi(([e,t,r])=>{const s=Xi(r).toVar(),i=qi(t).toVar(),n=tn(e).toVar(),a=Xi().toVar(),o=Xi().toVar(),u=Xi().toVar(),l=tn(_T(n.x,a),_T(n.y,o),_T(n.z,u)).toVar(),d=Qi(1e6,1e6).toVar();return ph({start:-1,end:Xi(1),name:"x",condition:"<="},({x:e})=>{ph({start:-1,end:Xi(1),name:"y",condition:"<="},({y:t})=>{ph({start:-1,end:Xi(1),name:"z",condition:"<="},({z:r})=>{const n=qi(KT(l,e,t,r,a,o,u,i,s)).toVar();$i(n.lessThan(d.x),()=>{d.y.assign(d.x),d.x.assign(n)}).ElseIf(n.lessThan(d.y),()=>{d.y.assign(n)})})})}),$i(s.equal(Xi(0)),()=>{d.assign(qa(d))}),d}).setLayout({name:"mx_worley_noise_vec2_1",type:"vec2",inputs:[{name:"p",type:"vec3"},{name:"jitter",type:"float"},{name:"metric",type:"int"}]})]),t_=dy([ZT,Gi(([e,t,r])=>{const s=Xi(r).toVar(),i=qi(t).toVar(),n=tn(e).toVar(),a=Xi().toVar(),o=Xi().toVar(),u=Xi().toVar(),l=tn(_T(n.x,a),_T(n.y,o),_T(n.z,u)).toVar(),d=tn(1e6,1e6,1e6).toVar();return ph({start:-1,end:Xi(1),name:"x",condition:"<="},({x:e})=>{ph({start:-1,end:Xi(1),name:"y",condition:"<="},({y:t})=>{ph({start:-1,end:Xi(1),name:"z",condition:"<="},({z:r})=>{const n=qi(KT(l,e,t,r,a,o,u,i,s)).toVar();$i(n.lessThan(d.x),()=>{d.z.assign(d.y),d.y.assign(d.x),d.x.assign(n)}).ElseIf(n.lessThan(d.y),()=>{d.z.assign(d.y),d.y.assign(n)}).ElseIf(n.lessThan(d.z),()=>{d.z.assign(n)})})})}),$i(s.equal(Xi(0)),()=>{d.assign(qa(d))}),d}).setLayout({name:"mx_worley_noise_vec3_1",type:"vec3",inputs:[{name:"p",type:"vec3"},{name:"jitter",type:"float"},{name:"metric",type:"int"}]})]),r_=Gi(([e])=>{const t=e.y,r=e.z,s=tn().toVar();return $i(t.lessThan(1e-4),()=>{s.assign(tn(r,r,r))}).Else(()=>{let i=e.x;i=i.sub(Ka(i)).mul(6).toVar();const n=Xi(mo(i)),a=i.sub(qi(n)),o=r.mul(t.oneMinus()),u=r.mul(t.mul(a).oneMinus()),l=r.mul(t.mul(a.oneMinus()).oneMinus());$i(n.equal(Xi(0)),()=>{s.assign(tn(r,l,o))}).ElseIf(n.equal(Xi(1)),()=>{s.assign(tn(u,r,o))}).ElseIf(n.equal(Xi(2)),()=>{s.assign(tn(o,r,l))}).ElseIf(n.equal(Xi(3)),()=>{s.assign(tn(o,u,r))}).ElseIf(n.equal(Xi(4)),()=>{s.assign(tn(l,o,r))}).Else(()=>{s.assign(tn(r,o,u))})}),s}).setLayout({name:"mx_hsvtorgb",type:"vec3",inputs:[{name:"hsv",type:"vec3"}]}),s_=Gi(([e])=>{const t=tn(e).toVar(),r=qi(t.x).toVar(),s=qi(t.y).toVar(),i=qi(t.z).toVar(),n=qi(To(r,To(s,i))).toVar(),a=qi(_o(r,_o(s,i))).toVar(),o=qi(a.sub(n)).toVar(),u=qi().toVar(),l=qi().toVar(),d=qi().toVar();return d.assign(a),$i(a.greaterThan(0),()=>{l.assign(o.div(a))}).Else(()=>{l.assign(0)}),$i(l.lessThanEqual(0),()=>{u.assign(0)}).Else(()=>{$i(r.greaterThanEqual(a),()=>{u.assign(s.sub(i).div(o))}).ElseIf(s.greaterThanEqual(a),()=>{u.assign(ua(2,i.sub(r).div(o)))}).Else(()=>{u.assign(ua(4,r.sub(s).div(o)))}),u.mulAssign(1/6),$i(u.lessThan(0),()=>{u.addAssign(1)})}),tn(u,l,d)}).setLayout({name:"mx_rgbtohsv",type:"vec3",inputs:[{name:"c",type:"vec3"}]}),i_=Gi(([e])=>{const t=tn(e).toVar(),r=nn(fa(t,tn(.04045))).toVar(),s=tn(t.div(12.92)).toVar(),i=tn(Ro(_o(t.add(tn(.055)),tn(0)).div(1.055),tn(2.4))).toVar();return Do(s,i,r)}).setLayout({name:"mx_srgb_texture_to_lin_rec709",type:"vec3",inputs:[{name:"color",type:"vec3"}]}),n_=(e,t)=>{e=qi(e),t=qi(t);const r=Qi(t.dFdx(),t.dFdy()).length().mul(.7071067811865476);return Oo(e.sub(r),e.add(r),t)},a_=(e,t,r,s)=>Do(e,t,r[s].clamp()),o_=(e,t,r,s,i)=>Do(e,t,n_(r,s[i])),u_=Gi(([e,t,r])=>{const s=Qa(e).toVar(),i=la(qi(.5).mul(t.sub(r)),Gl).div(s).toVar(),n=la(qi(-.5).mul(t.sub(r)),Gl).div(s).toVar(),a=tn().toVar();a.x=s.x.greaterThan(qi(0)).select(i.x,n.x),a.y=s.y.greaterThan(qi(0)).select(i.y,n.y),a.z=s.z.greaterThan(qi(0)).select(i.z,n.z);const o=To(a.x,a.y,a.z).toVar();return Gl.add(s.mul(o)).toVar().sub(r)}),l_=Gi(([e,t])=>{const r=e.x,s=e.y,i=e.z;let n=t.element(0).mul(.886227);return n=n.add(t.element(1).mul(1.023328).mul(s)),n=n.add(t.element(2).mul(1.023328).mul(i)),n=n.add(t.element(3).mul(1.023328).mul(r)),n=n.add(t.element(4).mul(.858086).mul(r).mul(s)),n=n.add(t.element(5).mul(.858086).mul(s).mul(i)),n=n.add(t.element(6).mul(i.mul(i).mul(.743125).sub(.247708))),n=n.add(t.element(7).mul(.858086).mul(r).mul(i)),n=n.add(t.element(8).mul(.429043).mul(da(r,r).sub(da(s,s)))),n});var d_=Object.freeze({__proto__:null,BRDF_GGX:Jp,BRDF_Lambert:Up,BasicPointShadowFilter:iT,BasicShadowFilter:kx,Break:gh,Const:ru,Continue:()=>Uu("continue").toStack(),DFGApprox:eg,D_GGX:Yp,Discard:Ou,EPSILON:Da,F_Schlick:Vp,Fn:Gi,INFINITY:Ia,If:$i,Loop:ph,NodeAccess:ks,NodeShaderStage:Vs,NodeType:Os,NodeUpdateType:Us,PCFShadowFilter:Gx,PCFSoftShadowFilter:zx,PI:Va,PI2:Ua,PointShadowFilter:nT,Return:()=>Uu("return").toStack(),Schlick_to_F0:rg,ScriptableNodeResources:jb,ShaderNode:Fi,Stack:Wi,Switch:(...e)=>ai.Switch(...e),TBNViewMatrix:Yd,VSMShadowFilter:Hx,V_GGX_SmithCorrelated:Xp,Var:tu,abs:no,acesFilmicToneMapping:Bb,acos:so,add:ua,addMethodChaining:ui,addNodeElement:function(e){console.warn("THREE.TSL: AddNodeElement has been removed in favor of tree-shaking. Trying add",e)},agxToneMapping:Ib,all:Oa,alphaT:Cn,and:xa,anisotropy:Mn,anisotropyB:Bn,anisotropyT:Pn,any:ka,append:e=>(console.warn("THREE.TSL: append() has been renamed to Stack()."),Wi(e)),array:ta,arrayBuffer:e=>Di(new ii(e,"ArrayBuffer")),asin:ro,assign:sa,atan:io,atan2:Wo,atomicAdd:(e,t)=>mx(px.ATOMIC_ADD,e,t),atomicAnd:(e,t)=>mx(px.ATOMIC_AND,e,t),atomicFunc:mx,atomicLoad:e=>mx(px.ATOMIC_LOAD,e,null),atomicMax:(e,t)=>mx(px.ATOMIC_MAX,e,t),atomicMin:(e,t)=>mx(px.ATOMIC_MIN,e,t),atomicOr:(e,t)=>mx(px.ATOMIC_OR,e,t),atomicStore:(e,t)=>mx(px.ATOMIC_STORE,e,t),atomicSub:(e,t)=>mx(px.ATOMIC_SUB,e,t),atomicXor:(e,t)=>mx(px.ATOMIC_XOR,e,t),attenuationColor:$n,attenuationDistance:Hn,attribute:Wu,attributeArray:(e,t="float")=>{let r,s;!0===t.isStruct?(r=t.layout.getLength(),s=As("float")):(r=Rs(t),s=As(t));const i=new Ky(e,r,s);return uh(i,t,e)},backgroundBlurriness:tb,backgroundIntensity:rb,backgroundRotation:sb,batch:ih,bentNormalView:Zd,billboarding:fy,bitAnd:Na,bitNot:Sa,bitOr:Ea,bitXor:wa,bitangentGeometry:jd,bitangentLocal:qd,bitangentView:Xd,bitangentWorld:Kd,bitcast:bo,blendBurn:ip,blendColor:up,blendDodge:np,blendOverlay:op,blendScreen:ap,blur:rm,bool:Yi,buffer:sl,bufferAttribute:Nu,bumpMap:ic,burn:(...e)=>(console.warn('THREE.TSL: "burn" has been renamed. Use "blendBurn" instead.'),ip(e)),bvec2:en,bvec3:nn,bvec4:ln,bypass:Lu,cache:Pu,call:na,cameraFar:dl,cameraIndex:ul,cameraNear:ll,cameraNormalMatrix:ml,cameraPosition:fl,cameraProjectionMatrix:cl,cameraProjectionMatrixInverse:hl,cameraViewMatrix:pl,cameraWorldMatrix:gl,cbrt:Lo,cdl:Tb,ceil:Ya,checker:fT,cineonToneMapping:Mb,clamp:Io,clearcoat:vn,clearcoatNormalView:rd,clearcoatRoughness:Nn,code:Ob,color:ji,colorSpaceToWorking:gu,colorToDirection:e=>Di(e).mul(2).sub(1),compute:Cu,computeKernel:Ru,computeSkinning:(e,t=null)=>{const r=new dh(e);return r.positionNode=uh(new L(e.geometry.getAttribute("position").array,3),"vec3").setPBO(!0).toReadOnly().element(Xc).toVar(),r.skinIndexNode=uh(new L(new Uint32Array(e.geometry.getAttribute("skinIndex").array),4),"uvec4").setPBO(!0).toReadOnly().element(Xc).toVar(),r.skinWeightNode=uh(new L(e.geometry.getAttribute("skinWeight").array,4),"vec4").setPBO(!0).toReadOnly().element(Xc).toVar(),r.bindMatrixNode=Jn(e.bindMatrix,"mat4"),r.bindMatrixInverseNode=Jn(e.bindMatrixInverse,"mat4"),r.boneMatricesNode=sl(e.skeleton.boneMatrices,"mat4",e.skeleton.bones.length),r.toPositionNode=t,Di(r)},context:Qo,convert:gn,convertColorSpace:(e,t,r)=>Di(new hu(Di(e),t,r)),convertToTexture:(e,...t)=>e.isTextureNode?e:e.isPassNode?e.getTextureNode():Hy(e,...t),cos:eo,cross:Ao,cubeTexture:Td,cubeTextureBase:xd,cubeToUV:sT,dFdx:co,dFdy:ho,dashSize:Vn,debug:Hu,decrement:Ba,decrementBefore:Ma,defaultBuildStages:zs,defaultShaderStages:Gs,defined:Bi,degrees:za,deltaTime:hy,densityFog:function(e,t){return console.warn('THREE.TSL: "densityFog( color, density )" is deprecated. Use "fog( color, densityFogFactor( density ) )" instead.'),Zb(e,Qb(t))},densityFogFactor:Qb,depth:Kh,depthPass:(e,t,r)=>Di(new wb(wb.DEPTH,e,t,r)),difference:Eo,diffuseColor:bn,directPointLight:gT,directionToColor:_p,directionToFaceDirection:Xl,dispersion:Wn,distance:So,div:ca,dodge:(...e)=>(console.warn('THREE.TSL: "dodge" has been renamed. Use "blendDodge" instead.'),np(e)),dot:wo,drawIndex:Zc,dynamicBufferAttribute:Su,element:pn,emissive:xn,equal:pa,equals:xo,equirectUV:Sp,exp:Ha,exp2:$a,expression:Uu,faceDirection:ql,faceForward:ko,faceforward:jo,float:qi,floor:Ka,fog:Zb,fract:Za,frameGroup:Kn,frameId:py,frontFacing:jl,fwidth:fo,gain:(e,t)=>e.lessThan(.5)?iy(e.mul(2),t).div(2):la(1,iy(da(la(1,e),2),t).div(2)),gapSize:Un,getConstNodeType:Li,getCurrentStack:Hi,getDirection:Zg,getDistanceAttenuation:pT,getGeometryRoughness:jp,getNormalFromDepth:jy,getParallaxCorrectNormal:u_,getRoughness:qp,getScreenPosition:Wy,getShIrradianceAt:l_,getShadowMaterial:Wx,getShadowRenderObjectFunction:Xx,getTextureIndex:ey,getViewPosition:$y,globalId:ox,glsl:(e,t)=>Ob(e,t,"glsl"),glslFn:(e,t)=>Gb(e,t,"glsl"),grayscale:mb,greaterThan:fa,greaterThanEqual:ba,hash:sy,highpModelNormalViewMatrix:Vl,highpModelViewMatrix:Il,hue:bb,increment:Pa,incrementBefore:Ca,instance:eh,instanceIndex:Xc,instancedArray:(e,t="float")=>{let r,s;!0===t.isStruct?(r=t.layout.getLength(),s=As("float")):(r=Rs(t),s=As(t));const i=new Xy(e,r,s);return uh(i,t,e)},instancedBufferAttribute:Eu,instancedDynamicBufferAttribute:wu,instancedMesh:rh,int:Xi,inverseSqrt:Xa,inversesqrt:qo,invocationLocalIndex:Qc,invocationSubgroupIndex:Yc,ior:kn,iridescence:wn,iridescenceIOR:An,iridescenceThickness:Rn,ivec2:Zi,ivec3:rn,ivec4:on,js:(e,t)=>Ob(e,t,"js"),label:Zo,length:oo,lengthSq:Fo,lessThan:ma,lessThanEqual:ya,lightPosition:Tx,lightProjectionUV:xx,lightShadowMatrix:bx,lightTargetDirection:Nx,lightTargetPosition:_x,lightViewPosition:vx,lightingContext:Nh,lights:(e=[])=>Di(new Ax).setLights(e),linearDepth:Yh,linearToneMapping:Rb,localId:ux,log:Wa,log2:ja,logarithmicDepthToViewZ:(e,t,r)=>{const s=e.mul(Wa(r.div(t)));return qi(Math.E).pow(s).mul(t).negate()},luminance:xb,mat2:dn,mat3:cn,mat4:hn,matcapUV:Hm,materialAO:Hc,materialAlphaTest:oc,materialAnisotropy:wc,materialAnisotropyVector:$c,materialAttenuationColor:Fc,materialAttenuationDistance:Lc,materialClearcoat:Tc,materialClearcoatNormal:vc,materialClearcoatRoughness:_c,materialColor:uc,materialDispersion:Gc,materialEmissive:dc,materialEnvIntensity:cd,materialEnvRotation:hd,materialIOR:Bc,materialIridescence:Ac,materialIridescenceIOR:Rc,materialIridescenceThickness:Cc,materialLightMap:zc,materialLineDashOffset:Oc,materialLineDashSize:Ic,materialLineGapSize:Vc,materialLineScale:Dc,materialLineWidth:Uc,materialMetalness:bc,materialNormal:xc,materialOpacity:cc,materialPointSize:kc,materialReference:wd,materialReflectivity:fc,materialRefractionRatio:dd,materialRotation:Nc,materialRoughness:yc,materialSheen:Sc,materialSheenRoughness:Ec,materialShininess:lc,materialSpecular:hc,materialSpecularColor:gc,materialSpecularIntensity:pc,materialSpecularStrength:mc,materialThickness:Pc,materialTransmission:Mc,max:_o,maxMipLevel:Yu,mediumpModelViewMatrix:Dl,metalness:_n,min:To,mix:Do,mixElement:zo,mod:ha,modInt:La,modelDirection:wl,modelNormalMatrix:Bl,modelPosition:Rl,modelRadius:Pl,modelScale:Cl,modelViewMatrix:Fl,modelViewPosition:Ml,modelViewProjection:Wc,modelWorldMatrix:Al,modelWorldMatrixInverse:Ll,morphReference:xh,mrt:ry,mul:da,mx_aastep:n_,mx_cell_noise_float:(e=ju())=>HT(e.convert("vec2|vec3")),mx_contrast:(e,t=1,r=.5)=>qi(e).sub(r).mul(t).add(r),mx_fractal_noise_float:(e=ju(),t=3,r=2,s=.5,i=1)=>WT(e,Xi(t),r,s).mul(i),mx_fractal_noise_vec2:(e=ju(),t=3,r=2,s=.5,i=1)=>qT(e,Xi(t),r,s).mul(i),mx_fractal_noise_vec3:(e=ju(),t=3,r=2,s=.5,i=1)=>jT(e,Xi(t),r,s).mul(i),mx_fractal_noise_vec4:(e=ju(),t=3,r=2,s=.5,i=1)=>XT(e,Xi(t),r,s).mul(i),mx_hsvtorgb:r_,mx_noise_float:(e=ju(),t=1,r=0)=>GT(e.convert("vec2|vec3")).mul(t).add(r),mx_noise_vec3:(e=ju(),t=1,r=0)=>zT(e.convert("vec2|vec3")).mul(t).add(r),mx_noise_vec4:(e=ju(),t=1,r=0)=>{e=e.convert("vec2|vec3");return an(zT(e),GT(e.add(Qi(19,73)))).mul(t).add(r)},mx_ramplr:(e,t,r=ju())=>a_(e,t,r,"x"),mx_ramptb:(e,t,r=ju())=>a_(e,t,r,"y"),mx_rgbtohsv:s_,mx_safepower:(e,t=1)=>(e=qi(e)).abs().pow(t).mul(e.sign()),mx_splitlr:(e,t,r,s=ju())=>o_(e,t,r,s,"x"),mx_splittb:(e,t,r,s=ju())=>o_(e,t,r,s,"y"),mx_srgb_texture_to_lin_rec709:i_,mx_transform_uv:(e=1,t=0,r=ju())=>r.mul(e).add(t),mx_worley_noise_float:(e=ju(),t=1)=>JT(e.convert("vec2|vec3"),t,Xi(1)),mx_worley_noise_vec2:(e=ju(),t=1)=>e_(e.convert("vec2|vec3"),t,Xi(1)),mx_worley_noise_vec3:(e=ju(),t=1)=>t_(e.convert("vec2|vec3"),t,Xi(1)),negate:uo,neutralToneMapping:Vb,nodeArray:Vi,nodeImmutable:Oi,nodeObject:Di,nodeObjects:Ii,nodeProxy:Ui,normalFlat:Ql,normalGeometry:Kl,normalLocal:Yl,normalMap:ec,normalView:ed,normalViewGeometry:Zl,normalWorld:td,normalWorldGeometry:Jl,normalize:Qa,not:_a,notEqual:ga,numWorkgroups:nx,objectDirection:xl,objectGroup:Qn,objectPosition:_l,objectRadius:Sl,objectScale:vl,objectViewPosition:Nl,objectWorldMatrix:Tl,oneMinus:lo,or:Ta,orthographicDepthToViewZ:(e,t,r)=>t.sub(r).mul(e).sub(t),oscSawtooth:(e=cy)=>e.fract(),oscSine:(e=cy)=>e.add(.75).mul(2*Math.PI).sin().mul(.5).add(.5),oscSquare:(e=cy)=>e.fract().round(),oscTriangle:(e=cy)=>e.add(.5).fract().mul(2).sub(1).abs(),output:In,outputStruct:Jf,overlay:(...e)=>(console.warn('THREE.TSL: "overlay" has been renamed. Use "blendOverlay" instead.'),op(e)),overloadingFn:dy,parabola:iy,parallaxDirection:Qd,parallaxUV:(e,t)=>e.sub(Qd.mul(t)),parameter:(e,t)=>Di(new qf(e,t)),pass:(e,t,r)=>Di(new wb(wb.COLOR,e,t,r)),passTexture:(e,t)=>Di(new Sb(e,t)),pcurve:(e,t,r)=>Ro(ca(Ro(e,t),ua(Ro(e,t),Ro(la(1,e),r))),1/t),perspectiveDepthToViewZ:jh,pmremTexture:Rm,pointShadow:cT,pointUV:Qy,pointWidth:On,positionGeometry:Ul,positionLocal:Ol,positionPrevious:kl,positionView:Hl,positionViewDirection:$l,positionWorld:Gl,positionWorldDirection:zl,posterize:vb,pow:Ro,pow2:Co,pow3:Mo,pow4:Po,premultiplyAlpha:lp,property:fn,radians:Ga,rand:Go,range:rx,rangeFog:function(e,t,r){return console.warn('THREE.TSL: "rangeFog( color, near, far )" is deprecated. Use "fog( color, rangeFogFactor( near, far ) )" instead.'),Zb(e,Yb(t,r))},rangeFogFactor:Yb,reciprocal:go,reference:Nd,referenceBuffer:Sd,reflect:No,reflectVector:md,reflectView:pd,reflector:e=>Di(new Dy(e)),refract:Uo,refractVector:fd,refractView:gd,reinhardToneMapping:Cb,remap:Du,remapClamp:Iu,renderGroup:Yn,renderOutput:Gu,rendererReference:bu,rotate:qm,rotateUV:gy,roughness:Tn,round:po,rtt:Hy,sRGBTransferEOTF:lu,sRGBTransferOETF:du,sample:e=>Di(new qy(e)),sampler:e=>(!0===e.isNode?e:el(e)).convert("sampler"),samplerComparison:e=>(!0===e.isNode?e:el(e)).convert("samplerComparison"),saturate:Vo,saturation:fb,screen:(...e)=>(console.warn('THREE.TSL: "screen" has been renamed. Use "blendScreen" instead.'),ap(e)),screenCoordinate:Mh,screenSize:Ch,screenUV:Rh,scriptable:Xb,scriptableValue:Hb,select:Ko,setCurrentStack:zi,shaderStages:Hs,shadow:tT,shadowPositionWorld:Cx,shapeCircle:yT,sharedUniformGroup:Xn,sheen:Sn,sheenRoughness:En,shiftLeft:Aa,shiftRight:Ra,shininess:Dn,sign:ao,sin:Ja,sinc:(e,t)=>Ja(Va.mul(t.mul(e).sub(1))).div(Va.mul(t.mul(e).sub(1))),skinning:ch,smoothstep:Oo,smoothstepElement:Ho,specularColor:Ln,specularF90:Fn,spherizeUV:my,split:(e,t)=>Di(new Js(Di(e),t)),spritesheetUV:xy,sqrt:qa,stack:Kf,step:vo,stepElement:$o,storage:uh,storageBarrier:()=>dx("storage").toStack(),storageObject:(e,t,r)=>(console.warn('THREE.TSL: "storageObject()" is deprecated. Use "storage().setPBO( true )" instead.'),uh(e,t,r).setPBO(!0)),storageTexture:nb,string:(e="")=>Di(new ii(e,"string")),struct:(e,t=null)=>{const r=new Yf(e,t),s=(...t)=>{let s=null;if(t.length>0)if(t[0].isNode){s={};const r=Object.keys(e);for(let e=0;e<t.length;e++)s[r[e]]=t[e]}else s=t[0];return Di(new Qf(r,s))};return s.layout=r,s.isStruct=!0,s},sub:la,subBuild:nu,subgroupIndex:Kc,subgroupSize:lx,tan:to,tangentGeometry:Gd,tangentLocal:zd,tangentView:Hd,tangentWorld:$d,temp:su,texture:el,texture3D:ub,textureBarrier:()=>dx("texture").toStack(),textureBicubic:vg,textureBicubicLevel:_g,textureCubeUV:Jg,textureLoad:tl,textureSize:Xu,textureStore:(e,t,r)=>{const s=nb(e,t,r);return null!==r&&s.toStack(),s},thickness:zn,time:cy,timerDelta:(e=1)=>(console.warn('TSL: timerDelta() is deprecated. Use "deltaTime" instead.'),hy.mul(e)),timerGlobal:(e=1)=>(console.warn('TSL: timerGlobal() is deprecated. Use "time" instead.'),cy.mul(e)),timerLocal:(e=1)=>(console.warn('TSL: timerLocal() is deprecated. Use "time" instead.'),cy.mul(e)),toneMapping:Tu,toneMappingExposure:_u,toonOutlinePass:(t,r,s=new e(0,0,0),i=.003,n=1)=>Di(new Ab(t,r,Di(s),Di(i),Di(n))),transformDirection:Bo,transformNormal:sd,transformNormalToView:id,transformedClearcoatNormalView:od,transformedNormalView:nd,transformedNormalWorld:ad,transmission:Gn,transpose:yo,triNoise3D:oy,triplanarTexture:(...e)=>Ty(...e),triplanarTextures:Ty,trunc:mo,uint:Ki,uniform:Jn,uniformArray:al,uniformCubeTexture:(e=yd)=>xd(e),uniformGroup:qn,uniformTexture:(e=Qu)=>el(e),unpremultiplyAlpha:dp,userData:(e,t,r)=>Di(new lb(e,t,r)),uv:ju,uvec2:Ji,uvec3:sn,uvec4:un,varying:ou,varyingProperty:yn,vec2:Qi,vec3:tn,vec4:an,vectorComponents:$s,velocity:gb,vertexColor:sp,vertexIndex:qc,vertexStage:uu,vibrance:yb,viewZToLogarithmicDepth:qh,viewZToOrthographicDepth:$h,viewZToPerspectiveDepth:Wh,viewport:Ph,viewportCoordinate:Lh,viewportDepthTexture:zh,viewportLinearDepth:Qh,viewportMipTexture:Oh,viewportResolution:Dh,viewportSafeUV:yy,viewportSharedTexture:bp,viewportSize:Bh,viewportTexture:Uh,viewportUV:Fh,wgsl:(e,t)=>Ob(e,t,"wgsl"),wgslFn:(e,t)=>Gb(e,t,"wgsl"),workgroupArray:(e,t)=>Di(new hx("Workgroup",e,t)),workgroupBarrier:()=>dx("workgroup").toStack(),workgroupId:ax,workingToColorSpace:pu,xor:va});const c_=new jf;class h_ extends pf{constructor(e,t){super(),this.renderer=e,this.nodes=t}update(e,t,r){const s=this.renderer,i=this.nodes.getBackgroundNode(e)||e.background;let n=!1;if(null===i)s._clearColor.getRGB(c_),c_.a=s._clearColor.a;else if(!0===i.isColor)i.getRGB(c_),c_.a=1,n=!0;else if(!0===i.isNode){const o=this.get(e),u=i;c_.copy(s._clearColor);let l=o.backgroundMesh;if(void 0===l){const c=Qo(an(u).mul(rb),{getUV:()=>sb.mul(Jl),getTextureLevel:()=>tb});let h=Wc;h=h.setZ(h.w);const p=new cp;function g(){i.removeEventListener("dispose",g),l.material.dispose(),l.geometry.dispose()}p.name="Background.material",p.side=S,p.depthTest=!1,p.depthWrite=!1,p.allowOverride=!1,p.fog=!1,p.lights=!1,p.vertexNode=h,p.colorNode=c,o.backgroundMeshNode=c,o.backgroundMesh=l=new X(new Oe(1,32,32),p),l.frustumCulled=!1,l.name="Background.mesh",l.onBeforeRender=function(e,t,r){this.matrixWorld.copyPosition(r.matrixWorld)},i.addEventListener("dispose",g)}const d=u.getCacheKey();o.backgroundCacheKey!==d&&(o.backgroundMeshNode.node=an(u).mul(rb),o.backgroundMeshNode.needsUpdate=!0,l.material.needsUpdate=!0,o.backgroundCacheKey=d),t.unshift(l,l.geometry,l.material,0,0,null,null)}else console.error("THREE.Renderer: Unsupported background configuration.",i);const a=s.xr.getEnvironmentBlendMode();if("additive"===a?c_.set(0,0,0,1):"alpha-blend"===a&&c_.set(0,0,0,0),!0===s.autoClear||!0===n){const m=r.clearColorValue;m.r=c_.r,m.g=c_.g,m.b=c_.b,m.a=c_.a,!0!==s.backend.isWebGLBackend&&!0!==s.alpha||(m.r*=m.a,m.g*=m.a,m.b*=m.a),r.depthClearValue=s._clearDepth,r.stencilClearValue=s._clearStencil,r.clearColor=!0===s.autoClearColor,r.clearDepth=!0===s.autoClearDepth,r.clearStencil=!0===s.autoClearStencil}else r.clearColor=!1,r.clearDepth=!1,r.clearStencil=!1}}let p_=0;class g_{constructor(e="",t=[],r=0,s=[]){this.name=e,this.bindings=t,this.index=r,this.bindingsReference=s,this.id=p_++}}class m_{constructor(e,t,r,s,i,n,a,o,u,l=[]){this.vertexShader=e,this.fragmentShader=t,this.computeShader=r,this.transforms=l,this.nodeAttributes=s,this.bindings=i,this.updateNodes=n,this.updateBeforeNodes=a,this.updateAfterNodes=o,this.observer=u,this.usedTimes=0}createBindings(){const e=[];for(const t of this.bindings){if(!0!==t.bindings[0].groupNode.shared){const r=new g_(t.name,[],t.index,t);e.push(r);for(const e of t.bindings)r.bindings.push(e.clone())}else e.push(t)}return e}}class f_{constructor(e,t,r=null){this.isNodeAttribute=!0,this.name=e,this.type=t,this.node=r}}class y_{constructor(e,t,r){this.isNodeUniform=!0,this.name=e,this.type=t,this.node=r.getSelf()}get value(){return this.node.value}set value(e){this.node.value=e}get id(){return this.node.id}get groupNode(){return this.node.groupNode}}class b_{constructor(e,t,r=!1,s=null){this.isNodeVar=!0,this.name=e,this.type=t,this.readOnly=r,this.count=s}}class x_ extends b_{constructor(e,t,r=null,s=null){super(e,t),this.needsInterpolation=!1,this.isNodeVarying=!0,this.interpolationType=r,this.interpolationSampling=s}}class T_{constructor(e,t,r=""){this.name=e,this.type=t,this.code=r,Object.defineProperty(this,"isNodeCode",{value:!0})}}let __=0;class v_{constructor(e=null){this.id=__++,this.nodesData=new WeakMap,this.parent=e}getData(e){let t=this.nodesData.get(e);return void 0===t&&null!==this.parent&&(t=this.parent.getData(e)),t}setData(e,t){this.nodesData.set(e,t)}}class N_{constructor(e,t){this.name=e,this.members=t,this.output=!1}}class S_{constructor(e,t){this.name=e,this.value=t,this.boundary=0,this.itemSize=0,this.offset=0}setValue(e){this.value=e}getValue(){return this.value}}class E_ extends S_{constructor(e,t=0){super(e,t),this.isNumberUniform=!0,this.boundary=4,this.itemSize=1}}class w_ extends S_{constructor(e,r=new t){super(e,r),this.isVector2Uniform=!0,this.boundary=8,this.itemSize=2}}class A_ extends S_{constructor(e,t=new r){super(e,t),this.isVector3Uniform=!0,this.boundary=16,this.itemSize=3}}class R_ extends S_{constructor(e,t=new s){super(e,t),this.isVector4Uniform=!0,this.boundary=16,this.itemSize=4}}class C_ extends S_{constructor(t,r=new e){super(t,r),this.isColorUniform=!0,this.boundary=16,this.itemSize=3}}class M_ extends S_{constructor(e,t=new i){super(e,t),this.isMatrix2Uniform=!0,this.boundary=8,this.itemSize=4}}class P_ extends S_{constructor(e,t=new n){super(e,t),this.isMatrix3Uniform=!0,this.boundary=48,this.itemSize=12}}class B_ extends S_{constructor(e,t=new a){super(e,t),this.isMatrix4Uniform=!0,this.boundary=64,this.itemSize=16}}class L_ extends E_{constructor(e){super(e.name,e.value),this.nodeUniform=e}getValue(){return this.nodeUniform.value}getType(){return this.nodeUniform.type}}class F_ extends w_{constructor(e){super(e.name,e.value),this.nodeUniform=e}getValue(){return this.nodeUniform.value}getType(){return this.nodeUniform.type}}class D_ extends A_{constructor(e){super(e.name,e.value),this.nodeUniform=e}getValue(){return this.nodeUniform.value}getType(){return this.nodeUniform.type}}class I_ extends R_{constructor(e){super(e.name,e.value),this.nodeUniform=e}getValue(){return this.nodeUniform.value}getType(){return this.nodeUniform.type}}class V_ extends C_{constructor(e){super(e.name,e.value),this.nodeUniform=e}getValue(){return this.nodeUniform.value}getType(){return this.nodeUniform.type}}class U_ extends M_{constructor(e){super(e.name,e.value),this.nodeUniform=e}getValue(){return this.nodeUniform.value}getType(){return this.nodeUniform.type}}class O_ extends P_{constructor(e){super(e.name,e.value),this.nodeUniform=e}getValue(){return this.nodeUniform.value}getType(){return this.nodeUniform.type}}class k_ extends B_{constructor(e){super(e.name,e.value),this.nodeUniform=e}getValue(){return this.nodeUniform.value}getType(){return this.nodeUniform.type}}const G_=new WeakMap,z_=new Map([[Int8Array,"int"],[Int16Array,"int"],[Int32Array,"int"],[Uint8Array,"uint"],[Uint16Array,"uint"],[Uint32Array,"uint"],[Float32Array,"float"]]),H_=e=>/e/g.test(e)?String(e).replace(/\+/g,""):(e=Number(e))+(e%1?"":".0");class $_{constructor(e,t,r){this.object=e,this.material=e&&e.material||null,this.geometry=e&&e.geometry||null,this.renderer=t,this.parser=r,this.scene=null,this.camera=null,this.nodes=[],this.sequentialNodes=[],this.updateNodes=[],this.updateBeforeNodes=[],this.updateAfterNodes=[],this.hashNodes={},this.observer=null,this.lightsNode=null,this.environmentNode=null,this.fogNode=null,this.clippingContext=null,this.vertexShader=null,this.fragmentShader=null,this.computeShader=null,this.flowNodes={vertex:[],fragment:[],compute:[]},this.flowCode={vertex:"",fragment:"",compute:""},this.uniforms={vertex:[],fragment:[],compute:[],index:0},this.structs={vertex:[],fragment:[],compute:[],index:0},this.bindings={vertex:{},fragment:{},compute:{}},this.bindingsIndexes={},this.bindGroups=null,this.attributes=[],this.bufferAttributes=[],this.varyings=[],this.codes={},this.vars={},this.declarations={},this.flow={code:""},this.chaining=[],this.stack=Kf(),this.stacks=[],this.tab="\t",this.currentFunctionNode=null,this.context={material:this.material},this.cache=new v_,this.globalCache=this.cache,this.flowsData=new WeakMap,this.shaderStage=null,this.buildStage=null,this.subBuildLayers=[],this.currentStack=null,this.subBuildFn=null}getBindGroupsCache(){let e=G_.get(this.renderer);return void 0===e&&(e=new uf,G_.set(this.renderer,e)),e}createRenderTarget(e,t,r){return new ue(e,t,r)}createCubeRenderTarget(e,t){return new Ep(e,t)}includes(e){return this.nodes.includes(e)}getOutputStructName(){}_getBindGroup(e,t){const r=this.getBindGroupsCache(),s=[];let i,n=!0;for(const e of t)s.push(e),n=n&&!0!==e.groupNode.shared;return n?(i=r.get(s),void 0===i&&(i=new g_(e,s,this.bindingsIndexes[e].group,s),r.set(s,i))):i=new g_(e,s,this.bindingsIndexes[e].group,s),i}getBindGroupArray(e,t){const r=this.bindings[t];let s=r[e];return void 0===s&&(void 0===this.bindingsIndexes[e]&&(this.bindingsIndexes[e]={binding:0,group:Object.keys(this.bindingsIndexes).length}),r[e]=s=[]),s}getBindings(){let e=this.bindGroups;if(null===e){const t={},r=this.bindings;for(const e of Hs)for(const s in r[e]){const i=r[e][s];(t[s]||(t[s]=[])).push(...i)}e=[];for(const r in t){const s=t[r],i=this._getBindGroup(r,s);e.push(i)}this.bindGroups=e}return e}sortBindingGroups(){const e=this.getBindings();e.sort((e,t)=>e.bindings[0].groupNode.order-t.bindings[0].groupNode.order);for(let t=0;t<e.length;t++){const r=e[t];this.bindingsIndexes[r.name].group=t,r.index=t}}setHashNode(e,t){this.hashNodes[t]=e}addNode(e){!1===this.nodes.includes(e)&&(this.nodes.push(e),this.setHashNode(e,e.getHash(this)))}addSequentialNode(e){!1===this.sequentialNodes.includes(e)&&this.sequentialNodes.push(e)}buildUpdateNodes(){for(const e of this.nodes){e.getUpdateType()!==Us.NONE&&this.updateNodes.push(e.getSelf())}for(const e of this.sequentialNodes){const t=e.getUpdateBeforeType(),r=e.getUpdateAfterType();t!==Us.NONE&&this.updateBeforeNodes.push(e.getSelf()),r!==Us.NONE&&this.updateAfterNodes.push(e.getSelf())}}get currentNode(){return this.chaining[this.chaining.length-1]}isFilteredTexture(e){return e.magFilter===Y||e.magFilter===ke||e.magFilter===Ge||e.magFilter===V||e.minFilter===Y||e.minFilter===ke||e.minFilter===Ge||e.minFilter===V}addChain(e){this.chaining.push(e)}removeChain(e){if(this.chaining.pop()!==e)throw new Error("NodeBuilder: Invalid node chaining!")}getMethod(e){return e}getNodeFromHash(e){return this.hashNodes[e]}addFlow(e,t){return this.flowNodes[e].push(t),t}setContext(e){this.context=e}getContext(){return this.context}getSharedContext(){return this.context,this.context}setCache(e){this.cache=e}getCache(){return this.cache}getCacheFromNode(e,t=!0){const r=this.getDataFromNode(e);return void 0===r.cache&&(r.cache=new v_(t?this.getCache():null)),r.cache}isAvailable(){return!1}getVertexIndex(){console.warn("Abstract function.")}getInstanceIndex(){console.warn("Abstract function.")}getDrawIndex(){console.warn("Abstract function.")}getFrontFacing(){console.warn("Abstract function.")}getFragCoord(){console.warn("Abstract function.")}isFlipY(){return!1}increaseUsage(e){const t=this.getDataFromNode(e);return t.usageCount=void 0===t.usageCount?1:t.usageCount+1,t.usageCount}generateTexture(){console.warn("Abstract function.")}generateTextureLod(){console.warn("Abstract function.")}generateArrayDeclaration(e,t){return this.getType(e)+"[ "+t+" ]"}generateArray(e,t,r=null){let s=this.generateArrayDeclaration(e,t)+"( ";for(let i=0;i<t;i++){const n=r?r[i]:null;s+=null!==n?n.build(this,e):this.generateConst(e),i<t-1&&(s+=", ")}return s+=" )",s}generateStruct(e,t,r=null){const s=[];for(const e of t){const{name:t,type:i}=e;r&&r[t]&&r[t].isNode?s.push(r[t].build(this,i)):s.push(this.generateConst(i))}return e+"( "+s.join(", ")+" )"}generateConst(i,n=null){if(null===n&&("float"===i||"int"===i||"uint"===i?n=0:"bool"===i?n=!1:"color"===i?n=new e:"vec2"===i?n=new t:"vec3"===i?n=new r:"vec4"===i&&(n=new s)),"float"===i)return H_(n);if("int"===i)return`${Math.round(n)}`;if("uint"===i)return n>=0?`${Math.round(n)}u`:"0u";if("bool"===i)return n?"true":"false";if("color"===i)return`${this.getType("vec3")}( ${H_(n.r)}, ${H_(n.g)}, ${H_(n.b)} )`;const a=this.getTypeLength(i),o=this.getComponentType(i),u=e=>this.generateConst(o,e);if(2===a)return`${this.getType(i)}( ${u(n.x)}, ${u(n.y)} )`;if(3===a)return`${this.getType(i)}( ${u(n.x)}, ${u(n.y)}, ${u(n.z)} )`;if(4===a&&"mat2"!==i)return`${this.getType(i)}( ${u(n.x)}, ${u(n.y)}, ${u(n.z)}, ${u(n.w)} )`;if(a>=4&&n&&(n.isMatrix2||n.isMatrix3||n.isMatrix4))return`${this.getType(i)}( ${n.elements.map(u).join(", ")} )`;if(a>4)return`${this.getType(i)}()`;throw new Error(`NodeBuilder: Type '${i}' not found in generate constant attempt.`)}getType(e){return"color"===e?"vec3":e}hasGeometryAttribute(e){return this.geometry&&void 0!==this.geometry.getAttribute(e)}getAttribute(e,t){const r=this.attributes;for(const t of r)if(t.name===e)return t;const s=new f_(e,t);return this.registerDeclaration(s),r.push(s),s}getPropertyName(e){return e.name}isVector(e){return/vec\d/.test(e)}isMatrix(e){return/mat\d/.test(e)}isReference(e){return"void"===e||"property"===e||"sampler"===e||"samplerComparison"===e||"texture"===e||"cubeTexture"===e||"storageTexture"===e||"depthTexture"===e||"texture3D"===e}needsToWorkingColorSpace(){return!1}getComponentTypeFromTexture(e){const t=e.type;if(e.isDataTexture){if(t===_)return"int";if(t===T)return"uint"}return"float"}getElementType(e){return"mat2"===e?"vec2":"mat3"===e?"vec3":"mat4"===e?"vec4":this.getComponentType(e)}getComponentType(e){if("float"===(e=this.getVectorType(e))||"bool"===e||"int"===e||"uint"===e)return e;const t=/(b|i|u|)(vec|mat)([2-4])/.exec(e);return null===t?null:"b"===t[1]?"bool":"i"===t[1]?"int":"u"===t[1]?"uint":"float"}getVectorType(e){return"color"===e?"vec3":"texture"===e||"cubeTexture"===e||"storageTexture"===e||"texture3D"===e?"vec4":e}getTypeFromLength(e,t="float"){if(1===e)return t;let r=ws(e);const s="float"===t?"":t[0];return!0===/mat2/.test(t)&&(r=r.replace("vec","mat")),s+r}getTypeFromArray(e){return z_.get(e.constructor)}isInteger(e){return/int|uint|(i|u)vec/.test(e)}getTypeFromAttribute(e){let t=e;e.isInterleavedBufferAttribute&&(t=e.data);const r=t.array,s=e.itemSize,i=e.normalized;let n;return e instanceof ze||!0===i||(n=this.getTypeFromArray(r)),this.getTypeFromLength(s,n)}getTypeLength(e){const t=this.getVectorType(e),r=/vec([2-4])/.exec(t);return null!==r?Number(r[1]):"float"===t||"bool"===t||"int"===t||"uint"===t?1:!0===/mat2/.test(e)?4:!0===/mat3/.test(e)?9:!0===/mat4/.test(e)?16:0}getVectorFromMatrix(e){return e.replace("mat","vec")}changeComponentType(e,t){return this.getTypeFromLength(this.getTypeLength(e),t)}getIntegerType(e){const t=this.getComponentType(e);return"int"===t||"uint"===t?e:this.changeComponentType(e,"int")}addStack(){return this.stack=Kf(this.stack),this.stacks.push(Hi()||this.stack),zi(this.stack),this.stack}removeStack(){const e=this.stack;return this.stack=e.parent,zi(this.stacks.pop()),e}getDataFromNode(e,t=this.shaderStage,r=null){let s=(r=null===r?e.isGlobal(this)?this.globalCache:this.cache:r).getData(e);void 0===s&&(s={},r.setData(e,s)),void 0===s[t]&&(s[t]={});let i=s[t];const n=s.any?s.any.subBuilds:null,a=this.getClosestSubBuild(n);return a&&(void 0===i.subBuildsCache&&(i.subBuildsCache={}),i=i.subBuildsCache[a]||(i.subBuildsCache[a]={}),i.subBuilds=n),i}getNodeProperties(e,t="any"){const r=this.getDataFromNode(e,t);return r.properties||(r.properties={outputNode:null})}getBufferAttributeFromNode(e,t){const r=this.getDataFromNode(e);let s=r.bufferAttribute;if(void 0===s){const i=this.uniforms.index++;s=new f_("nodeAttribute"+i,t,e),this.bufferAttributes.push(s),r.bufferAttribute=s}return s}getStructTypeFromNode(e,t,r=null,s=this.shaderStage){const i=this.getDataFromNode(e,s,this.globalCache);let n=i.structType;if(void 0===n){const e=this.structs.index++;null===r&&(r="StructType"+e),n=new N_(r,t),this.structs[s].push(n),i.structType=n}return n}getOutputStructTypeFromNode(e,t){const r=this.getStructTypeFromNode(e,t,"OutputType","fragment");return r.output=!0,r}getUniformFromNode(e,t,r=this.shaderStage,s=null){const i=this.getDataFromNode(e,r,this.globalCache);let n=i.uniform;if(void 0===n){const a=this.uniforms.index++;n=new y_(s||"nodeUniform"+a,t,e),this.uniforms[r].push(n),this.registerDeclaration(n),i.uniform=n}return n}getArrayCount(e){let t=null;return e.isArrayNode?t=e.count:e.isVarNode&&e.node.isArrayNode&&(t=e.node.count),t}getVarFromNode(e,t=null,r=e.getNodeType(this),s=this.shaderStage,i=!1){const n=this.getDataFromNode(e,s),a=this.getSubBuildProperty("variable",n.subBuilds);let o=n[a];if(void 0===o){const u=i?"_const":"_var",l=this.vars[s]||(this.vars[s]=[]),d=this.vars[u]||(this.vars[u]=0);null===t&&(t=(i?"nodeConst":"nodeVar")+d,this.vars[u]++),"variable"!==a&&(t=this.getSubBuildProperty(t,n.subBuilds));const c=this.getArrayCount(e);o=new b_(t,r,i,c),i||l.push(o),this.registerDeclaration(o),n[a]=o}return o}isDeterministic(e){if(e.isMathNode)return this.isDeterministic(e.aNode)&&(!e.bNode||this.isDeterministic(e.bNode))&&(!e.cNode||this.isDeterministic(e.cNode));if(e.isOperatorNode)return this.isDeterministic(e.aNode)&&(!e.bNode||this.isDeterministic(e.bNode));if(e.isArrayNode){if(null!==e.values)for(const t of e.values)if(!this.isDeterministic(t))return!1;return!0}return!!e.isConstNode}getVaryingFromNode(e,t=null,r=e.getNodeType(this),s=null,i=null){const n=this.getDataFromNode(e,"any"),a=this.getSubBuildProperty("varying",n.subBuilds);let o=n[a];if(void 0===o){const e=this.varyings,u=e.length;null===t&&(t="nodeVarying"+u),"varying"!==a&&(t=this.getSubBuildProperty(t,n.subBuilds)),o=new x_(t,r,s,i),e.push(o),this.registerDeclaration(o),n[a]=o}return o}registerDeclaration(e){const t=this.shaderStage,r=this.declarations[t]||(this.declarations[t]={}),s=this.getPropertyName(e);let i=1,n=s;for(;void 0!==r[n];)n=s+"_"+i++;i>1&&(e.name=n,console.warn(`THREE.TSL: Declaration name '${s}' of '${e.type}' already in use. Renamed to '${n}'.`)),r[n]=e}getCodeFromNode(e,t,r=this.shaderStage){const s=this.getDataFromNode(e);let i=s.code;if(void 0===i){const e=this.codes[r]||(this.codes[r]=[]),n=e.length;i=new T_("nodeCode"+n,t),e.push(i),s.code=i}return i}addFlowCodeHierarchy(e,t){const{flowCodes:r,flowCodeBlock:s}=this.getDataFromNode(e);let i=!0,n=t;for(;n;){if(!0===s.get(n)){i=!1;break}n=this.getDataFromNode(n).parentNodeBlock}if(i)for(const e of r)this.addLineFlowCode(e)}addLineFlowCodeBlock(e,t,r){const s=this.getDataFromNode(e),i=s.flowCodes||(s.flowCodes=[]),n=s.flowCodeBlock||(s.flowCodeBlock=new WeakMap);i.push(t),n.set(r,!0)}addLineFlowCode(e,t=null){return""===e||(null!==t&&this.context.nodeBlock&&this.addLineFlowCodeBlock(t,e,this.context.nodeBlock),e=this.tab+e,/;\s*$/.test(e)||(e+=";\n"),this.flow.code+=e),this}addFlowCode(e){return this.flow.code+=e,this}addFlowTab(){return this.tab+="\t",this}removeFlowTab(){return this.tab=this.tab.slice(0,-1),this}getFlowData(e){return this.flowsData.get(e)}flowNode(e){const t=e.getNodeType(this),r=this.flowChildNode(e,t);return this.flowsData.set(e,r),r}addInclude(e){null!==this.currentFunctionNode&&this.currentFunctionNode.includes.push(e)}buildFunctionNode(e){const t=new kb,r=this.currentFunctionNode;return this.currentFunctionNode=t,t.code=this.buildFunctionCode(e),this.currentFunctionNode=r,t}flowShaderNode(e){const t=e.layout,r={[Symbol.iterator](){let e=0;const t=Object.values(this);return{next:()=>({value:t[e],done:e++>=t.length})}}};for(const e of t.inputs)r[e.name]=new qf(e.type,e.name);e.layout=null;const s=e.call(r),i=this.flowStagesNode(s,t.type);return e.layout=t,i}flowStagesNode(e,t=null){const r=this.flow,s=this.vars,i=this.declarations,n=this.cache,a=this.buildStage,o=this.stack,u={code:""};this.flow=u,this.vars={},this.declarations={},this.cache=new v_,this.stack=Kf();for(const r of zs)this.setBuildStage(r),u.result=e.build(this,t);return u.vars=this.getVars(this.shaderStage),this.flow=r,this.vars=s,this.declarations=i,this.cache=n,this.stack=o,this.setBuildStage(a),u}getFunctionOperator(){return null}buildFunctionCode(){console.warn("Abstract function.")}flowChildNode(e,t=null){const r=this.flow,s={code:""};return this.flow=s,s.result=e.build(this,t),this.flow=r,s}flowNodeFromShaderStage(e,t,r=null,s=null){const i=this.tab,n=this.cache,a=this.shaderStage,o=this.context;this.setShaderStage(e);const u={...this.context};delete u.nodeBlock,this.cache=this.globalCache,this.tab="\t",this.context=u;let l=null;if("generate"===this.buildStage){const i=this.flowChildNode(t,r);null!==s&&(i.code+=`${this.tab+s} = ${i.result};\n`),this.flowCode[e]=this.flowCode[e]+i.code,l=i}else l=t.build(this);return this.setShaderStage(a),this.cache=n,this.tab=i,this.context=o,l}getAttributesArray(){return this.attributes.concat(this.bufferAttributes)}getAttributes(){console.warn("Abstract function.")}getVaryings(){console.warn("Abstract function.")}getVar(e,t,r=null){return`${null!==r?this.generateArrayDeclaration(e,r):this.getType(e)} ${t}`}getVars(e){let t="";const r=this.vars[e];if(void 0!==r)for(const e of r)t+=`${this.getVar(e.type,e.name)}; `;return t}getUniforms(){console.warn("Abstract function.")}getCodes(e){const t=this.codes[e];let r="";if(void 0!==t)for(const e of t)r+=e.code+"\n";return r}getHash(){return this.vertexShader+this.fragmentShader+this.computeShader}setShaderStage(e){this.shaderStage=e}getShaderStage(){return this.shaderStage}setBuildStage(e){this.buildStage=e}getBuildStage(){return this.buildStage}buildCode(){console.warn("Abstract function.")}get subBuild(){return this.subBuildLayers[this.subBuildLayers.length-1]||null}addSubBuild(e){this.subBuildLayers.push(e)}removeSubBuild(){return this.subBuildLayers.pop()}getClosestSubBuild(e){let t;if(t=e&&e.isNode?e.isShaderCallNodeInternal?e.shaderNode.subBuilds:e.isStackNode?[e.subBuild]:this.getDataFromNode(e,"any").subBuilds:e instanceof Set?[...e]:e,!t)return null;const r=this.subBuildLayers;for(let e=t.length-1;e>=0;e--){const s=t[e];if(r.includes(s))return s}return null}getSubBuildOutput(e){return this.getSubBuildProperty("outputNode",e)}getSubBuildProperty(e="",t=null){let r,s;return r=null!==t?this.getClosestSubBuild(t):this.subBuildFn,s=r?e?r+"_"+e:r:e,s}build(){const{object:e,material:t,renderer:r}=this;if(null!==t){let e=r.library.fromMaterial(t);null===e&&(console.error(`NodeMaterial: Material "${t.type}" is not compatible.`),e=new cp),e.build(this)}else this.addFlow("compute",e);for(const e of zs){this.setBuildStage(e),this.context.vertex&&this.context.vertex.isNode&&this.flowNodeFromShaderStage("vertex",this.context.vertex);for(const t of Hs){this.setShaderStage(t);const r=this.flowNodes[t];for(const t of r)"generate"===e?this.flowNode(t):t.build(this)}}return this.setBuildStage(null),this.setShaderStage(null),this.buildCode(),this.buildUpdateNodes(),this}getNodeUniform(e,t){if("float"===t||"int"===t||"uint"===t)return new L_(e);if("vec2"===t||"ivec2"===t||"uvec2"===t)return new F_(e);if("vec3"===t||"ivec3"===t||"uvec3"===t)return new D_(e);if("vec4"===t||"ivec4"===t||"uvec4"===t)return new I_(e);if("color"===t)return new V_(e);if("mat2"===t)return new U_(e);if("mat3"===t)return new O_(e);if("mat4"===t)return new k_(e);throw new Error(`Uniform "${t}" not declared.`)}format(e,t,r){if((t=this.getVectorType(t))===(r=this.getVectorType(r))||null===r||this.isReference(r))return e;const s=this.getTypeLength(t),i=this.getTypeLength(r);return 16===s&&9===i?`${this.getType(r)}( ${e}[ 0 ].xyz, ${e}[ 1 ].xyz, ${e}[ 2 ].xyz )`:9===s&&4===i?`${this.getType(r)}( ${e}[ 0 ].xy, ${e}[ 1 ].xy )`:s>4||i>4||0===i?e:s===i?`${this.getType(r)}( ${e} )`:s>i?(e="bool"===r?`all( ${e} )`:`${e}.${"xyz".slice(0,i)}`,this.format(e,this.getTypeFromLength(i,this.getComponentType(t)),r)):4===i&&s>1?`${this.getType(r)}( ${this.format(e,t,"vec3")}, 1.0 )`:2===s?`${this.getType(r)}( ${this.format(e,t,"vec2")}, 0.0 )`:(1===s&&i>1&&t!==this.getComponentType(r)&&(e=`${this.getType(this.getComponentType(r))}( ${e} )`),`${this.getType(r)}( ${e} )`)}getSignature(){return`// Three.js r${He} - Node System\n`}*[Symbol.iterator](){}}class W_{constructor(){this.time=0,this.deltaTime=0,this.frameId=0,this.renderId=0,this.updateMap=new WeakMap,this.updateBeforeMap=new WeakMap,this.updateAfterMap=new WeakMap,this.renderer=null,this.material=null,this.camera=null,this.object=null,this.scene=null}_getMaps(e,t){let r=e.get(t);return void 0===r&&(r={renderMap:new WeakMap,frameMap:new WeakMap},e.set(t,r)),r}updateBeforeNode(e){const t=e.getUpdateBeforeType(),r=e.updateReference(this);if(t===Us.FRAME){const{frameMap:t}=this._getMaps(this.updateBeforeMap,r);t.get(r)!==this.frameId&&!1!==e.updateBefore(this)&&t.set(r,this.frameId)}else if(t===Us.RENDER){const{renderMap:t}=this._getMaps(this.updateBeforeMap,r);t.get(r)!==this.renderId&&!1!==e.updateBefore(this)&&t.set(r,this.renderId)}else t===Us.OBJECT&&e.updateBefore(this)}updateAfterNode(e){const t=e.getUpdateAfterType(),r=e.updateReference(this);if(t===Us.FRAME){const{frameMap:t}=this._getMaps(this.updateAfterMap,r);t.get(r)!==this.frameId&&!1!==e.updateAfter(this)&&t.set(r,this.frameId)}else if(t===Us.RENDER){const{renderMap:t}=this._getMaps(this.updateAfterMap,r);t.get(r)!==this.renderId&&!1!==e.updateAfter(this)&&t.set(r,this.renderId)}else t===Us.OBJECT&&e.updateAfter(this)}updateNode(e){const t=e.getUpdateType(),r=e.updateReference(this);if(t===Us.FRAME){const{frameMap:t}=this._getMaps(this.updateMap,r);t.get(r)!==this.frameId&&!1!==e.update(this)&&t.set(r,this.frameId)}else if(t===Us.RENDER){const{renderMap:t}=this._getMaps(this.updateMap,r);t.get(r)!==this.renderId&&!1!==e.update(this)&&t.set(r,this.renderId)}else t===Us.OBJECT&&e.update(this)}update(){this.frameId++,void 0===this.lastTime&&(this.lastTime=performance.now()),this.deltaTime=(performance.now()-this.lastTime)/1e3,this.lastTime=performance.now(),this.time+=this.deltaTime}}class j_{constructor(e,t,r=null,s="",i=!1){this.type=e,this.name=t,this.count=r,this.qualifier=s,this.isConst=i}}j_.isNodeFunctionInput=!0;class q_ extends hT{static get type(){return"DirectionalLightNode"}constructor(e=null){super(e)}setupDirect(){const e=this.colorNode;return{lightDirection:Nx(this.light),lightColor:e}}}const X_=new a,K_=new a;let Y_=null;class Q_ extends hT{static get type(){return"RectAreaLightNode"}constructor(e=null){super(e),this.halfHeight=Jn(new r).setGroup(Yn),this.halfWidth=Jn(new r).setGroup(Yn),this.updateType=Us.RENDER}update(e){super.update(e);const{light:t}=this,r=e.camera.matrixWorldInverse;K_.identity(),X_.copy(t.matrixWorld),X_.premultiply(r),K_.extractRotation(X_),this.halfWidth.value.set(.5*t.width,0,0),this.halfHeight.value.set(0,.5*t.height,0),this.halfWidth.value.applyMatrix4(K_),this.halfHeight.value.applyMatrix4(K_)}setupDirectRectArea(e){let t,r;e.isAvailable("float32Filterable")?(t=el(Y_.LTC_FLOAT_1),r=el(Y_.LTC_FLOAT_2)):(t=el(Y_.LTC_HALF_1),r=el(Y_.LTC_HALF_2));const{colorNode:s,light:i}=this;return{lightColor:s,lightPosition:vx(i),halfWidth:this.halfWidth,halfHeight:this.halfHeight,ltc_1:t,ltc_2:r}}static setLTC(e){Y_=e}}class Z_ extends hT{static get type(){return"SpotLightNode"}constructor(e=null){super(e),this.coneCosNode=Jn(0).setGroup(Yn),this.penumbraCosNode=Jn(0).setGroup(Yn),this.cutoffDistanceNode=Jn(0).setGroup(Yn),this.decayExponentNode=Jn(0).setGroup(Yn),this.colorNode=Jn(this.color).setGroup(Yn)}update(e){super.update(e);const{light:t}=this;this.coneCosNode.value=Math.cos(t.angle),this.penumbraCosNode.value=Math.cos(t.angle*(1-t.penumbra)),this.cutoffDistanceNode.value=t.distance,this.decayExponentNode.value=t.decay}getSpotAttenuation(e,t){const{coneCosNode:r,penumbraCosNode:s}=this;return Oo(r,s,t)}getLightCoord(e){const t=e.getNodeProperties(this);let r=t.projectionUV;return void 0===r&&(r=xx(this.light,e.context.positionWorld),t.projectionUV=r),r}setupDirect(e){const{colorNode:t,cutoffDistanceNode:r,decayExponentNode:s,light:i}=this,n=this.getLightVector(e),a=n.normalize(),o=a.dot(Nx(i)),u=this.getSpotAttenuation(e,o),l=n.length(),d=pT({lightDistance:l,cutoffDistance:r,decayExponent:s});let c,h,p=t.mul(u).mul(d);if(i.colorNode?(h=this.getLightCoord(e),c=i.colorNode(h)):i.map&&(h=this.getLightCoord(e),c=el(i.map,h.xy).onRenderUpdate(()=>i.map)),c){p=h.mul(2).sub(1).abs().lessThan(1).all().select(p.mul(c),p)}return{lightColor:p,lightDirection:a}}}class J_ extends Z_{static get type(){return"IESSpotLightNode"}getSpotAttenuation(e,t){const r=this.light.iesMap;let s=null;if(r&&!0===r.isTexture){const e=t.acos().mul(1/Math.PI);s=el(r,Qi(e,0),0).r}else s=super.getSpotAttenuation(t);return s}}const ev=Gi(([e,t])=>{const r=e.abs().sub(t);return oo(_o(r,0)).add(To(_o(r.x,r.y),0))});class tv extends Z_{static get type(){return"ProjectorLightNode"}update(e){super.update(e);const t=this.light;if(this.penumbraCosNode.value=Math.min(Math.cos(t.angle*(1-t.penumbra)),.99999),null===t.aspect){let e=1;null!==t.map&&(e=t.map.width/t.map.height),t.shadow.aspect=e}else t.shadow.aspect=t.aspect}getSpotAttenuation(e){const t=this.penumbraCosNode,r=this.getLightCoord(e),s=r.xyz.div(r.w),i=ev(s.xy.sub(Qi(.5)),Qi(.5)),n=ca(-1,la(1,so(t)).sub(1));return Vo(i.mul(-2).mul(n))}}class rv extends hT{static get type(){return"AmbientLightNode"}constructor(e=null){super(e)}setup({context:e}){e.irradiance.addAssign(this.colorNode)}}class sv extends hT{static get type(){return"HemisphereLightNode"}constructor(t=null){super(t),this.lightPositionNode=Tx(t),this.lightDirectionNode=this.lightPositionNode.normalize(),this.groundColorNode=Jn(new e).setGroup(Yn)}update(e){const{light:t}=this;super.update(e),this.lightPositionNode.object3d=t,this.groundColorNode.value.copy(t.groundColor).multiplyScalar(t.intensity)}setup(e){const{colorNode:t,groundColorNode:r,lightDirectionNode:s}=this,i=td.dot(s).mul(.5).add(.5),n=Do(r,t,i);e.context.irradiance.addAssign(n)}}class iv extends hT{static get type(){return"LightProbeNode"}constructor(e=null){super(e);const t=[];for(let e=0;e<9;e++)t.push(new r);this.lightProbe=al(t)}update(e){const{light:t}=this;super.update(e);for(let e=0;e<9;e++)this.lightProbe.array[e].copy(t.sh.coefficients[e]).multiplyScalar(t.intensity)}setup(e){const t=l_(td,this.lightProbe);e.context.irradiance.addAssign(t)}}class nv{parseFunction(){console.warn("Abstract function.")}}class av{constructor(e,t,r="",s=""){this.type=e,this.inputs=t,this.name=r,this.precision=s}getCode(){console.warn("Abstract function.")}}av.isNodeFunction=!0;const ov=/^\s*(highp|mediump|lowp)?\s*([a-z_0-9]+)\s*([a-z_0-9]+)?\s*\(([\s\S]*?)\)/i,uv=/[a-z_0-9]+/gi,lv="#pragma main";class dv extends av{constructor(e){const{type:t,inputs:r,name:s,precision:i,inputsCode:n,blockCode:a,headerCode:o}=(e=>{const t=(e=e.trim()).indexOf(lv),r=-1!==t?e.slice(t+12):e,s=r.match(ov);if(null!==s&&5===s.length){const i=s[4],n=[];let a=null;for(;null!==(a=uv.exec(i));)n.push(a);const o=[];let u=0;for(;u<n.length;){const e="const"===n[u][0];!0===e&&u++;let t=n[u][0];"in"===t||"out"===t||"inout"===t?u++:t="";const r=n[u++][0];let s=Number.parseInt(n[u][0]);!1===Number.isNaN(s)?u++:s=null;const i=n[u++][0];o.push(new j_(r,i,s,t,e))}const l=r.substring(s[0].length),d=void 0!==s[3]?s[3]:"";return{type:s[2],inputs:o,name:d,precision:void 0!==s[1]?s[1]:"",inputsCode:i,blockCode:l,headerCode:-1!==t?e.slice(0,t):""}}throw new Error("FunctionNode: Function is not a GLSL code.")})(e);super(t,r,s,i),this.inputsCode=n,this.blockCode=a,this.headerCode=o}getCode(e=this.name){let t;const r=this.blockCode;if(""!==r){const{type:s,inputsCode:i,headerCode:n,precision:a}=this;let o=`${s} ${e} ( ${i.trim()} )`;""!==a&&(o=`${a} ${o}`),t=n+o+r}else t="";return t}}class cv extends nv{parseFunction(e){return new dv(e)}}const hv=new WeakMap,pv=[],gv=[];class mv extends pf{constructor(e,t){super(),this.renderer=e,this.backend=t,this.nodeFrame=new W_,this.nodeBuilderCache=new Map,this.callHashCache=new uf,this.groupsData=new uf,this.cacheLib={}}updateGroup(e){const t=e.groupNode,r=t.name;if(r===Qn.name)return!0;if(r===Yn.name){const t=this.get(e),r=this.nodeFrame.renderId;return t.renderId!==r&&(t.renderId=r,!0)}if(r===Kn.name){const t=this.get(e),r=this.nodeFrame.frameId;return t.frameId!==r&&(t.frameId=r,!0)}pv[0]=t,pv[1]=e;let s=this.groupsData.get(pv);return void 0===s&&this.groupsData.set(pv,s={}),pv.length=0,s.version!==t.version&&(s.version=t.version,!0)}getForRenderCacheKey(e){return e.initialCacheKey}getForRender(e){const t=this.get(e);let r=t.nodeBuilderState;if(void 0===r){const{nodeBuilderCache:s}=this,i=this.getForRenderCacheKey(e);if(r=s.get(i),void 0===r){const t=this.backend.createNodeBuilder(e.object,this.renderer);t.scene=e.scene,t.material=e.material,t.camera=e.camera,t.context.material=e.material,t.lightsNode=e.lightsNode,t.environmentNode=this.getEnvironmentNode(e.scene),t.fogNode=this.getFogNode(e.scene),t.clippingContext=e.clippingContext,this.renderer.getOutputRenderTarget()&&this.renderer.getOutputRenderTarget().multiview&&t.enableMultiview(),t.build(),r=this._createNodeBuilderState(t),s.set(i,r)}r.usedTimes++,t.nodeBuilderState=r}return r}delete(e){if(e.isRenderObject){const t=this.get(e).nodeBuilderState;t.usedTimes--,0===t.usedTimes&&this.nodeBuilderCache.delete(this.getForRenderCacheKey(e))}return super.delete(e)}getForCompute(e){const t=this.get(e);let r=t.nodeBuilderState;if(void 0===r){const s=this.backend.createNodeBuilder(e,this.renderer);s.build(),r=this._createNodeBuilderState(s),t.nodeBuilderState=r}return r}_createNodeBuilderState(e){return new m_(e.vertexShader,e.fragmentShader,e.computeShader,e.getAttributesArray(),e.getBindings(),e.updateNodes,e.updateBeforeNodes,e.updateAfterNodes,e.observer,e.transforms)}getEnvironmentNode(e){this.updateEnvironment(e);let t=null;if(e.environmentNode&&e.environmentNode.isNode)t=e.environmentNode;else{const r=this.get(e);r.environmentNode&&(t=r.environmentNode)}return t}getBackgroundNode(e){this.updateBackground(e);let t=null;if(e.backgroundNode&&e.backgroundNode.isNode)t=e.backgroundNode;else{const r=this.get(e);r.backgroundNode&&(t=r.backgroundNode)}return t}getFogNode(e){return this.updateFog(e),e.fogNode||this.get(e).fogNode||null}getCacheKey(e,t){pv[0]=e,pv[1]=t;const r=this.renderer.info.calls,s=this.callHashCache.get(pv)||{};if(s.callId!==r){const i=this.getEnvironmentNode(e),n=this.getFogNode(e);t&&gv.push(t.getCacheKey(!0)),i&&gv.push(i.getCacheKey()),n&&gv.push(n.getCacheKey()),gv.push(this.renderer.getOutputRenderTarget()&&this.renderer.getOutputRenderTarget().multiview?1:0),gv.push(this.renderer.shadowMap.enabled?1:0),s.callId=r,s.cacheKey=Ts(gv),this.callHashCache.set(pv,s),gv.length=0}return pv.length=0,s.cacheKey}get isToneMappingState(){return!this.renderer.getRenderTarget()}updateBackground(e){const t=this.get(e),r=e.background;if(r){const s=0===e.backgroundBlurriness&&t.backgroundBlurriness>0||e.backgroundBlurriness>0&&0===t.backgroundBlurriness;if(t.background!==r||s){const i=this.getCacheNode("background",r,()=>{if(!0===r.isCubeTexture||r.mapping===Z||r.mapping===J||r.mapping===he){if(e.backgroundBlurriness>0||r.mapping===he)return Rm(r);{let e;return e=!0===r.isCubeTexture?Td(r):el(r),Mp(e)}}if(!0===r.isTexture)return el(r,Rh.flipY()).setUpdateMatrix(!0);!0!==r.isColor&&console.error("WebGPUNodes: Unsupported background configuration.",r)},s);t.backgroundNode=i,t.background=r,t.backgroundBlurriness=e.backgroundBlurriness}}else t.backgroundNode&&(delete t.backgroundNode,delete t.background)}getCacheNode(e,t,r,s=!1){const i=this.cacheLib[e]||(this.cacheLib[e]=new WeakMap);let n=i.get(t);return(void 0===n||s)&&(n=r(),i.set(t,n)),n}updateFog(e){const t=this.get(e),r=e.fog;if(r){if(t.fog!==r){const e=this.getCacheNode("fog",r,()=>{if(r.isFogExp2){const e=Nd("color","color",r).setGroup(Yn),t=Nd("density","float",r).setGroup(Yn);return Zb(e,Qb(t))}if(r.isFog){const e=Nd("color","color",r).setGroup(Yn),t=Nd("near","float",r).setGroup(Yn),s=Nd("far","float",r).setGroup(Yn);return Zb(e,Yb(t,s))}console.error("THREE.Renderer: Unsupported fog configuration.",r)});t.fogNode=e,t.fog=r}}else delete t.fogNode,delete t.fog}updateEnvironment(e){const t=this.get(e),r=e.environment;if(r){if(t.environment!==r){const e=this.getCacheNode("environment",r,()=>!0===r.isCubeTexture?Td(r):!0===r.isTexture?el(r):void console.error("Nodes: Unsupported environment configuration.",r));t.environmentNode=e,t.environment=r}}else t.environmentNode&&(delete t.environmentNode,delete t.environment)}getNodeFrame(e=this.renderer,t=null,r=null,s=null,i=null){const n=this.nodeFrame;return n.renderer=e,n.scene=t,n.object=r,n.camera=s,n.material=i,n}getNodeFrameForRender(e){return this.getNodeFrame(e.renderer,e.scene,e.object,e.camera,e.material)}getOutputCacheKey(){const e=this.renderer;return e.toneMapping+","+e.currentColorSpace+","+e.xr.isPresenting}hasOutputChange(e){return hv.get(e)!==this.getOutputCacheKey()}getOutputNode(e){const t=this.renderer,r=this.getOutputCacheKey(),s=e.isArrayTexture?ub(e,tn(Rh,ol("gl_ViewID_OVR"))).renderOutput(t.toneMapping,t.currentColorSpace):el(e,Rh).renderOutput(t.toneMapping,t.currentColorSpace);return hv.set(e,r),s}updateBefore(e){const t=e.getNodeBuilderState();for(const r of t.updateBeforeNodes)this.getNodeFrameForRender(e).updateBeforeNode(r)}updateAfter(e){const t=e.getNodeBuilderState();for(const r of t.updateAfterNodes)this.getNodeFrameForRender(e).updateAfterNode(r)}updateForCompute(e){const t=this.getNodeFrame(),r=this.getForCompute(e);for(const e of r.updateNodes)t.updateNode(e)}updateForRender(e){const t=this.getNodeFrameForRender(e),r=e.getNodeBuilderState();for(const e of r.updateNodes)t.updateNode(e)}needsRefresh(e){const t=this.getNodeFrameForRender(e);return e.getMonitor().needsRefresh(e,t)}dispose(){super.dispose(),this.nodeFrame=new W_,this.nodeBuilderCache=new Map,this.cacheLib={}}}const fv=new Me;class yv{constructor(e=null){this.version=0,this.clipIntersection=null,this.cacheKey="",this.shadowPass=!1,this.viewNormalMatrix=new n,this.clippingGroupContexts=new WeakMap,this.intersectionPlanes=[],this.unionPlanes=[],this.parentVersion=null,null!==e&&(this.viewNormalMatrix=e.viewNormalMatrix,this.clippingGroupContexts=e.clippingGroupContexts,this.shadowPass=e.shadowPass,this.viewMatrix=e.viewMatrix)}projectPlanes(e,t,r){const s=e.length;for(let i=0;i<s;i++){fv.copy(e[i]).applyMatrix4(this.viewMatrix,this.viewNormalMatrix);const s=t[r+i],n=fv.normal;s.x=-n.x,s.y=-n.y,s.z=-n.z,s.w=fv.constant}}updateGlobal(e,t){this.shadowPass=null!==e.overrideMaterial&&e.overrideMaterial.isShadowPassMaterial,this.viewMatrix=t.matrixWorldInverse,this.viewNormalMatrix.getNormalMatrix(this.viewMatrix)}update(e,t){let r=!1;e.version!==this.parentVersion&&(this.intersectionPlanes=Array.from(e.intersectionPlanes),this.unionPlanes=Array.from(e.unionPlanes),this.parentVersion=e.version),this.clipIntersection!==t.clipIntersection&&(this.clipIntersection=t.clipIntersection,this.clipIntersection?this.unionPlanes.length=e.unionPlanes.length:this.intersectionPlanes.length=e.intersectionPlanes.length);const i=t.clippingPlanes,n=i.length;let a,o;if(this.clipIntersection?(a=this.intersectionPlanes,o=e.intersectionPlanes.length):(a=this.unionPlanes,o=e.unionPlanes.length),a.length!==o+n){a.length=o+n;for(let e=0;e<n;e++)a[o+e]=new s;r=!0}this.projectPlanes(i,a,o),r&&(this.version++,this.cacheKey=`${this.intersectionPlanes.length}:${this.unionPlanes.length}`)}getGroupContext(e){if(this.shadowPass&&!e.clipShadows)return this;let t=this.clippingGroupContexts.get(e);return void 0===t&&(t=new yv(this),this.clippingGroupContexts.set(e,t)),t.update(this,e),t}get unionClippingCount(){return this.unionPlanes.length}}class bv{constructor(e,t){this.bundleGroup=e,this.camera=t}}const xv=[];class Tv{constructor(){this.bundles=new uf}get(e,t){const r=this.bundles;xv[0]=e,xv[1]=t;let s=r.get(xv);return void 0===s&&(s=new bv(e,t),r.set(xv,s)),xv.length=0,s}dispose(){this.bundles=new uf}}class _v{constructor(){this.lightNodes=new WeakMap,this.materialNodes=new Map,this.toneMappingNodes=new Map}fromMaterial(e){if(e.isNodeMaterial)return e;let t=null;const r=this.getMaterialNodeClass(e.type);if(null!==r){t=new r;for(const r in e)t[r]=e[r]}return t}addToneMapping(e,t){this.addType(e,t,this.toneMappingNodes)}getToneMappingFunction(e){return this.toneMappingNodes.get(e)||null}getMaterialNodeClass(e){return this.materialNodes.get(e)||null}addMaterial(e,t){this.addType(e,t,this.materialNodes)}getLightNodeClass(e){return this.lightNodes.get(e)||null}addLight(e,t){this.addClass(e,t,this.lightNodes)}addType(e,t,r){if(r.has(t))console.warn(`Redefinition of node ${t}`);else{if("function"!=typeof e)throw new Error(`Node class ${e.name} is not a class.`);if("function"==typeof t||"object"==typeof t)throw new Error(`Base class ${t} is not a class.`);r.set(t,e)}}addClass(e,t,r){if(r.has(t))console.warn(`Redefinition of node ${t.name}`);else{if("function"!=typeof e)throw new Error(`Node class ${e.name} is not a class.`);if("function"!=typeof t)throw new Error(`Base class ${t.name} is not a class.`);r.set(t,e)}}}const vv=new Ax,Nv=[];class Sv extends uf{constructor(){super()}createNode(e=[]){return(new Ax).setLights(e)}getNode(e,t){if(e.isQuadMesh)return vv;Nv[0]=e,Nv[1]=t;let r=this.get(Nv);return void 0===r&&(r=this.createNode(),this.set(Nv,r)),Nv.length=0,r}}class Ev extends ue{constructor(e=1,t=1,r={}){super(e,t,r),this.isXRRenderTarget=!0,this._hasExternalTextures=!1,this._autoAllocateDepthBuffer=!0,this._isOpaqueFramebuffer=!1}copy(e){return super.copy(e),this._hasExternalTextures=e._hasExternalTextures,this._autoAllocateDepthBuffer=e._autoAllocateDepthBuffer,this._isOpaqueFramebuffer=e._isOpaqueFramebuffer,this}}const wv=new r,Av=new r;class Rv extends o{constructor(e,r=!1){super(),this.enabled=!1,this.isPresenting=!1,this.cameraAutoUpdate=!0,this._renderer=e,this._cameraL=new oe,this._cameraL.viewport=new s,this._cameraR=new oe,this._cameraR.viewport=new s,this._cameras=[this._cameraL,this._cameraR],this._cameraXR=new $e,this._currentDepthNear=null,this._currentDepthFar=null,this._controllers=[],this._controllerInputSources=[],this._xrRenderTarget=null,this._layers=[],this._supportsLayers=!1,this._supportsGlBinding="undefined"!=typeof XRWebGLBinding,this._frameBufferTargets=null,this._createXRLayer=Lv.bind(this),this._gl=null,this._currentAnimationContext=null,this._currentAnimationLoop=null,this._currentPixelRatio=null,this._currentSize=new t,this._onSessionEvent=Mv.bind(this),this._onSessionEnd=Pv.bind(this),this._onInputSourcesChange=Bv.bind(this),this._onAnimationFrame=Fv.bind(this),this._referenceSpace=null,this._referenceSpaceType="local-floor",this._customReferenceSpace=null,this._framebufferScaleFactor=1,this._foveation=1,this._session=null,this._glBaseLayer=null,this._glBinding=null,this._glProjLayer=null,this._xrFrame=null,this._useLayers=this._supportsGlBinding&&"createProjectionLayer"in XRWebGLBinding.prototype,this._useMultiviewIfPossible=r,this._useMultiview=!1}getController(e){return this._getController(e).getTargetRaySpace()}getControllerGrip(e){return this._getController(e).getGripSpace()}getHand(e){return this._getController(e).getHandSpace()}getFoveation(){if(null!==this._glProjLayer||null!==this._glBaseLayer)return this._foveation}setFoveation(e){this._foveation=e,null!==this._glProjLayer&&(this._glProjLayer.fixedFoveation=e),null!==this._glBaseLayer&&void 0!==this._glBaseLayer.fixedFoveation&&(this._glBaseLayer.fixedFoveation=e)}getFramebufferScaleFactor(){return this._framebufferScaleFactor}setFramebufferScaleFactor(e){this._framebufferScaleFactor=e,!0===this.isPresenting&&console.warn("THREE.XRManager: Cannot change framebuffer scale while presenting.")}getReferenceSpaceType(){return this._referenceSpaceType}setReferenceSpaceType(e){this._referenceSpaceType=e,!0===this.isPresenting&&console.warn("THREE.XRManager: Cannot change reference space type while presenting.")}getReferenceSpace(){return this._customReferenceSpace||this._referenceSpace}setReferenceSpace(e){this._customReferenceSpace=e}getCamera(){return this._cameraXR}getEnvironmentBlendMode(){if(null!==this._session)return this._session.environmentBlendMode}getFrame(){return this._xrFrame}useMultiview(){return this._useMultiview}createQuadLayer(e,t,r,s,i,n,a,o={}){const u=new We(e,t),l=new Ev(i,n,{format:de,type:Ce,depthTexture:new U(i,n,o.stencil?Re:T,void 0,void 0,void 0,void 0,void 0,void 0,o.stencil?we:Ae),stencilBuffer:o.stencil,resolveDepthBuffer:!1,resolveStencilBuffer:!1});l._autoAllocateDepthBuffer=!0;const d=new se({color:16777215,side:je});d.map=l.texture,d.map.offset.y=1,d.map.repeat.y=-1;const c=new X(u,d);c.position.copy(r),c.quaternion.copy(s);const h={type:"quad",width:e,height:t,translation:r,quaternion:s,pixelwidth:i,pixelheight:n,plane:c,material:d,rendercall:a,renderTarget:l};if(this._layers.push(h),null!==this._session){h.plane.material=new se({color:16777215,side:je}),h.plane.material.blending=qe,h.plane.material.blendEquation=Xe,h.plane.material.blendSrc=Ke,h.plane.material.blendDst=Ke,h.xrlayer=this._createXRLayer(h);const e=this._session.renderState.layers;e.unshift(h.xrlayer),this._session.updateRenderState({layers:e})}else l.isXRRenderTarget=!1;return c}createCylinderLayer(e,t,r,s,i,n,a,o,u={}){const l=new Ye(e,e,e*t/r,64,64,!0,Math.PI-t/2,t),d=new Ev(n,a,{format:de,type:Ce,depthTexture:new U(n,a,u.stencil?Re:T,void 0,void 0,void 0,void 0,void 0,void 0,u.stencil?we:Ae),stencilBuffer:u.stencil,resolveDepthBuffer:!1,resolveStencilBuffer:!1});d._autoAllocateDepthBuffer=!0;const c=new se({color:16777215,side:S});c.map=d.texture,c.map.offset.y=1,c.map.repeat.y=-1;const h=new X(l,c);h.position.copy(s),h.quaternion.copy(i);const p={type:"cylinder",radius:e,centralAngle:t,aspectratio:r,translation:s,quaternion:i,pixelwidth:n,pixelheight:a,plane:h,material:c,rendercall:o,renderTarget:d};if(this._layers.push(p),null!==this._session){p.plane.material=new se({color:16777215,side:S}),p.plane.material.blending=qe,p.plane.material.blendEquation=Xe,p.plane.material.blendSrc=Ke,p.plane.material.blendDst=Ke,p.xrlayer=this._createXRLayer(p);const e=this._session.renderState.layers;e.unshift(p.xrlayer),this._session.updateRenderState({layers:e})}else d.isXRRenderTarget=!1;return h}renderLayers(){const e=new r,s=new Qe,i=this._renderer,n=this.isPresenting,a=i.getOutputRenderTarget(),o=i._frameBufferTarget;this.isPresenting=!1;const u=new t;i.getSize(u);const l=i._quad;for(const t of this._layers)if(t.renderTarget.isXRRenderTarget=null!==this._session,t.renderTarget._hasExternalTextures=t.renderTarget.isXRRenderTarget,t.renderTarget.isXRRenderTarget&&this._supportsLayers){t.xrlayer.transform=new XRRigidTransform(t.plane.getWorldPosition(e),t.plane.getWorldQuaternion(s));const r=this._glBinding.getSubImage(t.xrlayer,this._xrFrame);i.backend.setXRRenderTargetTextures(t.renderTarget,r.colorTexture,void 0),i._setXRLayerSize(t.renderTarget.width,t.renderTarget.height),i.setOutputRenderTarget(t.renderTarget),i.setRenderTarget(null),i._frameBufferTarget=null,this._frameBufferTargets||(this._frameBufferTargets=new WeakMap);const{frameBufferTarget:n,quad:a}=this._frameBufferTargets.get(t.renderTarget)||{frameBufferTarget:null,quad:null};n?(i._frameBufferTarget=n,i._quad=a):(i._quad=new ky(new cp),this._frameBufferTargets.set(t.renderTarget,{frameBufferTarget:i._getFrameBufferTarget(),quad:i._quad})),t.rendercall(),i._frameBufferTarget=null}else i.setRenderTarget(t.renderTarget),t.rendercall();i.setRenderTarget(null),i.setOutputRenderTarget(a),i._frameBufferTarget=o,i._setXRLayerSize(u.x,u.y),i._quad=l,this.isPresenting=n}getSession(){return this._session}async setSession(e){const t=this._renderer,r=t.backend;this._gl=t.getContext();const s=this._gl,i=s.getContextAttributes();if(this._session=e,null!==e){if(!0===r.isWebGPUBackend)throw new Error('THREE.XRManager: XR is currently not supported with a WebGPU backend. Use WebGL by passing "{ forceWebGL: true }" to the constructor of the renderer.');if(e.addEventListener("select",this._onSessionEvent),e.addEventListener("selectstart",this._onSessionEvent),e.addEventListener("selectend",this._onSessionEvent),e.addEventListener("squeeze",this._onSessionEvent),e.addEventListener("squeezestart",this._onSessionEvent),e.addEventListener("squeezeend",this._onSessionEvent),e.addEventListener("end",this._onSessionEnd),e.addEventListener("inputsourceschange",this._onInputSourcesChange),await r.makeXRCompatible(),this._currentPixelRatio=t.getPixelRatio(),t.getSize(this._currentSize),this._currentAnimationContext=t._animation.getContext(),this._currentAnimationLoop=t._animation.getAnimationLoop(),t._animation.stop(),this._supportsGlBinding){const t=new XRWebGLBinding(e,s);this._glBinding=t}if(!0===this._useLayers){let r=null,n=null,a=null;t.depth&&(a=t.stencil?s.DEPTH24_STENCIL8:s.DEPTH_COMPONENT24,r=t.stencil?we:Ae,n=t.stencil?Re:T);const o={colorFormat:s.RGBA8,depthFormat:a,scaleFactor:this._framebufferScaleFactor,clearOnAccess:!1};this._useMultiviewIfPossible&&t.hasFeature("OVR_multiview2")&&(o.textureType="texture-array",this._useMultiview=!0);const u=this._glBinding.createProjectionLayer(o),l=[u];this._glProjLayer=u,t.setPixelRatio(1),t._setXRLayerSize(u.textureWidth,u.textureHeight);const d=this._useMultiview?2:1,c=new U(u.textureWidth,u.textureHeight,n,void 0,void 0,void 0,void 0,void 0,void 0,r,d);if(this._xrRenderTarget=new Ev(u.textureWidth,u.textureHeight,{format:de,type:Ce,colorSpace:t.outputColorSpace,depthTexture:c,stencilBuffer:t.stencil,samples:i.antialias?4:0,resolveDepthBuffer:!1===u.ignoreDepthValues,resolveStencilBuffer:!1===u.ignoreDepthValues,depth:this._useMultiview?2:1,multiview:this._useMultiview}),this._xrRenderTarget._hasExternalTextures=!0,this._xrRenderTarget.depth=this._useMultiview?2:1,this._supportsLayers=e.enabledFeatures.includes("layers"),this._referenceSpace=await e.requestReferenceSpace(this.getReferenceSpaceType()),this._supportsLayers)for(const e of this._layers)e.plane.material=new se({color:16777215,side:"cylinder"===e.type?S:je}),e.plane.material.blending=qe,e.plane.material.blendEquation=Xe,e.plane.material.blendSrc=Ke,e.plane.material.blendDst=Ke,e.xrlayer=this._createXRLayer(e),l.unshift(e.xrlayer);e.updateRenderState({layers:l})}else{const r={antialias:t.samples>0,alpha:!0,depth:t.depth,stencil:t.stencil,framebufferScaleFactor:this.getFramebufferScaleFactor()},i=new XRWebGLLayer(e,s,r);this._glBaseLayer=i,e.updateRenderState({baseLayer:i}),t.setPixelRatio(1),t._setXRLayerSize(i.framebufferWidth,i.framebufferHeight),this._xrRenderTarget=new Ev(i.framebufferWidth,i.framebufferHeight,{format:de,type:Ce,colorSpace:t.outputColorSpace,stencilBuffer:t.stencil,resolveDepthBuffer:!1===i.ignoreDepthValues,resolveStencilBuffer:!1===i.ignoreDepthValues}),this._xrRenderTarget._isOpaqueFramebuffer=!0,this._referenceSpace=await e.requestReferenceSpace(this.getReferenceSpaceType())}this.setFoveation(this.getFoveation()),t._animation.setAnimationLoop(this._onAnimationFrame),t._animation.setContext(e),t._animation.start(),this.isPresenting=!0,this.dispatchEvent({type:"sessionstart"})}}updateCamera(e){const t=this._session;if(null===t)return;const r=e.near,s=e.far,i=this._cameraXR,n=this._cameraL,a=this._cameraR;i.near=a.near=n.near=r,i.far=a.far=n.far=s,i.isMultiViewCamera=this._useMultiview,this._currentDepthNear===i.near&&this._currentDepthFar===i.far||(t.updateRenderState({depthNear:i.near,depthFar:i.far}),this._currentDepthNear=i.near,this._currentDepthFar=i.far),n.layers.mask=2|e.layers.mask,a.layers.mask=4|e.layers.mask,i.layers.mask=n.layers.mask|a.layers.mask;const o=e.parent,u=i.cameras;Cv(i,o);for(let e=0;e<u.length;e++)Cv(u[e],o);2===u.length?function(e,t,r){wv.setFromMatrixPosition(t.matrixWorld),Av.setFromMatrixPosition(r.matrixWorld);const s=wv.distanceTo(Av),i=t.projectionMatrix.elements,n=r.projectionMatrix.elements,a=i[14]/(i[10]-1),o=i[14]/(i[10]+1),u=(i[9]+1)/i[5],l=(i[9]-1)/i[5],d=(i[8]-1)/i[0],c=(n[8]+1)/n[0],h=a*d,p=a*c,g=s/(-d+c),m=g*-d;if(t.matrixWorld.decompose(e.position,e.quaternion,e.scale),e.translateX(m),e.translateZ(g),e.matrixWorld.compose(e.position,e.quaternion,e.scale),e.matrixWorldInverse.copy(e.matrixWorld).invert(),-1===i[10])e.projectionMatrix.copy(t.projectionMatrix),e.projectionMatrixInverse.copy(t.projectionMatrixInverse);else{const t=a+g,r=o+g,i=h-m,n=p+(s-m),d=u*o/r*t,c=l*o/r*t;e.projectionMatrix.makePerspective(i,n,d,c,t,r),e.projectionMatrixInverse.copy(e.projectionMatrix).invert()}}(i,n,a):i.projectionMatrix.copy(n.projectionMatrix),function(e,t,r){null===r?e.matrix.copy(t.matrixWorld):(e.matrix.copy(r.matrixWorld),e.matrix.invert(),e.matrix.multiply(t.matrixWorld));e.matrix.decompose(e.position,e.quaternion,e.scale),e.updateMatrixWorld(!0),e.projectionMatrix.copy(t.projectionMatrix),e.projectionMatrixInverse.copy(t.projectionMatrixInverse),e.isPerspectiveCamera&&(e.fov=2*Je*Math.atan(1/e.projectionMatrix.elements[5]),e.zoom=1)}(e,i,o)}_getController(e){let t=this._controllers[e];return void 0===t&&(t=new Ze,this._controllers[e]=t),t}}function Cv(e,t){null===t?e.matrixWorld.copy(e.matrix):e.matrixWorld.multiplyMatrices(t.matrixWorld,e.matrix),e.matrixWorldInverse.copy(e.matrixWorld).invert()}function Mv(e){const t=this._controllerInputSources.indexOf(e.inputSource);if(-1===t)return;const r=this._controllers[t];if(void 0!==r){const t=this.getReferenceSpace();r.update(e.inputSource,e.frame,t),r.dispatchEvent({type:e.type,data:e.inputSource})}}function Pv(){const e=this._session,t=this._renderer;e.removeEventListener("select",this._onSessionEvent),e.removeEventListener("selectstart",this._onSessionEvent),e.removeEventListener("selectend",this._onSessionEvent),e.removeEventListener("squeeze",this._onSessionEvent),e.removeEventListener("squeezestart",this._onSessionEvent),e.removeEventListener("squeezeend",this._onSessionEvent),e.removeEventListener("end",this._onSessionEnd),e.removeEventListener("inputsourceschange",this._onInputSourcesChange);for(let e=0;e<this._controllers.length;e++){const t=this._controllerInputSources[e];null!==t&&(this._controllerInputSources[e]=null,this._controllers[e].disconnect(t))}if(this._currentDepthNear=null,this._currentDepthFar=null,t._resetXRState(),this._session=null,this._xrRenderTarget=null,!0===this._supportsLayers)for(const e of this._layers)e.renderTarget=new Ev(e.pixelwidth,e.pixelheight,{format:de,type:Ce,depthTexture:new U(e.pixelwidth,e.pixelheight,e.stencilBuffer?Re:T,void 0,void 0,void 0,void 0,void 0,void 0,e.stencilBuffer?we:Ae),stencilBuffer:e.stencilBuffer,resolveDepthBuffer:!1,resolveStencilBuffer:!1}),e.renderTarget.isXRRenderTarget=!1,e.plane.material=e.material,e.material.map=e.renderTarget.texture,e.material.map.offset.y=1,e.material.map.repeat.y=-1,delete e.xrlayer;this.isPresenting=!1,this._useMultiview=!1,t._animation.stop(),t._animation.setAnimationLoop(this._currentAnimationLoop),t._animation.setContext(this._currentAnimationContext),t._animation.start(),t.setPixelRatio(this._currentPixelRatio),t.setSize(this._currentSize.width,this._currentSize.height,!1),this.dispatchEvent({type:"sessionend"})}function Bv(e){const t=this._controllers,r=this._controllerInputSources;for(let s=0;s<e.removed.length;s++){const i=e.removed[s],n=r.indexOf(i);n>=0&&(r[n]=null,t[n].disconnect(i))}for(let s=0;s<e.added.length;s++){const i=e.added[s];let n=r.indexOf(i);if(-1===n){for(let e=0;e<t.length;e++){if(e>=r.length){r.push(i),n=e;break}if(null===r[e]){r[e]=i,n=e;break}}if(-1===n)break}const a=t[n];a&&a.connect(i)}}function Lv(e){return"quad"===e.type?this._glBinding.createQuadLayer({transform:new XRRigidTransform(e.translation,e.quaternion),width:e.width/2,height:e.height/2,space:this._referenceSpace,viewPixelWidth:e.pixelwidth,viewPixelHeight:e.pixelheight,clearOnAccess:!1}):this._glBinding.createCylinderLayer({transform:new XRRigidTransform(e.translation,e.quaternion),radius:e.radius,centralAngle:e.centralAngle,aspectRatio:e.aspectRatio,space:this._referenceSpace,viewPixelWidth:e.pixelwidth,viewPixelHeight:e.pixelheight,clearOnAccess:!1})}function Fv(e,t){if(void 0===t)return;const r=this._cameraXR,i=this._renderer,n=i.backend,a=this._glBaseLayer,o=this.getReferenceSpace(),u=t.getViewerPose(o);if(this._xrFrame=t,null!==u){const e=u.views;null!==this._glBaseLayer&&n.setXRTarget(a.framebuffer);let t=!1;e.length!==r.cameras.length&&(r.cameras.length=0,t=!0);for(let i=0;i<e.length;i++){const o=e[i];let u;if(!0===this._useLayers){const e=this._glBinding.getViewSubImage(this._glProjLayer,o);u=e.viewport,0===i&&n.setXRRenderTargetTextures(this._xrRenderTarget,e.colorTexture,this._glProjLayer.ignoreDepthValues&&!this._useMultiview?void 0:e.depthStencilTexture)}else u=a.getViewport(o);let l=this._cameras[i];void 0===l&&(l=new oe,l.layers.enable(i),l.viewport=new s,this._cameras[i]=l),l.matrix.fromArray(o.transform.matrix),l.matrix.decompose(l.position,l.quaternion,l.scale),l.projectionMatrix.fromArray(o.projectionMatrix),l.projectionMatrixInverse.copy(l.projectionMatrix).invert(),l.viewport.set(u.x,u.y,u.width,u.height),0===i&&(r.matrix.copy(l.matrix),r.matrix.decompose(r.position,r.quaternion,r.scale)),!0===t&&r.cameras.push(l)}i.setOutputRenderTarget(this._xrRenderTarget)}for(let e=0;e<this._controllers.length;e++){const r=this._controllerInputSources[e],s=this._controllers[e];null!==r&&void 0!==s&&s.update(r,t,o)}this._currentAnimationLoop&&this._currentAnimationLoop(e,t),t.detectedPlanes&&this.dispatchEvent({type:"planesdetected",data:t}),this._xrFrame=null}const Dv=new K,Iv=new t,Vv=new s,Uv=new rt,Ov=new tt,kv=new a,Gv=new s;class zv{constructor(e,t={}){this.isRenderer=!0;const{logarithmicDepthBuffer:r=!1,alpha:i=!0,depth:n=!0,stencil:a=!1,antialias:o=!1,samples:u=0,getFallback:l=null,colorBufferType:d=ce,multiview:c=!1}=t;this.domElement=e.getDomElement(),this.backend=e,this.samples=u||!0===o?4:0,this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.alpha=i,this.logarithmicDepthBuffer=r,this.outputColorSpace=W,this.toneMapping=p,this.toneMappingExposure=1,this.sortObjects=!0,this.depth=n,this.stencil=a,this.info=new Nf,this.overrideNodes={modelViewMatrix:null,modelNormalViewMatrix:null},this.library=new _v,this.lighting=new Sv,this._getFallback=l,this._pixelRatio=1,this._width=this.domElement.width,this._height=this.domElement.height,this._viewport=new s(0,0,this._width,this._height),this._scissor=new s(0,0,this._width,this._height),this._scissorTest=!1,this._attributes=null,this._geometries=null,this._nodes=null,this._animation=null,this._bindings=null,this._objects=null,this._pipelines=null,this._bundles=null,this._renderLists=null,this._renderContexts=null,this._textures=null,this._background=null,this._quad=new ky(new cp),this._quad.material.name="Renderer_output",this._currentRenderContext=null,this._opaqueSort=null,this._transparentSort=null,this._frameBufferTarget=null;const h=!0===this.alpha?0:1;this._clearColor=new jf(0,0,0,h),this._clearDepth=1,this._clearStencil=0,this._renderTarget=null,this._activeCubeFace=0,this._activeMipmapLevel=0,this._outputRenderTarget=null,this._mrt=null,this._renderObjectFunction=null,this._currentRenderObjectFunction=null,this._currentRenderBundle=null,this._handleObjectFunction=this._renderObjectDirect,this._isDeviceLost=!1,this.onDeviceLost=this._onDeviceLost,this._colorBufferType=d,this._initialized=!1,this._initPromise=null,this._compilationPromises=null,this.transparent=!0,this.opaque=!0,this.shadowMap={enabled:!1,type:et},this.xr=new Rv(this,c),this.debug={checkShaderErrors:!0,onShaderError:null,getShaderAsync:async(e,t,r)=>{await this.compileAsync(e,t);const s=this._renderLists.get(e,t),i=this._renderContexts.get(e,t,this._renderTarget),n=e.overrideMaterial||r.material,a=this._objects.get(r,n,e,t,s.lightsNode,i,i.clippingContext),{fragmentShader:o,vertexShader:u}=a.getNodeBuilderState();return{fragmentShader:o,vertexShader:u}}}}async init(){if(this._initialized)throw new Error("Renderer: Backend has already been initialized.");return null!==this._initPromise||(this._initPromise=new Promise(async(e,t)=>{let r=this.backend;try{await r.init(this)}catch(e){if(null===this._getFallback)return void t(e);try{this.backend=r=this._getFallback(e),await r.init(this)}catch(e){return void t(e)}}this._nodes=new mv(this,r),this._animation=new of(this._nodes,this.info),this._attributes=new xf(r),this._background=new h_(this,this._nodes),this._geometries=new vf(this._attributes,this.info),this._textures=new Wf(this,r,this.info),this._pipelines=new Cf(r,this._nodes),this._bindings=new Mf(r,this._nodes,this._textures,this._attributes,this._pipelines,this.info),this._objects=new hf(this,this._nodes,this._geometries,this._pipelines,this._bindings,this.info),this._renderLists=new If(this.lighting),this._bundles=new Tv,this._renderContexts=new Hf,this._animation.start(),this._initialized=!0,e(this)})),this._initPromise}get coordinateSystem(){return this.backend.coordinateSystem}async compileAsync(e,t,r=null){if(!0===this._isDeviceLost)return;!1===this._initialized&&await this.init();const s=this._nodes.nodeFrame,i=s.renderId,n=this._currentRenderContext,a=this._currentRenderObjectFunction,o=this._compilationPromises,u=!0===e.isScene?e:Dv;null===r&&(r=e);const l=this._renderTarget,d=this._renderContexts.get(r,t,l),c=this._activeMipmapLevel,h=[];this._currentRenderContext=d,this._currentRenderObjectFunction=this.renderObject,this._handleObjectFunction=this._createObjectPipeline,this._compilationPromises=h,s.renderId++,s.update(),d.depth=this.depth,d.stencil=this.stencil,d.clippingContext||(d.clippingContext=new yv),d.clippingContext.updateGlobal(u,t),u.onBeforeRender(this,e,t,l);const p=this._renderLists.get(e,t);if(p.begin(),this._projectObject(e,t,0,p,d.clippingContext),r!==e&&r.traverseVisible(function(e){e.isLight&&e.layers.test(t.layers)&&p.pushLight(e)}),p.finish(),null!==l){this._textures.updateRenderTarget(l,c);const e=this._textures.get(l);d.textures=e.textures,d.depthTexture=e.depthTexture}else d.textures=null,d.depthTexture=null;this._background.update(u,p,d);const g=p.opaque,m=p.transparent,f=p.transparentDoublePass,y=p.lightsNode;!0===this.opaque&&g.length>0&&this._renderObjects(g,t,u,y),!0===this.transparent&&m.length>0&&this._renderTransparents(m,f,t,u,y),s.renderId=i,this._currentRenderContext=n,this._currentRenderObjectFunction=a,this._compilationPromises=o,this._handleObjectFunction=this._renderObjectDirect,await Promise.all(h)}async renderAsync(e,t){!1===this._initialized&&await this.init(),this._renderScene(e,t)}async waitForGPU(){await this.backend.waitForGPU()}set highPrecision(e){!0===e?(this.overrideNodes.modelViewMatrix=Il,this.overrideNodes.modelNormalViewMatrix=Vl):this.highPrecision&&(this.overrideNodes.modelViewMatrix=null,this.overrideNodes.modelNormalViewMatrix=null)}get highPrecision(){return this.overrideNodes.modelViewMatrix===Il&&this.overrideNodes.modelNormalViewMatrix===Vl}setMRT(e){return this._mrt=e,this}getMRT(){return this._mrt}getColorBufferType(){return this._colorBufferType}_onDeviceLost(e){let t=`THREE.WebGPURenderer: ${e.api} Device Lost:\n\nMessage: ${e.message}`;e.reason&&(t+=`\nReason: ${e.reason}`),console.error(t),this._isDeviceLost=!0}_renderBundle(e,t,r){const{bundleGroup:s,camera:i,renderList:n}=e,a=this._currentRenderContext,o=this._bundles.get(s,i),u=this.backend.get(o);void 0===u.renderContexts&&(u.renderContexts=new Set);const l=s.version!==u.version,d=!1===u.renderContexts.has(a)||l;if(u.renderContexts.add(a),d){this.backend.beginBundle(a),(void 0===u.renderObjects||l)&&(u.renderObjects=[]),this._currentRenderBundle=o;const{transparentDoublePass:e,transparent:d,opaque:c}=n;!0===this.opaque&&c.length>0&&this._renderObjects(c,i,t,r),!0===this.transparent&&d.length>0&&this._renderTransparents(d,e,i,t,r),this._currentRenderBundle=null,this.backend.finishBundle(a,o),u.version=s.version}else{const{renderObjects:e}=u;for(let t=0,r=e.length;t<r;t++){const r=e[t];this._nodes.needsRefresh(r)&&(this._nodes.updateBefore(r),this._nodes.updateForRender(r),this._bindings.updateForRender(r),this._nodes.updateAfter(r))}}this.backend.addBundle(a,o)}render(e,t){if(!1===this._initialized)return console.warn("THREE.Renderer: .render() called before the backend is initialized. Try using .renderAsync() instead."),this.renderAsync(e,t);this._renderScene(e,t)}_getFrameBufferTarget(){const{currentToneMapping:e,currentColorSpace:t}=this;if(!1===(e!==p)&&!1===(t!==le))return null;const{width:r,height:s}=this.getDrawingBufferSize(Iv),{depth:i,stencil:n}=this;let a=this._frameBufferTarget;null===a&&(a=new ue(r,s,{depthBuffer:i,stencilBuffer:n,type:this._colorBufferType,format:de,colorSpace:le,generateMipmaps:!1,minFilter:Y,magFilter:Y,samples:this.samples}),a.isPostProcessingRenderTarget=!0,this._frameBufferTarget=a);const o=this.getOutputRenderTarget();return a.depthBuffer=i,a.stencilBuffer=n,null!==o?a.setSize(o.width,o.height,o.depth):a.setSize(r,s,1),a.viewport.copy(this._viewport),a.scissor.copy(this._scissor),a.viewport.multiplyScalar(this._pixelRatio),a.scissor.multiplyScalar(this._pixelRatio),a.scissorTest=this._scissorTest,a.multiview=null!==o&&o.multiview,a.resolveDepthBuffer=null===o||o.resolveDepthBuffer,a._autoAllocateDepthBuffer=null!==o&&o._autoAllocateDepthBuffer,a}_renderScene(e,t,r=!0){if(!0===this._isDeviceLost)return;const s=r?this._getFrameBufferTarget():null,i=this._nodes.nodeFrame,n=i.renderId,a=this._currentRenderContext,o=this._currentRenderObjectFunction,u=!0===e.isScene?e:Dv,l=this._renderTarget||this._outputRenderTarget,d=this._activeCubeFace,c=this._activeMipmapLevel;let h;null!==s?(h=s,this.setRenderTarget(h)):h=l;const p=this._renderContexts.get(e,t,h);this._currentRenderContext=p,this._currentRenderObjectFunction=this._renderObjectFunction||this.renderObject,this.info.calls++,this.info.render.calls++,this.info.render.frameCalls++,i.renderId=this.info.calls;const g=this.coordinateSystem,m=this.xr;if(t.coordinateSystem!==g&&!1===m.isPresenting&&(t.coordinateSystem=g,t.updateProjectionMatrix(),t.isArrayCamera))for(const e of t.cameras)e.coordinateSystem=g,e.updateProjectionMatrix();!0===e.matrixWorldAutoUpdate&&e.updateMatrixWorld(),null===t.parent&&!0===t.matrixWorldAutoUpdate&&t.updateMatrixWorld(),!0===m.enabled&&!0===m.isPresenting&&(!0===m.cameraAutoUpdate&&m.updateCamera(t),t=m.getCamera());let f=this._viewport,y=this._scissor,b=this._pixelRatio;null!==h&&(f=h.viewport,y=h.scissor,b=1),this.getDrawingBufferSize(Iv),Vv.set(0,0,Iv.width,Iv.height);const x=void 0===f.minDepth?0:f.minDepth,T=void 0===f.maxDepth?1:f.maxDepth;p.viewportValue.copy(f).multiplyScalar(b).floor(),p.viewportValue.width>>=c,p.viewportValue.height>>=c,p.viewportValue.minDepth=x,p.viewportValue.maxDepth=T,p.viewport=!1===p.viewportValue.equals(Vv),p.scissorValue.copy(y).multiplyScalar(b).floor(),p.scissor=this._scissorTest&&!1===p.scissorValue.equals(Vv),p.scissorValue.width>>=c,p.scissorValue.height>>=c,p.clippingContext||(p.clippingContext=new yv),p.clippingContext.updateGlobal(u,t),u.onBeforeRender(this,e,t,h);const _=t.isArrayCamera?Ov:Uv;t.isArrayCamera||(kv.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),_.setFromProjectionMatrix(kv,g));const v=this._renderLists.get(e,t);if(v.begin(),this._projectObject(e,t,0,v,p.clippingContext),v.finish(),!0===this.sortObjects&&v.sort(this._opaqueSort,this._transparentSort),null!==h){this._textures.updateRenderTarget(h,c);const e=this._textures.get(h);p.textures=e.textures,p.depthTexture=e.depthTexture,p.width=e.width,p.height=e.height,p.renderTarget=h,p.depth=h.depthBuffer,p.stencil=h.stencilBuffer}else p.textures=null,p.depthTexture=null,p.width=this.domElement.width,p.height=this.domElement.height,p.depth=this.depth,p.stencil=this.stencil;p.width>>=c,p.height>>=c,p.activeCubeFace=d,p.activeMipmapLevel=c,p.occlusionQueryCount=v.occlusionQueryCount,this._background.update(u,v,p),p.camera=t,this.backend.beginRender(p);const{bundles:N,lightsNode:S,transparentDoublePass:E,transparent:w,opaque:A}=v;return N.length>0&&this._renderBundles(N,u,S),!0===this.opaque&&A.length>0&&this._renderObjects(A,t,u,S),!0===this.transparent&&w.length>0&&this._renderTransparents(w,E,t,u,S),this.backend.finishRender(p),i.renderId=n,this._currentRenderContext=a,this._currentRenderObjectFunction=o,null!==s&&(this.setRenderTarget(l,d,c),this._renderOutput(h)),u.onAfterRender(this,e,t,h),p}_setXRLayerSize(e,t){this._width=e,this._height=t,this.setViewport(0,0,e,t)}_renderOutput(e){const t=this._quad;this._nodes.hasOutputChange(e.texture)&&(t.material.fragmentNode=this._nodes.getOutputNode(e.texture),t.material.needsUpdate=!0);const r=this.autoClear,s=this.xr.enabled;this.autoClear=!1,this.xr.enabled=!1,this._renderScene(t,t.camera,!1),this.autoClear=r,this.xr.enabled=s}getMaxAnisotropy(){return this.backend.getMaxAnisotropy()}getActiveCubeFace(){return this._activeCubeFace}getActiveMipmapLevel(){return this._activeMipmapLevel}async setAnimationLoop(e){!1===this._initialized&&await this.init(),this._animation.setAnimationLoop(e)}async getArrayBufferAsync(e){return await this.backend.getArrayBufferAsync(e)}getContext(){return this.backend.getContext()}getPixelRatio(){return this._pixelRatio}getDrawingBufferSize(e){return e.set(this._width*this._pixelRatio,this._height*this._pixelRatio).floor()}getSize(e){return e.set(this._width,this._height)}setPixelRatio(e=1){this._pixelRatio!==e&&(this._pixelRatio=e,this.setSize(this._width,this._height,!1))}setDrawingBufferSize(e,t,r){this.xr&&this.xr.isPresenting||(this._width=e,this._height=t,this._pixelRatio=r,this.domElement.width=Math.floor(e*r),this.domElement.height=Math.floor(t*r),this.setViewport(0,0,e,t),this._initialized&&this.backend.updateSize())}setSize(e,t,r=!0){this.xr&&this.xr.isPresenting||(this._width=e,this._height=t,this.domElement.width=Math.floor(e*this._pixelRatio),this.domElement.height=Math.floor(t*this._pixelRatio),!0===r&&(this.domElement.style.width=e+"px",this.domElement.style.height=t+"px"),this.setViewport(0,0,e,t),this._initialized&&this.backend.updateSize())}setOpaqueSort(e){this._opaqueSort=e}setTransparentSort(e){this._transparentSort=e}getScissor(e){const t=this._scissor;return e.x=t.x,e.y=t.y,e.width=t.width,e.height=t.height,e}setScissor(e,t,r,s){const i=this._scissor;e.isVector4?i.copy(e):i.set(e,t,r,s)}getScissorTest(){return this._scissorTest}setScissorTest(e){this._scissorTest=e,this.backend.setScissorTest(e)}getViewport(e){return e.copy(this._viewport)}setViewport(e,t,r,s,i=0,n=1){const a=this._viewport;e.isVector4?a.copy(e):a.set(e,t,r,s),a.minDepth=i,a.maxDepth=n}getClearColor(e){return e.copy(this._clearColor)}setClearColor(e,t=1){this._clearColor.set(e),this._clearColor.a=t}getClearAlpha(){return this._clearColor.a}setClearAlpha(e){this._clearColor.a=e}getClearDepth(){return this._clearDepth}setClearDepth(e){this._clearDepth=e}getClearStencil(){return this._clearStencil}setClearStencil(e){this._clearStencil=e}isOccluded(e){const t=this._currentRenderContext;return t&&this.backend.isOccluded(t,e)}clear(e=!0,t=!0,r=!0){if(!1===this._initialized)return console.warn("THREE.Renderer: .clear() called before the backend is initialized. Try using .clearAsync() instead."),this.clearAsync(e,t,r);const s=this._renderTarget||this._getFrameBufferTarget();let i=null;if(null!==s){this._textures.updateRenderTarget(s);const e=this._textures.get(s);i=this._renderContexts.getForClear(s),i.textures=e.textures,i.depthTexture=e.depthTexture,i.width=e.width,i.height=e.height,i.renderTarget=s,i.depth=s.depthBuffer,i.stencil=s.stencilBuffer,i.clearColorValue=this.backend.getClearColor(),i.activeCubeFace=this.getActiveCubeFace(),i.activeMipmapLevel=this.getActiveMipmapLevel()}this.backend.clear(e,t,r,i),null!==s&&null===this._renderTarget&&this._renderOutput(s)}clearColor(){return this.clear(!0,!1,!1)}clearDepth(){return this.clear(!1,!0,!1)}clearStencil(){return this.clear(!1,!1,!0)}async clearAsync(e=!0,t=!0,r=!0){!1===this._initialized&&await this.init(),this.clear(e,t,r)}async clearColorAsync(){this.clearAsync(!0,!1,!1)}async clearDepthAsync(){this.clearAsync(!1,!0,!1)}async clearStencilAsync(){this.clearAsync(!1,!1,!0)}get currentToneMapping(){return this.isOutputTarget?this.toneMapping:p}get currentColorSpace(){return this.isOutputTarget?this.outputColorSpace:le}get isOutputTarget(){return this._renderTarget===this._outputRenderTarget||null===this._renderTarget}dispose(){this.info.dispose(),this.backend.dispose(),this._animation.dispose(),this._objects.dispose(),this._pipelines.dispose(),this._nodes.dispose(),this._bindings.dispose(),this._renderLists.dispose(),this._renderContexts.dispose(),this._textures.dispose(),null!==this._frameBufferTarget&&this._frameBufferTarget.dispose(),Object.values(this.backend.timestampQueryPool).forEach(e=>{null!==e&&e.dispose()}),this.setRenderTarget(null),this.setAnimationLoop(null)}setRenderTarget(e,t=0,r=0){this._renderTarget=e,this._activeCubeFace=t,this._activeMipmapLevel=r}getRenderTarget(){return this._renderTarget}setOutputRenderTarget(e){this._outputRenderTarget=e}getOutputRenderTarget(){return this._outputRenderTarget}_resetXRState(){this.backend.setXRTarget(null),this.setOutputRenderTarget(null),this.setRenderTarget(null),this._frameBufferTarget.dispose(),this._frameBufferTarget=null}setRenderObjectFunction(e){this._renderObjectFunction=e}getRenderObjectFunction(){return this._renderObjectFunction}compute(e,t=null){if(!0===this._isDeviceLost)return;if(!1===this._initialized)return console.warn("THREE.Renderer: .compute() called before the backend is initialized. Try using .computeAsync() instead."),this.computeAsync(e);const r=this._nodes.nodeFrame,s=r.renderId;this.info.calls++,this.info.compute.calls++,this.info.compute.frameCalls++,r.renderId=this.info.calls;const i=this.backend,n=this._pipelines,a=this._bindings,o=this._nodes,u=Array.isArray(e)?e:[e];if(void 0===u[0]||!0!==u[0].isComputeNode)throw new Error("THREE.Renderer: .compute() expects a ComputeNode.");i.beginCompute(e);for(const r of u){if(!1===n.has(r)){const e=()=>{r.removeEventListener("dispose",e),n.delete(r),a.delete(r),o.delete(r)};r.addEventListener("dispose",e);const t=r.onInitFunction;null!==t&&t.call(r,{renderer:this})}o.updateForCompute(r),a.updateForCompute(r);const s=a.getForCompute(r),u=n.getForCompute(r,s);i.compute(e,r,s,u,t)}i.finishCompute(e),r.renderId=s}async computeAsync(e,t=null){!1===this._initialized&&await this.init(),this.compute(e,t)}async hasFeatureAsync(e){return!1===this._initialized&&await this.init(),this.backend.hasFeature(e)}async resolveTimestampsAsync(e="render"){return!1===this._initialized&&await this.init(),this.backend.resolveTimestampsAsync(e)}hasFeature(e){return!1===this._initialized?(console.warn("THREE.Renderer: .hasFeature() called before the backend is initialized. Try using .hasFeatureAsync() instead."),!1):this.backend.hasFeature(e)}hasInitialized(){return this._initialized}async initTextureAsync(e){!1===this._initialized&&await this.init(),this._textures.updateTexture(e)}initTexture(e){!1===this._initialized&&console.warn("THREE.Renderer: .initTexture() called before the backend is initialized. Try using .initTextureAsync() instead."),this._textures.updateTexture(e)}copyFramebufferToTexture(e,t=null){if(null!==t)if(t.isVector2)t=Gv.set(t.x,t.y,e.image.width,e.image.height).floor();else{if(!t.isVector4)return void console.error("THREE.Renderer.copyFramebufferToTexture: Invalid rectangle.");t=Gv.copy(t).floor()}else t=Gv.set(0,0,e.image.width,e.image.height);let r,s=this._currentRenderContext;null!==s?r=s.renderTarget:(r=this._renderTarget||this._getFrameBufferTarget(),null!==r&&(this._textures.updateRenderTarget(r),s=this._textures.get(r))),this._textures.updateTexture(e,{renderTarget:r}),this.backend.copyFramebufferToTexture(e,s,t)}copyTextureToTexture(e,t,r=null,s=null,i=0,n=0){this._textures.updateTexture(e),this._textures.updateTexture(t),this.backend.copyTextureToTexture(e,t,r,s,i,n)}async readRenderTargetPixelsAsync(e,t,r,s,i,n=0,a=0){return this.backend.copyTextureToBuffer(e.textures[n],t,r,s,i,a)}_projectObject(e,t,r,s,i){if(!1===e.visible)return;if(e.layers.test(t.layers))if(e.isGroup)r=e.renderOrder,e.isClippingGroup&&e.enabled&&(i=i.getGroupContext(e));else if(e.isLOD)!0===e.autoUpdate&&e.update(t);else if(e.isLight)s.pushLight(e);else if(e.isSprite){const n=t.isArrayCamera?Ov:Uv;if(!e.frustumCulled||n.intersectsSprite(e,t)){!0===this.sortObjects&&Gv.setFromMatrixPosition(e.matrixWorld).applyMatrix4(kv);const{geometry:t,material:n}=e;n.visible&&s.push(e,t,n,r,Gv.z,null,i)}}else if(e.isLineLoop)console.error("THREE.Renderer: Objects of type THREE.LineLoop are not supported. Please use THREE.Line or THREE.LineSegments.");else if(e.isMesh||e.isLine||e.isPoints){const n=t.isArrayCamera?Ov:Uv;if(!e.frustumCulled||n.intersectsObject(e,t)){const{geometry:t,material:n}=e;if(!0===this.sortObjects&&(null===t.boundingSphere&&t.computeBoundingSphere(),Gv.copy(t.boundingSphere.center).applyMatrix4(e.matrixWorld).applyMatrix4(kv)),Array.isArray(n)){const a=t.groups;for(let o=0,u=a.length;o<u;o++){const u=a[o],l=n[u.materialIndex];l&&l.visible&&s.push(e,t,l,r,Gv.z,u,i)}}else n.visible&&s.push(e,t,n,r,Gv.z,null,i)}}if(!0===e.isBundleGroup&&void 0!==this.backend.beginBundle){const r=s;(s=this._renderLists.get(e,t)).begin(),r.pushBundle({bundleGroup:e,camera:t,renderList:s}),s.finish()}const n=e.children;for(let e=0,a=n.length;e<a;e++)this._projectObject(n[e],t,r,s,i)}_renderBundles(e,t,r){for(const s of e)this._renderBundle(s,t,r)}_renderTransparents(e,t,r,s,i){if(t.length>0){for(const{material:e}of t)e.side=S;this._renderObjects(t,r,s,i,"backSide");for(const{material:e}of t)e.side=je;this._renderObjects(e,r,s,i);for(const{material:e}of t)e.side=E}else this._renderObjects(e,r,s,i)}_renderObjects(e,t,r,s,i=null){for(let n=0,a=e.length;n<a;n++){const{object:a,geometry:o,material:u,group:l,clippingContext:d}=e[n];this._currentRenderObjectFunction(a,r,t,o,u,l,s,d,i)}}renderObject(e,t,r,s,i,n,a,o=null,u=null){let l,d,c;if(e.onBeforeRender(this,t,r,s,i,n),!0===i.allowOverride&&null!==t.overrideMaterial){const e=t.overrideMaterial;i.positionNode&&i.positionNode.isNode&&(l=e.positionNode,e.positionNode=i.positionNode),e.alphaTest=i.alphaTest,e.alphaMap=i.alphaMap,e.transparent=i.transparent||i.transmission>0,e.isShadowPassMaterial&&(e.side=null===i.shadowSide?i.side:i.shadowSide,i.depthNode&&i.depthNode.isNode&&(c=e.depthNode,e.depthNode=i.depthNode),i.castShadowNode&&i.castShadowNode.isNode&&(d=e.colorNode,e.colorNode=i.castShadowNode),i.castShadowPositionNode&&i.castShadowPositionNode.isNode&&(l=e.positionNode,e.positionNode=i.castShadowPositionNode)),i=e}!0===i.transparent&&i.side===E&&!1===i.forceSinglePass?(i.side=S,this._handleObjectFunction(e,i,t,r,a,n,o,"backSide"),i.side=je,this._handleObjectFunction(e,i,t,r,a,n,o,u),i.side=E):this._handleObjectFunction(e,i,t,r,a,n,o,u),void 0!==l&&(t.overrideMaterial.positionNode=l),void 0!==c&&(t.overrideMaterial.depthNode=c),void 0!==d&&(t.overrideMaterial.colorNode=d),e.onAfterRender(this,t,r,s,i,n)}_renderObjectDirect(e,t,r,s,i,n,a,o){const u=this._objects.get(e,t,r,s,i,this._currentRenderContext,a,o);u.drawRange=e.geometry.drawRange,u.group=n;const l=this._nodes.needsRefresh(u);if(l&&(this._nodes.updateBefore(u),this._geometries.updateForRender(u),this._nodes.updateForRender(u),this._bindings.updateForRender(u)),this._pipelines.updateForRender(u),null!==this._currentRenderBundle){this.backend.get(this._currentRenderBundle).renderObjects.push(u),u.bundle=this._currentRenderBundle.bundleGroup}this.backend.draw(u,this.info),l&&this._nodes.updateAfter(u)}_createObjectPipeline(e,t,r,s,i,n,a,o){const u=this._objects.get(e,t,r,s,i,this._currentRenderContext,a,o);u.drawRange=e.geometry.drawRange,u.group=n,this._nodes.updateBefore(u),this._geometries.updateForRender(u),this._nodes.updateForRender(u),this._bindings.updateForRender(u),this._pipelines.getForRender(u,this._compilationPromises),this._nodes.updateAfter(u)}get compile(){return this.compileAsync}}class Hv{constructor(e=""){this.name=e,this.visibility=0}setVisibility(e){this.visibility|=e}clone(){return Object.assign(new this.constructor,this)}}class $v extends Hv{constructor(e,t=null){super(e),this.isBuffer=!0,this.bytesPerElement=Float32Array.BYTES_PER_ELEMENT,this._buffer=t}get byteLength(){return(e=this._buffer.byteLength)+(bf-e%bf)%bf;var e}get buffer(){return this._buffer}update(){return!0}}class Wv extends $v{constructor(e,t=null){super(e,t),this.isUniformBuffer=!0}}let jv=0;class qv extends Wv{constructor(e,t){super("UniformBuffer_"+jv++,e?e.value:null),this.nodeUniform=e,this.groupNode=t}get buffer(){return this.nodeUniform.value}}class Xv extends Wv{constructor(e){super(e),this.isUniformsGroup=!0,this._values=null,this.uniforms=[]}addUniform(e){return this.uniforms.push(e),this}removeUniform(e){const t=this.uniforms.indexOf(e);return-1!==t&&this.uniforms.splice(t,1),this}get values(){return null===this._values&&(this._values=Array.from(this.buffer)),this._values}get buffer(){let e=this._buffer;if(null===e){const t=this.byteLength;e=new Float32Array(new ArrayBuffer(t)),this._buffer=e}return e}get byteLength(){const e=this.bytesPerElement;let t=0;for(let r=0,s=this.uniforms.length;r<s;r++){const s=this.uniforms[r],i=s.boundary,n=s.itemSize*e,a=t%bf,o=a%i,u=a+o;t+=o,0!==u&&bf-u<n&&(t+=bf-u),s.offset=t/e,t+=n}return Math.ceil(t/bf)*bf}update(){let e=!1;for(const t of this.uniforms)!0===this.updateByType(t)&&(e=!0);return e}updateByType(e){return e.isNumberUniform?this.updateNumber(e):e.isVector2Uniform?this.updateVector2(e):e.isVector3Uniform?this.updateVector3(e):e.isVector4Uniform?this.updateVector4(e):e.isColorUniform?this.updateColor(e):e.isMatrix3Uniform?this.updateMatrix3(e):e.isMatrix4Uniform?this.updateMatrix4(e):void console.error("THREE.WebGPUUniformsGroup: Unsupported uniform type.",e)}updateNumber(e){let t=!1;const r=this.values,s=e.getValue(),i=e.offset,n=e.getType();if(r[i]!==s){this._getBufferForType(n)[i]=r[i]=s,t=!0}return t}updateVector2(e){let t=!1;const r=this.values,s=e.getValue(),i=e.offset,n=e.getType();if(r[i+0]!==s.x||r[i+1]!==s.y){const e=this._getBufferForType(n);e[i+0]=r[i+0]=s.x,e[i+1]=r[i+1]=s.y,t=!0}return t}updateVector3(e){let t=!1;const r=this.values,s=e.getValue(),i=e.offset,n=e.getType();if(r[i+0]!==s.x||r[i+1]!==s.y||r[i+2]!==s.z){const e=this._getBufferForType(n);e[i+0]=r[i+0]=s.x,e[i+1]=r[i+1]=s.y,e[i+2]=r[i+2]=s.z,t=!0}return t}updateVector4(e){let t=!1;const r=this.values,s=e.getValue(),i=e.offset,n=e.getType();if(r[i+0]!==s.x||r[i+1]!==s.y||r[i+2]!==s.z||r[i+4]!==s.w){const e=this._getBufferForType(n);e[i+0]=r[i+0]=s.x,e[i+1]=r[i+1]=s.y,e[i+2]=r[i+2]=s.z,e[i+3]=r[i+3]=s.w,t=!0}return t}updateColor(e){let t=!1;const r=this.values,s=e.getValue(),i=e.offset;if(r[i+0]!==s.r||r[i+1]!==s.g||r[i+2]!==s.b){const e=this.buffer;e[i+0]=r[i+0]=s.r,e[i+1]=r[i+1]=s.g,e[i+2]=r[i+2]=s.b,t=!0}return t}updateMatrix3(e){let t=!1;const r=this.values,s=e.getValue().elements,i=e.offset;if(r[i+0]!==s[0]||r[i+1]!==s[1]||r[i+2]!==s[2]||r[i+4]!==s[3]||r[i+5]!==s[4]||r[i+6]!==s[5]||r[i+8]!==s[6]||r[i+9]!==s[7]||r[i+10]!==s[8]){const e=this.buffer;e[i+0]=r[i+0]=s[0],e[i+1]=r[i+1]=s[1],e[i+2]=r[i+2]=s[2],e[i+4]=r[i+4]=s[3],e[i+5]=r[i+5]=s[4],e[i+6]=r[i+6]=s[5],e[i+8]=r[i+8]=s[6],e[i+9]=r[i+9]=s[7],e[i+10]=r[i+10]=s[8],t=!0}return t}updateMatrix4(e){let t=!1;const r=this.values,s=e.getValue().elements,i=e.offset;if(!1===function(e,t,r){for(let s=0,i=t.length;s<i;s++)if(e[r+s]!==t[s])return!1;return!0}(r,s,i)){this.buffer.set(s,i),function(e,t,r){for(let s=0,i=t.length;s<i;s++)e[r+s]=t[s]}(r,s,i),t=!0}return t}_getBufferForType(e){return"int"===e||"ivec2"===e||"ivec3"===e||"ivec4"===e?new Int32Array(this.buffer.buffer):"uint"===e||"uvec2"===e||"uvec3"===e||"uvec4"===e?new Uint32Array(this.buffer.buffer):this.buffer}}let Kv=0;class Yv extends Xv{constructor(e,t){super(e),this.id=Kv++,this.groupNode=t,this.isNodeUniformsGroup=!0}}let Qv=0;class Zv extends Hv{constructor(e,t){super(e),this.id=Qv++,this.texture=t,this.version=t?t.version:0,this.store=!1,this.generation=null,this.isSampledTexture=!0}needsBindingsUpdate(e){return e!==this.generation&&(this.generation=e,!0)}update(){const{texture:e,version:t}=this;return t!==e.version&&(this.version=e.version,!0)}}class Jv extends Zv{constructor(e,t,r,s=null){super(e,t?t.value:null),this.textureNode=t,this.groupNode=r,this.access=s}needsBindingsUpdate(e){return this.textureNode.value!==this.texture||super.needsBindingsUpdate(e)}update(){const{textureNode:e}=this;return this.texture!==e.value?(this.texture=e.value,!0):super.update()}}class eN extends Jv{constructor(e,t,r,s=null){super(e,t,r,s),this.isSampledCubeTexture=!0}}class tN extends Jv{constructor(e,t,r,s=null){super(e,t,r,s),this.isSampledTexture3D=!0}}const rN={textureDimensions:"textureSize",equals:"equal"},sN={low:"lowp",medium:"mediump",high:"highp"},iN={swizzleAssign:!0,storageBuffer:!1},nN={perspective:"smooth",linear:"noperspective"},aN={centroid:"centroid"},oN="\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\nprecision highp sampler3D;\nprecision highp samplerCube;\nprecision highp sampler2DArray;\n\nprecision highp usampler2D;\nprecision highp usampler3D;\nprecision highp usamplerCube;\nprecision highp usampler2DArray;\n\nprecision highp isampler2D;\nprecision highp isampler3D;\nprecision highp isamplerCube;\nprecision highp isampler2DArray;\n\nprecision lowp sampler2DShadow;\nprecision lowp sampler2DArrayShadow;\nprecision lowp samplerCubeShadow;\n";class uN extends $_{constructor(e,t){super(e,t,new cv),this.uniformGroups={},this.transforms=[],this.extensions={},this.builtins={vertex:[],fragment:[],compute:[]}}needsToWorkingColorSpace(e){return!0===e.isVideoTexture&&e.colorSpace!==b}getMethod(e){return rN[e]||e}getOutputStructName(){return""}buildFunctionCode(e){const t=e.layout,r=this.flowShaderNode(e),s=[];for(const e of t.inputs)s.push(this.getType(e.type)+" "+e.name);return`${this.getType(t.type)} ${t.name}( ${s.join(", ")} ) {\n\n\t${r.vars}\n\n${r.code}\n\treturn ${r.result};\n\n}`}setupPBO(e){const t=e.value;if(void 0===t.pbo){const e=t.array,r=t.count*t.itemSize,{itemSize:s}=t,i=t.array.constructor.name.toLowerCase().includes("int");let n=i?it:nt;2===s?n=i?lt:Ve:3===s?n=i?dt:ct:4===s&&(n=i?ht:de);const a={Float32Array:D,Uint8Array:Ce,Uint16Array:ut,Uint32Array:T,Int8Array:ot,Int16Array:at,Int32Array:_,Uint8ClampedArray:Ce},o=Math.pow(2,Math.ceil(Math.log2(Math.sqrt(r/s))));let u=Math.ceil(r/s/o);o*u*s<r&&u++;const l=o*u*s,d=new e.constructor(l);d.set(e,0),t.array=d;const c=new st(t.array,o,u,n,a[t.array.constructor.name]||D);c.needsUpdate=!0,c.isPBOTexture=!0;const h=new Zu(c,null,null);h.setPrecision("high"),t.pboNode=h,t.pbo=h.value,this.getUniformFromNode(t.pboNode,"texture",this.shaderStage,this.context.label)}}getPropertyName(e,t=this.shaderStage){return e.isNodeUniform&&!0!==e.node.isTextureNode&&!0!==e.node.isBufferNode?t.charAt(0)+"_"+e.name:super.getPropertyName(e,t)}generatePBO(e){const{node:t,indexNode:r}=e,s=t.value;if(this.renderer.backend.has(s)){this.renderer.backend.get(s).pbo=s.pbo}const i=this.getUniformFromNode(s.pboNode,"texture",this.shaderStage,this.context.label),n=this.getPropertyName(i);this.increaseUsage(r);const a=r.build(this,"uint"),o=this.getDataFromNode(e);let u=o.propertyName;if(void 0===u){const r=this.getVarFromNode(e);u=this.getPropertyName(r);const i=this.getDataFromNode(t);let l=i.propertySizeName;void 0===l&&(l=u+"Size",this.getVarFromNode(t,l,"uint"),this.addLineFlowCode(`${l} = uint( textureSize( ${n}, 0 ).x )`,e),i.propertySizeName=l);const{itemSize:d}=s,c="."+$s.join("").slice(0,d),h=`ivec2(${a} % ${l}, ${a} / ${l})`,p=this.generateTextureLoad(null,n,h,null,"0");let g="vec4";s.pbo.type===T?g="uvec4":s.pbo.type===_&&(g="ivec4"),this.addLineFlowCode(`${u} = ${g}(${p})${c}`,e),o.propertyName=u}return u}generateTextureLoad(e,t,r,s,i="0"){return s?`texelFetch( ${t}, ivec3( ${r}, ${s} ), ${i} )`:`texelFetch( ${t}, ${r}, ${i} )`}generateTexture(e,t,r,s){return e.isDepthTexture?(s&&(r=`vec4( ${r}, ${s} )`),`texture( ${t}, ${r} ).x`):(s&&(r=`vec3( ${r}, ${s} )`),`texture( ${t}, ${r} )`)}generateTextureLevel(e,t,r,s){return`textureLod( ${t}, ${r}, ${s} )`}generateTextureBias(e,t,r,s){return`texture( ${t}, ${r}, ${s} )`}generateTextureGrad(e,t,r,s){return`textureGrad( ${t}, ${r}, ${s[0]}, ${s[1]} )`}generateTextureCompare(e,t,r,s,i,n=this.shaderStage){if("fragment"===n)return i?`texture( ${t}, vec4( ${r}, ${i}, ${s} ) )`:`texture( ${t}, vec3( ${r}, ${s} ) )`;console.error(`WebGPURenderer: THREE.DepthTexture.compareFunction() does not support ${n} shader.`)}getVars(e){const t=[],r=this.vars[e];if(void 0!==r)for(const e of r)t.push(`${this.getVar(e.type,e.name,e.count)};`);return t.join("\n\t")}getUniforms(e){const t=this.uniforms[e],r=[],s={};for(const i of t){let t=null,n=!1;if("texture"===i.type||"texture3D"===i.type){const e=i.node.value;let r="";!0!==e.isDataTexture&&!0!==e.isData3DTexture||(e.type===T?r="u":e.type===_&&(r="i")),t="texture3D"===i.type&&!1===e.isArrayTexture?`${r}sampler3D ${i.name};`:e.compareFunction?!0===e.isArrayTexture?`sampler2DArrayShadow ${i.name};`:`sampler2DShadow ${i.name};`:!0===e.isArrayTexture||!0===e.isDataArrayTexture||!0===e.isCompressedArrayTexture?`${r}sampler2DArray ${i.name};`:`${r}sampler2D ${i.name};`}else if("cubeTexture"===i.type)t=`samplerCube ${i.name};`;else if("buffer"===i.type){const e=i.node,r=this.getType(e.bufferType),s=e.bufferCount,n=s>0?s:"";t=`${e.name} {\n\t${r} ${i.name}[${n}];\n};\n`}else{t=`${this.getVectorType(i.type)} ${this.getPropertyName(i,e)};`,n=!0}const a=i.node.precision;if(null!==a&&(t=sN[a]+" "+t),n){t="\t"+t;const e=i.groupNode.name;(s[e]||(s[e]=[])).push(t)}else t="uniform "+t,r.push(t)}let i="";for(const t in s){const r=s[t];i+=this._getGLSLUniformStruct(e+"_"+t,r.join("\n"))+"\n"}return i+=r.join("\n"),i}getTypeFromAttribute(e){let t=super.getTypeFromAttribute(e);if(/^[iu]/.test(t)&&e.gpuType!==_){let r=e;e.isInterleavedBufferAttribute&&(r=e.data);const s=r.array;!1==(s instanceof Uint32Array||s instanceof Int32Array)&&(t=t.slice(1))}return t}getAttributes(e){let t="";if("vertex"===e||"compute"===e){const e=this.getAttributesArray();let r=0;for(const s of e)t+=`layout( location = ${r++} ) in ${s.type} ${s.name};\n`}return t}getStructMembers(e){const t=[];for(const r of e.members)t.push(`\t${r.type} ${r.name};`);return t.join("\n")}getStructs(e){const t=[],r=this.structs[e],s=[];for(const e of r)if(e.output)for(const t of e.members)s.push(`layout( location = ${t.index} ) out ${t.type} ${t.name};`);else{let r="struct "+e.name+" {\n";r+=this.getStructMembers(e),r+="\n};\n",t.push(r)}return 0===s.length&&s.push("layout( location = 0 ) out vec4 fragColor;"),"\n"+s.join("\n")+"\n\n"+t.join("\n")}getVaryings(e){let t="";const r=this.varyings;if("vertex"===e||"compute"===e)for(const s of r){"compute"===e&&(s.needsInterpolation=!0);const r=this.getType(s.type);if(s.needsInterpolation)if(s.interpolationType){t+=`${nN[s.interpolationType]||s.interpolationType} ${aN[s.interpolationSampling]||""} out ${r} ${s.name};\n`}else{t+=`${r.includes("int")||r.includes("uv")||r.includes("iv")?"flat ":""}out ${r} ${s.name};\n`}else t+=`${r} ${s.name};\n`}else if("fragment"===e)for(const e of r)if(e.needsInterpolation){const r=this.getType(e.type);if(e.interpolationType){t+=`${nN[e.interpolationType]||e.interpolationType} ${aN[e.interpolationSampling]||""} in ${r} ${e.name};\n`}else{t+=`${r.includes("int")||r.includes("uv")||r.includes("iv")?"flat ":""}in ${r} ${e.name};\n`}}for(const r of this.builtins[e])t+=`${r};\n`;return t}getVertexIndex(){return"uint( gl_VertexID )"}getInstanceIndex(){return"uint( gl_InstanceID )"}getInvocationLocalIndex(){return`uint( gl_InstanceID ) % ${this.object.workgroupSize.reduce((e,t)=>e*t,1)}u`}getDrawIndex(){return this.renderer.backend.extensions.has("WEBGL_multi_draw")?"uint( gl_DrawID )":null}getFrontFacing(){return"gl_FrontFacing"}getFragCoord(){return"gl_FragCoord.xy"}getFragDepth(){return"gl_FragDepth"}enableExtension(e,t,r=this.shaderStage){const s=this.extensions[r]||(this.extensions[r]=new Map);!1===s.has(e)&&s.set(e,{name:e,behavior:t})}getExtensions(e){const t=[];if("vertex"===e){const t=this.renderer.backend.extensions;this.object.isBatchedMesh&&t.has("WEBGL_multi_draw")&&this.enableExtension("GL_ANGLE_multi_draw","require",e)}const r=this.extensions[e];if(void 0!==r)for(const{name:e,behavior:s}of r.values())t.push(`#extension ${e} : ${s}`);return t.join("\n")}getClipDistance(){return"gl_ClipDistance"}isAvailable(e){let t=iN[e];if(void 0===t){let r;switch(t=!1,e){case"float32Filterable":r="OES_texture_float_linear";break;case"clipDistance":r="WEBGL_clip_cull_distance"}if(void 0!==r){const e=this.renderer.backend.extensions;e.has(r)&&(e.get(r),t=!0)}iN[e]=t}return t}isFlipY(){return!0}enableHardwareClipping(e){this.enableExtension("GL_ANGLE_clip_cull_distance","require"),this.builtins.vertex.push(`out float gl_ClipDistance[ ${e} ]`)}enableMultiview(){this.enableExtension("GL_OVR_multiview2","require","fragment"),this.enableExtension("GL_OVR_multiview2","require","vertex"),this.builtins.vertex.push("layout(num_views = 2) in")}registerTransform(e,t){this.transforms.push({varyingName:e,attributeNode:t})}getTransforms(){const e=this.transforms;let t="";for(let r=0;r<e.length;r++){const s=e[r],i=this.getPropertyName(s.attributeNode);i&&(t+=`${s.varyingName} = ${i};\n\t`)}return t}_getGLSLUniformStruct(e,t){return`\nlayout( std140 ) uniform ${e} {\n${t}\n};`}_getGLSLVertexCode(e){return`#version 300 es\n\n${this.getSignature()}\n\n// extensions\n${e.extensions}\n\n// precision\n${oN}\n\n// uniforms\n${e.uniforms}\n\n// varyings\n${e.varyings}\n\n// attributes\n${e.attributes}\n\n// codes\n${e.codes}\n\nvoid main() {\n\n\t// vars\n\t${e.vars}\n\n\t// transforms\n\t${e.transforms}\n\n\t// flow\n\t${e.flow}\n\n\tgl_PointSize = 1.0;\n\n}\n`}_getGLSLFragmentCode(e){return`#version 300 es\n\n${this.getSignature()}\n\n// extensions\n${e.extensions}\n\n// precision\n${oN}\n\n// uniforms\n${e.uniforms}\n\n// varyings\n${e.varyings}\n\n// codes\n${e.codes}\n\n// structs\n${e.structs}\n\nvoid main() {\n\n\t// vars\n\t${e.vars}\n\n\t// flow\n\t${e.flow}\n\n}\n`}buildCode(){const e=null!==this.material?{fragment:{},vertex:{}}:{compute:{}};this.sortBindingGroups();for(const t in e){let r="// code\n\n";r+=this.flowCode[t];const s=this.flowNodes[t],i=s[s.length-1];for(const e of s){const s=this.getFlowData(e),n=e.name;n&&(r.length>0&&(r+="\n"),r+=`\t// flow -> ${n}\n\t`),r+=`${s.code}\n\t`,e===i&&"compute"!==t&&(r+="// result\n\t","vertex"===t?(r+="gl_Position = ",r+=`${s.result};`):"fragment"===t&&(e.outputNode.isOutputStructNode||(r+="fragColor = ",r+=`${s.result};`)))}const n=e[t];n.extensions=this.getExtensions(t),n.uniforms=this.getUniforms(t),n.attributes=this.getAttributes(t),n.varyings=this.getVaryings(t),n.vars=this.getVars(t),n.structs=this.getStructs(t),n.codes=this.getCodes(t),n.transforms=this.getTransforms(t),n.flow=r}null!==this.material?(this.vertexShader=this._getGLSLVertexCode(e.vertex),this.fragmentShader=this._getGLSLFragmentCode(e.fragment)):this.computeShader=this._getGLSLVertexCode(e.compute)}getUniformFromNode(e,t,r,s=null){const i=super.getUniformFromNode(e,t,r,s),n=this.getDataFromNode(e,r,this.globalCache);let a=n.uniformGPU;if(void 0===a){const s=e.groupNode,o=s.name,u=this.getBindGroupArray(o,r);if("texture"===t)a=new Jv(i.name,i.node,s),u.push(a);else if("cubeTexture"===t)a=new eN(i.name,i.node,s),u.push(a);else if("texture3D"===t)a=new tN(i.name,i.node,s),u.push(a);else if("buffer"===t){e.name=`NodeBuffer_${e.id}`,i.name=`buffer${e.id}`;const t=new qv(e,s);t.name=e.name,u.push(t),a=t}else{const e=this.uniformGroups[r]||(this.uniformGroups[r]={});let n=e[o];void 0===n&&(n=new Yv(r+"_"+o,s),e[o]=n,u.push(n)),a=this.getNodeUniform(i,t),n.addUniform(a)}n.uniformGPU=a}return i}}let lN=null,dN=null;class cN{constructor(e={}){this.parameters=Object.assign({},e),this.data=new WeakMap,this.renderer=null,this.domElement=null,this.timestampQueryPool={render:null,compute:null},this.trackTimestamp=!0===e.trackTimestamp}async init(e){this.renderer=e}get coordinateSystem(){}beginRender(){}finishRender(){}beginCompute(){}finishCompute(){}draw(){}compute(){}createProgram(){}destroyProgram(){}createBindings(){}updateBindings(){}updateBinding(){}createRenderPipeline(){}createComputePipeline(){}needsRenderUpdate(){}getRenderCacheKey(){}createNodeBuilder(){}createSampler(){}destroySampler(){}createDefaultTexture(){}createTexture(){}updateTexture(){}generateMipmaps(){}destroyTexture(){}async copyTextureToBuffer(){}copyTextureToTexture(){}copyFramebufferToTexture(){}createAttribute(){}createIndexAttribute(){}createStorageAttribute(){}updateAttribute(){}destroyAttribute(){}getContext(){}updateSize(){}updateViewport(){}isOccluded(){}async resolveTimestampsAsync(e="render"){if(!this.trackTimestamp)return void pt("WebGPURenderer: Timestamp tracking is disabled.");const t=this.timestampQueryPool[e];if(!t)return void pt(`WebGPURenderer: No timestamp query pool for type '${e}' found.`);const r=await t.resolveQueriesAsync();return this.renderer.info[e].timestamp=r,r}async waitForGPU(){}async getArrayBufferAsync(){}async hasFeatureAsync(){}hasFeature(){}getMaxAnisotropy(){}getDrawingBufferSize(){return lN=lN||new t,this.renderer.getDrawingBufferSize(lN)}setScissorTest(){}getClearColor(){const e=this.renderer;return dN=dN||new jf,e.getClearColor(dN),dN.getRGB(dN),dN}getDomElement(){let e=this.domElement;return null===e&&(e=void 0!==this.parameters.canvas?this.parameters.canvas:gt(),"setAttribute"in e&&e.setAttribute("data-engine",`three.js r${He} webgpu`),this.domElement=e),e}set(e,t){this.data.set(e,t)}get(e){let t=this.data.get(e);return void 0===t&&(t={},this.data.set(e,t)),t}has(e){return this.data.has(e)}delete(e){this.data.delete(e)}dispose(){}}let hN,pN,gN=0;class mN{constructor(e,t){this.buffers=[e.bufferGPU,t],this.type=e.type,this.bufferType=e.bufferType,this.pbo=e.pbo,this.byteLength=e.byteLength,this.bytesPerElement=e.BYTES_PER_ELEMENT,this.version=e.version,this.isInteger=e.isInteger,this.activeBufferIndex=0,this.baseId=e.id}get id(){return`${this.baseId}|${this.activeBufferIndex}`}get bufferGPU(){return this.buffers[this.activeBufferIndex]}get transformBuffer(){return this.buffers[1^this.activeBufferIndex]}switchBuffers(){this.activeBufferIndex^=1}}class fN{constructor(e){this.backend=e}createAttribute(e,t){const r=this.backend,{gl:s}=r,i=e.array,n=e.usage||s.STATIC_DRAW,a=e.isInterleavedBufferAttribute?e.data:e,o=r.get(a);let u,l=o.bufferGPU;if(void 0===l&&(l=this._createBuffer(s,t,i,n),o.bufferGPU=l,o.bufferType=t,o.version=a.version),i instanceof Float32Array)u=s.FLOAT;else if("undefined"!=typeof Float16Array&&i instanceof Float16Array)u=s.HALF_FLOAT;else if(i instanceof Uint16Array)u=e.isFloat16BufferAttribute?s.HALF_FLOAT:s.UNSIGNED_SHORT;else if(i instanceof Int16Array)u=s.SHORT;else if(i instanceof Uint32Array)u=s.UNSIGNED_INT;else if(i instanceof Int32Array)u=s.INT;else if(i instanceof Int8Array)u=s.BYTE;else if(i instanceof Uint8Array)u=s.UNSIGNED_BYTE;else{if(!(i instanceof Uint8ClampedArray))throw new Error("THREE.WebGLBackend: Unsupported buffer data format: "+i);u=s.UNSIGNED_BYTE}let d={bufferGPU:l,bufferType:t,type:u,byteLength:i.byteLength,bytesPerElement:i.BYTES_PER_ELEMENT,version:e.version,pbo:e.pbo,isInteger:u===s.INT||u===s.UNSIGNED_INT||e.gpuType===_,id:gN++};if(e.isStorageBufferAttribute||e.isStorageInstancedBufferAttribute){const e=this._createBuffer(s,t,i,n);d=new mN(d,e)}r.set(e,d)}updateAttribute(e){const t=this.backend,{gl:r}=t,s=e.array,i=e.isInterleavedBufferAttribute?e.data:e,n=t.get(i),a=n.bufferType,o=e.isInterleavedBufferAttribute?e.data.updateRanges:e.updateRanges;if(r.bindBuffer(a,n.bufferGPU),0===o.length)r.bufferSubData(a,0,s);else{for(let e=0,t=o.length;e<t;e++){const t=o[e];r.bufferSubData(a,t.start*s.BYTES_PER_ELEMENT,s,t.start,t.count)}i.clearUpdateRanges()}r.bindBuffer(a,null),n.version=i.version}destroyAttribute(e){const t=this.backend,{gl:r}=t;e.isInterleavedBufferAttribute&&t.delete(e.data);const s=t.get(e);r.deleteBuffer(s.bufferGPU),t.delete(e)}async getArrayBufferAsync(e){const t=this.backend,{gl:r}=t,s=e.isInterleavedBufferAttribute?e.data:e,{bufferGPU:i}=t.get(s),n=e.array,a=n.byteLength;r.bindBuffer(r.COPY_READ_BUFFER,i);const o=r.createBuffer();r.bindBuffer(r.COPY_WRITE_BUFFER,o),r.bufferData(r.COPY_WRITE_BUFFER,a,r.STREAM_READ),r.copyBufferSubData(r.COPY_READ_BUFFER,r.COPY_WRITE_BUFFER,0,0,a),await t.utils._clientWaitAsync();const u=new e.array.constructor(n.length);return r.bindBuffer(r.COPY_WRITE_BUFFER,o),r.getBufferSubData(r.COPY_WRITE_BUFFER,0,u),r.deleteBuffer(o),r.bindBuffer(r.COPY_READ_BUFFER,null),r.bindBuffer(r.COPY_WRITE_BUFFER,null),u.buffer}_createBuffer(e,t,r,s){const i=e.createBuffer();return e.bindBuffer(t,i),e.bufferData(t,r,s),e.bindBuffer(t,null),i}}class yN{constructor(e){this.backend=e,this.gl=this.backend.gl,this.enabled={},this.currentFlipSided=null,this.currentCullFace=null,this.currentProgram=null,this.currentBlendingEnabled=!1,this.currentBlending=null,this.currentBlendSrc=null,this.currentBlendDst=null,this.currentBlendSrcAlpha=null,this.currentBlendDstAlpha=null,this.currentPremultipledAlpha=null,this.currentPolygonOffsetFactor=null,this.currentPolygonOffsetUnits=null,this.currentColorMask=null,this.currentDepthFunc=null,this.currentDepthMask=null,this.currentStencilFunc=null,this.currentStencilRef=null,this.currentStencilFuncMask=null,this.currentStencilFail=null,this.currentStencilZFail=null,this.currentStencilZPass=null,this.currentStencilMask=null,this.currentLineWidth=null,this.currentClippingPlanes=0,this.currentVAO=null,this.currentIndex=null,this.currentBoundFramebuffers={},this.currentDrawbuffers=new WeakMap,this.maxTextures=this.gl.getParameter(this.gl.MAX_TEXTURE_IMAGE_UNITS),this.currentTextureSlot=null,this.currentBoundTextures={},this.currentBoundBufferBases={},this._init()}_init(){const e=this.gl;hN={[Xe]:e.FUNC_ADD,[ft]:e.FUNC_SUBTRACT,[mt]:e.FUNC_REVERSE_SUBTRACT},pN={[Ke]:e.ZERO,[wt]:e.ONE,[Et]:e.SRC_COLOR,[St]:e.SRC_ALPHA,[Nt]:e.SRC_ALPHA_SATURATE,[vt]:e.DST_COLOR,[_t]:e.DST_ALPHA,[Tt]:e.ONE_MINUS_SRC_COLOR,[xt]:e.ONE_MINUS_SRC_ALPHA,[bt]:e.ONE_MINUS_DST_COLOR,[yt]:e.ONE_MINUS_DST_ALPHA};const t=e.getParameter(e.SCISSOR_BOX),r=e.getParameter(e.VIEWPORT);this.currentScissor=(new s).fromArray(t),this.currentViewport=(new s).fromArray(r),this._tempVec4=new s}enable(e){const{enabled:t}=this;!0!==t[e]&&(this.gl.enable(e),t[e]=!0)}disable(e){const{enabled:t}=this;!1!==t[e]&&(this.gl.disable(e),t[e]=!1)}setFlipSided(e){if(this.currentFlipSided!==e){const{gl:t}=this;e?t.frontFace(t.CW):t.frontFace(t.CCW),this.currentFlipSided=e}}setCullFace(e){const{gl:t}=this;e!==At?(this.enable(t.CULL_FACE),e!==this.currentCullFace&&(e===Rt?t.cullFace(t.BACK):e===Ct?t.cullFace(t.FRONT):t.cullFace(t.FRONT_AND_BACK))):this.disable(t.CULL_FACE),this.currentCullFace=e}setLineWidth(e){const{currentLineWidth:t,gl:r}=this;e!==t&&(r.lineWidth(e),this.currentLineWidth=e)}setBlending(e,t,r,s,i,n,a,o){const{gl:u}=this;if(e!==H){if(!1===this.currentBlendingEnabled&&(this.enable(u.BLEND),this.currentBlendingEnabled=!0),e===qe)i=i||t,n=n||r,a=a||s,t===this.currentBlendEquation&&i===this.currentBlendEquationAlpha||(u.blendEquationSeparate(hN[t],hN[i]),this.currentBlendEquation=t,this.currentBlendEquationAlpha=i),r===this.currentBlendSrc&&s===this.currentBlendDst&&n===this.currentBlendSrcAlpha&&a===this.currentBlendDstAlpha||(u.blendFuncSeparate(pN[r],pN[s],pN[n],pN[a]),this.currentBlendSrc=r,this.currentBlendDst=s,this.currentBlendSrcAlpha=n,this.currentBlendDstAlpha=a),this.currentBlending=e,this.currentPremultipledAlpha=!1;else if(e!==this.currentBlending||o!==this.currentPremultipledAlpha){if(this.currentBlendEquation===Xe&&this.currentBlendEquationAlpha===Xe||(u.blendEquation(u.FUNC_ADD),this.currentBlendEquation=Xe,this.currentBlendEquationAlpha=Xe),o)switch(e){case k:u.blendFuncSeparate(u.ONE,u.ONE_MINUS_SRC_ALPHA,u.ONE,u.ONE_MINUS_SRC_ALPHA);break;case Bt:u.blendFunc(u.ONE,u.ONE);break;case Pt:u.blendFuncSeparate(u.ZERO,u.ONE_MINUS_SRC_COLOR,u.ZERO,u.ONE);break;case Mt:u.blendFuncSeparate(u.DST_COLOR,u.ONE_MINUS_SRC_ALPHA,u.ZERO,u.ONE);break;default:console.error("THREE.WebGLState: Invalid blending: ",e)}else switch(e){case k:u.blendFuncSeparate(u.SRC_ALPHA,u.ONE_MINUS_SRC_ALPHA,u.ONE,u.ONE_MINUS_SRC_ALPHA);break;case Bt:u.blendFuncSeparate(u.SRC_ALPHA,u.ONE,u.ONE,u.ONE);break;case Pt:console.error("THREE.WebGLState: SubtractiveBlending requires material.premultipliedAlpha = true");break;case Mt:console.error("THREE.WebGLState: MultiplyBlending requires material.premultipliedAlpha = true");break;default:console.error("THREE.WebGLState: Invalid blending: ",e)}this.currentBlendSrc=null,this.currentBlendDst=null,this.currentBlendSrcAlpha=null,this.currentBlendDstAlpha=null,this.currentBlending=e,this.currentPremultipledAlpha=o}}else!0===this.currentBlendingEnabled&&(this.disable(u.BLEND),this.currentBlendingEnabled=!1)}setColorMask(e){this.currentColorMask!==e&&(this.gl.colorMask(e,e,e,e),this.currentColorMask=e)}setDepthTest(e){const{gl:t}=this;e?this.enable(t.DEPTH_TEST):this.disable(t.DEPTH_TEST)}setDepthMask(e){this.currentDepthMask!==e&&(this.gl.depthMask(e),this.currentDepthMask=e)}setDepthFunc(e){if(this.currentDepthFunc!==e){const{gl:t}=this;switch(e){case kt:t.depthFunc(t.NEVER);break;case Ot:t.depthFunc(t.ALWAYS);break;case Ut:t.depthFunc(t.LESS);break;case Vt:t.depthFunc(t.LEQUAL);break;case It:t.depthFunc(t.EQUAL);break;case Dt:t.depthFunc(t.GEQUAL);break;case Ft:t.depthFunc(t.GREATER);break;case Lt:t.depthFunc(t.NOTEQUAL);break;default:t.depthFunc(t.LEQUAL)}this.currentDepthFunc=e}}scissor(e,t,r,s){const i=this._tempVec4.set(e,t,r,s);if(!1===this.currentScissor.equals(i)){const{gl:e}=this;e.scissor(i.x,i.y,i.z,i.w),this.currentScissor.copy(i)}}viewport(e,t,r,s){const i=this._tempVec4.set(e,t,r,s);if(!1===this.currentViewport.equals(i)){const{gl:e}=this;e.viewport(i.x,i.y,i.z,i.w),this.currentViewport.copy(i)}}setScissorTest(e){const t=this.gl;e?t.enable(t.SCISSOR_TEST):t.disable(t.SCISSOR_TEST)}setStencilTest(e){const{gl:t}=this;e?this.enable(t.STENCIL_TEST):this.disable(t.STENCIL_TEST)}setStencilMask(e){this.currentStencilMask!==e&&(this.gl.stencilMask(e),this.currentStencilMask=e)}setStencilFunc(e,t,r){this.currentStencilFunc===e&&this.currentStencilRef===t&&this.currentStencilFuncMask===r||(this.gl.stencilFunc(e,t,r),this.currentStencilFunc=e,this.currentStencilRef=t,this.currentStencilFuncMask=r)}setStencilOp(e,t,r){this.currentStencilFail===e&&this.currentStencilZFail===t&&this.currentStencilZPass===r||(this.gl.stencilOp(e,t,r),this.currentStencilFail=e,this.currentStencilZFail=t,this.currentStencilZPass=r)}setMaterial(e,t,r){const{gl:s}=this;e.side===E?this.disable(s.CULL_FACE):this.enable(s.CULL_FACE);let i=e.side===S;t&&(i=!i),this.setFlipSided(i),e.blending===k&&!1===e.transparent?this.setBlending(H):this.setBlending(e.blending,e.blendEquation,e.blendSrc,e.blendDst,e.blendEquationAlpha,e.blendSrcAlpha,e.blendDstAlpha,e.premultipliedAlpha),this.setDepthFunc(e.depthFunc),this.setDepthTest(e.depthTest),this.setDepthMask(e.depthWrite),this.setColorMask(e.colorWrite);const n=e.stencilWrite;if(this.setStencilTest(n),n&&(this.setStencilMask(e.stencilWriteMask),this.setStencilFunc(e.stencilFunc,e.stencilRef,e.stencilFuncMask),this.setStencilOp(e.stencilFail,e.stencilZFail,e.stencilZPass)),this.setPolygonOffset(e.polygonOffset,e.polygonOffsetFactor,e.polygonOffsetUnits),!0===e.alphaToCoverage&&this.backend.renderer.samples>1?this.enable(s.SAMPLE_ALPHA_TO_COVERAGE):this.disable(s.SAMPLE_ALPHA_TO_COVERAGE),r>0&&this.currentClippingPlanes!==r){const e=12288;for(let t=0;t<8;t++)t<r?this.enable(e+t):this.disable(e+t)}}setPolygonOffset(e,t,r){const{gl:s}=this;e?(this.enable(s.POLYGON_OFFSET_FILL),this.currentPolygonOffsetFactor===t&&this.currentPolygonOffsetUnits===r||(s.polygonOffset(t,r),this.currentPolygonOffsetFactor=t,this.currentPolygonOffsetUnits=r)):this.disable(s.POLYGON_OFFSET_FILL)}useProgram(e){return this.currentProgram!==e&&(this.gl.useProgram(e),this.currentProgram=e,!0)}setVertexState(e,t=null){const r=this.gl;return(this.currentVAO!==e||this.currentIndex!==t)&&(r.bindVertexArray(e),null!==t&&r.bindBuffer(r.ELEMENT_ARRAY_BUFFER,t),this.currentVAO=e,this.currentIndex=t,!0)}resetVertexState(){const e=this.gl;e.bindVertexArray(null),e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null),this.currentVAO=null,this.currentIndex=null}bindFramebuffer(e,t){const{gl:r,currentBoundFramebuffers:s}=this;return s[e]!==t&&(r.bindFramebuffer(e,t),s[e]=t,e===r.DRAW_FRAMEBUFFER&&(s[r.FRAMEBUFFER]=t),e===r.FRAMEBUFFER&&(s[r.DRAW_FRAMEBUFFER]=t),!0)}drawBuffers(e,t){const{gl:r}=this;let s=[],i=!1;if(null!==e.textures){s=this.currentDrawbuffers.get(t),void 0===s&&(s=[],this.currentDrawbuffers.set(t,s));const n=e.textures;if(s.length!==n.length||s[0]!==r.COLOR_ATTACHMENT0){for(let e=0,t=n.length;e<t;e++)s[e]=r.COLOR_ATTACHMENT0+e;s.length=n.length,i=!0}}else s[0]!==r.BACK&&(s[0]=r.BACK,i=!0);i&&r.drawBuffers(s)}activeTexture(e){const{gl:t,currentTextureSlot:r,maxTextures:s}=this;void 0===e&&(e=t.TEXTURE0+s-1),r!==e&&(t.activeTexture(e),this.currentTextureSlot=e)}bindTexture(e,t,r){const{gl:s,currentTextureSlot:i,currentBoundTextures:n,maxTextures:a}=this;void 0===r&&(r=null===i?s.TEXTURE0+a-1:i);let o=n[r];void 0===o&&(o={type:void 0,texture:void 0},n[r]=o),o.type===e&&o.texture===t||(i!==r&&(s.activeTexture(r),this.currentTextureSlot=r),s.bindTexture(e,t),o.type=e,o.texture=t)}bindBufferBase(e,t,r){const{gl:s}=this,i=`${e}-${t}`;return this.currentBoundBufferBases[i]!==r&&(s.bindBufferBase(e,t,r),this.currentBoundBufferBases[i]=r,!0)}unbindTexture(){const{gl:e,currentTextureSlot:t,currentBoundTextures:r}=this,s=r[t];void 0!==s&&void 0!==s.type&&(e.bindTexture(s.type,null),s.type=void 0,s.texture=void 0)}}class bN{constructor(e){this.backend=e,this.gl=this.backend.gl,this.extensions=e.extensions}convert(e,t=b){const{gl:r,extensions:s}=this;let i;const n=c.getTransfer(t);if(e===Ce)return r.UNSIGNED_BYTE;if(e===Gt)return r.UNSIGNED_SHORT_4_4_4_4;if(e===zt)return r.UNSIGNED_SHORT_5_5_5_1;if(e===Ht)return r.UNSIGNED_INT_5_9_9_9_REV;if(e===ot)return r.BYTE;if(e===at)return r.SHORT;if(e===ut)return r.UNSIGNED_SHORT;if(e===_)return r.INT;if(e===T)return r.UNSIGNED_INT;if(e===D)return r.FLOAT;if(e===ce)return r.HALF_FLOAT;if(e===$t)return r.ALPHA;if(e===ct)return r.RGB;if(e===de)return r.RGBA;if(e===Ae)return r.DEPTH_COMPONENT;if(e===we)return r.DEPTH_STENCIL;if(e===nt)return r.RED;if(e===it)return r.RED_INTEGER;if(e===Ve)return r.RG;if(e===lt)return r.RG_INTEGER;if(e===ht)return r.RGBA_INTEGER;if(e===Wt||e===jt||e===qt||e===Xt)if(n===h){if(i=s.get("WEBGL_compressed_texture_s3tc_srgb"),null===i)return null;if(e===Wt)return i.COMPRESSED_SRGB_S3TC_DXT1_EXT;if(e===jt)return i.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;if(e===qt)return i.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;if(e===Xt)return i.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT}else{if(i=s.get("WEBGL_compressed_texture_s3tc"),null===i)return null;if(e===Wt)return i.COMPRESSED_RGB_S3TC_DXT1_EXT;if(e===jt)return i.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(e===qt)return i.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(e===Xt)return i.COMPRESSED_RGBA_S3TC_DXT5_EXT}if(e===Kt||e===Yt||e===Qt||e===Zt){if(i=s.get("WEBGL_compressed_texture_pvrtc"),null===i)return null;if(e===Kt)return i.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(e===Yt)return i.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(e===Qt)return i.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(e===Zt)return i.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}if(e===Jt||e===er||e===tr){if(i=s.get("WEBGL_compressed_texture_etc"),null===i)return null;if(e===Jt||e===er)return n===h?i.COMPRESSED_SRGB8_ETC2:i.COMPRESSED_RGB8_ETC2;if(e===tr)return n===h?i.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:i.COMPRESSED_RGBA8_ETC2_EAC}if(e===rr||e===sr||e===ir||e===nr||e===ar||e===or||e===ur||e===lr||e===dr||e===cr||e===hr||e===pr||e===gr||e===mr){if(i=s.get("WEBGL_compressed_texture_astc"),null===i)return null;if(e===rr)return n===h?i.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR:i.COMPRESSED_RGBA_ASTC_4x4_KHR;if(e===sr)return n===h?i.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR:i.COMPRESSED_RGBA_ASTC_5x4_KHR;if(e===ir)return n===h?i.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR:i.COMPRESSED_RGBA_ASTC_5x5_KHR;if(e===nr)return n===h?i.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR:i.COMPRESSED_RGBA_ASTC_6x5_KHR;if(e===ar)return n===h?i.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR:i.COMPRESSED_RGBA_ASTC_6x6_KHR;if(e===or)return n===h?i.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR:i.COMPRESSED_RGBA_ASTC_8x5_KHR;if(e===ur)return n===h?i.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR:i.COMPRESSED_RGBA_ASTC_8x6_KHR;if(e===lr)return n===h?i.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR:i.COMPRESSED_RGBA_ASTC_8x8_KHR;if(e===dr)return n===h?i.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR:i.COMPRESSED_RGBA_ASTC_10x5_KHR;if(e===cr)return n===h?i.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR:i.COMPRESSED_RGBA_ASTC_10x6_KHR;if(e===hr)return n===h?i.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR:i.COMPRESSED_RGBA_ASTC_10x8_KHR;if(e===pr)return n===h?i.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR:i.COMPRESSED_RGBA_ASTC_10x10_KHR;if(e===gr)return n===h?i.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR:i.COMPRESSED_RGBA_ASTC_12x10_KHR;if(e===mr)return n===h?i.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR:i.COMPRESSED_RGBA_ASTC_12x12_KHR}if(e===fr){if(i=s.get("EXT_texture_compression_bptc"),null===i)return null;if(e===fr)return n===h?i.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT:i.COMPRESSED_RGBA_BPTC_UNORM_EXT}if(e===yr||e===br||e===xr||e===Tr){if(i=s.get("EXT_texture_compression_rgtc"),null===i)return null;if(e===fr)return i.COMPRESSED_RED_RGTC1_EXT;if(e===br)return i.COMPRESSED_SIGNED_RED_RGTC1_EXT;if(e===xr)return i.COMPRESSED_RED_GREEN_RGTC2_EXT;if(e===Tr)return i.COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT}return e===Re?r.UNSIGNED_INT_24_8:void 0!==r[e]?r[e]:null}_clientWaitAsync(){const{gl:e}=this,t=e.fenceSync(e.SYNC_GPU_COMMANDS_COMPLETE,0);return e.flush(),new Promise((r,s)=>{!function i(){const n=e.clientWaitSync(t,e.SYNC_FLUSH_COMMANDS_BIT,0);if(n===e.WAIT_FAILED)return e.deleteSync(t),void s();n!==e.TIMEOUT_EXPIRED?(e.deleteSync(t),r()):requestAnimationFrame(i)}()})}}let xN,TN,_N,vN=!1;class NN{constructor(e){this.backend=e,this.gl=e.gl,this.extensions=e.extensions,this.defaultTextures={},!1===vN&&(this._init(),vN=!0)}_init(){const e=this.gl;xN={[Nr]:e.REPEAT,[vr]:e.CLAMP_TO_EDGE,[_r]:e.MIRRORED_REPEAT},TN={[v]:e.NEAREST,[Sr]:e.NEAREST_MIPMAP_NEAREST,[Ge]:e.NEAREST_MIPMAP_LINEAR,[Y]:e.LINEAR,[ke]:e.LINEAR_MIPMAP_NEAREST,[V]:e.LINEAR_MIPMAP_LINEAR},_N={[Pr]:e.NEVER,[Mr]:e.ALWAYS,[Ie]:e.LESS,[Cr]:e.LEQUAL,[Rr]:e.EQUAL,[Ar]:e.GEQUAL,[wr]:e.GREATER,[Er]:e.NOTEQUAL}}getGLTextureType(e){const{gl:t}=this;let r;return r=!0===e.isCubeTexture?t.TEXTURE_CUBE_MAP:!0===e.isArrayTexture||!0===e.isDataArrayTexture||!0===e.isCompressedArrayTexture?t.TEXTURE_2D_ARRAY:!0===e.isData3DTexture?t.TEXTURE_3D:t.TEXTURE_2D,r}getInternalFormat(e,t,r,s,i=!1){const{gl:n,extensions:a}=this;if(null!==e){if(void 0!==n[e])return n[e];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+e+"'")}let o=t;if(t===n.RED&&(r===n.FLOAT&&(o=n.R32F),r===n.HALF_FLOAT&&(o=n.R16F),r===n.UNSIGNED_BYTE&&(o=n.R8),r===n.UNSIGNED_SHORT&&(o=n.R16),r===n.UNSIGNED_INT&&(o=n.R32UI),r===n.BYTE&&(o=n.R8I),r===n.SHORT&&(o=n.R16I),r===n.INT&&(o=n.R32I)),t===n.RED_INTEGER&&(r===n.UNSIGNED_BYTE&&(o=n.R8UI),r===n.UNSIGNED_SHORT&&(o=n.R16UI),r===n.UNSIGNED_INT&&(o=n.R32UI),r===n.BYTE&&(o=n.R8I),r===n.SHORT&&(o=n.R16I),r===n.INT&&(o=n.R32I)),t===n.RG&&(r===n.FLOAT&&(o=n.RG32F),r===n.HALF_FLOAT&&(o=n.RG16F),r===n.UNSIGNED_BYTE&&(o=n.RG8),r===n.UNSIGNED_SHORT&&(o=n.RG16),r===n.UNSIGNED_INT&&(o=n.RG32UI),r===n.BYTE&&(o=n.RG8I),r===n.SHORT&&(o=n.RG16I),r===n.INT&&(o=n.RG32I)),t===n.RG_INTEGER&&(r===n.UNSIGNED_BYTE&&(o=n.RG8UI),r===n.UNSIGNED_SHORT&&(o=n.RG16UI),r===n.UNSIGNED_INT&&(o=n.RG32UI),r===n.BYTE&&(o=n.RG8I),r===n.SHORT&&(o=n.RG16I),r===n.INT&&(o=n.RG32I)),t===n.RGB){const e=i?Br:c.getTransfer(s);r===n.FLOAT&&(o=n.RGB32F),r===n.HALF_FLOAT&&(o=n.RGB16F),r===n.UNSIGNED_BYTE&&(o=n.RGB8),r===n.UNSIGNED_SHORT&&(o=n.RGB16),r===n.UNSIGNED_INT&&(o=n.RGB32UI),r===n.BYTE&&(o=n.RGB8I),r===n.SHORT&&(o=n.RGB16I),r===n.INT&&(o=n.RGB32I),r===n.UNSIGNED_BYTE&&(o=e===h?n.SRGB8:n.RGB8),r===n.UNSIGNED_SHORT_5_6_5&&(o=n.RGB565),r===n.UNSIGNED_SHORT_5_5_5_1&&(o=n.RGB5_A1),r===n.UNSIGNED_SHORT_4_4_4_4&&(o=n.RGB4),r===n.UNSIGNED_INT_5_9_9_9_REV&&(o=n.RGB9_E5)}if(t===n.RGB_INTEGER&&(r===n.UNSIGNED_BYTE&&(o=n.RGB8UI),r===n.UNSIGNED_SHORT&&(o=n.RGB16UI),r===n.UNSIGNED_INT&&(o=n.RGB32UI),r===n.BYTE&&(o=n.RGB8I),r===n.SHORT&&(o=n.RGB16I),r===n.INT&&(o=n.RGB32I)),t===n.RGBA){const e=i?Br:c.getTransfer(s);r===n.FLOAT&&(o=n.RGBA32F),r===n.HALF_FLOAT&&(o=n.RGBA16F),r===n.UNSIGNED_BYTE&&(o=n.RGBA8),r===n.UNSIGNED_SHORT&&(o=n.RGBA16),r===n.UNSIGNED_INT&&(o=n.RGBA32UI),r===n.BYTE&&(o=n.RGBA8I),r===n.SHORT&&(o=n.RGBA16I),r===n.INT&&(o=n.RGBA32I),r===n.UNSIGNED_BYTE&&(o=e===h?n.SRGB8_ALPHA8:n.RGBA8),r===n.UNSIGNED_SHORT_4_4_4_4&&(o=n.RGBA4),r===n.UNSIGNED_SHORT_5_5_5_1&&(o=n.RGB5_A1)}return t===n.RGBA_INTEGER&&(r===n.UNSIGNED_BYTE&&(o=n.RGBA8UI),r===n.UNSIGNED_SHORT&&(o=n.RGBA16UI),r===n.UNSIGNED_INT&&(o=n.RGBA32UI),r===n.BYTE&&(o=n.RGBA8I),r===n.SHORT&&(o=n.RGBA16I),r===n.INT&&(o=n.RGBA32I)),t===n.DEPTH_COMPONENT&&(r===n.UNSIGNED_SHORT&&(o=n.DEPTH_COMPONENT16),r===n.UNSIGNED_INT&&(o=n.DEPTH_COMPONENT24),r===n.FLOAT&&(o=n.DEPTH_COMPONENT32F)),t===n.DEPTH_STENCIL&&r===n.UNSIGNED_INT_24_8&&(o=n.DEPTH24_STENCIL8),o!==n.R16F&&o!==n.R32F&&o!==n.RG16F&&o!==n.RG32F&&o!==n.RGBA16F&&o!==n.RGBA32F||a.get("EXT_color_buffer_float"),o}setTextureParameters(e,t){const{gl:r,extensions:s,backend:i}=this,n=c.getPrimaries(c.workingColorSpace),a=t.colorSpace===b?null:c.getPrimaries(t.colorSpace),o=t.colorSpace===b||n===a?r.NONE:r.BROWSER_DEFAULT_WEBGL;r.pixelStorei(r.UNPACK_FLIP_Y_WEBGL,t.flipY),r.pixelStorei(r.UNPACK_PREMULTIPLY_ALPHA_WEBGL,t.premultiplyAlpha),r.pixelStorei(r.UNPACK_ALIGNMENT,t.unpackAlignment),r.pixelStorei(r.UNPACK_COLORSPACE_CONVERSION_WEBGL,o),r.texParameteri(e,r.TEXTURE_WRAP_S,xN[t.wrapS]),r.texParameteri(e,r.TEXTURE_WRAP_T,xN[t.wrapT]),e!==r.TEXTURE_3D&&e!==r.TEXTURE_2D_ARRAY||t.isArrayTexture||r.texParameteri(e,r.TEXTURE_WRAP_R,xN[t.wrapR]),r.texParameteri(e,r.TEXTURE_MAG_FILTER,TN[t.magFilter]);const u=void 0!==t.mipmaps&&t.mipmaps.length>0,l=t.minFilter===Y&&u?V:t.minFilter;if(r.texParameteri(e,r.TEXTURE_MIN_FILTER,TN[l]),t.compareFunction&&(r.texParameteri(e,r.TEXTURE_COMPARE_MODE,r.COMPARE_REF_TO_TEXTURE),r.texParameteri(e,r.TEXTURE_COMPARE_FUNC,_N[t.compareFunction])),!0===s.has("EXT_texture_filter_anisotropic")){if(t.magFilter===v)return;if(t.minFilter!==Ge&&t.minFilter!==V)return;if(t.type===D&&!1===s.has("OES_texture_float_linear"))return;if(t.anisotropy>1){const n=s.get("EXT_texture_filter_anisotropic");r.texParameterf(e,n.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(t.anisotropy,i.getMaxAnisotropy()))}}}createDefaultTexture(e){const{gl:t,backend:r,defaultTextures:s}=this,i=this.getGLTextureType(e);let n=s[i];void 0===n&&(n=t.createTexture(),r.state.bindTexture(i,n),t.texParameteri(i,t.TEXTURE_MIN_FILTER,t.NEAREST),t.texParameteri(i,t.TEXTURE_MAG_FILTER,t.NEAREST),s[i]=n),r.set(e,{textureGPU:n,glTextureType:i,isDefault:!0})}createTexture(e,t){const{gl:r,backend:s}=this,{levels:i,width:n,height:a,depth:o}=t,u=s.utils.convert(e.format,e.colorSpace),l=s.utils.convert(e.type),d=this.getInternalFormat(e.internalFormat,u,l,e.colorSpace,e.isVideoTexture),c=r.createTexture(),h=this.getGLTextureType(e);s.state.bindTexture(h,c),this.setTextureParameters(h,e),e.isArrayTexture||e.isDataArrayTexture||e.isCompressedArrayTexture?r.texStorage3D(r.TEXTURE_2D_ARRAY,i,d,n,a,o):e.isData3DTexture?r.texStorage3D(r.TEXTURE_3D,i,d,n,a,o):e.isVideoTexture||r.texStorage2D(h,i,d,n,a),s.set(e,{textureGPU:c,glTextureType:h,glFormat:u,glType:l,glInternalFormat:d})}copyBufferToTexture(e,t){const{gl:r,backend:s}=this,{textureGPU:i,glTextureType:n,glFormat:a,glType:o}=s.get(t),{width:u,height:l}=t.source.data;r.bindBuffer(r.PIXEL_UNPACK_BUFFER,e),s.state.bindTexture(n,i),r.pixelStorei(r.UNPACK_FLIP_Y_WEBGL,!1),r.pixelStorei(r.UNPACK_PREMULTIPLY_ALPHA_WEBGL,!1),r.texSubImage2D(n,0,0,0,u,l,a,o,0),r.bindBuffer(r.PIXEL_UNPACK_BUFFER,null),s.state.unbindTexture()}updateTexture(e,t){const{gl:r}=this,{width:s,height:i}=t,{textureGPU:n,glTextureType:a,glFormat:o,glType:u,glInternalFormat:l}=this.backend.get(e);if(!e.isRenderTargetTexture&&void 0!==n)if(this.backend.state.bindTexture(a,n),this.setTextureParameters(a,e),e.isCompressedTexture){const s=e.mipmaps,i=t.image;for(let t=0;t<s.length;t++){const n=s[t];e.isCompressedArrayTexture?e.format!==r.RGBA?null!==o?r.compressedTexSubImage3D(r.TEXTURE_2D_ARRAY,t,0,0,0,n.width,n.height,i.depth,o,n.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):r.texSubImage3D(r.TEXTURE_2D_ARRAY,t,0,0,0,n.width,n.height,i.depth,o,u,n.data):null!==o?r.compressedTexSubImage2D(r.TEXTURE_2D,t,0,0,n.width,n.height,o,n.data):console.warn("Unsupported compressed texture format")}}else if(e.isCubeTexture){const e=t.images;for(let t=0;t<6;t++){const n=SN(e[t]);r.texSubImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+t,0,0,0,s,i,o,u,n)}}else if(e.isDataArrayTexture||e.isArrayTexture){const e=t.image;r.texSubImage3D(r.TEXTURE_2D_ARRAY,0,0,0,0,e.width,e.height,e.depth,o,u,e.data)}else if(e.isData3DTexture){const e=t.image;r.texSubImage3D(r.TEXTURE_3D,0,0,0,0,e.width,e.height,e.depth,o,u,e.data)}else if(e.isVideoTexture)e.update(),r.texImage2D(a,0,l,o,u,t.image);else{const e=SN(t.image);r.texSubImage2D(a,0,0,0,s,i,o,u,e)}}generateMipmaps(e){const{gl:t,backend:r}=this,{textureGPU:s,glTextureType:i}=r.get(e);r.state.bindTexture(i,s),t.generateMipmap(i)}deallocateRenderBuffers(e){const{gl:t,backend:r}=this;if(e){const s=r.get(e);if(s.renderBufferStorageSetup=void 0,s.framebuffers){for(const e in s.framebuffers)t.deleteFramebuffer(s.framebuffers[e]);delete s.framebuffers}if(s.depthRenderbuffer&&(t.deleteRenderbuffer(s.depthRenderbuffer),delete s.depthRenderbuffer),s.stencilRenderbuffer&&(t.deleteRenderbuffer(s.stencilRenderbuffer),delete s.stencilRenderbuffer),s.msaaFrameBuffer&&(t.deleteFramebuffer(s.msaaFrameBuffer),delete s.msaaFrameBuffer),s.msaaRenderbuffers){for(let e=0;e<s.msaaRenderbuffers.length;e++)t.deleteRenderbuffer(s.msaaRenderbuffers[e]);delete s.msaaRenderbuffers}}}destroyTexture(e){const{gl:t,backend:r}=this,{textureGPU:s,renderTarget:i}=r.get(e);this.deallocateRenderBuffers(i),t.deleteTexture(s),r.delete(e)}copyTextureToTexture(e,t,r=null,s=null,i=0,n=0){const{gl:a,backend:o}=this,{state:u}=this.backend,{textureGPU:l,glTextureType:d,glType:c,glFormat:h}=o.get(t);let p,g,m,f,y,b,x,T,_;u.bindTexture(d,l);const v=e.isCompressedTexture?e.mipmaps[n]:e.image;if(null!==r)p=r.max.x-r.min.x,g=r.max.y-r.min.y,m=r.isBox3?r.max.z-r.min.z:1,f=r.min.x,y=r.min.y,b=r.isBox3?r.min.z:0;else{const t=Math.pow(2,-i);p=Math.floor(v.width*t),g=Math.floor(v.height*t),m=e.isDataArrayTexture||e.isArrayTexture?v.depth:e.isData3DTexture?Math.floor(v.depth*t):1,f=0,y=0,b=0}null!==s?(x=s.x,T=s.y,_=s.z):(x=0,T=0,_=0),a.pixelStorei(a.UNPACK_FLIP_Y_WEBGL,t.flipY),a.pixelStorei(a.UNPACK_PREMULTIPLY_ALPHA_WEBGL,t.premultiplyAlpha),a.pixelStorei(a.UNPACK_ALIGNMENT,t.unpackAlignment);const N=a.getParameter(a.UNPACK_ROW_LENGTH),S=a.getParameter(a.UNPACK_IMAGE_HEIGHT),E=a.getParameter(a.UNPACK_SKIP_PIXELS),w=a.getParameter(a.UNPACK_SKIP_ROWS),A=a.getParameter(a.UNPACK_SKIP_IMAGES);a.pixelStorei(a.UNPACK_ROW_LENGTH,v.width),a.pixelStorei(a.UNPACK_IMAGE_HEIGHT,v.height),a.pixelStorei(a.UNPACK_SKIP_PIXELS,f),a.pixelStorei(a.UNPACK_SKIP_ROWS,y),a.pixelStorei(a.UNPACK_SKIP_IMAGES,b);const R=t.isDataArrayTexture||t.isData3DTexture||t.isArrayTexture;if(e.isRenderTargetTexture||e.isDepthTexture){const r=o.get(e),s=o.get(t),i=o.get(r.renderTarget),n=o.get(s.renderTarget),l=i.framebuffers[r.cacheKey],d=n.framebuffers[s.cacheKey];u.bindFramebuffer(a.READ_FRAMEBUFFER,l),u.bindFramebuffer(a.DRAW_FRAMEBUFFER,d);let c=a.COLOR_BUFFER_BIT;e.isDepthTexture&&(c=a.DEPTH_BUFFER_BIT),a.blitFramebuffer(f,y,p,g,x,T,p,g,c,a.NEAREST),u.bindFramebuffer(a.READ_FRAMEBUFFER,null),u.bindFramebuffer(a.DRAW_FRAMEBUFFER,null)}else R?e.isDataTexture||e.isData3DTexture?a.texSubImage3D(d,n,x,T,_,p,g,m,h,c,v.data):t.isCompressedArrayTexture?a.compressedTexSubImage3D(d,n,x,T,_,p,g,m,h,v.data):a.texSubImage3D(d,n,x,T,_,p,g,m,h,c,v):e.isDataTexture?a.texSubImage2D(d,n,x,T,p,g,h,c,v.data):e.isCompressedTexture?a.compressedTexSubImage2D(d,n,x,T,v.width,v.height,h,v.data):a.texSubImage2D(d,n,x,T,p,g,h,c,v);a.pixelStorei(a.UNPACK_ROW_LENGTH,N),a.pixelStorei(a.UNPACK_IMAGE_HEIGHT,S),a.pixelStorei(a.UNPACK_SKIP_PIXELS,E),a.pixelStorei(a.UNPACK_SKIP_ROWS,w),a.pixelStorei(a.UNPACK_SKIP_IMAGES,A),0===n&&t.generateMipmaps&&a.generateMipmap(d),u.unbindTexture()}copyFramebufferToTexture(e,t,r){const{gl:s}=this,{state:i}=this.backend,{textureGPU:n}=this.backend.get(e),{x:a,y:o,z:u,w:l}=r,d=!0===e.isDepthTexture||t.renderTarget&&t.renderTarget.samples>0,c=t.renderTarget?t.renderTarget.height:this.backend.getDrawingBufferSize().y;if(d){const r=0!==a||0!==o;let d,h;if(!0===e.isDepthTexture?(d=s.DEPTH_BUFFER_BIT,h=s.DEPTH_ATTACHMENT,t.stencil&&(d|=s.STENCIL_BUFFER_BIT)):(d=s.COLOR_BUFFER_BIT,h=s.COLOR_ATTACHMENT0),r){const e=this.backend.get(t.renderTarget),r=e.framebuffers[t.getCacheKey()],h=e.msaaFrameBuffer;i.bindFramebuffer(s.DRAW_FRAMEBUFFER,r),i.bindFramebuffer(s.READ_FRAMEBUFFER,h);const p=c-o-l;s.blitFramebuffer(a,p,a+u,p+l,a,p,a+u,p+l,d,s.NEAREST),i.bindFramebuffer(s.READ_FRAMEBUFFER,r),i.bindTexture(s.TEXTURE_2D,n),s.copyTexSubImage2D(s.TEXTURE_2D,0,0,0,a,p,u,l),i.unbindTexture()}else{const e=s.createFramebuffer();i.bindFramebuffer(s.DRAW_FRAMEBUFFER,e),s.framebufferTexture2D(s.DRAW_FRAMEBUFFER,h,s.TEXTURE_2D,n,0),s.blitFramebuffer(0,0,u,l,0,0,u,l,d,s.NEAREST),s.deleteFramebuffer(e)}}else i.bindTexture(s.TEXTURE_2D,n),s.copyTexSubImage2D(s.TEXTURE_2D,0,0,0,a,c-l-o,u,l),i.unbindTexture();e.generateMipmaps&&this.generateMipmaps(e),this.backend._setFramebuffer(t)}setupRenderBufferStorage(e,t,r,s=!1){const{gl:i}=this,n=t.renderTarget,{depthTexture:a,depthBuffer:o,stencilBuffer:u,width:l,height:d}=n;if(i.bindRenderbuffer(i.RENDERBUFFER,e),o&&!u){let t=i.DEPTH_COMPONENT24;if(!0===s){this.extensions.get("WEBGL_multisampled_render_to_texture").renderbufferStorageMultisampleEXT(i.RENDERBUFFER,n.samples,t,l,d)}else r>0?(a&&a.isDepthTexture&&a.type===i.FLOAT&&(t=i.DEPTH_COMPONENT32F),i.renderbufferStorageMultisample(i.RENDERBUFFER,r,t,l,d)):i.renderbufferStorage(i.RENDERBUFFER,t,l,d);i.framebufferRenderbuffer(i.FRAMEBUFFER,i.DEPTH_ATTACHMENT,i.RENDERBUFFER,e)}else o&&u&&(r>0?i.renderbufferStorageMultisample(i.RENDERBUFFER,r,i.DEPTH24_STENCIL8,l,d):i.renderbufferStorage(i.RENDERBUFFER,i.DEPTH_STENCIL,l,d),i.framebufferRenderbuffer(i.FRAMEBUFFER,i.DEPTH_STENCIL_ATTACHMENT,i.RENDERBUFFER,e));i.bindRenderbuffer(i.RENDERBUFFER,null)}async copyTextureToBuffer(e,t,r,s,i,n){const{backend:a,gl:o}=this,{textureGPU:u,glFormat:l,glType:d}=this.backend.get(e),c=o.createFramebuffer();o.bindFramebuffer(o.READ_FRAMEBUFFER,c);const h=e.isCubeTexture?o.TEXTURE_CUBE_MAP_POSITIVE_X+n:o.TEXTURE_2D;o.framebufferTexture2D(o.READ_FRAMEBUFFER,o.COLOR_ATTACHMENT0,h,u,0);const p=this._getTypedArrayType(d),g=s*i*this._getBytesPerTexel(d,l),m=o.createBuffer();o.bindBuffer(o.PIXEL_PACK_BUFFER,m),o.bufferData(o.PIXEL_PACK_BUFFER,g,o.STREAM_READ),o.readPixels(t,r,s,i,l,d,0),o.bindBuffer(o.PIXEL_PACK_BUFFER,null),await a.utils._clientWaitAsync();const f=new p(g/p.BYTES_PER_ELEMENT);return o.bindBuffer(o.PIXEL_PACK_BUFFER,m),o.getBufferSubData(o.PIXEL_PACK_BUFFER,0,f),o.bindBuffer(o.PIXEL_PACK_BUFFER,null),o.deleteFramebuffer(c),f}_getTypedArrayType(e){const{gl:t}=this;if(e===t.UNSIGNED_BYTE)return Uint8Array;if(e===t.UNSIGNED_SHORT_4_4_4_4)return Uint16Array;if(e===t.UNSIGNED_SHORT_5_5_5_1)return Uint16Array;if(e===t.UNSIGNED_SHORT_5_6_5)return Uint16Array;if(e===t.UNSIGNED_SHORT)return Uint16Array;if(e===t.UNSIGNED_INT)return Uint32Array;if(e===t.HALF_FLOAT)return Uint16Array;if(e===t.FLOAT)return Float32Array;throw new Error(`Unsupported WebGL type: ${e}`)}_getBytesPerTexel(e,t){const{gl:r}=this;let s=0;return e===r.UNSIGNED_BYTE&&(s=1),e!==r.UNSIGNED_SHORT_4_4_4_4&&e!==r.UNSIGNED_SHORT_5_5_5_1&&e!==r.UNSIGNED_SHORT_5_6_5&&e!==r.UNSIGNED_SHORT&&e!==r.HALF_FLOAT||(s=2),e!==r.UNSIGNED_INT&&e!==r.FLOAT||(s=4),t===r.RGBA?4*s:t===r.RGB?3*s:t===r.ALPHA?s:void 0}}function SN(e){return e.isDataTexture?e.image.data:"undefined"!=typeof HTMLImageElement&&e instanceof HTMLImageElement||"undefined"!=typeof HTMLCanvasElement&&e instanceof HTMLCanvasElement||"undefined"!=typeof ImageBitmap&&e instanceof ImageBitmap||"undefined"!=typeof OffscreenCanvas&&e instanceof OffscreenCanvas?e:e.data}class EN{constructor(e){this.backend=e,this.gl=this.backend.gl,this.availableExtensions=this.gl.getSupportedExtensions(),this.extensions={}}get(e){let t=this.extensions[e];return void 0===t&&(t=this.gl.getExtension(e),this.extensions[e]=t),t}has(e){return this.availableExtensions.includes(e)}}class wN{constructor(e){this.backend=e,this.maxAnisotropy=null}getMaxAnisotropy(){if(null!==this.maxAnisotropy)return this.maxAnisotropy;const e=this.backend.gl,t=this.backend.extensions;if(!0===t.has("EXT_texture_filter_anisotropic")){const r=t.get("EXT_texture_filter_anisotropic");this.maxAnisotropy=e.getParameter(r.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else this.maxAnisotropy=0;return this.maxAnisotropy}}const AN={WEBGL_multi_draw:"WEBGL_multi_draw",WEBGL_compressed_texture_astc:"texture-compression-astc",WEBGL_compressed_texture_etc:"texture-compression-etc2",WEBGL_compressed_texture_etc1:"texture-compression-etc1",WEBGL_compressed_texture_pvrtc:"texture-compression-pvrtc",WEBKIT_WEBGL_compressed_texture_pvrtc:"texture-compression-pvrtc",WEBGL_compressed_texture_s3tc:"texture-compression-bc",EXT_texture_compression_bptc:"texture-compression-bptc",EXT_disjoint_timer_query_webgl2:"timestamp-query",OVR_multiview2:"OVR_multiview2"};class RN{constructor(e){this.gl=e.gl,this.extensions=e.extensions,this.info=e.renderer.info,this.mode=null,this.index=0,this.type=null,this.object=null}render(e,t){const{gl:r,mode:s,object:i,type:n,info:a,index:o}=this;0!==o?r.drawElements(s,t,n,e):r.drawArrays(s,e,t),a.update(i,t,1)}renderInstances(e,t,r){const{gl:s,mode:i,type:n,index:a,object:o,info:u}=this;0!==r&&(0!==a?s.drawElementsInstanced(i,t,n,e,r):s.drawArraysInstanced(i,e,t,r),u.update(o,t,r))}renderMultiDraw(e,t,r){const{extensions:s,mode:i,object:n,info:a}=this;if(0===r)return;const o=s.get("WEBGL_multi_draw");if(null===o)for(let s=0;s<r;s++)this.render(e[s],t[s]);else{0!==this.index?o.multiDrawElementsWEBGL(i,t,0,this.type,e,0,r):o.multiDrawArraysWEBGL(i,e,0,t,0,r);let s=0;for(let e=0;e<r;e++)s+=t[e];a.update(n,s,1)}}renderMultiDrawInstances(e,t,r,s){const{extensions:i,mode:n,object:a,info:o}=this;if(0===r)return;const u=i.get("WEBGL_multi_draw");if(null===u)for(let i=0;i<r;i++)this.renderInstances(e[i],t[i],s[i]);else{0!==this.index?u.multiDrawElementsInstancedWEBGL(n,t,0,this.type,e,0,s,0,r):u.multiDrawArraysInstancedWEBGL(n,e,0,t,0,s,0,r);let i=0;for(let e=0;e<r;e++)i+=t[e]*s[e];o.update(a,i,1)}}}class CN{constructor(e=256){this.trackTimestamp=!0,this.maxQueries=e,this.currentQueryIndex=0,this.queryOffsets=new Map,this.isDisposed=!1,this.lastValue=0,this.pendingResolve=!1}allocateQueriesForContext(){}async resolveQueriesAsync(){}dispose(){}}class MN extends CN{constructor(e,t,r=2048){if(super(r),this.gl=e,this.type=t,this.ext=e.getExtension("EXT_disjoint_timer_query_webgl2")||e.getExtension("EXT_disjoint_timer_query"),!this.ext)return console.warn("EXT_disjoint_timer_query not supported; timestamps will be disabled."),void(this.trackTimestamp=!1);this.queries=[];for(let t=0;t<this.maxQueries;t++)this.queries.push(e.createQuery());this.activeQuery=null,this.queryStates=new Map}allocateQueriesForContext(e){if(!this.trackTimestamp)return null;if(this.currentQueryIndex+2>this.maxQueries)return pt(`WebGPUTimestampQueryPool [${this.type}]: Maximum number of queries exceeded, when using trackTimestamp it is necessary to resolves the queries via renderer.resolveTimestampsAsync( THREE.TimestampQuery.${this.type.toUpperCase()} ).`),null;const t=this.currentQueryIndex;return this.currentQueryIndex+=2,this.queryStates.set(t,"inactive"),this.queryOffsets.set(e.id,t),t}beginQuery(e){if(!this.trackTimestamp||this.isDisposed)return;const t=this.queryOffsets.get(e.id);if(null==t)return;if(null!==this.activeQuery)return;const r=this.queries[t];if(r)try{"inactive"===this.queryStates.get(t)&&(this.gl.beginQuery(this.ext.TIME_ELAPSED_EXT,r),this.activeQuery=t,this.queryStates.set(t,"started"))}catch(e){console.error("Error in beginQuery:",e),this.activeQuery=null,this.queryStates.set(t,"inactive")}}endQuery(e){if(!this.trackTimestamp||this.isDisposed)return;const t=this.queryOffsets.get(e.id);if(null!=t&&this.activeQuery===t)try{this.gl.endQuery(this.ext.TIME_ELAPSED_EXT),this.queryStates.set(t,"ended"),this.activeQuery=null}catch(e){console.error("Error in endQuery:",e),this.queryStates.set(t,"inactive"),this.activeQuery=null}}async resolveQueriesAsync(){if(!this.trackTimestamp||this.pendingResolve)return this.lastValue;this.pendingResolve=!0;try{const e=[];for(const[t,r]of this.queryStates)if("ended"===r){const r=this.queries[t];e.push(this.resolveQuery(r))}if(0===e.length)return this.lastValue;const t=(await Promise.all(e)).reduce((e,t)=>e+t,0);return this.lastValue=t,this.currentQueryIndex=0,this.queryOffsets.clear(),this.queryStates.clear(),this.activeQuery=null,t}catch(e){return console.error("Error resolving queries:",e),this.lastValue}finally{this.pendingResolve=!1}}async resolveQuery(e){return new Promise(t=>{if(this.isDisposed)return void t(this.lastValue);let r,s=!1;const i=e=>{s||(s=!0,r&&(clearTimeout(r),r=null),t(e))},n=()=>{if(this.isDisposed)i(this.lastValue);else try{if(this.gl.getParameter(this.ext.GPU_DISJOINT_EXT))return void i(this.lastValue);if(!this.gl.getQueryParameter(e,this.gl.QUERY_RESULT_AVAILABLE))return void(r=setTimeout(n,1));const s=this.gl.getQueryParameter(e,this.gl.QUERY_RESULT);t(Number(s)/1e6)}catch(e){console.error("Error checking query:",e),t(this.lastValue)}};n()})}dispose(){if(!this.isDisposed&&(this.isDisposed=!0,this.trackTimestamp)){for(const e of this.queries)this.gl.deleteQuery(e);this.queries=[],this.queryStates.clear(),this.queryOffsets.clear(),this.lastValue=0,this.activeQuery=null}}}class PN extends cN{constructor(e={}){super(e),this.isWebGLBackend=!0,this.attributeUtils=null,this.extensions=null,this.capabilities=null,this.textureUtils=null,this.bufferRenderer=null,this.gl=null,this.state=null,this.utils=null,this.vaoCache={},this.transformFeedbackCache={},this.discard=!1,this.disjoint=null,this.parallel=null,this._currentContext=null,this._knownBindings=new WeakSet,this._supportsInvalidateFramebuffer="undefined"!=typeof navigator&&/OculusBrowser/g.test(navigator.userAgent),this._xrFramebuffer=null}init(e){super.init(e);const t=this.parameters,r={antialias:e.samples>0,alpha:!0,depth:e.depth,stencil:e.stencil},s=void 0!==t.context?t.context:e.domElement.getContext("webgl2",r);function i(t){t.preventDefault();const r={api:"WebGL",message:t.statusMessage||"Unknown reason",reason:null,originalEvent:t};e.onDeviceLost(r)}this._onContextLost=i,e.domElement.addEventListener("webglcontextlost",i,!1),this.gl=s,this.extensions=new EN(this),this.capabilities=new wN(this),this.attributeUtils=new fN(this),this.textureUtils=new NN(this),this.bufferRenderer=new RN(this),this.state=new yN(this),this.utils=new bN(this),this.extensions.get("EXT_color_buffer_float"),this.extensions.get("WEBGL_clip_cull_distance"),this.extensions.get("OES_texture_float_linear"),this.extensions.get("EXT_color_buffer_half_float"),this.extensions.get("WEBGL_multisampled_render_to_texture"),this.extensions.get("WEBGL_render_shared_exponent"),this.extensions.get("WEBGL_multi_draw"),this.extensions.get("OVR_multiview2"),this.disjoint=this.extensions.get("EXT_disjoint_timer_query_webgl2"),this.parallel=this.extensions.get("KHR_parallel_shader_compile")}get coordinateSystem(){return l}async getArrayBufferAsync(e){return await this.attributeUtils.getArrayBufferAsync(e)}async waitForGPU(){await this.utils._clientWaitAsync()}async makeXRCompatible(){!0!==this.gl.getContextAttributes().xrCompatible&&await this.gl.makeXRCompatible()}setXRTarget(e){this._xrFramebuffer=e}setXRRenderTargetTextures(e,t,r=null){const s=this.gl;if(this.set(e.texture,{textureGPU:t,glInternalFormat:s.RGBA8}),null!==r){const t=e.stencilBuffer?s.DEPTH24_STENCIL8:s.DEPTH_COMPONENT24;this.set(e.depthTexture,{textureGPU:r,glInternalFormat:t}),!0===this.extensions.has("WEBGL_multisampled_render_to_texture")&&!0===e._autoAllocateDepthBuffer&&!1===e.multiview&&console.warn("THREE.WebGLBackend: Render-to-texture extension was disabled because an external texture was provided"),e._autoAllocateDepthBuffer=!1}}initTimestampQuery(e){if(!this.disjoint||!this.trackTimestamp)return;const t=e.isComputeNode?"compute":"render";this.timestampQueryPool[t]||(this.timestampQueryPool[t]=new MN(this.gl,t,2048));const r=this.timestampQueryPool[t];null!==r.allocateQueriesForContext(e)&&r.beginQuery(e)}prepareTimestampBuffer(e){if(!this.disjoint||!this.trackTimestamp)return;const t=e.isComputeNode?"compute":"render";this.timestampQueryPool[t].endQuery(e)}getContext(){return this.gl}beginRender(e){const{state:t}=this,r=this.get(e);if(e.viewport)this.updateViewport(e);else{const{width:e,height:r}=this.getDrawingBufferSize();t.viewport(0,0,e,r)}if(e.scissor){const{x:r,y:s,width:i,height:n}=e.scissorValue;t.scissor(r,e.height-n-s,i,n)}this.initTimestampQuery(e),r.previousContext=this._currentContext,this._currentContext=e,this._setFramebuffer(e),this.clear(e.clearColor,e.clearDepth,e.clearStencil,e,!1);const s=e.occlusionQueryCount;s>0&&(r.currentOcclusionQueries=r.occlusionQueries,r.currentOcclusionQueryObjects=r.occlusionQueryObjects,r.lastOcclusionObject=null,r.occlusionQueries=new Array(s),r.occlusionQueryObjects=new Array(s),r.occlusionQueryIndex=0)}finishRender(e){const{gl:t,state:r}=this,s=this.get(e),i=s.previousContext;r.resetVertexState();const n=e.occlusionQueryCount;n>0&&(n>s.occlusionQueryIndex&&t.endQuery(t.ANY_SAMPLES_PASSED),this.resolveOccludedAsync(e));const a=e.textures;if(null!==a)for(let e=0;e<a.length;e++){const t=a[e];t.generateMipmaps&&this.generateMipmaps(t)}this._currentContext=i;const o=e.renderTarget;if(null!==e.textures&&o){const s=this.get(o);if(o.samples>0&&!1===this._useMultisampledExtension(o)){const i=s.framebuffers[e.getCacheKey()];let n=t.COLOR_BUFFER_BIT;o.resolveDepthBuffer&&(o.depthBuffer&&(n|=t.DEPTH_BUFFER_BIT),o.stencilBuffer&&o.resolveStencilBuffer&&(n|=t.STENCIL_BUFFER_BIT));const a=s.msaaFrameBuffer,u=s.msaaRenderbuffers,l=e.textures,d=l.length>1;if(r.bindFramebuffer(t.READ_FRAMEBUFFER,a),r.bindFramebuffer(t.DRAW_FRAMEBUFFER,i),d)for(let e=0;e<l.length;e++)t.framebufferRenderbuffer(t.READ_FRAMEBUFFER,t.COLOR_ATTACHMENT0+e,t.RENDERBUFFER,null),t.framebufferTexture2D(t.DRAW_FRAMEBUFFER,t.COLOR_ATTACHMENT0+e,t.TEXTURE_2D,null,0);for(let r=0;r<l.length;r++){if(d){const{textureGPU:e}=this.get(l[r]);t.framebufferRenderbuffer(t.READ_FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.RENDERBUFFER,u[r]),t.framebufferTexture2D(t.DRAW_FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,e,0)}if(e.scissor){const{x:r,y:s,width:i,height:a}=e.scissorValue,o=e.height-a-s;t.blitFramebuffer(r,o,r+i,o+a,r,o,r+i,o+a,n,t.NEAREST)}else t.blitFramebuffer(0,0,e.width,e.height,0,0,e.width,e.height,n,t.NEAREST)}if(d)for(let e=0;e<l.length;e++){const{textureGPU:r}=this.get(l[e]);t.framebufferRenderbuffer(t.READ_FRAMEBUFFER,t.COLOR_ATTACHMENT0+e,t.RENDERBUFFER,u[e]),t.framebufferTexture2D(t.DRAW_FRAMEBUFFER,t.COLOR_ATTACHMENT0+e,t.TEXTURE_2D,r,0)}!0===this._supportsInvalidateFramebuffer&&t.invalidateFramebuffer(t.READ_FRAMEBUFFER,s.invalidationArray)}else if(!1===o.resolveDepthBuffer&&s.framebuffers){const i=s.framebuffers[e.getCacheKey()];r.bindFramebuffer(t.DRAW_FRAMEBUFFER,i),t.invalidateFramebuffer(t.DRAW_FRAMEBUFFER,s.depthInvalidationArray)}}if(null!==i)if(this._setFramebuffer(i),i.viewport)this.updateViewport(i);else{const{width:e,height:t}=this.getDrawingBufferSize();r.viewport(0,0,e,t)}this.prepareTimestampBuffer(e)}resolveOccludedAsync(e){const t=this.get(e),{currentOcclusionQueries:r,currentOcclusionQueryObjects:s}=t;if(r&&s){const e=new WeakSet,{gl:i}=this;t.currentOcclusionQueryObjects=null,t.currentOcclusionQueries=null;const n=()=>{let a=0;for(let t=0;t<r.length;t++){const n=r[t];null!==n&&(i.getQueryParameter(n,i.QUERY_RESULT_AVAILABLE)&&(0===i.getQueryParameter(n,i.QUERY_RESULT)&&e.add(s[t]),r[t]=null,i.deleteQuery(n),a++))}a<r.length?requestAnimationFrame(n):t.occluded=e};n()}}isOccluded(e,t){const r=this.get(e);return r.occluded&&r.occluded.has(t)}updateViewport(e){const{state:t}=this,{x:r,y:s,width:i,height:n}=e.viewportValue;t.viewport(r,e.height-n-s,i,n)}setScissorTest(e){this.state.setScissorTest(e)}getClearColor(){const e=super.getClearColor();return e.r*=e.a,e.g*=e.a,e.b*=e.a,e}clear(e,t,r,s=null,i=!0){const{gl:n,renderer:a}=this;if(null===s){s={textures:null,clearColorValue:this.getClearColor()}}let o=0;if(e&&(o|=n.COLOR_BUFFER_BIT),t&&(o|=n.DEPTH_BUFFER_BIT),r&&(o|=n.STENCIL_BUFFER_BIT),0!==o){let u;u=s.clearColorValue?s.clearColorValue:this.getClearColor();const l=a.getClearDepth(),d=a.getClearStencil();if(t&&this.state.setDepthMask(!0),null===s.textures)n.clearColor(u.r,u.g,u.b,u.a),n.clear(o);else{if(i&&this._setFramebuffer(s),e)for(let e=0;e<s.textures.length;e++)0===e?n.clearBufferfv(n.COLOR,e,[u.r,u.g,u.b,u.a]):n.clearBufferfv(n.COLOR,e,[0,0,0,1]);t&&r?n.clearBufferfi(n.DEPTH_STENCIL,0,l,d):t?n.clearBufferfv(n.DEPTH,0,[l]):r&&n.clearBufferiv(n.STENCIL,0,[d])}}}beginCompute(e){const{state:t,gl:r}=this;t.bindFramebuffer(r.FRAMEBUFFER,null),this.initTimestampQuery(e)}compute(e,t,r,s,i=null){const{state:n,gl:a}=this;!1===this.discard&&(a.enable(a.RASTERIZER_DISCARD),this.discard=!0);const{programGPU:o,transformBuffers:u,attributes:l}=this.get(s),d=this._getVaoKey(l),c=this.vaoCache[d];void 0===c?this.vaoCache[d]=this._createVao(l):n.setVertexState(c),n.useProgram(o),this._bindUniforms(r);const h=this._getTransformFeedback(u);a.bindTransformFeedback(a.TRANSFORM_FEEDBACK,h),a.beginTransformFeedback(a.POINTS),i=null!==i?i:t.count,Array.isArray(i)&&(pt("WebGLBackend.compute(): The count parameter must be a single number, not an array."),i=i[0]),l[0].isStorageInstancedBufferAttribute?a.drawArraysInstanced(a.POINTS,0,1,i):a.drawArrays(a.POINTS,0,i),a.endTransformFeedback(),a.bindTransformFeedback(a.TRANSFORM_FEEDBACK,null);for(let e=0;e<u.length;e++){const t=u[e];t.pbo&&this.has(t.pbo)&&this.textureUtils.copyBufferToTexture(t.transformBuffer,t.pbo),t.switchBuffers()}}finishCompute(e){const t=this.gl;this.discard=!1,t.disable(t.RASTERIZER_DISCARD),this.prepareTimestampBuffer(e),this._currentContext&&this._setFramebuffer(this._currentContext)}_isRenderCameraDepthArray(e){return e.depthTexture&&e.depthTexture.isArrayTexture&&e.camera.isArrayCamera}draw(e){const{object:t,pipeline:r,material:s,context:i,hardwareClippingPlanes:n}=e,{programGPU:a}=this.get(r),{gl:o,state:u}=this,l=this.get(i),d=e.getDrawParameters();if(null===d)return;this._bindUniforms(e.getBindings());const c=t.isMesh&&t.matrixWorld.determinant()<0;u.setMaterial(s,c,n),u.useProgram(a);const h=e.getAttributes(),p=this.get(h);let g=p.vaoGPU;if(void 0===g){const e=this._getVaoKey(h);g=this.vaoCache[e],void 0===g&&(g=this._createVao(h),this.vaoCache[e]=g,p.vaoGPU=g)}const m=e.getIndex(),f=null!==m?this.get(m).bufferGPU:null;u.setVertexState(g,f);const y=l.lastOcclusionObject;if(y!==t&&void 0!==y){if(null!==y&&!0===y.occlusionTest&&(o.endQuery(o.ANY_SAMPLES_PASSED),l.occlusionQueryIndex++),!0===t.occlusionTest){const e=o.createQuery();o.beginQuery(o.ANY_SAMPLES_PASSED,e),l.occlusionQueries[l.occlusionQueryIndex]=e,l.occlusionQueryObjects[l.occlusionQueryIndex]=t}l.lastOcclusionObject=t}const b=this.bufferRenderer;t.isPoints?b.mode=o.POINTS:t.isLineSegments?b.mode=o.LINES:t.isLine?b.mode=o.LINE_STRIP:t.isLineLoop?b.mode=o.LINE_LOOP:!0===s.wireframe?(u.setLineWidth(s.wireframeLinewidth*this.renderer.getPixelRatio()),b.mode=o.LINES):b.mode=o.TRIANGLES;const{vertexCount:x,instanceCount:T}=d;let{firstVertex:_}=d;if(b.object=t,null!==m){_*=m.array.BYTES_PER_ELEMENT;const e=this.get(m);b.index=m.count,b.type=e.type}else b.index=0;const v=()=>{t.isBatchedMesh?null!==t._multiDrawInstances?(pt("THREE.WebGLBackend: renderMultiDrawInstances has been deprecated and will be removed in r184. Append to renderMultiDraw arguments and use indirection."),b.renderMultiDrawInstances(t._multiDrawStarts,t._multiDrawCounts,t._multiDrawCount,t._multiDrawInstances)):this.hasFeature("WEBGL_multi_draw")?b.renderMultiDraw(t._multiDrawStarts,t._multiDrawCounts,t._multiDrawCount):pt("THREE.WebGLRenderer: WEBGL_multi_draw not supported."):T>1?b.renderInstances(_,x,T):b.render(_,x)};if(!0===e.camera.isArrayCamera&&e.camera.cameras.length>0&&!1===e.camera.isMultiViewCamera){const r=this.get(e.camera),s=e.camera.cameras,i=e.getBindingGroup("cameraIndex").bindings[0];if(void 0===r.indexesGPU||r.indexesGPU.length!==s.length){const e=new Uint32Array([0,0,0,0]),t=[];for(let r=0,i=s.length;r<i;r++){const s=o.createBuffer();e[0]=r,o.bindBuffer(o.UNIFORM_BUFFER,s),o.bufferData(o.UNIFORM_BUFFER,e,o.STATIC_DRAW),t.push(s)}r.indexesGPU=t}const n=this.get(i),a=this.renderer.getPixelRatio(),l=this._currentContext.renderTarget,d=this._isRenderCameraDepthArray(this._currentContext),c=this._currentContext.activeCubeFace;if(d){const e=this.get(l.depthTexture);if(e.clearedRenderId!==this.renderer._nodes.nodeFrame.renderId){e.clearedRenderId=this.renderer._nodes.nodeFrame.renderId;const{stencilBuffer:t}=l;for(let e=0,r=s.length;e<r;e++)this.renderer._activeCubeFace=e,this._currentContext.activeCubeFace=e,this._setFramebuffer(this._currentContext),this.clear(!1,!0,t,this._currentContext,!1);this.renderer._activeCubeFace=c,this._currentContext.activeCubeFace=c}}for(let i=0,l=s.length;i<l;i++){const l=s[i];if(t.layers.test(l.layers)){d&&(this.renderer._activeCubeFace=i,this._currentContext.activeCubeFace=i,this._setFramebuffer(this._currentContext));const t=l.viewport;if(void 0!==t){const r=t.x*a,s=t.y*a,i=t.width*a,n=t.height*a;u.viewport(Math.floor(r),Math.floor(e.context.height-n-s),Math.floor(i),Math.floor(n))}u.bindBufferBase(o.UNIFORM_BUFFER,n.index,r.indexesGPU[i]),v()}this._currentContext.activeCubeFace=c,this.renderer._activeCubeFace=c}}else v()}needsRenderUpdate(){return!1}getRenderCacheKey(){return""}createDefaultTexture(e){this.textureUtils.createDefaultTexture(e)}createTexture(e,t){this.textureUtils.createTexture(e,t)}updateTexture(e,t){this.textureUtils.updateTexture(e,t)}generateMipmaps(e){this.textureUtils.generateMipmaps(e)}destroyTexture(e){this.textureUtils.destroyTexture(e)}async copyTextureToBuffer(e,t,r,s,i,n){return this.textureUtils.copyTextureToBuffer(e,t,r,s,i,n)}createSampler(){}destroySampler(){}createNodeBuilder(e,t){return new uN(e,t)}createProgram(e){const t=this.gl,{stage:r,code:s}=e,i="fragment"===r?t.createShader(t.FRAGMENT_SHADER):t.createShader(t.VERTEX_SHADER);t.shaderSource(i,s),t.compileShader(i),this.set(e,{shaderGPU:i})}destroyProgram(e){this.delete(e)}createRenderPipeline(e,t){const r=this.gl,s=e.pipeline,{fragmentProgram:i,vertexProgram:n}=s,a=r.createProgram(),o=this.get(i).shaderGPU,u=this.get(n).shaderGPU;if(r.attachShader(a,o),r.attachShader(a,u),r.linkProgram(a),this.set(s,{programGPU:a,fragmentShader:o,vertexShader:u}),null!==t&&this.parallel){const i=new Promise(t=>{const i=this.parallel,n=()=>{r.getProgramParameter(a,i.COMPLETION_STATUS_KHR)?(this._completeCompile(e,s),t()):requestAnimationFrame(n)};n()});return void t.push(i)}this._completeCompile(e,s)}_handleSource(e,t){const r=e.split("\n"),s=[],i=Math.max(t-6,0),n=Math.min(t+6,r.length);for(let e=i;e<n;e++){const i=e+1;s.push(`${i===t?">":" "} ${i}: ${r[e]}`)}return s.join("\n")}_getShaderErrors(e,t,r){const s=e.getShaderParameter(t,e.COMPILE_STATUS),i=(e.getShaderInfoLog(t)||"").trim();if(s&&""===i)return"";const n=/ERROR: 0:(\d+)/.exec(i);if(n){const s=parseInt(n[1]);return r.toUpperCase()+"\n\n"+i+"\n\n"+this._handleSource(e.getShaderSource(t),s)}return i}_logProgramError(e,t,r){if(this.renderer.debug.checkShaderErrors){const s=this.gl,i=(s.getProgramInfoLog(e)||"").trim();if(!1===s.getProgramParameter(e,s.LINK_STATUS))if("function"==typeof this.renderer.debug.onShaderError)this.renderer.debug.onShaderError(s,e,r,t);else{const n=this._getShaderErrors(s,r,"vertex"),a=this._getShaderErrors(s,t,"fragment");console.error("THREE.WebGLProgram: Shader Error "+s.getError()+" - VALIDATE_STATUS "+s.getProgramParameter(e,s.VALIDATE_STATUS)+"\n\nProgram Info Log: "+i+"\n"+n+"\n"+a)}else""!==i&&console.warn("THREE.WebGLProgram: Program Info Log:",i)}}_completeCompile(e,t){const{state:r,gl:s}=this,i=this.get(t),{programGPU:n,fragmentShader:a,vertexShader:o}=i;!1===s.getProgramParameter(n,s.LINK_STATUS)&&this._logProgramError(n,a,o),r.useProgram(n);const u=e.getBindings();this._setupBindings(u,n),this.set(t,{programGPU:n})}createComputePipeline(e,t){const{state:r,gl:s}=this,i={stage:"fragment",code:"#version 300 es\nprecision highp float;\nvoid main() {}"};this.createProgram(i);const{computeProgram:n}=e,a=s.createProgram(),o=this.get(i).shaderGPU,u=this.get(n).shaderGPU,l=n.transforms,d=[],c=[];for(let e=0;e<l.length;e++){const t=l[e];d.push(t.varyingName),c.push(t.attributeNode)}s.attachShader(a,o),s.attachShader(a,u),s.transformFeedbackVaryings(a,d,s.SEPARATE_ATTRIBS),s.linkProgram(a),!1===s.getProgramParameter(a,s.LINK_STATUS)&&this._logProgramError(a,o,u),r.useProgram(a),this._setupBindings(t,a);const h=n.attributes,p=[],g=[];for(let e=0;e<h.length;e++){const t=h[e].node.attribute;p.push(t),this.has(t)||this.attributeUtils.createAttribute(t,s.ARRAY_BUFFER)}for(let e=0;e<c.length;e++){const t=c[e].attribute;this.has(t)||this.attributeUtils.createAttribute(t,s.ARRAY_BUFFER);const r=this.get(t);g.push(r)}this.set(e,{programGPU:a,transformBuffers:g,attributes:p})}createBindings(e,t){if(!1===this._knownBindings.has(t)){this._knownBindings.add(t);let e=0,r=0;for(const s of t){this.set(s,{textures:r,uniformBuffers:e});for(const t of s.bindings)t.isUniformBuffer&&e++,t.isSampledTexture&&r++}}this.updateBindings(e,t)}updateBindings(e){const{gl:t}=this,r=this.get(e);let s=r.uniformBuffers,i=r.textures;for(const r of e.bindings)if(r.isUniformsGroup||r.isUniformBuffer){const e=r.buffer,i=t.createBuffer();t.bindBuffer(t.UNIFORM_BUFFER,i),t.bufferData(t.UNIFORM_BUFFER,e,t.DYNAMIC_DRAW),this.set(r,{index:s++,bufferGPU:i})}else if(r.isSampledTexture){const{textureGPU:e,glTextureType:t}=this.get(r.texture);this.set(r,{index:i++,textureGPU:e,glTextureType:t})}}updateBinding(e){const t=this.gl;if(e.isUniformsGroup||e.isUniformBuffer){const r=this.get(e).bufferGPU,s=e.buffer;t.bindBuffer(t.UNIFORM_BUFFER,r),t.bufferData(t.UNIFORM_BUFFER,s,t.DYNAMIC_DRAW)}}createIndexAttribute(e){const t=this.gl;this.attributeUtils.createAttribute(e,t.ELEMENT_ARRAY_BUFFER)}createAttribute(e){if(this.has(e))return;const t=this.gl;this.attributeUtils.createAttribute(e,t.ARRAY_BUFFER)}createStorageAttribute(e){if(this.has(e))return;const t=this.gl;this.attributeUtils.createAttribute(e,t.ARRAY_BUFFER)}updateAttribute(e){this.attributeUtils.updateAttribute(e)}destroyAttribute(e){this.attributeUtils.destroyAttribute(e)}hasFeature(e){const t=Object.keys(AN).filter(t=>AN[t]===e),r=this.extensions;for(let e=0;e<t.length;e++)if(r.has(t[e]))return!0;return!1}getMaxAnisotropy(){return this.capabilities.getMaxAnisotropy()}copyTextureToTexture(e,t,r=null,s=null,i=0,n=0){this.textureUtils.copyTextureToTexture(e,t,r,s,i,n)}copyFramebufferToTexture(e,t,r){this.textureUtils.copyFramebufferToTexture(e,t,r)}_setFramebuffer(e){const{gl:t,state:r}=this;let s=null;if(null!==e.textures){const i=e.renderTarget,n=this.get(i),{samples:a,depthBuffer:o,stencilBuffer:u}=i,l=!0===i.isWebGLCubeRenderTarget,d=!0===i.isRenderTarget3D,c=i.depth>1,h=!0===i.isXRRenderTarget,p=!0===h&&!0===i._hasExternalTextures;let g=n.msaaFrameBuffer,m=n.depthRenderbuffer;const f=this.extensions.get("WEBGL_multisampled_render_to_texture"),y=this.extensions.get("OVR_multiview2"),b=this._useMultisampledExtension(i),x=Of(e);let T;if(l?(n.cubeFramebuffers||(n.cubeFramebuffers={}),T=n.cubeFramebuffers[x]):h&&!1===p?T=this._xrFramebuffer:(n.framebuffers||(n.framebuffers={}),T=n.framebuffers[x]),void 0===T){T=t.createFramebuffer(),r.bindFramebuffer(t.FRAMEBUFFER,T);const s=e.textures,o=[];if(l){n.cubeFramebuffers[x]=T;const{textureGPU:e}=this.get(s[0]),r=this.renderer._activeCubeFace;t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_CUBE_MAP_POSITIVE_X+r,e,0)}else{n.framebuffers[x]=T;for(let r=0;r<s.length;r++){const n=s[r],o=this.get(n);o.renderTarget=e.renderTarget,o.cacheKey=x;const u=t.COLOR_ATTACHMENT0+r;if(i.multiview)y.framebufferTextureMultisampleMultiviewOVR(t.FRAMEBUFFER,u,o.textureGPU,0,a,0,2);else if(d||c){const e=this.renderer._activeCubeFace;t.framebufferTextureLayer(t.FRAMEBUFFER,u,o.textureGPU,0,e)}else b?f.framebufferTexture2DMultisampleEXT(t.FRAMEBUFFER,u,t.TEXTURE_2D,o.textureGPU,0,a):t.framebufferTexture2D(t.FRAMEBUFFER,u,t.TEXTURE_2D,o.textureGPU,0)}}const h=u?t.DEPTH_STENCIL_ATTACHMENT:t.DEPTH_ATTACHMENT;if(!0===i._autoAllocateDepthBuffer){const r=t.createRenderbuffer();this.textureUtils.setupRenderBufferStorage(r,e,0,b),n.xrDepthRenderbuffer=r,o.push(u?t.DEPTH_STENCIL_ATTACHMENT:t.DEPTH_ATTACHMENT),t.bindRenderbuffer(t.RENDERBUFFER,r),t.framebufferRenderbuffer(t.FRAMEBUFFER,h,t.RENDERBUFFER,r)}else if(null!==e.depthTexture){o.push(u?t.DEPTH_STENCIL_ATTACHMENT:t.DEPTH_ATTACHMENT);const r=this.get(e.depthTexture);if(r.renderTarget=e.renderTarget,r.cacheKey=x,i.multiview)y.framebufferTextureMultisampleMultiviewOVR(t.FRAMEBUFFER,h,r.textureGPU,0,a,0,2);else if(p&&b)f.framebufferTexture2DMultisampleEXT(t.FRAMEBUFFER,h,t.TEXTURE_2D,r.textureGPU,0,a);else if(e.depthTexture.isArrayTexture){const e=this.renderer._activeCubeFace;t.framebufferTextureLayer(t.FRAMEBUFFER,h,r.textureGPU,0,e)}else t.framebufferTexture2D(t.FRAMEBUFFER,h,t.TEXTURE_2D,r.textureGPU,0)}n.depthInvalidationArray=o}else{if(this._isRenderCameraDepthArray(e)){r.bindFramebuffer(t.FRAMEBUFFER,T);const s=this.renderer._activeCubeFace,i=this.get(e.depthTexture),n=u?t.DEPTH_STENCIL_ATTACHMENT:t.DEPTH_ATTACHMENT;t.framebufferTextureLayer(t.FRAMEBUFFER,n,i.textureGPU,0,s)}if((h||b||i.multiview)&&!0!==i._isOpaqueFramebuffer){r.bindFramebuffer(t.FRAMEBUFFER,T);const s=this.get(e.textures[0]);i.multiview?y.framebufferTextureMultisampleMultiviewOVR(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,s.textureGPU,0,a,0,2):b?f.framebufferTexture2DMultisampleEXT(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,s.textureGPU,0,a):t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,s.textureGPU,0);const o=u?t.DEPTH_STENCIL_ATTACHMENT:t.DEPTH_ATTACHMENT;if(!0===i._autoAllocateDepthBuffer){const e=n.xrDepthRenderbuffer;t.bindRenderbuffer(t.RENDERBUFFER,e),t.framebufferRenderbuffer(t.FRAMEBUFFER,o,t.RENDERBUFFER,e)}else{const r=this.get(e.depthTexture);i.multiview?y.framebufferTextureMultisampleMultiviewOVR(t.FRAMEBUFFER,o,r.textureGPU,0,a,0,2):b?f.framebufferTexture2DMultisampleEXT(t.FRAMEBUFFER,o,t.TEXTURE_2D,r.textureGPU,0,a):t.framebufferTexture2D(t.FRAMEBUFFER,o,t.TEXTURE_2D,r.textureGPU,0)}}}if(a>0&&!1===b&&!i.multiview){if(void 0===g){const s=[];g=t.createFramebuffer(),r.bindFramebuffer(t.FRAMEBUFFER,g);const i=[],l=e.textures;for(let r=0;r<l.length;r++){i[r]=t.createRenderbuffer(),t.bindRenderbuffer(t.RENDERBUFFER,i[r]),s.push(t.COLOR_ATTACHMENT0+r);const n=e.textures[r],o=this.get(n);t.renderbufferStorageMultisample(t.RENDERBUFFER,a,o.glInternalFormat,e.width,e.height),t.framebufferRenderbuffer(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0+r,t.RENDERBUFFER,i[r])}if(t.bindRenderbuffer(t.RENDERBUFFER,null),n.msaaFrameBuffer=g,n.msaaRenderbuffers=i,o&&void 0===m){m=t.createRenderbuffer(),this.textureUtils.setupRenderBufferStorage(m,e,a),n.depthRenderbuffer=m;const r=u?t.DEPTH_STENCIL_ATTACHMENT:t.DEPTH_ATTACHMENT;s.push(r)}n.invalidationArray=s}s=n.msaaFrameBuffer}else s=T;r.drawBuffers(e,T)}r.bindFramebuffer(t.FRAMEBUFFER,s)}_getVaoKey(e){let t="";for(let r=0;r<e.length;r++){t+=":"+this.get(e[r]).id}return t}_createVao(e){const{gl:t}=this,r=t.createVertexArray();t.bindVertexArray(r);for(let r=0;r<e.length;r++){const s=e[r],i=this.get(s);let n,a;t.bindBuffer(t.ARRAY_BUFFER,i.bufferGPU),t.enableVertexAttribArray(r),!0===s.isInterleavedBufferAttribute?(n=s.data.stride*i.bytesPerElement,a=s.offset*i.bytesPerElement):(n=0,a=0),i.isInteger?t.vertexAttribIPointer(r,s.itemSize,i.type,n,a):t.vertexAttribPointer(r,s.itemSize,i.type,s.normalized,n,a),s.isInstancedBufferAttribute&&!s.isInterleavedBufferAttribute?t.vertexAttribDivisor(r,s.meshPerAttribute):s.isInterleavedBufferAttribute&&s.data.isInstancedInterleavedBuffer&&t.vertexAttribDivisor(r,s.data.meshPerAttribute)}return t.bindBuffer(t.ARRAY_BUFFER,null),r}_getTransformFeedback(e){let t="";for(let r=0;r<e.length;r++)t+=":"+e[r].id;let r=this.transformFeedbackCache[t];if(void 0!==r)return r;const{gl:s}=this;r=s.createTransformFeedback(),s.bindTransformFeedback(s.TRANSFORM_FEEDBACK,r);for(let t=0;t<e.length;t++){const r=e[t];s.bindBufferBase(s.TRANSFORM_FEEDBACK_BUFFER,t,r.transformBuffer)}return s.bindTransformFeedback(s.TRANSFORM_FEEDBACK,null),this.transformFeedbackCache[t]=r,r}_setupBindings(e,t){const r=this.gl;for(const s of e)for(const e of s.bindings){const s=this.get(e).index;if(e.isUniformsGroup||e.isUniformBuffer){const i=r.getUniformBlockIndex(t,e.name);r.uniformBlockBinding(t,i,s)}else if(e.isSampledTexture){const i=r.getUniformLocation(t,e.name);r.uniform1i(i,s)}}}_bindUniforms(e){const{gl:t,state:r}=this;for(const s of e)for(const e of s.bindings){const s=this.get(e),i=s.index;e.isUniformsGroup||e.isUniformBuffer?r.bindBufferBase(t.UNIFORM_BUFFER,i,s.bufferGPU):e.isSampledTexture&&r.bindTexture(s.glTextureType,s.textureGPU,t.TEXTURE0+i)}}_useMultisampledExtension(e){return!0===e.multiview||e.samples>0&&!0===this.extensions.has("WEBGL_multisampled_render_to_texture")&&!1!==e._autoAllocateDepthBuffer}dispose(){const e=this.extensions.get("WEBGL_lose_context");e&&e.loseContext(),this.renderer.domElement.removeEventListener("webglcontextlost",this._onContextLost)}}const BN="point-list",LN="line-list",FN="line-strip",DN="triangle-list",IN="triangle-strip",VN="never",UN="less",ON="equal",kN="less-equal",GN="greater",zN="not-equal",HN="greater-equal",$N="always",WN="store",jN="load",qN="clear",XN="ccw",KN="none",YN="front",QN="back",ZN="uint16",JN="uint32",eS="r8unorm",tS="r8snorm",rS="r8uint",sS="r8sint",iS="r16uint",nS="r16sint",aS="r16float",oS="rg8unorm",uS="rg8snorm",lS="rg8uint",dS="rg8sint",cS="r32uint",hS="r32sint",pS="r32float",gS="rg16uint",mS="rg16sint",fS="rg16float",yS="rgba8unorm",bS="rgba8unorm-srgb",xS="rgba8snorm",TS="rgba8uint",_S="rgba8sint",vS="bgra8unorm",NS="bgra8unorm-srgb",SS="rgb9e5ufloat",ES="rgb10a2unorm",wS="rgb10a2unorm",AS="rg32uint",RS="rg32sint",CS="rg32float",MS="rgba16uint",PS="rgba16sint",BS="rgba16float",LS="rgba32uint",FS="rgba32sint",DS="rgba32float",IS="depth16unorm",VS="depth24plus",US="depth24plus-stencil8",OS="depth32float",kS="depth32float-stencil8",GS="bc1-rgba-unorm",zS="bc1-rgba-unorm-srgb",HS="bc2-rgba-unorm",$S="bc2-rgba-unorm-srgb",WS="bc3-rgba-unorm",jS="bc3-rgba-unorm-srgb",qS="bc4-r-unorm",XS="bc4-r-snorm",KS="bc5-rg-unorm",YS="bc5-rg-snorm",QS="bc6h-rgb-ufloat",ZS="bc6h-rgb-float",JS="bc7-rgba-unorm",eE="bc7-rgba-srgb",tE="etc2-rgb8unorm",rE="etc2-rgb8unorm-srgb",sE="etc2-rgb8a1unorm",iE="etc2-rgb8a1unorm-srgb",nE="etc2-rgba8unorm",aE="etc2-rgba8unorm-srgb",oE="eac-r11unorm",uE="eac-r11snorm",lE="eac-rg11unorm",dE="eac-rg11snorm",cE="astc-4x4-unorm",hE="astc-4x4-unorm-srgb",pE="astc-5x4-unorm",gE="astc-5x4-unorm-srgb",mE="astc-5x5-unorm",fE="astc-5x5-unorm-srgb",yE="astc-6x5-unorm",bE="astc-6x5-unorm-srgb",xE="astc-6x6-unorm",TE="astc-6x6-unorm-srgb",_E="astc-8x5-unorm",vE="astc-8x5-unorm-srgb",NE="astc-8x6-unorm",SE="astc-8x6-unorm-srgb",EE="astc-8x8-unorm",wE="astc-8x8-unorm-srgb",AE="astc-10x5-unorm",RE="astc-10x5-unorm-srgb",CE="astc-10x6-unorm",ME="astc-10x6-unorm-srgb",PE="astc-10x8-unorm",BE="astc-10x8-unorm-srgb",LE="astc-10x10-unorm",FE="astc-10x10-unorm-srgb",DE="astc-12x10-unorm",IE="astc-12x10-unorm-srgb",VE="astc-12x12-unorm",UE="astc-12x12-unorm-srgb",OE="clamp-to-edge",kE="repeat",GE="mirror-repeat",zE="linear",HE="nearest",$E="zero",WE="one",jE="src",qE="one-minus-src",XE="src-alpha",KE="one-minus-src-alpha",YE="dst",QE="one-minus-dst",ZE="dst-alpha",JE="one-minus-dst-alpha",ew="src-alpha-saturated",tw="constant",rw="one-minus-constant",sw="add",iw="subtract",nw="reverse-subtract",aw="min",ow="max",uw=0,lw=15,dw="keep",cw="zero",hw="replace",pw="invert",gw="increment-clamp",mw="decrement-clamp",fw="increment-wrap",yw="decrement-wrap",bw="storage",xw="read-only-storage",Tw="write-only",_w="read-only",vw="read-write",Nw="non-filtering",Sw="comparison",Ew="float",ww="unfilterable-float",Aw="depth",Rw="sint",Cw="uint",Mw="2d",Pw="3d",Bw="2d",Lw="2d-array",Fw="cube",Dw="3d",Iw="all",Vw="vertex",Uw="instance",Ow={CoreFeaturesAndLimits:"core-features-and-limits",DepthClipControl:"depth-clip-control",Depth32FloatStencil8:"depth32float-stencil8",TextureCompressionBC:"texture-compression-bc",TextureCompressionBCSliced3D:"texture-compression-bc-sliced-3d",TextureCompressionETC2:"texture-compression-etc2",TextureCompressionASTC:"texture-compression-astc",TextureCompressionASTCSliced3D:"texture-compression-astc-sliced-3d",TimestampQuery:"timestamp-query",IndirectFirstInstance:"indirect-first-instance",ShaderF16:"shader-f16",RG11B10UFloat:"rg11b10ufloat-renderable",BGRA8UNormStorage:"bgra8unorm-storage",Float32Filterable:"float32-filterable",Float32Blendable:"float32-blendable",ClipDistances:"clip-distances",DualSourceBlending:"dual-source-blending",Subgroups:"subgroups",TextureFormatsTier1:"texture-formats-tier1",TextureFormatsTier2:"texture-formats-tier2"};class kw extends Hv{constructor(e,t){super(e),this.texture=t,this.version=t?t.version:0,this.isSampler=!0}}class Gw extends kw{constructor(e,t,r){super(e,t?t.value:null),this.textureNode=t,this.groupNode=r}update(){this.texture=this.textureNode.value}}class zw extends $v{constructor(e,t){super(e,t?t.array:null),this.attribute=t,this.isStorageBuffer=!0}}let Hw=0;class $w extends zw{constructor(e,t){super("StorageBuffer_"+Hw++,e?e.value:null),this.nodeUniform=e,this.access=e?e.access:ks.READ_WRITE,this.groupNode=t}get buffer(){return this.nodeUniform.value}}class Ww extends pf{constructor(e){super(),this.device=e;this.mipmapSampler=e.createSampler({minFilter:zE}),this.flipYSampler=e.createSampler({minFilter:HE}),this.transferPipelines={},this.flipYPipelines={},this.mipmapVertexShaderModule=e.createShaderModule({label:"mipmapVertex",code:"\nstruct VarysStruct {\n\t@builtin( position ) Position: vec4<f32>,\n\t@location( 0 ) vTex : vec2<f32>\n};\n\n@vertex\nfn main( @builtin( vertex_index ) vertexIndex : u32 ) -> VarysStruct {\n\n\tvar Varys : VarysStruct;\n\n\tvar pos = array< vec2<f32>, 4 >(\n\t\tvec2<f32>( -1.0,  1.0 ),\n\t\tvec2<f32>(  1.0,  1.0 ),\n\t\tvec2<f32>( -1.0, -1.0 ),\n\t\tvec2<f32>(  1.0, -1.0 )\n\t);\n\n\tvar tex = array< vec2<f32>, 4 >(\n\t\tvec2<f32>( 0.0, 0.0 ),\n\t\tvec2<f32>( 1.0, 0.0 ),\n\t\tvec2<f32>( 0.0, 1.0 ),\n\t\tvec2<f32>( 1.0, 1.0 )\n\t);\n\n\tVarys.vTex = tex[ vertexIndex ];\n\tVarys.Position = vec4<f32>( pos[ vertexIndex ], 0.0, 1.0 );\n\n\treturn Varys;\n\n}\n"}),this.mipmapFragmentShaderModule=e.createShaderModule({label:"mipmapFragment",code:"\n@group( 0 ) @binding( 0 )\nvar imgSampler : sampler;\n\n@group( 0 ) @binding( 1 )\nvar img : texture_2d<f32>;\n\n@fragment\nfn main( @location( 0 ) vTex : vec2<f32> ) -> @location( 0 ) vec4<f32> {\n\n\treturn textureSample( img, imgSampler, vTex );\n\n}\n"}),this.flipYFragmentShaderModule=e.createShaderModule({label:"flipYFragment",code:"\n@group( 0 ) @binding( 0 )\nvar imgSampler : sampler;\n\n@group( 0 ) @binding( 1 )\nvar img : texture_2d<f32>;\n\n@fragment\nfn main( @location( 0 ) vTex : vec2<f32> ) -> @location( 0 ) vec4<f32> {\n\n\treturn textureSample( img, imgSampler, vec2( vTex.x, 1.0 - vTex.y ) );\n\n}\n"})}getTransferPipeline(e){let t=this.transferPipelines[e];return void 0===t&&(t=this.device.createRenderPipeline({label:`mipmap-${e}`,vertex:{module:this.mipmapVertexShaderModule,entryPoint:"main"},fragment:{module:this.mipmapFragmentShaderModule,entryPoint:"main",targets:[{format:e}]},primitive:{topology:IN,stripIndexFormat:JN},layout:"auto"}),this.transferPipelines[e]=t),t}getFlipYPipeline(e){let t=this.flipYPipelines[e];return void 0===t&&(t=this.device.createRenderPipeline({label:`flipY-${e}`,vertex:{module:this.mipmapVertexShaderModule,entryPoint:"main"},fragment:{module:this.flipYFragmentShaderModule,entryPoint:"main",targets:[{format:e}]},primitive:{topology:IN,stripIndexFormat:JN},layout:"auto"}),this.flipYPipelines[e]=t),t}flipY(e,t,r=0){const s=t.format,{width:i,height:n}=t.size,a=this.getTransferPipeline(s),o=this.getFlipYPipeline(s),u=this.device.createTexture({size:{width:i,height:n,depthOrArrayLayers:1},format:s,usage:GPUTextureUsage.RENDER_ATTACHMENT|GPUTextureUsage.TEXTURE_BINDING}),l=e.createView({baseMipLevel:0,mipLevelCount:1,dimension:Bw,baseArrayLayer:r}),d=u.createView({baseMipLevel:0,mipLevelCount:1,dimension:Bw,baseArrayLayer:0}),c=this.device.createCommandEncoder({}),h=(e,t,r)=>{const s=e.getBindGroupLayout(0),i=this.device.createBindGroup({layout:s,entries:[{binding:0,resource:this.flipYSampler},{binding:1,resource:t}]}),n=c.beginRenderPass({colorAttachments:[{view:r,loadOp:qN,storeOp:WN,clearValue:[0,0,0,0]}]});n.setPipeline(e),n.setBindGroup(0,i),n.draw(4,1,0,0),n.end()};h(a,l,d),h(o,d,l),this.device.queue.submit([c.finish()]),u.destroy()}generateMipmaps(e,t,r=0){const s=this.get(e);void 0===s.useCount&&(s.useCount=0,s.layers=[]);const i=s.layers[r]||this._mipmapCreateBundles(e,t,r),n=this.device.createCommandEncoder({});this._mipmapRunBundles(n,i),this.device.queue.submit([n.finish()]),0!==s.useCount&&(s.layers[r]=i),s.useCount++}_mipmapCreateBundles(e,t,r){const s=this.getTransferPipeline(t.format),i=s.getBindGroupLayout(0);let n=e.createView({baseMipLevel:0,mipLevelCount:1,dimension:Bw,baseArrayLayer:r});const a=[];for(let o=1;o<t.mipLevelCount;o++){const u=this.device.createBindGroup({layout:i,entries:[{binding:0,resource:this.mipmapSampler},{binding:1,resource:n}]}),l=e.createView({baseMipLevel:o,mipLevelCount:1,dimension:Bw,baseArrayLayer:r}),d={colorAttachments:[{view:l,loadOp:qN,storeOp:WN,clearValue:[0,0,0,0]}]},c=this.device.createRenderBundleEncoder({colorFormats:[t.format]});c.setPipeline(s),c.setBindGroup(0,u),c.draw(4,1,0,0),a.push({renderBundles:[c.finish()],passDescriptor:d}),n=l}return a}_mipmapRunBundles(e,t){const r=t.length;for(let s=0;s<r;s++){const r=t[s],i=e.beginRenderPass(r.passDescriptor);i.executeBundles(r.renderBundles),i.end()}}}const jw={[Pr]:"never",[Ie]:"less",[Rr]:"equal",[Cr]:"less-equal",[wr]:"greater",[Ar]:"greater-equal",[Mr]:"always",[Er]:"not-equal"},qw=[0,1,3,2,4,5];class Xw{constructor(e){this.backend=e,this._passUtils=null,this.defaultTexture={},this.defaultCubeTexture={},this.defaultVideoFrame=null,this.colorBuffer=null,this.depthTexture=new U,this.depthTexture.name="depthBuffer"}createSampler(e){const t=this.backend,r=t.device,s=t.get(e),i={addressModeU:this._convertAddressMode(e.wrapS),addressModeV:this._convertAddressMode(e.wrapT),addressModeW:this._convertAddressMode(e.wrapR),magFilter:this._convertFilterMode(e.magFilter),minFilter:this._convertFilterMode(e.minFilter),mipmapFilter:this._convertFilterMode(e.minFilter),maxAnisotropy:1};i.magFilter===zE&&i.minFilter===zE&&i.mipmapFilter===zE&&(i.maxAnisotropy=e.anisotropy),e.isDepthTexture&&null!==e.compareFunction&&(i.compare=jw[e.compareFunction]),s.sampler=r.createSampler(i)}createDefaultTexture(e){let t;const r=Kw(e);t=e.isCubeTexture?this._getDefaultCubeTextureGPU(r):this._getDefaultTextureGPU(r),this.backend.get(e).texture=t}createTexture(e,t={}){const r=this.backend,s=r.get(e);if(s.initialized)throw new Error("WebGPUTextureUtils: Texture already initialized.");void 0===t.needsMipmaps&&(t.needsMipmaps=!1),void 0===t.levels&&(t.levels=1),void 0===t.depth&&(t.depth=1);const{width:i,height:n,depth:a,levels:o}=t;e.isFramebufferTexture&&(t.renderTarget?t.format=this.backend.utils.getCurrentColorFormat(t.renderTarget):t.format=this.backend.utils.getPreferredCanvasFormat());const u=this._getDimension(e),l=e.internalFormat||t.format||Kw(e,r.device);s.format=l;const{samples:d,primarySamples:c,isMSAA:h}=r.utils.getTextureSampleData(e);let p=GPUTextureUsage.TEXTURE_BINDING|GPUTextureUsage.COPY_DST|GPUTextureUsage.COPY_SRC;!0===e.isStorageTexture&&(p|=GPUTextureUsage.STORAGE_BINDING),!0!==e.isCompressedTexture&&!0!==e.isCompressedArrayTexture&&(p|=GPUTextureUsage.RENDER_ATTACHMENT);const g={label:e.name,size:{width:i,height:n,depthOrArrayLayers:a},mipLevelCount:o,sampleCount:c,dimension:u,format:l,usage:p};if(void 0===l)return console.warn("WebGPURenderer: Texture format not supported."),void this.createDefaultTexture(e);if(e.isCubeTexture&&(g.textureBindingViewDimension=Fw),s.texture=r.device.createTexture(g),h){const e=Object.assign({},g);e.label=e.label+"-msaa",e.sampleCount=d,s.msaaTexture=r.device.createTexture(e)}s.initialized=!0,s.textureDescriptorGPU=g}destroyTexture(e){const t=this.backend,r=t.get(e);void 0!==r.texture&&r.texture.destroy(),void 0!==r.msaaTexture&&r.msaaTexture.destroy(),t.delete(e)}destroySampler(e){delete this.backend.get(e).sampler}generateMipmaps(e){const t=this.backend.get(e);if(e.isCubeTexture)for(let e=0;e<6;e++)this._generateMipmaps(t.texture,t.textureDescriptorGPU,e);else{const r=e.image.depth||1;for(let e=0;e<r;e++)this._generateMipmaps(t.texture,t.textureDescriptorGPU,e)}}getColorBuffer(){this.colorBuffer&&this.colorBuffer.destroy();const e=this.backend,{width:t,height:r}=e.getDrawingBufferSize();return this.colorBuffer=e.device.createTexture({label:"colorBuffer",size:{width:t,height:r,depthOrArrayLayers:1},sampleCount:e.utils.getSampleCount(e.renderer.samples),format:e.utils.getPreferredCanvasFormat(),usage:GPUTextureUsage.RENDER_ATTACHMENT|GPUTextureUsage.COPY_SRC}),this.colorBuffer}getDepthBuffer(e=!0,t=!1){const r=this.backend,{width:s,height:i}=r.getDrawingBufferSize(),n=this.depthTexture,a=r.get(n).texture;let o,u;if(t?(o=we,u=Re):e&&(o=Ae,u=T),void 0!==a){if(n.image.width===s&&n.image.height===i&&n.format===o&&n.type===u)return a;this.destroyTexture(n)}return n.name="depthBuffer",n.format=o,n.type=u,n.image.width=s,n.image.height=i,this.createTexture(n,{width:s,height:i}),r.get(n).texture}updateTexture(e,t){const r=this.backend.get(e),{textureDescriptorGPU:s}=r;if(!e.isRenderTargetTexture&&void 0!==s){if(e.isDataTexture)this._copyBufferToTexture(t.image,r.texture,s,0,e.flipY);else if(e.isArrayTexture||e.isDataArrayTexture||e.isData3DTexture)for(let i=0;i<t.image.depth;i++)this._copyBufferToTexture(t.image,r.texture,s,i,e.flipY,i);else e.isCompressedTexture||e.isCompressedArrayTexture?this._copyCompressedBufferToTexture(e.mipmaps,r.texture,s):e.isCubeTexture?this._copyCubeMapToTexture(t.images,r.texture,s,e.flipY,e.premultiplyAlpha):this._copyImageToTexture(t.image,r.texture,s,0,e.flipY,e.premultiplyAlpha);r.version=e.version,e.onUpdate&&e.onUpdate(e)}}async copyTextureToBuffer(e,t,r,s,i,n){const a=this.backend.device,o=this.backend.get(e),u=o.texture,l=o.textureDescriptorGPU.format,d=this._getBytesPerTexel(l);let c=s*d;c=256*Math.ceil(c/256);const h=a.createBuffer({size:s*i*d,usage:GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ}),p=a.createCommandEncoder();p.copyTextureToBuffer({texture:u,origin:{x:t,y:r,z:n}},{buffer:h,bytesPerRow:c},{width:s,height:i});const g=this._getTypedArrayType(l);a.queue.submit([p.finish()]),await h.mapAsync(GPUMapMode.READ);return new g(h.getMappedRange())}_getDefaultTextureGPU(e){let t=this.defaultTexture[e];if(void 0===t){const r=new x;r.minFilter=v,r.magFilter=v,this.createTexture(r,{width:1,height:1,format:e}),this.defaultTexture[e]=t=r}return this.backend.get(t).texture}_getDefaultCubeTextureGPU(e){let t=this.defaultTexture[e];if(void 0===t){const r=new A;r.minFilter=v,r.magFilter=v,this.createTexture(r,{width:1,height:1,depth:6}),this.defaultCubeTexture[e]=t=r}return this.backend.get(t).texture}_copyCubeMapToTexture(e,t,r,s,i){for(let n=0;n<6;n++){const a=e[n],o=!0===s?qw[n]:n;a.isDataTexture?this._copyBufferToTexture(a.image,t,r,o,s):this._copyImageToTexture(a,t,r,o,s,i)}}_copyImageToTexture(e,t,r,s,i,n){this.backend.device.queue.copyExternalImageToTexture({source:e,flipY:i},{texture:t,mipLevel:0,origin:{x:0,y:0,z:s},premultipliedAlpha:n},{width:r.size.width,height:r.size.height,depthOrArrayLayers:1})}_getPassUtils(){let e=this._passUtils;return null===e&&(this._passUtils=e=new Ww(this.backend.device)),e}_generateMipmaps(e,t,r=0){this._getPassUtils().generateMipmaps(e,t,r)}_flipY(e,t,r=0){this._getPassUtils().flipY(e,t,r)}_copyBufferToTexture(e,t,r,s,i,n=0){const a=this.backend.device,o=e.data,u=this._getBytesPerTexel(r.format),l=e.width*u;a.queue.writeTexture({texture:t,mipLevel:0,origin:{x:0,y:0,z:s}},o,{offset:e.width*e.height*u*n,bytesPerRow:l},{width:e.width,height:e.height,depthOrArrayLayers:1}),!0===i&&this._flipY(t,r,s)}_copyCompressedBufferToTexture(e,t,r){const s=this.backend.device,i=this._getBlockData(r.format),n=r.size.depthOrArrayLayers>1;for(let a=0;a<e.length;a++){const o=e[a],u=o.width,l=o.height,d=n?r.size.depthOrArrayLayers:1,c=Math.ceil(u/i.width)*i.byteLength,h=c*Math.ceil(l/i.height);for(let e=0;e<d;e++)s.queue.writeTexture({texture:t,mipLevel:a,origin:{x:0,y:0,z:e}},o.data,{offset:e*h,bytesPerRow:c,rowsPerImage:Math.ceil(l/i.height)},{width:Math.ceil(u/i.width)*i.width,height:Math.ceil(l/i.height)*i.height,depthOrArrayLayers:1})}}_getBlockData(e){return e===GS||e===zS?{byteLength:8,width:4,height:4}:e===HS||e===$S||e===WS||e===jS?{byteLength:16,width:4,height:4}:e===qS||e===XS?{byteLength:8,width:4,height:4}:e===KS||e===YS||e===QS||e===ZS||e===JS||e===eE?{byteLength:16,width:4,height:4}:e===tE||e===rE||e===sE||e===iE?{byteLength:8,width:4,height:4}:e===nE||e===aE?{byteLength:16,width:4,height:4}:e===oE||e===uE?{byteLength:8,width:4,height:4}:e===lE||e===dE||e===cE||e===hE?{byteLength:16,width:4,height:4}:e===pE||e===gE?{byteLength:16,width:5,height:4}:e===mE||e===fE?{byteLength:16,width:5,height:5}:e===yE||e===bE?{byteLength:16,width:6,height:5}:e===xE||e===TE?{byteLength:16,width:6,height:6}:e===_E||e===vE?{byteLength:16,width:8,height:5}:e===NE||e===SE?{byteLength:16,width:8,height:6}:e===EE||e===wE?{byteLength:16,width:8,height:8}:e===AE||e===RE?{byteLength:16,width:10,height:5}:e===CE||e===ME?{byteLength:16,width:10,height:6}:e===PE||e===BE?{byteLength:16,width:10,height:8}:e===LE||e===FE?{byteLength:16,width:10,height:10}:e===DE||e===IE?{byteLength:16,width:12,height:10}:e===VE||e===UE?{byteLength:16,width:12,height:12}:void 0}_convertAddressMode(e){let t=OE;return e===Nr?t=kE:e===_r&&(t=GE),t}_convertFilterMode(e){let t=zE;return e!==v&&e!==Sr&&e!==Ge||(t=HE),t}_getBytesPerTexel(e){return e===eS||e===tS||e===rS||e===sS?1:e===iS||e===nS||e===aS||e===oS||e===uS||e===lS||e===dS?2:e===cS||e===hS||e===pS||e===gS||e===mS||e===fS||e===yS||e===bS||e===xS||e===TS||e===_S||e===vS||e===NS||e===SS||e===ES||e===wS||e===OS||e===VS||e===US||e===kS?4:e===AS||e===RS||e===CS||e===MS||e===PS||e===BS?8:e===LS||e===FS||e===DS?16:void 0}_getTypedArrayType(e){return e===rS?Uint8Array:e===sS?Int8Array:e===eS?Uint8Array:e===tS?Int8Array:e===lS?Uint8Array:e===dS?Int8Array:e===oS?Uint8Array:e===uS?Int8Array:e===TS?Uint8Array:e===_S?Int8Array:e===yS?Uint8Array:e===xS?Int8Array:e===iS?Uint16Array:e===nS?Int16Array:e===gS?Uint16Array:e===mS?Int16Array:e===MS?Uint16Array:e===PS?Int16Array:e===aS||e===fS||e===BS?Uint16Array:e===cS?Uint32Array:e===hS?Int32Array:e===pS?Float32Array:e===AS?Uint32Array:e===RS?Int32Array:e===CS?Float32Array:e===LS?Uint32Array:e===FS?Int32Array:e===DS?Float32Array:e===vS||e===NS?Uint8Array:e===ES||e===SS||e===wS?Uint32Array:e===OS?Float32Array:e===VS||e===US?Uint32Array:e===kS?Float32Array:void 0}_getDimension(e){let t;return t=e.is3DTexture||e.isData3DTexture?Pw:Mw,t}}function Kw(e,t=null){const r=e.format,s=e.type,i=e.colorSpace,n=c.getTransfer(i);let a;if(!0===e.isCompressedTexture||!0===e.isCompressedArrayTexture)switch(r){case jt:a=n===h?zS:GS;break;case qt:a=n===h?$S:HS;break;case Xt:a=n===h?jS:WS;break;case er:a=n===h?rE:tE;break;case tr:a=n===h?aE:nE;break;case rr:a=n===h?hE:cE;break;case sr:a=n===h?gE:pE;break;case ir:a=n===h?fE:mE;break;case nr:a=n===h?bE:yE;break;case ar:a=n===h?TE:xE;break;case or:a=n===h?vE:_E;break;case ur:a=n===h?SE:NE;break;case lr:a=n===h?wE:EE;break;case dr:a=n===h?RE:AE;break;case cr:a=n===h?ME:CE;break;case hr:a=n===h?BE:PE;break;case pr:a=n===h?FE:LE;break;case gr:a=n===h?IE:DE;break;case mr:a=n===h?UE:VE;break;case de:a=n===h?bS:yS;break;default:console.error("WebGPURenderer: Unsupported texture format.",r)}else switch(r){case de:switch(s){case ot:a=xS;break;case at:a=PS;break;case ut:a=MS;break;case T:a=LS;break;case _:a=FS;break;case Ce:a=n===h?bS:yS;break;case ce:a=BS;break;case D:a=DS;break;default:console.error("WebGPURenderer: Unsupported texture type with RGBAFormat.",s)}break;case ct:if(s===Ht)a=SS;else console.error("WebGPURenderer: Unsupported texture type with RGBFormat.",s);break;case nt:switch(s){case ot:a=tS;break;case at:a=nS;break;case ut:a=iS;break;case T:a=cS;break;case _:a=hS;break;case Ce:a=eS;break;case ce:a=aS;break;case D:a=pS;break;default:console.error("WebGPURenderer: Unsupported texture type with RedFormat.",s)}break;case Ve:switch(s){case ot:a=uS;break;case at:a=mS;break;case ut:a=gS;break;case T:a=AS;break;case _:a=RS;break;case Ce:a=oS;break;case ce:a=fS;break;case D:a=CS;break;default:console.error("WebGPURenderer: Unsupported texture type with RGFormat.",s)}break;case Ae:switch(s){case ut:a=IS;break;case T:a=VS;break;case D:a=OS;break;default:console.error("WebGPURenderer: Unsupported texture type with DepthFormat.",s)}break;case we:switch(s){case Re:a=US;break;case D:t&&!1===t.features.has(Ow.Depth32FloatStencil8)&&console.error('WebGPURenderer: Depth textures with DepthStencilFormat + FloatType can only be used with the "depth32float-stencil8" GPU feature.'),a=kS;break;default:console.error("WebGPURenderer: Unsupported texture type with DepthStencilFormat.",s)}break;case it:switch(s){case _:a=hS;break;case T:a=cS;break;default:console.error("WebGPURenderer: Unsupported texture type with RedIntegerFormat.",s)}break;case lt:switch(s){case _:a=RS;break;case T:a=AS;break;default:console.error("WebGPURenderer: Unsupported texture type with RGIntegerFormat.",s)}break;case ht:switch(s){case _:a=FS;break;case T:a=LS;break;default:console.error("WebGPURenderer: Unsupported texture type with RGBAIntegerFormat.",s)}break;default:console.error("WebGPURenderer: Unsupported texture format.",r)}return a}const Yw=/^[fn]*\s*([a-z_0-9]+)?\s*\(([\s\S]*?)\)\s*[\-\>]*\s*([a-z_0-9]+(?:<[\s\S]+?>)?)/i,Qw=/([a-z_0-9]+)\s*:\s*([a-z_0-9]+(?:<[\s\S]+?>)?)/gi,Zw={f32:"float",i32:"int",u32:"uint",bool:"bool","vec2<f32>":"vec2","vec2<i32>":"ivec2","vec2<u32>":"uvec2","vec2<bool>":"bvec2",vec2f:"vec2",vec2i:"ivec2",vec2u:"uvec2",vec2b:"bvec2","vec3<f32>":"vec3","vec3<i32>":"ivec3","vec3<u32>":"uvec3","vec3<bool>":"bvec3",vec3f:"vec3",vec3i:"ivec3",vec3u:"uvec3",vec3b:"bvec3","vec4<f32>":"vec4","vec4<i32>":"ivec4","vec4<u32>":"uvec4","vec4<bool>":"bvec4",vec4f:"vec4",vec4i:"ivec4",vec4u:"uvec4",vec4b:"bvec4","mat2x2<f32>":"mat2",mat2x2f:"mat2","mat3x3<f32>":"mat3",mat3x3f:"mat3","mat4x4<f32>":"mat4",mat4x4f:"mat4",sampler:"sampler",texture_1d:"texture",texture_2d:"texture",texture_2d_array:"texture",texture_multisampled_2d:"cubeTexture",texture_depth_2d:"depthTexture",texture_depth_2d_array:"depthTexture",texture_depth_multisampled_2d:"depthTexture",texture_depth_cube:"depthTexture",texture_depth_cube_array:"depthTexture",texture_3d:"texture3D",texture_cube:"cubeTexture",texture_cube_array:"cubeTexture",texture_storage_1d:"storageTexture",texture_storage_2d:"storageTexture",texture_storage_2d_array:"storageTexture",texture_storage_3d:"storageTexture"};class Jw extends av{constructor(e){const{type:t,inputs:r,name:s,inputsCode:i,blockCode:n,outputType:a}=(e=>{const t=(e=e.trim()).match(Yw);if(null!==t&&4===t.length){const r=t[2],s=[];let i=null;for(;null!==(i=Qw.exec(r));)s.push({name:i[1],type:i[2]});const n=[];for(let e=0;e<s.length;e++){const{name:t,type:r}=s[e];let i=r;i.startsWith("ptr")?i="pointer":(i.startsWith("texture")&&(i=r.split("<")[0]),i=Zw[i]),n.push(new j_(i,t))}const a=e.substring(t[0].length),o=t[3]||"void",u=void 0!==t[1]?t[1]:"";return{type:Zw[o]||o,inputs:n,name:u,inputsCode:r,blockCode:a,outputType:o}}throw new Error("FunctionNode: Function is not a WGSL code.")})(e);super(t,r,s),this.inputsCode=i,this.blockCode=n,this.outputType=a}getCode(e=this.name){const t="void"!==this.outputType?"-> "+this.outputType:"";return`fn ${e} ( ${this.inputsCode.trim()} ) ${t}`+this.blockCode}}class eA extends nv{parseFunction(e){return new Jw(e)}}const tA="undefined"!=typeof self?self.GPUShaderStage:{VERTEX:1,FRAGMENT:2,COMPUTE:4},rA={[ks.READ_ONLY]:"read",[ks.WRITE_ONLY]:"write",[ks.READ_WRITE]:"read_write"},sA={[Nr]:"repeat",[vr]:"clamp",[_r]:"mirror"},iA={vertex:tA?tA.VERTEX:1,fragment:tA?tA.FRAGMENT:2,compute:tA?tA.COMPUTE:4},nA={instance:!0,swizzleAssign:!1,storageBuffer:!0},aA={"^^":"tsl_xor"},oA={float:"f32",int:"i32",uint:"u32",bool:"bool",color:"vec3<f32>",vec2:"vec2<f32>",ivec2:"vec2<i32>",uvec2:"vec2<u32>",bvec2:"vec2<bool>",vec3:"vec3<f32>",ivec3:"vec3<i32>",uvec3:"vec3<u32>",bvec3:"vec3<bool>",vec4:"vec4<f32>",ivec4:"vec4<i32>",uvec4:"vec4<u32>",bvec4:"vec4<bool>",mat2:"mat2x2<f32>",mat3:"mat3x3<f32>",mat4:"mat4x4<f32>"},uA={},lA={tsl_xor:new Ub("fn tsl_xor( a : bool, b : bool ) -> bool { return ( a || b ) && !( a && b ); }"),mod_float:new Ub("fn tsl_mod_float( x : f32, y : f32 ) -> f32 { return x - y * floor( x / y ); }"),mod_vec2:new Ub("fn tsl_mod_vec2( x : vec2f, y : vec2f ) -> vec2f { return x - y * floor( x / y ); }"),mod_vec3:new Ub("fn tsl_mod_vec3( x : vec3f, y : vec3f ) -> vec3f { return x - y * floor( x / y ); }"),mod_vec4:new Ub("fn tsl_mod_vec4( x : vec4f, y : vec4f ) -> vec4f { return x - y * floor( x / y ); }"),equals_bool:new Ub("fn tsl_equals_bool( a : bool, b : bool ) -> bool { return a == b; }"),equals_bvec2:new Ub("fn tsl_equals_bvec2( a : vec2f, b : vec2f ) -> vec2<bool> { return vec2<bool>( a.x == b.x, a.y == b.y ); }"),equals_bvec3:new Ub("fn tsl_equals_bvec3( a : vec3f, b : vec3f ) -> vec3<bool> { return vec3<bool>( a.x == b.x, a.y == b.y, a.z == b.z ); }"),equals_bvec4:new Ub("fn tsl_equals_bvec4( a : vec4f, b : vec4f ) -> vec4<bool> { return vec4<bool>( a.x == b.x, a.y == b.y, a.z == b.z, a.w == b.w ); }"),repeatWrapping_float:new Ub("fn tsl_repeatWrapping_float( coord: f32 ) -> f32 { return fract( coord ); }"),mirrorWrapping_float:new Ub("fn tsl_mirrorWrapping_float( coord: f32 ) -> f32 { let mirrored = fract( coord * 0.5 ) * 2.0; return 1.0 - abs( 1.0 - mirrored ); }"),clampWrapping_float:new Ub("fn tsl_clampWrapping_float( coord: f32 ) -> f32 { return clamp( coord, 0.0, 1.0 ); }"),biquadraticTexture:new Ub("\nfn tsl_biquadraticTexture( map : texture_2d<f32>, coord : vec2f, iRes : vec2u, level : u32 ) -> vec4f {\n\n\tlet res = vec2f( iRes );\n\n\tlet uvScaled = coord * res;\n\tlet uvWrapping = ( ( uvScaled % res ) + res ) % res;\n\n\t// https://www.shadertoy.com/view/WtyXRy\n\n\tlet uv = uvWrapping - 0.5;\n\tlet iuv = floor( uv );\n\tlet f = fract( uv );\n\n\tlet rg1 = textureLoad( map, vec2u( iuv + vec2( 0.5, 0.5 ) ) % iRes, level );\n\tlet rg2 = textureLoad( map, vec2u( iuv + vec2( 1.5, 0.5 ) ) % iRes, level );\n\tlet rg3 = textureLoad( map, vec2u( iuv + vec2( 0.5, 1.5 ) ) % iRes, level );\n\tlet rg4 = textureLoad( map, vec2u( iuv + vec2( 1.5, 1.5 ) ) % iRes, level );\n\n\treturn mix( mix( rg1, rg2, f.x ), mix( rg3, rg4, f.x ), f.y );\n\n}\n")},dA={dFdx:"dpdx",dFdy:"- dpdy",mod_float:"tsl_mod_float",mod_vec2:"tsl_mod_vec2",mod_vec3:"tsl_mod_vec3",mod_vec4:"tsl_mod_vec4",equals_bool:"tsl_equals_bool",equals_bvec2:"tsl_equals_bvec2",equals_bvec3:"tsl_equals_bvec3",equals_bvec4:"tsl_equals_bvec4",inversesqrt:"inverseSqrt",bitcast:"bitcast<f32>"};"undefined"!=typeof navigator&&/Windows/g.test(navigator.userAgent)&&(lA.pow_float=new Ub("fn tsl_pow_float( a : f32, b : f32 ) -> f32 { return select( -pow( -a, b ), pow( a, b ), a > 0.0 ); }"),lA.pow_vec2=new Ub("fn tsl_pow_vec2( a : vec2f, b : vec2f ) -> vec2f { return vec2f( tsl_pow_float( a.x, b.x ), tsl_pow_float( a.y, b.y ) ); }",[lA.pow_float]),lA.pow_vec3=new Ub("fn tsl_pow_vec3( a : vec3f, b : vec3f ) -> vec3f { return vec3f( tsl_pow_float( a.x, b.x ), tsl_pow_float( a.y, b.y ), tsl_pow_float( a.z, b.z ) ); }",[lA.pow_float]),lA.pow_vec4=new Ub("fn tsl_pow_vec4( a : vec4f, b : vec4f ) -> vec4f { return vec4f( tsl_pow_float( a.x, b.x ), tsl_pow_float( a.y, b.y ), tsl_pow_float( a.z, b.z ), tsl_pow_float( a.w, b.w ) ); }",[lA.pow_float]),dA.pow_float="tsl_pow_float",dA.pow_vec2="tsl_pow_vec2",dA.pow_vec3="tsl_pow_vec3",dA.pow_vec4="tsl_pow_vec4");let cA="";!0!==("undefined"!=typeof navigator&&/Firefox|Deno/g.test(navigator.userAgent))&&(cA+="diagnostic( off, derivative_uniformity );\n");class hA extends $_{constructor(e,t){super(e,t,new eA),this.uniformGroups={},this.builtins={},this.directives={},this.scopedArrays=new Map}_generateTextureSample(e,t,r,s,i=this.shaderStage){return"fragment"===i?s?`textureSample( ${t}, ${t}_sampler, ${r}, ${s} )`:`textureSample( ${t}, ${t}_sampler, ${r} )`:this.generateTextureSampleLevel(e,t,r,"0",s)}generateTextureSampleLevel(e,t,r,s,i){return!1===this.isUnfilterable(e)?`textureSampleLevel( ${t}, ${t}_sampler, ${r}, ${s} )`:this.isFilteredTexture(e)?this.generateFilteredTexture(e,t,r,s):this.generateTextureLod(e,t,r,i,s)}generateWrapFunction(e){const t=`tsl_coord_${sA[e.wrapS]}S_${sA[e.wrapT]}_${e.isData3DTexture?"3d":"2d"}T`;let r=uA[t];if(void 0===r){const s=[],i=e.isData3DTexture?"vec3f":"vec2f";let n=`fn ${t}( coord : ${i} ) -> ${i} {\n\n\treturn ${i}(\n`;const a=(e,t)=>{e===Nr?(s.push(lA.repeatWrapping_float),n+=`\t\ttsl_repeatWrapping_float( coord.${t} )`):e===vr?(s.push(lA.clampWrapping_float),n+=`\t\ttsl_clampWrapping_float( coord.${t} )`):e===_r?(s.push(lA.mirrorWrapping_float),n+=`\t\ttsl_mirrorWrapping_float( coord.${t} )`):(n+=`\t\tcoord.${t}`,console.warn(`WebGPURenderer: Unsupported texture wrap type "${e}" for vertex shader.`))};a(e.wrapS,"x"),n+=",\n",a(e.wrapT,"y"),e.isData3DTexture&&(n+=",\n",a(e.wrapR,"z")),n+="\n\t);\n\n}\n",uA[t]=r=new Ub(n,s)}return r.build(this),t}generateArrayDeclaration(e,t){return`array< ${this.getType(e)}, ${t} >`}generateTextureDimension(e,t,r){const s=this.getDataFromNode(e,this.shaderStage,this.globalCache);void 0===s.dimensionsSnippet&&(s.dimensionsSnippet={});let i=s.dimensionsSnippet[r];if(void 0===s.dimensionsSnippet[r]){let n,a;const{primarySamples:o}=this.renderer.backend.utils.getTextureSampleData(e),u=o>1;a=e.isData3DTexture?"vec3<u32>":"vec2<u32>",n=u||e.isStorageTexture?t:`${t}${r?`, u32( ${r} )`:""}`,i=new Jo(new Vu(`textureDimensions( ${n} )`,a)),s.dimensionsSnippet[r]=i,(e.isArrayTexture||e.isDataArrayTexture||e.isData3DTexture)&&(s.arrayLayerCount=new Jo(new Vu(`textureNumLayers(${t})`,"u32"))),e.isTextureCube&&(s.cubeFaceCount=new Jo(new Vu("6u","u32")))}return i.build(this)}generateFilteredTexture(e,t,r,s="0u"){this._include("biquadraticTexture");return`tsl_biquadraticTexture( ${t}, ${this.generateWrapFunction(e)}( ${r} ), ${this.generateTextureDimension(e,t,s)}, u32( ${s} ) )`}generateTextureLod(e,t,r,s,i="0u"){const n=this.generateWrapFunction(e),a=this.generateTextureDimension(e,t,i),o=e.isData3DTexture?"vec3":"vec2",u=`${o}<u32>( ${n}( ${r} ) * ${o}<f32>( ${a} ) )`;return this.generateTextureLoad(e,t,u,s,i)}generateTextureLoad(e,t,r,s,i="0u"){let n;return s?n=`textureLoad( ${t}, ${r}, ${s}, u32( ${i} ) )`:(n=`textureLoad( ${t}, ${r}, u32( ${i} ) )`,this.renderer.backend.compatibilityMode&&e.isDepthTexture&&(n+=".x")),n}generateTextureStore(e,t,r,s,i){let n;return n=s?`textureStore( ${t}, ${r}, ${s}, ${i} )`:`textureStore( ${t}, ${r}, ${i} )`,n}isSampleCompare(e){return!0===e.isDepthTexture&&null!==e.compareFunction}isUnfilterable(e){return"float"!==this.getComponentTypeFromTexture(e)||!this.isAvailable("float32Filterable")&&!0===e.isDataTexture&&e.type===D||!1===this.isSampleCompare(e)&&e.minFilter===v&&e.magFilter===v||this.renderer.backend.utils.getTextureSampleData(e).primarySamples>1}generateTexture(e,t,r,s,i=this.shaderStage){let n=null;return n=this.isUnfilterable(e)?this.generateTextureLod(e,t,r,s,"0",i):this._generateTextureSample(e,t,r,s,i),n}generateTextureGrad(e,t,r,s,i,n=this.shaderStage){if("fragment"===n)return`textureSampleGrad( ${t}, ${t}_sampler, ${r},  ${s[0]}, ${s[1]} )`;console.error(`WebGPURenderer: THREE.TextureNode.gradient() does not support ${n} shader.`)}generateTextureCompare(e,t,r,s,i,n=this.shaderStage){if("fragment"===n)return!0===e.isDepthTexture&&!0===e.isArrayTexture?`textureSampleCompare( ${t}, ${t}_sampler, ${r}, ${i}, ${s} )`:`textureSampleCompare( ${t}, ${t}_sampler, ${r}, ${s} )`;console.error(`WebGPURenderer: THREE.DepthTexture.compareFunction() does not support ${n} shader.`)}generateTextureLevel(e,t,r,s,i){return!1===this.isUnfilterable(e)?`textureSampleLevel( ${t}, ${t}_sampler, ${r}, ${s} )`:this.isFilteredTexture(e)?this.generateFilteredTexture(e,t,r,s):this.generateTextureLod(e,t,r,i,s)}generateTextureBias(e,t,r,s,i,n=this.shaderStage){if("fragment"===n)return`textureSampleBias( ${t}, ${t}_sampler, ${r}, ${s} )`;console.error(`WebGPURenderer: THREE.TextureNode.biasNode does not support ${n} shader.`)}getPropertyName(e,t=this.shaderStage){if(!0===e.isNodeVarying&&!0===e.needsInterpolation){if("vertex"===t)return`varyings.${e.name}`}else if(!0===e.isNodeUniform){const t=e.name,r=e.type;return"texture"===r||"cubeTexture"===r||"storageTexture"===r||"texture3D"===r?t:"buffer"===r||"storageBuffer"===r||"indirectStorageBuffer"===r?this.isCustomStruct(e)?t:t+".value":e.groupNode.name+"."+t}return super.getPropertyName(e)}getOutputStructName(){return"output"}getFunctionOperator(e){const t=aA[e];return void 0!==t?(this._include(t),t):null}getNodeAccess(e,t){return"compute"!==t?ks.READ_ONLY:e.access}getStorageAccess(e,t){return rA[this.getNodeAccess(e,t)]}getUniformFromNode(e,t,r,s=null){const i=super.getUniformFromNode(e,t,r,s),n=this.getDataFromNode(e,r,this.globalCache);if(void 0===n.uniformGPU){let a;const o=e.groupNode,u=o.name,l=this.getBindGroupArray(u,r);if("texture"===t||"cubeTexture"===t||"storageTexture"===t||"texture3D"===t){let s=null;const n=this.getNodeAccess(e,r);if("texture"===t||"storageTexture"===t?s=!0===e.value.is3DTexture?new tN(i.name,i.node,o,n):new Jv(i.name,i.node,o,n):"cubeTexture"===t?s=new eN(i.name,i.node,o,n):"texture3D"===t&&(s=new tN(i.name,i.node,o,n)),s.store=!0===e.isStorageTextureNode,s.setVisibility(iA[r]),!1===this.isUnfilterable(e.value)&&!1===s.store){const e=new Gw(`${i.name}_sampler`,i.node,o);e.setVisibility(iA[r]),l.push(e,s),a=[e,s]}else l.push(s),a=[s]}else if("buffer"===t||"storageBuffer"===t||"indirectStorageBuffer"===t){const n=new("buffer"===t?qv:$w)(e,o);n.setVisibility(iA[r]),l.push(n),a=n,i.name=s||"NodeBuffer_"+i.id}else{const e=this.uniformGroups[r]||(this.uniformGroups[r]={});let s=e[u];void 0===s&&(s=new Yv(u,o),s.setVisibility(iA[r]),e[u]=s,l.push(s)),a=this.getNodeUniform(i,t),s.addUniform(a)}n.uniformGPU=a}return i}getBuiltin(e,t,r,s=this.shaderStage){const i=this.builtins[s]||(this.builtins[s]=new Map);return!1===i.has(e)&&i.set(e,{name:e,property:t,type:r}),t}hasBuiltin(e,t=this.shaderStage){return void 0!==this.builtins[t]&&this.builtins[t].has(e)}getVertexIndex(){return"vertex"===this.shaderStage?this.getBuiltin("vertex_index","vertexIndex","u32","attribute"):"vertexIndex"}buildFunctionCode(e){const t=e.layout,r=this.flowShaderNode(e),s=[];for(const e of t.inputs)s.push(e.name+" : "+this.getType(e.type));let i=`fn ${t.name}( ${s.join(", ")} ) -> ${this.getType(t.type)} {\n${r.vars}\n${r.code}\n`;return r.result&&(i+=`\treturn ${r.result};\n`),i+="\n}\n",i}getInstanceIndex(){return"vertex"===this.shaderStage?this.getBuiltin("instance_index","instanceIndex","u32","attribute"):"instanceIndex"}getInvocationLocalIndex(){return this.getBuiltin("local_invocation_index","invocationLocalIndex","u32","attribute")}getSubgroupSize(){return this.enableSubGroups(),this.getBuiltin("subgroup_size","subgroupSize","u32","attribute")}getInvocationSubgroupIndex(){return this.enableSubGroups(),this.getBuiltin("subgroup_invocation_id","invocationSubgroupIndex","u32","attribute")}getSubgroupIndex(){return this.enableSubGroups(),this.getBuiltin("subgroup_id","subgroupIndex","u32","attribute")}getDrawIndex(){return null}getFrontFacing(){return this.getBuiltin("front_facing","isFront","bool")}getFragCoord(){return this.getBuiltin("position","fragCoord","vec4<f32>")+".xy"}getFragDepth(){return"output."+this.getBuiltin("frag_depth","depth","f32","output")}getClipDistance(){return"varyings.hw_clip_distances"}isFlipY(){return!1}enableDirective(e,t=this.shaderStage){(this.directives[t]||(this.directives[t]=new Set)).add(e)}getDirectives(e){const t=[],r=this.directives[e];if(void 0!==r)for(const e of r)t.push(`enable ${e};`);return t.join("\n")}enableSubGroups(){this.enableDirective("subgroups")}enableSubgroupsF16(){this.enableDirective("subgroups-f16")}enableClipDistances(){this.enableDirective("clip_distances")}enableShaderF16(){this.enableDirective("f16")}enableDualSourceBlending(){this.enableDirective("dual_source_blending")}enableHardwareClipping(e){this.enableClipDistances(),this.getBuiltin("clip_distances","hw_clip_distances",`array<f32, ${e} >`,"vertex")}getBuiltins(e){const t=[],r=this.builtins[e];if(void 0!==r)for(const{name:e,property:s,type:i}of r.values())t.push(`@builtin( ${e} ) ${s} : ${i}`);return t.join(",\n\t")}getScopedArray(e,t,r,s){return!1===this.scopedArrays.has(e)&&this.scopedArrays.set(e,{name:e,scope:t,bufferType:r,bufferCount:s}),e}getScopedArrays(e){if("compute"!==e)return;const t=[];for(const{name:e,scope:r,bufferType:s,bufferCount:i}of this.scopedArrays.values()){const n=this.getType(s);t.push(`var<${r}> ${e}: array< ${n}, ${i} >;`)}return t.join("\n")}getAttributes(e){const t=[];if("compute"===e&&(this.getBuiltin("global_invocation_id","globalId","vec3<u32>","attribute"),this.getBuiltin("workgroup_id","workgroupId","vec3<u32>","attribute"),this.getBuiltin("local_invocation_id","localId","vec3<u32>","attribute"),this.getBuiltin("num_workgroups","numWorkgroups","vec3<u32>","attribute"),this.renderer.hasFeature("subgroups")&&(this.enableDirective("subgroups",e),this.getBuiltin("subgroup_size","subgroupSize","u32","attribute"))),"vertex"===e||"compute"===e){const e=this.getBuiltins("attribute");e&&t.push(e);const r=this.getAttributesArray();for(let e=0,s=r.length;e<s;e++){const s=r[e],i=s.name,n=this.getType(s.type);t.push(`@location( ${e} ) ${i} : ${n}`)}}return t.join(",\n\t")}getStructMembers(e){const t=[];for(const r of e.members){const s=e.output?"@location( "+r.index+" ) ":"";let i=this.getType(r.type);r.atomic&&(i="atomic< "+i+" >"),t.push(`\t${s+r.name} : ${i}`)}return e.output&&t.push(`\t${this.getBuiltins("output")}`),t.join(",\n")}getStructs(e){let t="";const r=this.structs[e];if(r.length>0){const e=[];for(const t of r){let r=`struct ${t.name} {\n`;r+=this.getStructMembers(t),r+="\n};",e.push(r)}t="\n"+e.join("\n\n")+"\n"}return t}getVar(e,t,r=null){let s=`var ${t} : `;return s+=null!==r?this.generateArrayDeclaration(e,r):this.getType(e),s}getVars(e){const t=[],r=this.vars[e];if(void 0!==r)for(const e of r)t.push(`\t${this.getVar(e.type,e.name,e.count)};`);return`\n${t.join("\n")}\n`}getVaryings(e){const t=[];if("vertex"===e&&this.getBuiltin("position","Vertex","vec4<f32>","vertex"),"vertex"===e||"fragment"===e){const r=this.varyings,s=this.vars[e];for(let i=0;i<r.length;i++){const n=r[i];if(n.needsInterpolation){let e=`@location( ${i} )`;if(n.interpolationType){const t=null!==n.interpolationSampling?`, ${n.interpolationSampling} )`:" )";e+=` @interpolate( ${n.interpolationType}${t}`}else/^(int|uint|ivec|uvec)/.test(n.type)&&(e+=` @interpolate( ${this.renderer.backend.compatibilityMode?"flat, either":"flat"} )`);t.push(`${e} ${n.name} : ${this.getType(n.type)}`)}else"vertex"===e&&!1===s.includes(n)&&s.push(n)}}const r=this.getBuiltins(e);r&&t.push(r);const s=t.join(",\n\t");return"vertex"===e?this._getWGSLStruct("VaryingsStruct","\t"+s):s}isCustomStruct(e){const t=e.value,r=e.node,s=(t.isBufferAttribute||t.isInstancedBufferAttribute)&&null!==r.structTypeNode,i=r.value&&r.value.array&&"number"==typeof r.value.itemSize&&r.value.array.length>r.value.itemSize;return s&&!i}getUniforms(e){const t=this.uniforms[e],r=[],s=[],i=[],n={};for(const i of t){const t=i.groupNode.name,a=this.bindingsIndexes[t];if("texture"===i.type||"cubeTexture"===i.type||"storageTexture"===i.type||"texture3D"===i.type){const t=i.node.value;let s;!1===this.isUnfilterable(t)&&!0!==i.node.isStorageTextureNode&&(this.isSampleCompare(t)?r.push(`@binding( ${a.binding++} ) @group( ${a.group} ) var ${i.name}_sampler : sampler_comparison;`):r.push(`@binding( ${a.binding++} ) @group( ${a.group} ) var ${i.name}_sampler : sampler;`));let n="";const{primarySamples:o}=this.renderer.backend.utils.getTextureSampleData(t);if(o>1&&(n="_multisampled"),!0===t.isCubeTexture)s="texture_cube<f32>";else if(!0===t.isDepthTexture)s=this.renderer.backend.compatibilityMode&&null===t.compareFunction?`texture${n}_2d<f32>`:`texture_depth${n}_2d${!0===t.isArrayTexture?"_array":""}`;else if(!0===i.node.isStorageTextureNode){const r=Kw(t),n=this.getStorageAccess(i.node,e),a=i.node.value.is3DTexture,o=i.node.value.isArrayTexture;s=`texture_storage_${a?"3d":"2d"+(o?"_array":"")}<${r}, ${n}>`}else if(!0===t.isArrayTexture||!0===t.isDataArrayTexture||!0===t.isCompressedArrayTexture)s="texture_2d_array<f32>";else if(!0===t.is3DTexture||!0===t.isData3DTexture)s="texture_3d<f32>";else{s=`texture${n}_2d<${this.getComponentTypeFromTexture(t).charAt(0)}32>`}r.push(`@binding( ${a.binding++} ) @group( ${a.group} ) var ${i.name} : ${s};`)}else if("buffer"===i.type||"storageBuffer"===i.type||"indirectStorageBuffer"===i.type){const t=i.node,r=this.getType(t.getNodeType(this)),n=t.bufferCount,o=n>0&&"buffer"===i.type?", "+n:"",u=t.isStorageBufferNode?`storage, ${this.getStorageAccess(t,e)}`:"uniform";if(this.isCustomStruct(i))s.push(`@binding( ${a.binding++} ) @group( ${a.group} ) var<${u}> ${i.name} : ${r};`);else{const e=`\tvalue : array< ${t.isAtomic?`atomic<${r}>`:`${r}`}${o} >`;s.push(this._getWGSLStructBinding(i.name,e,u,a.binding++,a.group))}}else{const e=this.getType(this.getVectorType(i.type)),t=i.groupNode.name;(n[t]||(n[t]={index:a.binding++,id:a.group,snippets:[]})).snippets.push(`\t${i.name} : ${e}`)}}for(const e in n){const t=n[e];i.push(this._getWGSLStructBinding(e,t.snippets.join(",\n"),"uniform",t.index,t.id))}let a=r.join("\n");return a+=s.join("\n"),a+=i.join("\n"),a}buildCode(){const e=null!==this.material?{fragment:{},vertex:{}}:{compute:{}};this.sortBindingGroups();for(const t in e){this.shaderStage=t;const r=e[t];r.uniforms=this.getUniforms(t),r.attributes=this.getAttributes(t),r.varyings=this.getVaryings(t),r.structs=this.getStructs(t),r.vars=this.getVars(t),r.codes=this.getCodes(t),r.directives=this.getDirectives(t),r.scopedArrays=this.getScopedArrays(t);let s="// code\n\n";s+=this.flowCode[t];const i=this.flowNodes[t],n=i[i.length-1],a=n.outputNode,o=void 0!==a&&!0===a.isOutputStructNode;for(const e of i){const i=this.getFlowData(e),u=e.name;if(u&&(s.length>0&&(s+="\n"),s+=`\t// flow -> ${u}\n`),s+=`${i.code}\n\t`,e===n&&"compute"!==t)if(s+="// result\n\n\t","vertex"===t)s+=`varyings.Vertex = ${i.result};`;else if("fragment"===t)if(o)r.returnType=a.getNodeType(this),r.structs+="var<private> output : "+r.returnType+";",s+=`return ${i.result};`;else{let e="\t@location(0) color: vec4<f32>";const t=this.getBuiltins("output");t&&(e+=",\n\t"+t),r.returnType="OutputStruct",r.structs+=this._getWGSLStruct("OutputStruct",e),r.structs+="\nvar<private> output : OutputStruct;",s+=`output.color = ${i.result};\n\n\treturn output;`}}r.flow=s}if(this.shaderStage=null,null!==this.material)this.vertexShader=this._getWGSLVertexCode(e.vertex),this.fragmentShader=this._getWGSLFragmentCode(e.fragment);else{const t=this.object.workgroupSize;this.computeShader=this._getWGSLComputeCode(e.compute,t)}}getMethod(e,t=null){let r;return null!==t&&(r=this._getWGSLMethod(e+"_"+t)),void 0===r&&(r=this._getWGSLMethod(e)),r||e}getType(e){return oA[e]||e}isAvailable(e){let t=nA[e];return void 0===t&&("float32Filterable"===e?t=this.renderer.hasFeature("float32-filterable"):"clipDistance"===e&&(t=this.renderer.hasFeature("clip-distances")),nA[e]=t),t}_getWGSLMethod(e){return void 0!==lA[e]&&this._include(e),dA[e]}_include(e){const t=lA[e];return t.build(this),null!==this.currentFunctionNode&&this.currentFunctionNode.includes.push(t),t}_getWGSLVertexCode(e){return`${this.getSignature()}\n// directives\n${e.directives}\n\n// structs\n${e.structs}\n\n// uniforms\n${e.uniforms}\n\n// varyings\n${e.varyings}\nvar<private> varyings : VaryingsStruct;\n\n// codes\n${e.codes}\n\n@vertex\nfn main( ${e.attributes} ) -> VaryingsStruct {\n\n\t// vars\n\t${e.vars}\n\n\t// flow\n\t${e.flow}\n\n\treturn varyings;\n\n}\n`}_getWGSLFragmentCode(e){return`${this.getSignature()}\n// global\n${cA}\n\n// structs\n${e.structs}\n\n// uniforms\n${e.uniforms}\n\n// codes\n${e.codes}\n\n@fragment\nfn main( ${e.varyings} ) -> ${e.returnType} {\n\n\t// vars\n\t${e.vars}\n\n\t// flow\n\t${e.flow}\n\n}\n`}_getWGSLComputeCode(e,t){const[r,s,i]=t;return`${this.getSignature()}\n// directives\n${e.directives}\n\n// system\nvar<private> instanceIndex : u32;\n\n// locals\n${e.scopedArrays}\n\n// structs\n${e.structs}\n\n// uniforms\n${e.uniforms}\n\n// codes\n${e.codes}\n\n@compute @workgroup_size( ${r}, ${s}, ${i} )\nfn main( ${e.attributes} ) {\n\n\t// system\n\tinstanceIndex = globalId.x\n\t\t+ globalId.y * ( ${r} * numWorkgroups.x )\n\t\t+ globalId.z * ( ${r} * numWorkgroups.x ) * ( ${s} * numWorkgroups.y );\n\n\t// vars\n\t${e.vars}\n\n\t// flow\n\t${e.flow}\n\n}\n`}_getWGSLStruct(e,t){return`\nstruct ${e} {\n${t}\n};`}_getWGSLStructBinding(e,t,r,s=0,i=0){const n=e+"Struct";return`${this._getWGSLStruct(n,t)}\n@binding( ${s} ) @group( ${i} )\nvar<${r}> ${e} : ${n};`}}class pA{constructor(e){this.backend=e}getCurrentDepthStencilFormat(e){let t;return null!==e.depthTexture?t=this.getTextureFormatGPU(e.depthTexture):e.depth&&e.stencil?t=US:e.depth&&(t=VS),t}getTextureFormatGPU(e){return this.backend.get(e).format}getTextureSampleData(e){let t;if(e.isFramebufferTexture)t=1;else if(e.isDepthTexture&&!e.renderTarget){const e=this.backend.renderer,r=e.getRenderTarget();t=r?r.samples:e.samples}else e.renderTarget&&(t=e.renderTarget.samples);t=t||1;const r=t>1&&null!==e.renderTarget&&!0!==e.isDepthTexture&&!0!==e.isFramebufferTexture;return{samples:t,primarySamples:r?1:t,isMSAA:r}}getCurrentColorFormat(e){let t;return t=null!==e.textures?this.getTextureFormatGPU(e.textures[0]):this.getPreferredCanvasFormat(),t}getCurrentColorSpace(e){return null!==e.textures?e.textures[0].colorSpace:this.backend.renderer.outputColorSpace}getPrimitiveTopology(e,t){return e.isPoints?BN:e.isLineSegments||e.isMesh&&!0===t.wireframe?LN:e.isLine?FN:e.isMesh?DN:void 0}getSampleCount(e){return e>=4?4:1}getSampleCountRenderContext(e){return null!==e.textures?this.getSampleCount(e.sampleCount):this.getSampleCount(this.backend.renderer.samples)}getPreferredCanvasFormat(){const e=this.backend.parameters.outputType;if(void 0===e)return navigator.gpu.getPreferredCanvasFormat();if(e===Ce)return vS;if(e===ce)return BS;throw new Error("Unsupported outputType")}}const gA=new Map([[Int8Array,["sint8","snorm8"]],[Uint8Array,["uint8","unorm8"]],[Int16Array,["sint16","snorm16"]],[Uint16Array,["uint16","unorm16"]],[Int32Array,["sint32","snorm32"]],[Uint32Array,["uint32","unorm32"]],[Float32Array,["float32"]]]);"undefined"!=typeof Float16Array&&gA.set(Float16Array,["float16"]);const mA=new Map([[ze,["float16"]]]),fA=new Map([[Int32Array,"sint32"],[Int16Array,"sint32"],[Uint32Array,"uint32"],[Uint16Array,"uint32"],[Float32Array,"float32"]]);class yA{constructor(e){this.backend=e}createAttribute(e,t){const r=this._getBufferAttribute(e),s=this.backend,i=s.get(r);let n=i.buffer;if(void 0===n){const a=s.device;let o=r.array;if(!1===e.normalized)if(o.constructor===Int16Array||o.constructor===Int8Array)o=new Int32Array(o);else if((o.constructor===Uint16Array||o.constructor===Uint8Array)&&(o=new Uint32Array(o),t&GPUBufferUsage.INDEX))for(let e=0;e<o.length;e++)65535===o[e]&&(o[e]=4294967295);if(r.array=o,(r.isStorageBufferAttribute||r.isStorageInstancedBufferAttribute)&&3===r.itemSize){o=new o.constructor(4*r.count);for(let e=0;e<r.count;e++)o.set(r.array.subarray(3*e,3*e+3),4*e);r.itemSize=4,r.array=o,i._force3to4BytesAlignment=!0}const u=o.byteLength,l=u+(4-u%4)%4;n=a.createBuffer({label:r.name,size:l,usage:t,mappedAtCreation:!0}),new o.constructor(n.getMappedRange()).set(o),n.unmap(),i.buffer=n}}updateAttribute(e){const t=this._getBufferAttribute(e),r=this.backend,s=r.device,i=r.get(t),n=r.get(t).buffer;let a=t.array;if(!0===i._force3to4BytesAlignment){a=new a.constructor(4*t.count);for(let e=0;e<t.count;e++)a.set(t.array.subarray(3*e,3*e+3),4*e);t.array=a}const o=this._isTypedArray(a),u=t.updateRanges;if(0===u.length)s.queue.writeBuffer(n,0,a,0);else{const e=o?1:a.BYTES_PER_ELEMENT;for(let t=0,r=u.length;t<r;t++){const r=u[t];let l,d;if(!0===i._force3to4BytesAlignment){l=4*Math.floor(r.start/3)*e,d=4*Math.ceil(r.count/3)*e}else l=r.start*e,d=r.count*e;const c=l*(o?a.BYTES_PER_ELEMENT:1);s.queue.writeBuffer(n,c,a,l,d)}t.clearUpdateRanges()}}createShaderVertexBuffers(e){const t=e.getAttributes(),r=new Map;for(let e=0;e<t.length;e++){const s=t[e],i=s.array.BYTES_PER_ELEMENT,n=this._getBufferAttribute(s);let a=r.get(n);if(void 0===a){let e,t;!0===s.isInterleavedBufferAttribute?(e=s.data.stride*i,t=s.data.isInstancedInterleavedBuffer?Uw:Vw):(e=s.itemSize*i,t=s.isInstancedBufferAttribute?Uw:Vw),!1!==s.normalized||s.array.constructor!==Int16Array&&s.array.constructor!==Uint16Array||(e=4),a={arrayStride:e,attributes:[],stepMode:t},r.set(n,a)}const o=this._getVertexFormat(s),u=!0===s.isInterleavedBufferAttribute?s.offset*i:0;a.attributes.push({shaderLocation:e,offset:u,format:o})}return Array.from(r.values())}destroyAttribute(e){const t=this.backend;t.get(this._getBufferAttribute(e)).buffer.destroy(),t.delete(e)}async getArrayBufferAsync(e){const t=this.backend,r=t.device,s=t.get(this._getBufferAttribute(e)).buffer,i=s.size,n=r.createBuffer({label:`${e.name}_readback`,size:i,usage:GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ}),a=r.createCommandEncoder({label:`readback_encoder_${e.name}`});a.copyBufferToBuffer(s,0,n,0,i);const o=a.finish();r.queue.submit([o]),await n.mapAsync(GPUMapMode.READ);const u=n.getMappedRange(),l=new e.array.constructor(u.slice(0));return n.unmap(),l.buffer}_getVertexFormat(e){const{itemSize:t,normalized:r}=e,s=e.array.constructor,i=e.constructor;let n;if(1===t)n=fA.get(s);else{const e=(mA.get(i)||gA.get(s))[r?1:0];if(e){const r=s.BYTES_PER_ELEMENT*t,i=4*Math.floor((r+3)/4)/s.BYTES_PER_ELEMENT;if(i%1)throw new Error("THREE.WebGPUAttributeUtils: Bad vertex format item size.");n=`${e}x${i}`}}return n||console.error("THREE.WebGPUAttributeUtils: Vertex format not supported yet."),n}_isTypedArray(e){return ArrayBuffer.isView(e)&&!(e instanceof DataView)}_getBufferAttribute(e){return e.isInterleavedBufferAttribute&&(e=e.data),e}}class bA{constructor(e){this.backend=e,this.bindGroupLayoutCache=new WeakMap}createBindingsLayout(e){const t=this.backend,r=t.device,s=[];let i=0;for(const r of e.bindings){const e={binding:i++,visibility:r.visibility};if(r.isUniformBuffer||r.isStorageBuffer){const t={};r.isStorageBuffer&&(4&r.visibility&&(r.access===ks.READ_WRITE||r.access===ks.WRITE_ONLY)?t.type=bw:t.type=xw),e.buffer=t}else if(r.isSampler){const s={};r.texture.isDepthTexture&&(null!==r.texture.compareFunction?s.type=Sw:t.compatibilityMode&&(s.type=Nw)),e.sampler=s}else if(r.isSampledTexture&&r.store){const t={};t.format=this.backend.get(r.texture).texture.format;const s=r.access;t.access=s===ks.READ_WRITE?vw:s===ks.WRITE_ONLY?Tw:_w,r.texture.isArrayTexture?t.viewDimension=Lw:r.texture.is3DTexture&&(t.viewDimension=Dw),e.storageTexture=t}else if(r.isSampledTexture){const s={},{primarySamples:i}=t.utils.getTextureSampleData(r.texture);if(i>1&&(s.multisampled=!0,r.texture.isDepthTexture||(s.sampleType=ww)),r.texture.isDepthTexture)t.compatibilityMode&&null===r.texture.compareFunction?s.sampleType=ww:s.sampleType=Aw;else if(r.texture.isDataTexture||r.texture.isDataArrayTexture||r.texture.isData3DTexture){const e=r.texture.type;e===_?s.sampleType=Rw:e===T?s.sampleType=Cw:e===D&&(this.backend.hasFeature("float32-filterable")?s.sampleType=Ew:s.sampleType=ww)}r.isSampledCubeTexture?s.viewDimension=Fw:r.texture.isArrayTexture||r.texture.isDataArrayTexture||r.texture.isCompressedArrayTexture?s.viewDimension=Lw:r.isSampledTexture3D&&(s.viewDimension=Dw),e.texture=s}else console.error(`WebGPUBindingUtils: Unsupported binding "${r}".`);s.push(e)}return r.createBindGroupLayout({entries:s})}createBindings(e,t,r,s=0){const{backend:i,bindGroupLayoutCache:n}=this,a=i.get(e);let o,u=n.get(e.bindingsReference);void 0===u&&(u=this.createBindingsLayout(e),n.set(e.bindingsReference,u)),r>0&&(void 0===a.groups&&(a.groups=[],a.versions=[]),a.versions[r]===s&&(o=a.groups[r])),void 0===o&&(o=this.createBindGroup(e,u),r>0&&(a.groups[r]=o,a.versions[r]=s)),a.group=o,a.layout=u}updateBinding(e){const t=this.backend,r=t.device,s=e.buffer,i=t.get(e).buffer;r.queue.writeBuffer(i,0,s,0)}createBindGroupIndex(e,t){const r=this.backend.device,s=GPUBufferUsage.UNIFORM|GPUBufferUsage.COPY_DST,i=e[0],n=r.createBuffer({label:"bindingCameraIndex_"+i,size:16,usage:s});r.queue.writeBuffer(n,0,e,0);const a=[{binding:0,resource:{buffer:n}}];return r.createBindGroup({label:"bindGroupCameraIndex_"+i,layout:t,entries:a})}createBindGroup(e,t){const r=this.backend,s=r.device;let i=0;const n=[];for(const t of e.bindings){if(t.isUniformBuffer){const e=r.get(t);if(void 0===e.buffer){const r=t.byteLength,i=GPUBufferUsage.UNIFORM|GPUBufferUsage.COPY_DST,n=s.createBuffer({label:"bindingBuffer_"+t.name,size:r,usage:i});e.buffer=n}n.push({binding:i,resource:{buffer:e.buffer}})}else if(t.isStorageBuffer){const e=r.get(t);if(void 0===e.buffer){const s=t.attribute;e.buffer=r.get(s).buffer}n.push({binding:i,resource:{buffer:e.buffer}})}else if(t.isSampler){const e=r.get(t.texture);n.push({binding:i,resource:e.sampler})}else if(t.isSampledTexture){const e=r.get(t.texture);let a;if(void 0!==e.externalTexture)a=s.importExternalTexture({source:e.externalTexture});else{const r=t.store?1:e.texture.mipLevelCount;let s=`view-${e.texture.width}-${e.texture.height}`;if(e.texture.depthOrArrayLayers>1&&(s+=`-${e.texture.depthOrArrayLayers}`),s+=`-${r}`,a=e[s],void 0===a){const i=Iw;let n;n=t.isSampledCubeTexture?Fw:t.isSampledTexture3D?Dw:t.texture.isArrayTexture||t.texture.isDataArrayTexture||t.texture.isCompressedArrayTexture?Lw:Bw,a=e[s]=e.texture.createView({aspect:i,dimension:n,mipLevelCount:r})}}n.push({binding:i,resource:a})}i++}return s.createBindGroup({label:"bindGroup_"+e.name,layout:t,entries:n})}}class xA{constructor(e){this.backend=e,this._activePipelines=new WeakMap}setPipeline(e,t){this._activePipelines.get(e)!==t&&(e.setPipeline(t),this._activePipelines.set(e,t))}_getSampleCount(e){return this.backend.utils.getSampleCountRenderContext(e)}createRenderPipeline(e,t){const{object:r,material:s,geometry:i,pipeline:n}=e,{vertexProgram:a,fragmentProgram:o}=n,u=this.backend,l=u.device,d=u.utils,c=u.get(n),h=[];for(const t of e.getBindings()){const e=u.get(t);h.push(e.layout)}const p=u.attributeUtils.createShaderVertexBuffers(e);let g;s.blending===H||s.blending===k&&!1===s.transparent||(g=this._getBlending(s));let m={};!0===s.stencilWrite&&(m={compare:this._getStencilCompare(s),failOp:this._getStencilOperation(s.stencilFail),depthFailOp:this._getStencilOperation(s.stencilZFail),passOp:this._getStencilOperation(s.stencilZPass)});const f=this._getColorWriteMask(s),y=[];if(null!==e.context.textures){const t=e.context.textures;for(let e=0;e<t.length;e++){const r=d.getTextureFormatGPU(t[e]);y.push({format:r,blend:g,writeMask:f})}}else{const t=d.getCurrentColorFormat(e.context);y.push({format:t,blend:g,writeMask:f})}const b=u.get(a).module,x=u.get(o).module,T=this._getPrimitiveState(r,i,s),_=this._getDepthCompare(s),v=d.getCurrentDepthStencilFormat(e.context),N=this._getSampleCount(e.context),S={label:`renderPipeline_${s.name||s.type}_${s.id}`,vertex:Object.assign({},b,{buffers:p}),fragment:Object.assign({},x,{targets:y}),primitive:T,multisample:{count:N,alphaToCoverageEnabled:s.alphaToCoverage&&N>1},layout:l.createPipelineLayout({bindGroupLayouts:h})},E={},w=e.context.depth,A=e.context.stencil;if(!0!==w&&!0!==A||(!0===w&&(E.format=v,E.depthWriteEnabled=s.depthWrite,E.depthCompare=_),!0===A&&(E.stencilFront=m,E.stencilBack={},E.stencilReadMask=s.stencilFuncMask,E.stencilWriteMask=s.stencilWriteMask),!0===s.polygonOffset&&(E.depthBias=s.polygonOffsetUnits,E.depthBiasSlopeScale=s.polygonOffsetFactor,E.depthBiasClamp=0),S.depthStencil=E),null===t)c.pipeline=l.createRenderPipeline(S);else{const e=new Promise(e=>{l.createRenderPipelineAsync(S).then(t=>{c.pipeline=t,e()})});t.push(e)}}createBundleEncoder(e,t="renderBundleEncoder"){const r=this.backend,{utils:s,device:i}=r,n=s.getCurrentDepthStencilFormat(e),a={label:t,colorFormats:[s.getCurrentColorFormat(e)],depthStencilFormat:n,sampleCount:this._getSampleCount(e)};return i.createRenderBundleEncoder(a)}createComputePipeline(e,t){const r=this.backend,s=r.device,i=r.get(e.computeProgram).module,n=r.get(e),a=[];for(const e of t){const t=r.get(e);a.push(t.layout)}n.pipeline=s.createComputePipeline({compute:i,layout:s.createPipelineLayout({bindGroupLayouts:a})})}_getBlending(e){let t,r;const s=e.blending,i=e.blendSrc,n=e.blendDst,a=e.blendEquation;if(s===qe){const s=null!==e.blendSrcAlpha?e.blendSrcAlpha:i,o=null!==e.blendDstAlpha?e.blendDstAlpha:n,u=null!==e.blendEquationAlpha?e.blendEquationAlpha:a;t={srcFactor:this._getBlendFactor(i),dstFactor:this._getBlendFactor(n),operation:this._getBlendOperation(a)},r={srcFactor:this._getBlendFactor(s),dstFactor:this._getBlendFactor(o),operation:this._getBlendOperation(u)}}else{const i=(e,s,i,n)=>{t={srcFactor:e,dstFactor:s,operation:sw},r={srcFactor:i,dstFactor:n,operation:sw}};if(e.premultipliedAlpha)switch(s){case k:i(WE,KE,WE,KE);break;case Bt:i(WE,WE,WE,WE);break;case Pt:i($E,qE,$E,WE);break;case Mt:i(YE,KE,$E,WE)}else switch(s){case k:i(XE,KE,WE,KE);break;case Bt:i(XE,WE,WE,WE);break;case Pt:console.error("THREE.WebGPURenderer: SubtractiveBlending requires material.premultipliedAlpha = true");break;case Mt:console.error("THREE.WebGPURenderer: MultiplyBlending requires material.premultipliedAlpha = true")}}if(void 0!==t&&void 0!==r)return{color:t,alpha:r};console.error("THREE.WebGPURenderer: Invalid blending: ",s)}_getBlendFactor(e){let t;switch(e){case Ke:t=$E;break;case wt:t=WE;break;case Et:t=jE;break;case Tt:t=qE;break;case St:t=XE;break;case xt:t=KE;break;case vt:t=YE;break;case bt:t=QE;break;case _t:t=ZE;break;case yt:t=JE;break;case Nt:t=ew;break;case 211:t=tw;break;case 212:t=rw;break;default:console.error("THREE.WebGPURenderer: Blend factor not supported.",e)}return t}_getStencilCompare(e){let t;const r=e.stencilFunc;switch(r){case kr:t=VN;break;case Or:t=$N;break;case Ur:t=UN;break;case Vr:t=kN;break;case Ir:t=ON;break;case Dr:t=HN;break;case Fr:t=GN;break;case Lr:t=zN;break;default:console.error("THREE.WebGPURenderer: Invalid stencil function.",r)}return t}_getStencilOperation(e){let t;switch(e){case Xr:t=dw;break;case qr:t=cw;break;case jr:t=hw;break;case Wr:t=pw;break;case $r:t=gw;break;case Hr:t=mw;break;case zr:t=fw;break;case Gr:t=yw;break;default:console.error("THREE.WebGPURenderer: Invalid stencil operation.",t)}return t}_getBlendOperation(e){let t;switch(e){case Xe:t=sw;break;case ft:t=iw;break;case mt:t=nw;break;case Yr:t=aw;break;case Kr:t=ow;break;default:console.error("THREE.WebGPUPipelineUtils: Blend equation not supported.",e)}return t}_getPrimitiveState(e,t,r){const s={},i=this.backend.utils;switch(s.topology=i.getPrimitiveTopology(e,r),null!==t.index&&!0===e.isLine&&!0!==e.isLineSegments&&(s.stripIndexFormat=t.index.array instanceof Uint16Array?ZN:JN),r.side){case je:s.frontFace=XN,s.cullMode=QN;break;case S:s.frontFace=XN,s.cullMode=YN;break;case E:s.frontFace=XN,s.cullMode=KN;break;default:console.error("THREE.WebGPUPipelineUtils: Unknown material.side value.",r.side)}return s}_getColorWriteMask(e){return!0===e.colorWrite?lw:uw}_getDepthCompare(e){let t;if(!1===e.depthTest)t=$N;else{const r=e.depthFunc;switch(r){case kt:t=VN;break;case Ot:t=$N;break;case Ut:t=UN;break;case Vt:t=kN;break;case It:t=ON;break;case Dt:t=HN;break;case Ft:t=GN;break;case Lt:t=zN;break;default:console.error("THREE.WebGPUPipelineUtils: Invalid depth function.",r)}}return t}}class TA extends CN{constructor(e,t,r=2048){super(r),this.device=e,this.type=t,this.querySet=this.device.createQuerySet({type:"timestamp",count:this.maxQueries,label:`queryset_global_timestamp_${t}`});const s=8*this.maxQueries;this.resolveBuffer=this.device.createBuffer({label:`buffer_timestamp_resolve_${t}`,size:s,usage:GPUBufferUsage.QUERY_RESOLVE|GPUBufferUsage.COPY_SRC}),this.resultBuffer=this.device.createBuffer({label:`buffer_timestamp_result_${t}`,size:s,usage:GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ})}allocateQueriesForContext(e){if(!this.trackTimestamp||this.isDisposed)return null;if(this.currentQueryIndex+2>this.maxQueries)return pt(`WebGPUTimestampQueryPool [${this.type}]: Maximum number of queries exceeded, when using trackTimestamp it is necessary to resolves the queries via renderer.resolveTimestampsAsync( THREE.TimestampQuery.${this.type.toUpperCase()} ).`),null;const t=this.currentQueryIndex;return this.currentQueryIndex+=2,this.queryOffsets.set(e.id,t),t}async resolveQueriesAsync(){if(!this.trackTimestamp||0===this.currentQueryIndex||this.isDisposed)return this.lastValue;if(this.pendingResolve)return this.pendingResolve;this.pendingResolve=this._resolveQueries();try{return await this.pendingResolve}finally{this.pendingResolve=null}}async _resolveQueries(){if(this.isDisposed)return this.lastValue;try{if("unmapped"!==this.resultBuffer.mapState)return this.lastValue;const e=new Map(this.queryOffsets),t=this.currentQueryIndex,r=8*t;this.currentQueryIndex=0,this.queryOffsets.clear();const s=this.device.createCommandEncoder();s.resolveQuerySet(this.querySet,0,t,this.resolveBuffer,0),s.copyBufferToBuffer(this.resolveBuffer,0,this.resultBuffer,0,r);const i=s.finish();if(this.device.queue.submit([i]),"unmapped"!==this.resultBuffer.mapState)return this.lastValue;if(await this.resultBuffer.mapAsync(GPUMapMode.READ,0,r),this.isDisposed)return"mapped"===this.resultBuffer.mapState&&this.resultBuffer.unmap(),this.lastValue;const n=new BigUint64Array(this.resultBuffer.getMappedRange(0,r));let a=0;for(const[,t]of e){const e=n[t],r=n[t+1];a+=Number(r-e)/1e6}return this.resultBuffer.unmap(),this.lastValue=a,a}catch(e){return console.error("Error resolving queries:",e),"mapped"===this.resultBuffer.mapState&&this.resultBuffer.unmap(),this.lastValue}}async dispose(){if(!this.isDisposed){if(this.isDisposed=!0,this.pendingResolve)try{await this.pendingResolve}catch(e){console.error("Error waiting for pending resolve:",e)}if(this.resultBuffer&&"mapped"===this.resultBuffer.mapState)try{this.resultBuffer.unmap()}catch(e){console.error("Error unmapping buffer:",e)}this.querySet&&(this.querySet.destroy(),this.querySet=null),this.resolveBuffer&&(this.resolveBuffer.destroy(),this.resolveBuffer=null),this.resultBuffer&&(this.resultBuffer.destroy(),this.resultBuffer=null),this.queryOffsets.clear(),this.pendingResolve=null}}}class _A extends cN{constructor(e={}){super(e),this.isWebGPUBackend=!0,this.parameters.alpha=void 0===e.alpha||e.alpha,this.parameters.compatibilityMode=void 0!==e.compatibilityMode&&e.compatibilityMode,this.parameters.requiredLimits=void 0===e.requiredLimits?{}:e.requiredLimits,this.compatibilityMode=this.parameters.compatibilityMode,this.device=null,this.context=null,this.colorBuffer=null,this.defaultRenderPassdescriptor=null,this.utils=new pA(this),this.attributeUtils=new yA(this),this.bindingUtils=new bA(this),this.pipelineUtils=new xA(this),this.textureUtils=new Xw(this),this.occludedResolveCache=new Map}async init(e){await super.init(e);const t=this.parameters;let r;if(void 0===t.device){const e={powerPreference:t.powerPreference,featureLevel:t.compatibilityMode?"compatibility":void 0},s="undefined"!=typeof navigator?await navigator.gpu.requestAdapter(e):null;if(null===s)throw new Error("WebGPUBackend: Unable to create WebGPU adapter.");const i=Object.values(Ow),n=[];for(const e of i)s.features.has(e)&&n.push(e);const a={requiredFeatures:n,requiredLimits:t.requiredLimits};r=await s.requestDevice(a)}else r=t.device;r.lost.then(t=>{const r={api:"WebGPU",message:t.message||"Unknown reason",reason:t.reason||null,originalEvent:t};e.onDeviceLost(r)});const s=void 0!==t.context?t.context:e.domElement.getContext("webgpu");this.device=r,this.context=s;const i=t.alpha?"premultiplied":"opaque";this.trackTimestamp=this.trackTimestamp&&this.hasFeature(Ow.TimestampQuery),this.context.configure({device:this.device,format:this.utils.getPreferredCanvasFormat(),usage:GPUTextureUsage.RENDER_ATTACHMENT|GPUTextureUsage.COPY_SRC,alphaMode:i}),this.updateSize()}get coordinateSystem(){return d}async getArrayBufferAsync(e){return await this.attributeUtils.getArrayBufferAsync(e)}getContext(){return this.context}_getDefaultRenderPassDescriptor(){let e=this.defaultRenderPassdescriptor;if(null===e){const t=this.renderer;e={colorAttachments:[{view:null}]},!0!==this.renderer.depth&&!0!==this.renderer.stencil||(e.depthStencilAttachment={view:this.textureUtils.getDepthBuffer(t.depth,t.stencil).createView()});const r=e.colorAttachments[0];this.renderer.samples>0?r.view=this.colorBuffer.createView():r.resolveTarget=void 0,this.defaultRenderPassdescriptor=e}const t=e.colorAttachments[0];return this.renderer.samples>0?t.resolveTarget=this.context.getCurrentTexture().createView():t.view=this.context.getCurrentTexture().createView(),e}_isRenderCameraDepthArray(e){return e.depthTexture&&e.depthTexture.image.depth>1&&e.camera.isArrayCamera}_getRenderPassDescriptor(e,t={}){const r=e.renderTarget,s=this.get(r);let i=s.descriptors;if(void 0===i||s.width!==r.width||s.height!==r.height||s.dimensions!==r.dimensions||s.activeMipmapLevel!==e.activeMipmapLevel||s.activeCubeFace!==e.activeCubeFace||s.samples!==r.samples){i={},s.descriptors=i;const e=()=>{r.removeEventListener("dispose",e),this.delete(r)};!1===r.hasEventListener("dispose",e)&&r.addEventListener("dispose",e)}const n=e.getCacheKey();let a=i[n];if(void 0===a){const t=e.textures,o=[];let u;const l=this._isRenderCameraDepthArray(e);for(let s=0;s<t.length;s++){const i=this.get(t[s]),n={label:`colorAttachment_${s}`,baseMipLevel:e.activeMipmapLevel,mipLevelCount:1,baseArrayLayer:e.activeCubeFace,arrayLayerCount:1,dimension:Bw};if(r.isRenderTarget3D)u=e.activeCubeFace,n.baseArrayLayer=0,n.dimension=Dw,n.depthOrArrayLayers=t[s].image.depth;else if(r.isRenderTarget&&t[s].image.depth>1)if(!0===l){const t=e.camera.cameras;for(let e=0;e<t.length;e++){const t={...n,baseArrayLayer:e,arrayLayerCount:1,dimension:Bw},r=i.texture.createView(t);o.push({view:r,resolveTarget:void 0,depthSlice:void 0})}}else n.dimension=Lw,n.depthOrArrayLayers=t[s].image.depth;if(!0!==l){const e=i.texture.createView(n);let t,r;void 0!==i.msaaTexture?(t=i.msaaTexture.createView(),r=e):(t=e,r=void 0),o.push({view:t,resolveTarget:r,depthSlice:u})}}if(a={textureViews:o},e.depth){const t=this.get(e.depthTexture),r={};e.depthTexture.isArrayTexture&&(r.dimension=Bw,r.arrayLayerCount=1,r.baseArrayLayer=e.activeCubeFace),a.depthStencilView=t.texture.createView(r)}i[n]=a,s.width=r.width,s.height=r.height,s.samples=r.samples,s.activeMipmapLevel=e.activeMipmapLevel,s.activeCubeFace=e.activeCubeFace,s.dimensions=r.dimensions}const o={colorAttachments:[]};for(let e=0;e<a.textureViews.length;e++){const r=a.textureViews[e];let s={r:0,g:0,b:0,a:1};0===e&&t.clearValue&&(s=t.clearValue),o.colorAttachments.push({view:r.view,depthSlice:r.depthSlice,resolveTarget:r.resolveTarget,loadOp:t.loadOp||jN,storeOp:t.storeOp||WN,clearValue:s})}return a.depthStencilView&&(o.depthStencilAttachment={view:a.depthStencilView}),o}beginRender(e){const t=this.get(e),r=this.device,s=e.occlusionQueryCount;let i,n;s>0&&(t.currentOcclusionQuerySet&&t.currentOcclusionQuerySet.destroy(),t.currentOcclusionQueryBuffer&&t.currentOcclusionQueryBuffer.destroy(),t.currentOcclusionQuerySet=t.occlusionQuerySet,t.currentOcclusionQueryBuffer=t.occlusionQueryBuffer,t.currentOcclusionQueryObjects=t.occlusionQueryObjects,i=r.createQuerySet({type:"occlusion",count:s,label:`occlusionQuerySet_${e.id}`}),t.occlusionQuerySet=i,t.occlusionQueryIndex=0,t.occlusionQueryObjects=new Array(s),t.lastOcclusionObject=null),n=null===e.textures?this._getDefaultRenderPassDescriptor():this._getRenderPassDescriptor(e,{loadOp:jN}),this.initTimestampQuery(e,n),n.occlusionQuerySet=i;const a=n.depthStencilAttachment;if(null!==e.textures){const t=n.colorAttachments;for(let r=0;r<t.length;r++){const s=t[r];e.clearColor?(s.clearValue=0===r?e.clearColorValue:{r:0,g:0,b:0,a:1},s.loadOp=qN):s.loadOp=jN,s.storeOp=WN}}else{const t=n.colorAttachments[0];e.clearColor?(t.clearValue=e.clearColorValue,t.loadOp=qN):t.loadOp=jN,t.storeOp=WN}e.depth&&(e.clearDepth?(a.depthClearValue=e.clearDepthValue,a.depthLoadOp=qN):a.depthLoadOp=jN,a.depthStoreOp=WN),e.stencil&&(e.clearStencil?(a.stencilClearValue=e.clearStencilValue,a.stencilLoadOp=qN):a.stencilLoadOp=jN,a.stencilStoreOp=WN);const o=r.createCommandEncoder({label:"renderContext_"+e.id});if(!0===this._isRenderCameraDepthArray(e)){const r=e.camera.cameras;t.layerDescriptors&&t.layerDescriptors.length===r.length?this._updateDepthLayerDescriptors(e,t,r):this._createDepthLayerDescriptors(e,t,n,r),t.bundleEncoders=[],t.bundleSets=[];for(let s=0;s<r.length;s++){const r=this.pipelineUtils.createBundleEncoder(e,"renderBundleArrayCamera_"+s),i={attributes:{},bindingGroups:[],pipeline:null,index:null};t.bundleEncoders.push(r),t.bundleSets.push(i)}t.currentPass=null}else{const r=o.beginRenderPass(n);if(t.currentPass=r,e.viewport&&this.updateViewport(e),e.scissor){const{x:t,y:s,width:i,height:n}=e.scissorValue;r.setScissorRect(t,s,i,n)}}t.descriptor=n,t.encoder=o,t.currentSets={attributes:{},bindingGroups:[],pipeline:null,index:null},t.renderBundles=[]}_createDepthLayerDescriptors(e,t,r,s){const i=r.depthStencilAttachment;t.layerDescriptors=[];const n=this.get(e.depthTexture);n.viewCache||(n.viewCache=[]);for(let a=0;a<s.length;a++){const s={...r,colorAttachments:[{...r.colorAttachments[0],view:r.colorAttachments[a].view}]};if(r.depthStencilAttachment){const t=a;n.viewCache[t]||(n.viewCache[t]=n.texture.createView({dimension:Bw,baseArrayLayer:a,arrayLayerCount:1})),s.depthStencilAttachment={view:n.viewCache[t],depthLoadOp:i.depthLoadOp||qN,depthStoreOp:i.depthStoreOp||WN,depthClearValue:i.depthClearValue||1},e.stencil&&(s.depthStencilAttachment.stencilLoadOp=i.stencilLoadOp,s.depthStencilAttachment.stencilStoreOp=i.stencilStoreOp,s.depthStencilAttachment.stencilClearValue=i.stencilClearValue)}else s.depthStencilAttachment={...i};t.layerDescriptors.push(s)}}_updateDepthLayerDescriptors(e,t,r){for(let s=0;s<r.length;s++){const r=t.layerDescriptors[s];if(r.depthStencilAttachment){const t=r.depthStencilAttachment;e.depth&&(e.clearDepth?(t.depthClearValue=e.clearDepthValue,t.depthLoadOp=qN):t.depthLoadOp=jN),e.stencil&&(e.clearStencil?(t.stencilClearValue=e.clearStencilValue,t.stencilLoadOp=qN):t.stencilLoadOp=jN)}}}finishRender(e){const t=this.get(e),r=e.occlusionQueryCount;t.renderBundles.length>0&&t.currentPass.executeBundles(t.renderBundles),r>t.occlusionQueryIndex&&t.currentPass.endOcclusionQuery();const s=t.encoder;if(!0===this._isRenderCameraDepthArray(e)){const r=[];for(let e=0;e<t.bundleEncoders.length;e++){const s=t.bundleEncoders[e];r.push(s.finish())}for(let i=0;i<t.layerDescriptors.length;i++)if(i<r.length){const n=t.layerDescriptors[i],a=s.beginRenderPass(n);if(e.viewport){const{x:t,y:r,width:s,height:i,minDepth:n,maxDepth:o}=e.viewportValue;a.setViewport(t,r,s,i,n,o)}if(e.scissor){const{x:t,y:r,width:s,height:i}=e.scissorValue;a.setScissorRect(t,r,s,i)}a.executeBundles([r[i]]),a.end()}}else t.currentPass&&t.currentPass.end();if(r>0){const s=8*r;let i=this.occludedResolveCache.get(s);void 0===i&&(i=this.device.createBuffer({size:s,usage:GPUBufferUsage.QUERY_RESOLVE|GPUBufferUsage.COPY_SRC}),this.occludedResolveCache.set(s,i));const n=this.device.createBuffer({size:s,usage:GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ});t.encoder.resolveQuerySet(t.occlusionQuerySet,0,r,i,0),t.encoder.copyBufferToBuffer(i,0,n,0,s),t.occlusionQueryBuffer=n,this.resolveOccludedAsync(e)}if(this.device.queue.submit([t.encoder.finish()]),null!==e.textures){const t=e.textures;for(let e=0;e<t.length;e++){const r=t[e];!0===r.generateMipmaps&&this.textureUtils.generateMipmaps(r)}}}isOccluded(e,t){const r=this.get(e);return r.occluded&&r.occluded.has(t)}async resolveOccludedAsync(e){const t=this.get(e),{currentOcclusionQueryBuffer:r,currentOcclusionQueryObjects:s}=t;if(r&&s){const e=new WeakSet;t.currentOcclusionQueryObjects=null,t.currentOcclusionQueryBuffer=null,await r.mapAsync(GPUMapMode.READ);const i=r.getMappedRange(),n=new BigUint64Array(i);for(let t=0;t<s.length;t++)n[t]===BigInt(0)&&e.add(s[t]);r.destroy(),t.occluded=e}}updateViewport(e){const{currentPass:t}=this.get(e),{x:r,y:s,width:i,height:n,minDepth:a,maxDepth:o}=e.viewportValue;t.setViewport(r,s,i,n,a,o)}getClearColor(){const e=super.getClearColor();return!0===this.renderer.alpha&&(e.r*=e.a,e.g*=e.a,e.b*=e.a),e}clear(e,t,r,s=null){const i=this.device,n=this.renderer;let a,o,u,l,d=[];if(e){const e=this.getClearColor();o={r:e.r,g:e.g,b:e.b,a:e.a}}if(null===s){u=n.depth,l=n.stencil;const t=this._getDefaultRenderPassDescriptor();if(e){d=t.colorAttachments;const e=d[0];e.clearValue=o,e.loadOp=qN,e.storeOp=WN}(u||l)&&(a=t.depthStencilAttachment)}else{u=s.depth,l=s.stencil;const i={loadOp:e?qN:jN,clearValue:e?o:void 0};u&&(i.depthLoadOp=t?qN:jN,i.depthClearValue=t?n.getClearDepth():void 0,i.depthStoreOp=WN),l&&(i.stencilLoadOp=r?qN:jN,i.stencilClearValue=r?n.getClearStencil():void 0,i.stencilStoreOp=WN);const c=this._getRenderPassDescriptor(s,i);d=c.colorAttachments,a=c.depthStencilAttachment}u&&a&&(t?(a.depthLoadOp=qN,a.depthClearValue=n.getClearDepth(),a.depthStoreOp=WN):(a.depthLoadOp=jN,a.depthStoreOp=WN)),l&&a&&(r?(a.stencilLoadOp=qN,a.stencilClearValue=n.getClearStencil(),a.stencilStoreOp=WN):(a.stencilLoadOp=jN,a.stencilStoreOp=WN));const c=i.createCommandEncoder({label:"clear"});c.beginRenderPass({colorAttachments:d,depthStencilAttachment:a}).end(),i.queue.submit([c.finish()])}beginCompute(e){const t=this.get(e),r={label:"computeGroup_"+e.id};this.initTimestampQuery(e,r),t.cmdEncoderGPU=this.device.createCommandEncoder({label:"computeGroup_"+e.id}),t.passEncoderGPU=t.cmdEncoderGPU.beginComputePass(r)}compute(e,t,r,s,i=null){const n=this.get(t),{passEncoderGPU:a}=this.get(e),o=this.get(s).pipeline;this.pipelineUtils.setPipeline(a,o);for(let e=0,t=r.length;e<t;e++){const t=r[e],s=this.get(t);a.setBindGroup(e,s.group)}let u;if(null===i&&(i=t.count),"number"==typeof i){const e=i;if(void 0===n.dispatchSize||n.count!==e){n.dispatchSize=[0,1,1],n.count=e;const r=t.workgroupSize;let s=r[0];for(let e=1;e<r.length;e++)s*=r[e];const i=Math.ceil(e/s),a=this.device.limits.maxComputeWorkgroupsPerDimension;u=[i,1,1],i>a&&(u[0]=Math.min(i,a),u[1]=Math.ceil(i/a)),n.dispatchSize=u}u=n.dispatchSize}else u=i;a.dispatchWorkgroups(u[0],u[1]||1,u[2]||1)}finishCompute(e){const t=this.get(e);t.passEncoderGPU.end(),this.device.queue.submit([t.cmdEncoderGPU.finish()])}async waitForGPU(){await this.device.queue.onSubmittedWorkDone()}draw(e,t){const{object:r,material:s,context:i,pipeline:n}=e,a=e.getBindings(),o=this.get(i),u=this.get(n).pipeline,l=e.getIndex(),d=null!==l,c=e.getDrawParameters();if(null===c)return;const h=(t,r)=>{this.pipelineUtils.setPipeline(t,u),r.pipeline=u;const n=r.bindingGroups;for(let e=0,r=a.length;e<r;e++){const r=a[e],s=this.get(r);n[r.index]!==r.id&&(t.setBindGroup(r.index,s.group),n[r.index]=r.id)}if(!0===d&&r.index!==l){const e=this.get(l).buffer,s=l.array instanceof Uint16Array?ZN:JN;t.setIndexBuffer(e,s),r.index=l}const c=e.getVertexBuffers();for(let e=0,s=c.length;e<s;e++){const s=c[e];if(r.attributes[e]!==s){const i=this.get(s).buffer;t.setVertexBuffer(e,i),r.attributes[e]=s}}!0===i.stencil&&!0===s.stencilWrite&&o.currentStencilRef!==s.stencilRef&&(t.setStencilReference(s.stencilRef),o.currentStencilRef=s.stencilRef)},p=(s,i)=>{if(h(s,i),!0===r.isBatchedMesh){const e=r._multiDrawStarts,i=r._multiDrawCounts,n=r._multiDrawCount,a=r._multiDrawInstances;null!==a&&pt("THREE.WebGPUBackend: renderMultiDrawInstances has been deprecated and will be removed in r184. Append to renderMultiDraw arguments and use indirection.");for(let o=0;o<n;o++){const n=a?a[o]:1,u=n>1?0:o;!0===d?s.drawIndexed(i[o],n,e[o]/l.array.BYTES_PER_ELEMENT,0,u):s.draw(i[o],n,e[o],u),t.update(r,i[o],n)}}else if(!0===d){const{vertexCount:i,instanceCount:n,firstVertex:a}=c,o=e.getIndirect();if(null!==o){const e=this.get(o).buffer;s.drawIndexedIndirect(e,0)}else s.drawIndexed(i,n,a,0,0);t.update(r,i,n)}else{const{vertexCount:i,instanceCount:n,firstVertex:a}=c,o=e.getIndirect();if(null!==o){const e=this.get(o).buffer;s.drawIndirect(e,0)}else s.draw(i,n,a,0);t.update(r,i,n)}};if(e.camera.isArrayCamera&&e.camera.cameras.length>0){const t=this.get(e.camera),s=e.camera.cameras,n=e.getBindingGroup("cameraIndex");if(void 0===t.indexesGPU||t.indexesGPU.length!==s.length){const e=this.get(n),r=[],i=new Uint32Array([0,0,0,0]);for(let t=0,n=s.length;t<n;t++){i[0]=t;const s=this.bindingUtils.createBindGroupIndex(i,e.layout);r.push(s)}t.indexesGPU=r}const a=this.renderer.getPixelRatio();for(let e=0,u=s.length;e<u;e++){const u=s[e];if(r.layers.test(u.layers)){const r=u.viewport;let s=o.currentPass,l=o.currentSets;if(o.bundleEncoders){s=o.bundleEncoders[e],l=o.bundleSets[e]}r&&s.setViewport(Math.floor(r.x*a),Math.floor(r.y*a),Math.floor(r.width*a),Math.floor(r.height*a),i.viewportValue.minDepth,i.viewportValue.maxDepth),n&&t.indexesGPU&&(s.setBindGroup(n.index,t.indexesGPU[e]),l.bindingGroups[n.index]=n.id),p(s,l)}}}else if(o.currentPass){if(void 0!==o.occlusionQuerySet){const e=o.lastOcclusionObject;e!==r&&(null!==e&&!0===e.occlusionTest&&(o.currentPass.endOcclusionQuery(),o.occlusionQueryIndex++),!0===r.occlusionTest&&(o.currentPass.beginOcclusionQuery(o.occlusionQueryIndex),o.occlusionQueryObjects[o.occlusionQueryIndex]=r),o.lastOcclusionObject=r)}p(o.currentPass,o.currentSets)}}needsRenderUpdate(e){const t=this.get(e),{object:r,material:s}=e,i=this.utils,n=i.getSampleCountRenderContext(e.context),a=i.getCurrentColorSpace(e.context),o=i.getCurrentColorFormat(e.context),u=i.getCurrentDepthStencilFormat(e.context),l=i.getPrimitiveTopology(r,s);let d=!1;return t.material===s&&t.materialVersion===s.version&&t.transparent===s.transparent&&t.blending===s.blending&&t.premultipliedAlpha===s.premultipliedAlpha&&t.blendSrc===s.blendSrc&&t.blendDst===s.blendDst&&t.blendEquation===s.blendEquation&&t.blendSrcAlpha===s.blendSrcAlpha&&t.blendDstAlpha===s.blendDstAlpha&&t.blendEquationAlpha===s.blendEquationAlpha&&t.colorWrite===s.colorWrite&&t.depthWrite===s.depthWrite&&t.depthTest===s.depthTest&&t.depthFunc===s.depthFunc&&t.stencilWrite===s.stencilWrite&&t.stencilFunc===s.stencilFunc&&t.stencilFail===s.stencilFail&&t.stencilZFail===s.stencilZFail&&t.stencilZPass===s.stencilZPass&&t.stencilFuncMask===s.stencilFuncMask&&t.stencilWriteMask===s.stencilWriteMask&&t.side===s.side&&t.alphaToCoverage===s.alphaToCoverage&&t.sampleCount===n&&t.colorSpace===a&&t.colorFormat===o&&t.depthStencilFormat===u&&t.primitiveTopology===l&&t.clippingContextCacheKey===e.clippingContextCacheKey||(t.material=s,t.materialVersion=s.version,t.transparent=s.transparent,t.blending=s.blending,t.premultipliedAlpha=s.premultipliedAlpha,t.blendSrc=s.blendSrc,t.blendDst=s.blendDst,t.blendEquation=s.blendEquation,t.blendSrcAlpha=s.blendSrcAlpha,t.blendDstAlpha=s.blendDstAlpha,t.blendEquationAlpha=s.blendEquationAlpha,t.colorWrite=s.colorWrite,t.depthWrite=s.depthWrite,t.depthTest=s.depthTest,t.depthFunc=s.depthFunc,t.stencilWrite=s.stencilWrite,t.stencilFunc=s.stencilFunc,t.stencilFail=s.stencilFail,t.stencilZFail=s.stencilZFail,t.stencilZPass=s.stencilZPass,t.stencilFuncMask=s.stencilFuncMask,t.stencilWriteMask=s.stencilWriteMask,t.side=s.side,t.alphaToCoverage=s.alphaToCoverage,t.sampleCount=n,t.colorSpace=a,t.colorFormat=o,t.depthStencilFormat=u,t.primitiveTopology=l,t.clippingContextCacheKey=e.clippingContextCacheKey,d=!0),d}getRenderCacheKey(e){const{object:t,material:r}=e,s=this.utils,i=e.context;return[r.transparent,r.blending,r.premultipliedAlpha,r.blendSrc,r.blendDst,r.blendEquation,r.blendSrcAlpha,r.blendDstAlpha,r.blendEquationAlpha,r.colorWrite,r.depthWrite,r.depthTest,r.depthFunc,r.stencilWrite,r.stencilFunc,r.stencilFail,r.stencilZFail,r.stencilZPass,r.stencilFuncMask,r.stencilWriteMask,r.side,s.getSampleCountRenderContext(i),s.getCurrentColorSpace(i),s.getCurrentColorFormat(i),s.getCurrentDepthStencilFormat(i),s.getPrimitiveTopology(t,r),e.getGeometryCacheKey(),e.clippingContextCacheKey].join()}createSampler(e){this.textureUtils.createSampler(e)}destroySampler(e){this.textureUtils.destroySampler(e)}createDefaultTexture(e){this.textureUtils.createDefaultTexture(e)}createTexture(e,t){this.textureUtils.createTexture(e,t)}updateTexture(e,t){this.textureUtils.updateTexture(e,t)}generateMipmaps(e){this.textureUtils.generateMipmaps(e)}destroyTexture(e){this.textureUtils.destroyTexture(e)}async copyTextureToBuffer(e,t,r,s,i,n){return this.textureUtils.copyTextureToBuffer(e,t,r,s,i,n)}initTimestampQuery(e,t){if(!this.trackTimestamp)return;const r=e.isComputeNode?"compute":"render";this.timestampQueryPool[r]||(this.timestampQueryPool[r]=new TA(this.device,r,2048));const s=this.timestampQueryPool[r],i=s.allocateQueriesForContext(e);t.timestampWrites={querySet:s.querySet,beginningOfPassWriteIndex:i,endOfPassWriteIndex:i+1}}createNodeBuilder(e,t){return new hA(e,t)}createProgram(e){this.get(e).module={module:this.device.createShaderModule({code:e.code,label:e.stage+(""!==e.name?`_${e.name}`:"")}),entryPoint:"main"}}destroyProgram(e){this.delete(e)}createRenderPipeline(e,t){this.pipelineUtils.createRenderPipeline(e,t)}createComputePipeline(e,t){this.pipelineUtils.createComputePipeline(e,t)}beginBundle(e){const t=this.get(e);t._currentPass=t.currentPass,t._currentSets=t.currentSets,t.currentSets={attributes:{},bindingGroups:[],pipeline:null,index:null},t.currentPass=this.pipelineUtils.createBundleEncoder(e)}finishBundle(e,t){const r=this.get(e),s=r.currentPass.finish();this.get(t).bundleGPU=s,r.currentSets=r._currentSets,r.currentPass=r._currentPass}addBundle(e,t){this.get(e).renderBundles.push(this.get(t).bundleGPU)}createBindings(e,t,r,s){this.bindingUtils.createBindings(e,t,r,s)}updateBindings(e,t,r,s){this.bindingUtils.createBindings(e,t,r,s)}updateBinding(e){this.bindingUtils.updateBinding(e)}createIndexAttribute(e){let t=GPUBufferUsage.INDEX|GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST;(e.isStorageBufferAttribute||e.isStorageInstancedBufferAttribute)&&(t|=GPUBufferUsage.STORAGE),this.attributeUtils.createAttribute(e,t)}createAttribute(e){this.attributeUtils.createAttribute(e,GPUBufferUsage.VERTEX|GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST)}createStorageAttribute(e){this.attributeUtils.createAttribute(e,GPUBufferUsage.STORAGE|GPUBufferUsage.VERTEX|GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST)}createIndirectStorageAttribute(e){this.attributeUtils.createAttribute(e,GPUBufferUsage.STORAGE|GPUBufferUsage.INDIRECT|GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST)}updateAttribute(e){this.attributeUtils.updateAttribute(e)}destroyAttribute(e){this.attributeUtils.destroyAttribute(e)}updateSize(){this.colorBuffer=this.textureUtils.getColorBuffer(),this.defaultRenderPassdescriptor=null}getMaxAnisotropy(){return 16}hasFeature(e){return this.device.features.has(e)}copyTextureToTexture(e,t,r=null,s=null,i=0,n=0){let a=0,o=0,u=0,l=0,d=0,c=0,h=e.image.width,p=e.image.height,g=1;null!==r&&(!0===r.isBox3?(l=r.min.x,d=r.min.y,c=r.min.z,h=r.max.x-r.min.x,p=r.max.y-r.min.y,g=r.max.z-r.min.z):(l=r.min.x,d=r.min.y,h=r.max.x-r.min.x,p=r.max.y-r.min.y,g=1)),null!==s&&(a=s.x,o=s.y,u=s.z||0);const m=this.device.createCommandEncoder({label:"copyTextureToTexture_"+e.id+"_"+t.id}),f=this.get(e).texture,y=this.get(t).texture;m.copyTextureToTexture({texture:f,mipLevel:i,origin:{x:l,y:d,z:c}},{texture:y,mipLevel:n,origin:{x:a,y:o,z:u}},[h,p,g]),this.device.queue.submit([m.finish()]),0===n&&t.generateMipmaps&&this.textureUtils.generateMipmaps(t)}copyFramebufferToTexture(e,t,r){const s=this.get(t);let i=null;i=t.renderTarget?e.isDepthTexture?this.get(t.depthTexture).texture:this.get(t.textures[0]).texture:e.isDepthTexture?this.textureUtils.getDepthBuffer(t.depth,t.stencil):this.context.getCurrentTexture();const n=this.get(e).texture;if(i.format!==n.format)return void console.error("WebGPUBackend: copyFramebufferToTexture: Source and destination formats do not match.",i.format,n.format);let a;if(s.currentPass?(s.currentPass.end(),a=s.encoder):a=this.device.createCommandEncoder({label:"copyFramebufferToTexture_"+e.id}),a.copyTextureToTexture({texture:i,origin:[r.x,r.y,0]},{texture:n},[r.z,r.w]),s.currentPass){const{descriptor:e}=s;for(let t=0;t<e.colorAttachments.length;t++)e.colorAttachments[t].loadOp=jN;if(t.depth&&(e.depthStencilAttachment.depthLoadOp=jN),t.stencil&&(e.depthStencilAttachment.stencilLoadOp=jN),s.currentPass=a.beginRenderPass(e),s.currentSets={attributes:{},bindingGroups:[],pipeline:null,index:null},t.viewport&&this.updateViewport(t),t.scissor){const{x:e,y:r,width:i,height:n}=t.scissorValue;s.currentPass.setScissorRect(e,r,i,n)}}else this.device.queue.submit([a.finish()]);e.generateMipmaps&&this.textureUtils.generateMipmaps(e)}}class vA extends Qr{constructor(e,t,r,s,i,n){super(e,t,r,s,i,n),this.iesMap=null}copy(e,t){return super.copy(e,t),this.iesMap=e.iesMap,this}}class NA extends Qr{constructor(e,t,r,s,i,n){super(e,t,r,s,i,n),this.aspect=null}copy(e,t){return super.copy(e,t),this.aspect=e.aspect,this}}class SA extends _v{constructor(){super(),this.addMaterial(Wp,"MeshPhongMaterial"),this.addMaterial(Fm,"MeshStandardMaterial"),this.addMaterial(Im,"MeshPhysicalMaterial"),this.addMaterial(zm,"MeshToonMaterial"),this.addMaterial(Ip,"MeshBasicMaterial"),this.addMaterial(Hp,"MeshLambertMaterial"),this.addMaterial(Np,"MeshNormalMaterial"),this.addMaterial(Wm,"MeshMatcapMaterial"),this.addMaterial(pp,"LineBasicMaterial"),this.addMaterial(mp,"LineDashedMaterial"),this.addMaterial(Qm,"PointsMaterial"),this.addMaterial(Km,"SpriteMaterial"),this.addMaterial(ef,"ShadowMaterial"),this.addLight(mT,Zr),this.addLight(q_,Jr),this.addLight(Q_,es),this.addLight(Z_,Qr),this.addLight(rv,ts),this.addLight(sv,rs),this.addLight(iv,ss),this.addLight(J_,vA),this.addLight(tv,NA),this.addToneMapping(Rb,is),this.addToneMapping(Cb,ns),this.addToneMapping(Mb,as),this.addToneMapping(Bb,os),this.addToneMapping(Ib,us),this.addToneMapping(Vb,ls)}}class EA extends zv{constructor(e={}){let t;e.forceWebGL?t=PN:(t=_A,e.getFallback=()=>(console.warn("THREE.WebGPURenderer: WebGPU is not available, running under WebGL2 backend."),new PN(e)));super(new t(e),e),this.library=new SA,this.isWebGPURenderer=!0,"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}}class wA extends ds{constructor(){super(),this.isBundleGroup=!0,this.type="BundleGroup",this.static=!0,this.version=0}set needsUpdate(e){!0===e&&this.version++}}class AA{constructor(e,t=an(0,0,1,1)){this.renderer=e,this.outputNode=t,this.outputColorTransform=!0,this.needsUpdate=!0;const r=new cp;r.name="PostProcessing",this._quadMesh=new ky(r),this._context=null}render(){const e=this.renderer;this._update(),null!==this._context.onBeforePostProcessing&&this._context.onBeforePostProcessing();const t=e.toneMapping,r=e.outputColorSpace;e.toneMapping=p,e.outputColorSpace=le;const s=e.xr.enabled;e.xr.enabled=!1,this._quadMesh.render(e),e.xr.enabled=s,e.toneMapping=t,e.outputColorSpace=r,null!==this._context.onAfterPostProcessing&&this._context.onAfterPostProcessing()}get context(){return this._context}dispose(){this._quadMesh.material.dispose()}_update(){if(!0===this.needsUpdate){const e=this.renderer,t=e.toneMapping,r=e.outputColorSpace,s={postProcessing:this,onBeforePostProcessing:null,onAfterPostProcessing:null};let i=this.outputNode;!0===this.outputColorTransform?(i=i.context(s),i=Gu(i,t,r)):(s.toneMapping=t,s.outputColorSpace=r,i=i.context(s)),this._context=s,this._quadMesh.material.fragmentNode=i,this._quadMesh.material.needsUpdate=!0,this.needsUpdate=!1}}async renderAsync(){this._update(),null!==this._context.onBeforePostProcessing&&this._context.onBeforePostProcessing();const e=this.renderer,t=e.toneMapping,r=e.outputColorSpace;e.toneMapping=p,e.outputColorSpace=le;const s=e.xr.enabled;e.xr.enabled=!1,await this._quadMesh.renderAsync(e),e.xr.enabled=s,e.toneMapping=t,e.outputColorSpace=r,null!==this._context.onAfterPostProcessing&&this._context.onAfterPostProcessing()}}class RA extends x{constructor(e=1,t=1){super(),this.image={width:e,height:t},this.magFilter=Y,this.minFilter=Y,this.isStorageTexture=!0}}class CA extends x{constructor(e=1,t=1,r=1){super(),this.isArrayTexture=!1,this.image={width:e,height:t,depth:r},this.magFilter=Y,this.minFilter=Y,this.wrapR=vr,this.isStorageTexture=!0,this.is3DTexture=!0}}class MA extends x{constructor(e=1,t=1,r=1){super(),this.isArrayTexture=!0,this.image={width:e,height:t,depth:r},this.magFilter=Y,this.minFilter=Y,this.isStorageTexture=!0}}class PA extends Ky{constructor(e,t){super(e,t,Uint32Array),this.isIndirectStorageBufferAttribute=!0}}class BA extends cs{constructor(e){super(e),this.textures={},this.nodes={}}load(e,t,r,s){const i=new hs(this.manager);i.setPath(this.path),i.setRequestHeader(this.requestHeader),i.setWithCredentials(this.withCredentials),i.load(e,r=>{try{t(this.parse(JSON.parse(r)))}catch(t){s?s(t):console.error(t),this.manager.itemError(e)}},r,s)}parseNodes(e){const t={};if(void 0!==e){for(const r of e){const{uuid:e,type:s}=r;t[e]=this.createNodeFromType(s),t[e].uuid=e}const r={nodes:t,textures:this.textures};for(const s of e){s.meta=r;t[s.uuid].deserialize(s),delete s.meta}}return t}parse(e){const t=this.createNodeFromType(e.type);t.uuid=e.uuid;const r={nodes:this.parseNodes(e.nodes),textures:this.textures};return e.meta=r,t.deserialize(e),delete e.meta,t}setTextures(e){return this.textures=e,this}setNodes(e){return this.nodes=e,this}createNodeFromType(e){return void 0===this.nodes[e]?(console.error("THREE.NodeLoader: Node type not found:",e),qi()):Di(new this.nodes[e])}}class LA extends ps{constructor(e){super(e),this.nodes={},this.nodeMaterials={}}parse(e){const t=super.parse(e),r=this.nodes,s=e.inputNodes;for(const e in s){const i=s[e];t[e]=r[i]}return t}setNodes(e){return this.nodes=e,this}setNodeMaterials(e){return this.nodeMaterials=e,this}createMaterialFromType(e){const t=this.nodeMaterials[e];return void 0!==t?new t:super.createMaterialFromType(e)}}class FA extends gs{constructor(e){super(e),this.nodes={},this.nodeMaterials={},this._nodesJSON=null}setNodes(e){return this.nodes=e,this}setNodeMaterials(e){return this.nodeMaterials=e,this}parse(e,t){this._nodesJSON=e.nodes;const r=super.parse(e,t);return this._nodesJSON=null,r}parseNodes(e,t){if(void 0!==e){const r=new BA;return r.setNodes(this.nodes),r.setTextures(t),r.parseNodes(e)}return{}}parseMaterials(e,t){const r={};if(void 0!==e){const s=this.parseNodes(this._nodesJSON,t),i=new LA;i.setTextures(t),i.setNodes(s),i.setNodeMaterials(this.nodeMaterials);for(let t=0,s=e.length;t<s;t++){const s=e[t];r[s.uuid]=i.parse(s)}}return r}}class DA extends ds{constructor(){super(),this.isClippingGroup=!0,this.clippingPlanes=[],this.enabled=!0,this.clipIntersection=!1,this.clipShadows=!1}}export{os as ACESFilmicToneMapping,_h as AONode,Xe as AddEquation,ee as AddOperation,Bt as AdditiveBlending,us as AgXToneMapping,$t as AlphaFormat,Mr as AlwaysCompare,Ot as AlwaysDepth,Or as AlwaysStencilFunc,ts as AmbientLight,rv as AmbientLightNode,hT as AnalyticLightNode,$e as ArrayCamera,Xs as ArrayElementNode,ea as ArrayNode,ra as AssignNode,$u as AttributeNode,S as BackSide,Pp as BasicEnvironmentNode,Ue as BasicShadowMap,sh as BatchNode,q as BoxGeometry,ge as BufferAttribute,vu as BufferAttributeNode,pe as BufferGeometry,rl as BufferNode,sc as BumpMapNode,wA as BundleGroup,Bu as BypassNode,ot as ByteType,Mu as CacheNode,Ee as Camera,as as CineonToneMapping,vr as ClampToEdgeWrapping,DA as ClippingGroup,Ub as CodeNode,e as Color,c as ColorManagement,hu as ColorSpaceNode,Au as ComputeNode,ii as ConstNode,Yo as ContextNode,Ks as ConvertNode,Q as CubeCamera,R as CubeReflectionMapping,C as CubeRefractionMapping,A as CubeTexture,bd as CubeTextureNode,he as CubeUVReflectionMapping,Rt as CullFaceBack,Ct as CullFaceFront,At as CullFaceNone,qe as CustomBlending,Ye as CylinderGeometry,F as DataArrayTexture,st as DataTexture,zu as DebugNode,Hr as DecrementStencilOp,Gr as DecrementWrapStencilOp,Ae as DepthFormat,we as DepthStencilFormat,U as DepthTexture,Jr as DirectionalLight,q_ as DirectionalLightNode,E as DoubleSide,_t as DstAlphaFactor,vt as DstColorFactor,y as DynamicDrawUsage,Mm as EnvironmentNode,Rr as EqualCompare,It as EqualDepth,Ir as EqualStencilFunc,Z as EquirectangularReflectionMapping,J as EquirectangularRefractionMapping,w as Euler,o as EventDispatcher,Vu as ExpressionNode,hs as FileLoader,ze as Float16BufferAttribute,Le as Float32BufferAttribute,D as FloatType,I as FramebufferTexture,Wl as FrontFacingNode,je as FrontSide,rt as Frustum,tt as FrustumArray,ia as FunctionCallNode,kb as FunctionNode,uy as FunctionOverloadingNode,cv as GLSLNodeParser,wr as GreaterCompare,Ft as GreaterDepth,Ar as GreaterEqualCompare,Dt as GreaterEqualDepth,Dr as GreaterEqualStencilFunc,Fr as GreaterStencilFunc,ds as Group,ce as HalfFloatType,rs as HemisphereLight,sv as HemisphereLightNode,vA as IESSpotLight,J_ as IESSpotLightNode,$r as IncrementStencilOp,zr as IncrementWrapStencilOp,jc as IndexNode,PA as IndirectStorageBufferAttribute,Jc as InstanceNode,L as InstancedBufferAttribute,B as InstancedInterleavedBuffer,th as InstancedMeshNode,_ as IntType,m as InterleavedBuffer,f as InterleavedBufferAttribute,Wr as InvertStencilOp,Sh as IrradianceNode,Qs as JoinNode,Xr as KeepStencilOp,Ie as LessCompare,Ut as LessDepth,Cr as LessEqualCompare,Vt as LessEqualDepth,Vr as LessEqualStencilFunc,Ur as LessStencilFunc,ss as LightProbe,iv as LightProbeNode,Sv as Lighting,vh as LightingContextNode,Lp as LightingModel,Th as LightingNode,Ax as LightsNode,Tp as Line2NodeMaterial,G as LineBasicMaterial,pp as LineBasicNodeMaterial,z as LineDashedMaterial,mp as LineDashedNodeMaterial,Y as LinearFilter,Be as LinearMipMapLinearFilter,V as LinearMipmapLinearFilter,ke as LinearMipmapNearestFilter,le as LinearSRGBColorSpace,is as LinearToneMapping,Br as LinearTransfer,cs as Loader,hh as LoopNode,ty as MRTNode,O as Material,ps as MaterialLoader,ac as MaterialNode,Ed as MaterialReferenceNode,u as MathUtils,i as Matrix2,n as Matrix3,a as Matrix4,Kr as MaxEquation,Ku as MaxMipLevelNode,ni as MemberNode,X as Mesh,se as MeshBasicMaterial,Ip as MeshBasicNodeMaterial,ie as MeshLambertMaterial,Hp as MeshLambertNodeMaterial,be as MeshMatcapMaterial,Wm as MeshMatcapNodeMaterial,$ as MeshNormalMaterial,Np as MeshNormalNodeMaterial,ne as MeshPhongMaterial,Wp as MeshPhongNodeMaterial,fe as MeshPhysicalMaterial,Im as MeshPhysicalNodeMaterial,Um as MeshSSSNodeMaterial,me as MeshStandardMaterial,Fm as MeshStandardNodeMaterial,ye as MeshToonMaterial,zm as MeshToonNodeMaterial,Yr as MinEquation,_r as MirroredRepeatWrapping,te as MixOperation,El as ModelNode,bh as MorphNode,Mt as MultiplyBlending,re as MultiplyOperation,v as NearestFilter,Ge as NearestMipmapLinearFilter,Sr as NearestMipmapNearestFilter,ls as NeutralToneMapping,Pr as NeverCompare,kt as NeverDepth,kr as NeverStencilFunc,H as NoBlending,b as NoColorSpace,p as NoToneMapping,qs as Node,ks as NodeAccess,f_ as NodeAttribute,$_ as NodeBuilder,v_ as NodeCache,T_ as NodeCode,W_ as NodeFrame,j_ as NodeFunctionInput,BA as NodeLoader,cp as NodeMaterial,LA as NodeMaterialLoader,ys as NodeMaterialObserver,FA as NodeObjectLoader,Vs as NodeShaderStage,Os as NodeType,y_ as NodeUniform,Us as NodeUpdateType,Is as NodeUtils,b_ as NodeVar,x_ as NodeVarying,k as NormalBlending,Jd as NormalMapNode,Er as NotEqualCompare,Lt as NotEqualDepth,Lr as NotEqualStencilFunc,Pe as Object3D,bl as Object3DNode,gs as ObjectLoader,P as ObjectSpaceNormalMap,wt as OneFactor,yt as OneMinusDstAlphaFactor,bt as OneMinusDstColorFactor,xt as OneMinusSrcAlphaFactor,Tt as OneMinusSrcColorFactor,ae as OrthographicCamera,Zf as OutputStructNode,et as PCFShadowMap,xm as PMREMGenerator,Am as PMREMNode,qf as ParameterNode,wb as PassNode,oe as PerspectiveCamera,Gp as PhongLightingModel,Ig as PhysicalLightingModel,Me as Plane,We as PlaneGeometry,Zr as PointLight,mT as PointLightNode,Yy as PointUVNode,Te as PointsMaterial,Qm as PointsNodeMaterial,AA as PostProcessing,_b as PosterizeNode,NA as ProjectorLight,tv as ProjectorLightNode,mn as PropertyNode,ky as QuadMesh,Qe as Quaternion,xr as RED_GREEN_RGTC2_Format,yr as RED_RGTC1_Format,He as REVISION,de as RGBAFormat,ht as RGBAIntegerFormat,pr as RGBA_ASTC_10x10_Format,dr as RGBA_ASTC_10x5_Format,cr as RGBA_ASTC_10x6_Format,hr as RGBA_ASTC_10x8_Format,gr as RGBA_ASTC_12x10_Format,mr as RGBA_ASTC_12x12_Format,rr as RGBA_ASTC_4x4_Format,sr as RGBA_ASTC_5x4_Format,ir as RGBA_ASTC_5x5_Format,nr as RGBA_ASTC_6x5_Format,ar as RGBA_ASTC_6x6_Format,or as RGBA_ASTC_8x5_Format,ur as RGBA_ASTC_8x6_Format,lr as RGBA_ASTC_8x8_Format,fr as RGBA_BPTC_Format,tr as RGBA_ETC2_EAC_Format,Zt as RGBA_PVRTC_2BPPV1_Format,Qt as RGBA_PVRTC_4BPPV1_Format,jt as RGBA_S3TC_DXT1_Format,qt as RGBA_S3TC_DXT3_Format,Xt as RGBA_S3TC_DXT5_Format,ct as RGBFormat,dt as RGBIntegerFormat,Jt as RGB_ETC1_Format,er as RGB_ETC2_Format,Yt as RGB_PVRTC_2BPPV1_Format,Kt as RGB_PVRTC_4BPPV1_Format,Wt as RGB_S3TC_DXT1_Format,Ve as RGFormat,lt as RGIntegerFormat,zy as RTTNode,tx as RangeNode,es as RectAreaLight,Q_ as RectAreaLightNode,nt as RedFormat,it as RedIntegerFormat,vd as ReferenceNode,Dy as ReflectorNode,ns as ReinhardToneMapping,Fu as RemapNode,ku as RenderOutputNode,ue as RenderTarget,yu as RendererReferenceNode,Ux as RendererUtils,Nr as RepeatWrapping,jr as ReplaceStencilOp,mt as ReverseSubtractEquation,jm as RotateNode,Tr as SIGNED_RED_GREEN_RGTC2_Format,br as SIGNED_RED_RGTC1_Format,W as SRGBColorSpace,h as SRGBTransfer,K as Scene,eb as SceneNode,Ah as ScreenNode,qb as ScriptableNode,zb as ScriptableValueNode,ei as SetNode,Rx as ShadowBaseNode,_e as ShadowMaterial,eT as ShadowNode,ef as ShadowNodeMaterial,at as ShortType,dh as SkinningNode,N as Sphere,Oe as SphereGeometry,Js as SplitNode,Qr as SpotLight,Z_ as SpotLightNode,xe as SpriteMaterial,Km as SpriteNodeMaterial,by as SpriteSheetUVNode,St as SrcAlphaFactor,Nt as SrcAlphaSaturateFactor,Et as SrcColorFactor,Xf as StackNode,g as StaticDrawUsage,CA as Storage3DTexture,nh as StorageArrayElementNode,MA as StorageArrayTexture,Ky as StorageBufferAttribute,oh as StorageBufferNode,Xy as StorageInstancedBufferAttribute,RA as StorageTexture,ib as StorageTextureNode,Qf as StructNode,Yf as StructTypeNode,iu as SubBuildNode,ft as SubtractEquation,Pt as SubtractiveBlending,d_ as TSL,M as TangentSpaceNormalMap,Ys as TempNode,x as Texture,ob as Texture3DNode,Zu as TextureNode,qu as TextureSizeNode,xu as ToneMappingNode,Ab as ToonOutlinePassNode,Fe as UVMapping,Ne as Uint16BufferAttribute,ve as Uint32BufferAttribute,nl as UniformArrayNode,jn as UniformGroupNode,Zn as UniformNode,Ce as UnsignedByteType,Re as UnsignedInt248Type,Ht as UnsignedInt5999Type,T as UnsignedIntType,Gt as UnsignedShort4444Type,zt as UnsignedShort5551Type,ut as UnsignedShortType,lb as UserDataNode,De as VSMShadowMap,Jo as VarNode,au as VaryingNode,t as Vector2,r as Vector3,s as Vector4,rp as VertexColorNode,Hh as ViewportDepthNode,Gh as ViewportDepthTextureNode,yp as ViewportSharedTextureNode,Vh as ViewportTextureNode,af as VolumeNodeMaterial,l as WebGLCoordinateSystem,j as WebGLCubeRenderTarget,d as WebGPUCoordinateSystem,EA as WebGPURenderer,Ze as WebXRController,Ke as ZeroFactor,qr as ZeroStencilOp,gt as createCanvasElement,zs as defaultBuildStages,Gs as defaultShaderStages,Hs as shaderStages,$s as vectorComponents};
