/**
 * @license
 * Copyright 2010-2024 Three.js Authors
 * SPDX-License-Identifier: MIT
 */
import{Color as e,Vector2 as t,Vector3 as s,Vector4 as r,Matrix3 as n,Matrix4 as i,EventDispatcher as o,MathUtils as a,ColorManagement as u,SRGBTransfer as l,NoToneMapping as d,StaticDrawUsage as c,InterleavedBuffer as h,DynamicDrawUsage as p,InterleavedBufferAttribute as g,NoColorSpace as m,UnsignedIntType as f,IntType as y,WebGLCoordinateSystem as b,BackSide as x,CubeReflectionMapping as T,CubeRefractionMapping as _,WebGPUCoordinateSystem as N,TangentSpaceNormalMap as v,ObjectSpaceNormalMap as S,InstancedInterleavedBuffer as A,InstancedBufferAttribute as R,DataArrayTexture as C,FloatType as E,FramebufferTexture as w,LinearMipmapLinearFilter as M,DepthTexture as B,Material as U,NormalBlending as F,PointsMaterial as P,LineBasicMaterial as I,LineDashedMaterial as L,MeshNormalMaterial as D,WebGLCubeRenderTarget as V,BoxGeometry as O,NoBlending as G,Mesh as k,Scene as z,LinearFilter as $,CubeCamera as H,CubeTexture as W,EquirectangularReflectionMapping as j,EquirectangularRefractionMapping as q,AddOperation as K,MixOperation as X,MultiplyOperation as Y,MeshBasicMaterial as Q,MeshLambertMaterial as Z,MeshPhongMaterial as J,Texture as ee,MeshStandardMaterial as te,MeshPhysicalMaterial as se,MeshToonMaterial as re,MeshMatcapMaterial as ne,SpriteMaterial as ie,ShadowMaterial as oe,Uint32BufferAttribute as ae,Uint16BufferAttribute as ue,DoubleSide as le,DepthStencilFormat as de,DepthFormat as ce,UnsignedInt248Type as he,UnsignedByteType as pe,RenderTarget as ge,Plane as me,Object3D as fe,HalfFloatType as ye,LinearMipMapLinearFilter as be,OrthographicCamera as xe,BufferGeometry as Te,Float32BufferAttribute as _e,UVMapping as Ne,Euler as ve,LinearSRGBColorSpace as Se,LessCompare as Ae,VSMShadowMap as Re,RGFormat as Ce,SphereGeometry as Ee,BufferAttribute as we,CubeUVReflectionMapping as Me,PerspectiveCamera as Be,RGBAFormat as Ue,LinearMipmapNearestFilter as Fe,NearestMipmapLinearFilter as Pe,Float16BufferAttribute as Ie,REVISION as Le,SRGBColorSpace as De,PCFShadowMap as Ve,FrontSide as Oe,Frustum as Ge,DataTexture as ke,RedIntegerFormat as ze,RedFormat as $e,RGIntegerFormat as He,RGBIntegerFormat as We,RGBFormat as je,RGBAIntegerFormat as qe,UnsignedShortType as Ke,ByteType as Xe,ShortType as Ye,createCanvasElement as Qe,AddEquation as Ze,SubtractEquation as Je,ReverseSubtractEquation as et,ZeroFactor as tt,OneFactor as st,SrcColorFactor as rt,SrcAlphaFactor as nt,SrcAlphaSaturateFactor as it,DstColorFactor as ot,DstAlphaFactor as at,OneMinusSrcColorFactor as ut,OneMinusSrcAlphaFactor as lt,OneMinusDstColorFactor as dt,OneMinusDstAlphaFactor as ct,CullFaceNone as ht,CullFaceBack as pt,CullFaceFront as gt,CustomBlending as mt,MultiplyBlending as ft,SubtractiveBlending as yt,AdditiveBlending as bt,NotEqualDepth as xt,GreaterDepth as Tt,GreaterEqualDepth as _t,EqualDepth as Nt,LessEqualDepth as vt,LessDepth as St,AlwaysDepth as At,NeverDepth as Rt,UnsignedShort4444Type as Ct,UnsignedShort5551Type as Et,UnsignedInt5999Type as wt,AlphaFormat as Mt,LuminanceFormat as Bt,LuminanceAlphaFormat as Ut,RGB_S3TC_DXT1_Format as Ft,RGBA_S3TC_DXT1_Format as Pt,RGBA_S3TC_DXT3_Format as It,RGBA_S3TC_DXT5_Format as Lt,RGB_PVRTC_4BPPV1_Format as Dt,RGB_PVRTC_2BPPV1_Format as Vt,RGBA_PVRTC_4BPPV1_Format as Ot,RGBA_PVRTC_2BPPV1_Format as Gt,RGB_ETC1_Format as kt,RGB_ETC2_Format as zt,RGBA_ETC2_EAC_Format as $t,RGBA_ASTC_4x4_Format as Ht,RGBA_ASTC_5x4_Format as Wt,RGBA_ASTC_5x5_Format as jt,RGBA_ASTC_6x5_Format as qt,RGBA_ASTC_6x6_Format as Kt,RGBA_ASTC_8x5_Format as Xt,RGBA_ASTC_8x6_Format as Yt,RGBA_ASTC_8x8_Format as Qt,RGBA_ASTC_10x5_Format as Zt,RGBA_ASTC_10x6_Format as Jt,RGBA_ASTC_10x8_Format as es,RGBA_ASTC_10x10_Format as ts,RGBA_ASTC_12x10_Format as ss,RGBA_ASTC_12x12_Format as rs,RGBA_BPTC_Format as ns,RED_RGTC1_Format as is,SIGNED_RED_RGTC1_Format as os,RED_GREEN_RGTC2_Format as as,SIGNED_RED_GREEN_RGTC2_Format as us,RepeatWrapping as ls,ClampToEdgeWrapping as ds,MirroredRepeatWrapping as cs,NearestFilter as hs,NearestMipmapNearestFilter as ps,NeverCompare as gs,AlwaysCompare as ms,LessEqualCompare as fs,EqualCompare as ys,GreaterEqualCompare as bs,GreaterCompare as xs,NotEqualCompare as Ts,warnOnce as _s,NotEqualStencilFunc as Ns,GreaterStencilFunc as vs,GreaterEqualStencilFunc as Ss,EqualStencilFunc as As,LessEqualStencilFunc as Rs,LessStencilFunc as Cs,AlwaysStencilFunc as Es,NeverStencilFunc as ws,DecrementWrapStencilOp as Ms,IncrementWrapStencilOp as Bs,DecrementStencilOp as Us,IncrementStencilOp as Fs,InvertStencilOp as Ps,ReplaceStencilOp as Is,ZeroStencilOp as Ls,KeepStencilOp as Ds,MaxEquation as Vs,MinEquation as Os,SpotLight as Gs,PointLight as ks,DirectionalLight as zs,RectAreaLight as $s,AmbientLight as Hs,HemisphereLight as Ws,LightProbe as js,LinearToneMapping as qs,ReinhardToneMapping as Ks,CineonToneMapping as Xs,ACESFilmicToneMapping as Ys,AgXToneMapping as Qs,NeutralToneMapping as Zs,Group as Js,Loader as er,FileLoader as tr,MaterialLoader as sr,ObjectLoader as rr}from"./three.core.min.js";export{AdditiveAnimationBlendMode,AnimationAction,AnimationClip,AnimationLoader,AnimationMixer,AnimationObjectGroup,AnimationUtils,ArcCurve,ArrayCamera,ArrowHelper,AttachedBindMode,Audio,AudioAnalyser,AudioContext,AudioListener,AudioLoader,AxesHelper,BasicDepthPacking,BasicShadowMap,BatchedMesh,Bone,BooleanKeyframeTrack,Box2,Box3,Box3Helper,BoxHelper,BufferGeometryLoader,Cache,Camera,CameraHelper,CanvasTexture,CapsuleGeometry,CatmullRomCurve3,CircleGeometry,Clock,ColorKeyframeTrack,CompressedArrayTexture,CompressedCubeTexture,CompressedTexture,CompressedTextureLoader,ConeGeometry,ConstantAlphaFactor,ConstantColorFactor,Controls,CubeTextureLoader,CubicBezierCurve,CubicBezierCurve3,CubicInterpolant,CullFaceFrontBack,Curve,CurvePath,CustomToneMapping,CylinderGeometry,Cylindrical,Data3DTexture,DataTextureLoader,DataUtils,DefaultLoadingManager,DetachedBindMode,DirectionalLightHelper,DiscreteInterpolant,DodecahedronGeometry,DynamicCopyUsage,DynamicReadUsage,EdgesGeometry,EllipseCurve,ExtrudeGeometry,Fog,FogExp2,GLBufferAttribute,GLSL1,GLSL3,GridHelper,HemisphereLightHelper,IcosahedronGeometry,ImageBitmapLoader,ImageLoader,ImageUtils,InstancedBufferGeometry,InstancedMesh,Int16BufferAttribute,Int32BufferAttribute,Int8BufferAttribute,Interpolant,InterpolateDiscrete,InterpolateLinear,InterpolateSmooth,KeyframeTrack,LOD,LatheGeometry,Layers,Light,Line,Line3,LineCurve,LineCurve3,LineLoop,LineSegments,LinearInterpolant,LinearMipMapNearestFilter,LinearTransfer,LoaderUtils,LoadingManager,LoopOnce,LoopPingPong,LoopRepeat,MOUSE,Matrix2,MeshDepthMaterial,MeshDistanceMaterial,NearestMipMapLinearFilter,NearestMipMapNearestFilter,NormalAnimationBlendMode,NumberKeyframeTrack,OctahedronGeometry,OneMinusConstantAlphaFactor,OneMinusConstantColorFactor,PCFSoftShadowMap,Path,PlaneGeometry,PlaneHelper,PointLightHelper,Points,PolarGridHelper,PolyhedronGeometry,PositionalAudio,PropertyBinding,PropertyMixer,QuadraticBezierCurve,QuadraticBezierCurve3,Quaternion,QuaternionKeyframeTrack,QuaternionLinearInterpolant,RGBADepthPacking,RGBDepthPacking,RGB_BPTC_SIGNED_Format,RGB_BPTC_UNSIGNED_Format,RGDepthPacking,RawShaderMaterial,Ray,Raycaster,RingGeometry,ShaderMaterial,Shape,ShapeGeometry,ShapePath,ShapeUtils,Skeleton,SkeletonHelper,SkinnedMesh,Source,Sphere,Spherical,SphericalHarmonics3,SplineCurve,SpotLightHelper,Sprite,StaticCopyUsage,StaticReadUsage,StereoCamera,StreamCopyUsage,StreamDrawUsage,StreamReadUsage,StringKeyframeTrack,TOUCH,TetrahedronGeometry,TextureLoader,TextureUtils,TorusGeometry,TorusKnotGeometry,Triangle,TriangleFanDrawMode,TriangleStripDrawMode,TrianglesDrawMode,TubeGeometry,Uint8BufferAttribute,Uint8ClampedBufferAttribute,Uniform,UniformsGroup,VectorKeyframeTrack,VideoTexture,WebGL3DRenderTarget,WebGLArrayRenderTarget,WebGLMultipleRenderTargets,WebGLRenderTarget,WireframeGeometry,WrapAroundEnding,ZeroCurvatureEnding,ZeroSlopeEnding}from"./three.core.min.js";const nr=["alphaMap","alphaTest","anisotropy","anisotropyMap","anisotropyRotation","aoMap","attenuationColor","attenuationDistance","bumpMap","clearcoat","clearcoatMap","clearcoatNormalMap","clearcoatNormalScale","clearcoatRoughness","color","dispersion","displacementMap","emissive","emissiveMap","envMap","gradientMap","ior","iridescence","iridescenceIOR","iridescenceMap","iridescenceThicknessMap","lightMap","map","matcap","metalness","metalnessMap","normalMap","normalScale","opacity","roughness","roughnessMap","sheen","sheenColor","sheenColorMap","sheenRoughnessMap","shininess","specular","specularColor","specularColorMap","specularIntensity","specularIntensityMap","specularMap","thickness","transmission","transmissionMap"];class ir{constructor(e){this.renderObjects=new WeakMap,this.hasNode=this.containsNode(e),this.hasAnimation=!0===e.object.isSkinnedMesh,this.refreshUniforms=nr,this.renderId=0}firstInitialization(e){return!1===this.renderObjects.has(e)&&(this.getRenderObjectData(e),!0)}getRenderObjectData(e){let t=this.renderObjects.get(e);if(void 0===t){const{geometry:s,material:r}=e;if(t={material:this.getMaterialData(r),geometry:{attributes:this.getAttributesData(s.attributes),indexVersion:s.index?s.index.version:null,drawRange:{start:s.drawRange.start,count:s.drawRange.count}},worldMatrix:e.object.matrixWorld.clone()},e.object.center&&(t.center=e.object.center.clone()),e.object.morphTargetInfluences&&(t.morphTargetInfluences=e.object.morphTargetInfluences.slice()),null!==e.bundle&&(t.version=e.bundle.version),t.material.transmission>0){const{width:s,height:r}=e.context;t.bufferWidth=s,t.bufferHeight=r}this.renderObjects.set(e,t)}return t}getAttributesData(e){const t={};for(const s in e){const r=e[s];t[s]={version:r.version}}return t}containsNode(e){const t=e.material;for(const e in t)if(t[e]&&t[e].isNode)return!0;return null!==e.renderer.nodes.modelViewMatrix||null!==e.renderer.nodes.modelNormalViewMatrix}getMaterialData(e){const t={};for(const s of this.refreshUniforms){const r=e[s];null!=r&&("object"==typeof r&&void 0!==r.clone?!0===r.isTexture?t[s]={id:r.id,version:r.version}:t[s]=r.clone():t[s]=r)}return t}equals(e){const{object:t,material:s,geometry:r}=e,n=this.getRenderObjectData(e);if(!0!==n.worldMatrix.equals(t.matrixWorld))return n.worldMatrix.copy(t.matrixWorld),!1;const i=n.material;for(const e in i){const t=i[e],r=s[e];if(void 0!==t.equals){if(!1===t.equals(r))return t.copy(r),!1}else if(!0===r.isTexture){if(t.id!==r.id||t.version!==r.version)return t.id=r.id,t.version=r.version,!1}else if(t!==r)return i[e]=r,!1}if(i.transmission>0){const{width:t,height:s}=e.context;if(n.bufferWidth!==t||n.bufferHeight!==s)return n.bufferWidth=t,n.bufferHeight=s,!1}const o=n.geometry,a=r.attributes,u=o.attributes,l=Object.keys(u),d=Object.keys(a);if(l.length!==d.length)return n.geometry.attributes=this.getAttributesData(a),!1;for(const e of l){const t=u[e],s=a[e];if(void 0===s)return delete u[e],!1;if(t.version!==s.version)return t.version=s.version,!1}const c=r.index,h=o.indexVersion,p=c?c.version:null;if(h!==p)return o.indexVersion=p,!1;if(o.drawRange.start!==r.drawRange.start||o.drawRange.count!==r.drawRange.count)return o.drawRange.start=r.drawRange.start,o.drawRange.count=r.drawRange.count,!1;if(n.morphTargetInfluences){let e=!1;for(let s=0;s<n.morphTargetInfluences.length;s++)n.morphTargetInfluences[s]!==t.morphTargetInfluences[s]&&(e=!0);if(e)return!0}return n.center&&!1===n.center.equals(t.center)?(n.center.copy(t.center),!0):(null!==e.bundle&&(n.version=e.bundle.version),!0)}needsRefresh(e,t){if(this.hasNode||this.hasAnimation||this.firstInitialization(e))return!0;const{renderId:s}=t;if(this.renderId!==s)return this.renderId=s,!0;const r=!0===e.object.static,n=null!==e.bundle&&!0===e.bundle.static&&this.getRenderObjectData(e).version===e.bundle.version;if(r||n)return!1;return!0!==this.equals(e)}}function or(e,t=0){let s=3735928559^t,r=1103547991^t;if(e instanceof Array)for(let t,n=0;n<e.length;n++)t=e[n],s=Math.imul(s^t,2654435761),r=Math.imul(r^t,1597334677);else for(let t,n=0;n<e.length;n++)t=e.charCodeAt(n),s=Math.imul(s^t,2654435761),r=Math.imul(r^t,1597334677);return s=Math.imul(s^s>>>16,2246822507),s^=Math.imul(r^r>>>13,3266489909),r=Math.imul(r^r>>>16,2246822507),r^=Math.imul(s^s>>>13,3266489909),4294967296*(2097151&r)+(s>>>0)}const ar=e=>or(e),ur=e=>or(e),lr=(...e)=>or(e);function dr(e,t=!1){const s=[];!0===e.isNode&&(s.push(e.id),e=e.getSelf());for(const{property:r,childNode:n}of cr(e))s.push(s,or(r.slice(0,-4)),n.getCacheKey(t));return or(s)}function*cr(e,t=!1){for(const s in e){if(!0===s.startsWith("_"))continue;const r=e[s];if(!0===Array.isArray(r))for(let e=0;e<r.length;e++){const n=r[e];n&&(!0===n.isNode||t&&"function"==typeof n.toJSON)&&(yield{property:s,index:e,childNode:n})}else if(r&&!0===r.isNode)yield{property:s,childNode:r};else if("object"==typeof r)for(const e in r){const n=r[e];n&&(!0===n.isNode||t&&"function"==typeof n.toJSON)&&(yield{property:s,index:e,childNode:n})}}}function hr(e){if(null==e)return null;const t=typeof e;return!0===e.isNode?"node":"number"===t?"float":"boolean"===t?"bool":"string"===t?"string":"function"===t?"shader":!0===e.isVector2?"vec2":!0===e.isVector3?"vec3":!0===e.isVector4?"vec4":!0===e.isMatrix3?"mat3":!0===e.isMatrix4?"mat4":!0===e.isColor?"color":e instanceof ArrayBuffer?"ArrayBuffer":null}function pr(o,...a){const u=o?o.slice(-4):void 0;return 1===a.length&&("vec2"===u?a=[a[0],a[0]]:"vec3"===u?a=[a[0],a[0],a[0]]:"vec4"===u&&(a=[a[0],a[0],a[0],a[0]])),"color"===o?new e(...a):"vec2"===u?new t(...a):"vec3"===u?new s(...a):"vec4"===u?new r(...a):"mat3"===u?new n(...a):"mat4"===u?new i(...a):"bool"===o?a[0]||!1:"float"===o||"int"===o||"uint"===o?a[0]||0:"string"===o?a[0]||"":"ArrayBuffer"===o?mr(a[0]):null}function gr(e){let t="";const s=new Uint8Array(e);for(let e=0;e<s.length;e++)t+=String.fromCharCode(s[e]);return btoa(t)}function mr(e){return Uint8Array.from(atob(e),(e=>e.charCodeAt(0))).buffer}var fr=Object.freeze({__proto__:null,arrayBufferToBase64:gr,base64ToArrayBuffer:mr,getCacheKey:dr,getNodeChildren:cr,getValueFromType:pr,getValueType:hr,hash:lr,hashArray:ur,hashString:ar});const yr={VERTEX:"vertex",FRAGMENT:"fragment"},br={NONE:"none",FRAME:"frame",RENDER:"render",OBJECT:"object"},xr={BOOLEAN:"bool",INTEGER:"int",FLOAT:"float",VECTOR2:"vec2",VECTOR3:"vec3",VECTOR4:"vec4",MATRIX2:"mat2",MATRIX3:"mat3",MATRIX4:"mat4"},Tr=["fragment","vertex"],_r=["setup","analyze","generate"],Nr=[...Tr,"compute"],vr=["x","y","z","w"];let Sr=0;class Ar extends o{static get type(){return"Node"}constructor(e=null){super(),this.nodeType=e,this.updateType=br.NONE,this.updateBeforeType=br.NONE,this.updateAfterType=br.NONE,this.uuid=a.generateUUID(),this.version=0,this._cacheKey=null,this._cacheKeyVersion=0,this.global=!1,this.isNode=!0,Object.defineProperty(this,"id",{value:Sr++})}set needsUpdate(e){!0===e&&this.version++}get type(){return this.constructor.type}onUpdate(e,t){return this.updateType=t,this.update=e.bind(this.getSelf()),this}onFrameUpdate(e){return this.onUpdate(e,br.FRAME)}onRenderUpdate(e){return this.onUpdate(e,br.RENDER)}onObjectUpdate(e){return this.onUpdate(e,br.OBJECT)}onReference(e){return this.updateReference=e.bind(this.getSelf()),this}getSelf(){return this.self||this}updateReference(){return this}isGlobal(){return this.global}*getChildren(){for(const{childNode:e}of cr(this))yield e}dispose(){this.dispatchEvent({type:"dispose"})}traverse(e){e(this);for(const t of this.getChildren())t.traverse(e)}getCacheKey(e=!1){return!0!==(e=e||this.version!==this._cacheKeyVersion)&&null!==this._cacheKey||(this._cacheKey=dr(this,e),this._cacheKeyVersion=this.version),this._cacheKey}getScope(){return this}getHash(){return this.uuid}getUpdateType(){return this.updateType}getUpdateBeforeType(){return this.updateBeforeType}getUpdateAfterType(){return this.updateAfterType}getElementType(e){const t=this.getNodeType(e);return e.getElementType(t)}getNodeType(e){const t=e.getNodeProperties(this);return t.outputNode?t.outputNode.getNodeType(e):this.nodeType}getShared(e){const t=this.getHash(e);return e.getNodeFromHash(t)||this}setup(e){const t=e.getNodeProperties(this);let s=0;for(const e of this.getChildren())t["node"+s++]=e;return null}analyze(e){if(1===e.increaseUsage(this)){const t=e.getNodeProperties(this);for(const s of Object.values(t))s&&!0===s.isNode&&s.build(e)}}generate(e,t){const{outputNode:s}=e.getNodeProperties(this);if(s&&!0===s.isNode)return s.build(e,t)}updateBefore(){console.warn("Abstract function.")}updateAfter(){console.warn("Abstract function.")}update(){console.warn("Abstract function.")}build(e,t=null){const s=this.getShared(e);if(this!==s)return s.build(e,t);e.addNode(this),e.addChain(this);let r=null;const n=e.getBuildStage();if("setup"===n){this.updateReference(e);const t=e.getNodeProperties(this);if(!0!==t.initialized){e.stack.nodes.length;t.initialized=!0,t.outputNode=this.setup(e),null!==t.outputNode&&e.stack.nodes.length;for(const s of Object.values(t))s&&!0===s.isNode&&s.build(e)}}else if("analyze"===n)this.analyze(e);else if("generate"===n){if(1===this.generate.length){const s=this.getNodeType(e),n=e.getDataFromNode(this);r=n.snippet,void 0===r?(r=this.generate(e)||"",n.snippet=r):void 0!==n.flowCodes&&void 0!==e.context.nodeBlock&&e.addFlowCodeHierarchy(this,e.context.nodeBlock),r=e.format(r,s,t)}else r=this.generate(e,t)||""}return e.removeChain(this),e.addSequentialNode(this),r}getSerializeChildren(){return cr(this)}serialize(e){const t=this.getSerializeChildren(),s={};for(const{property:r,index:n,childNode:i}of t)void 0!==n?(void 0===s[r]&&(s[r]=Number.isInteger(n)?[]:{}),s[r][n]=i.toJSON(e.meta).uuid):s[r]=i.toJSON(e.meta).uuid;Object.keys(s).length>0&&(e.inputNodes=s)}deserialize(e){if(void 0!==e.inputNodes){const t=e.meta.nodes;for(const s in e.inputNodes)if(Array.isArray(e.inputNodes[s])){const r=[];for(const n of e.inputNodes[s])r.push(t[n]);this[s]=r}else if("object"==typeof e.inputNodes[s]){const r={};for(const n in e.inputNodes[s]){const i=e.inputNodes[s][n];r[n]=t[i]}this[s]=r}else{const r=e.inputNodes[s];this[s]=t[r]}}}toJSON(e){const{uuid:t,type:s}=this,r=void 0===e||"string"==typeof e;r&&(e={textures:{},images:{},nodes:{}});let n=e.nodes[t];function i(e){const t=[];for(const s in e){const r=e[s];delete r.metadata,t.push(r)}return t}if(void 0===n&&(n={uuid:t,type:s,meta:e,metadata:{version:4.6,type:"Node",generator:"Node.toJSON"}},!0!==r&&(e.nodes[n.uuid]=n),this.serialize(n),delete n.meta),r){const t=i(e.textures),s=i(e.images),r=i(e.nodes);t.length>0&&(n.textures=t),s.length>0&&(n.images=s),r.length>0&&(n.nodes=r)}return n}}class Rr extends Ar{static get type(){return"ArrayElementNode"}constructor(e,t){super(),this.node=e,this.indexNode=t,this.isArrayElementNode=!0}getNodeType(e){return this.node.getElementType(e)}generate(e){return`${this.node.build(e)}[ ${this.indexNode.build(e,"uint")} ]`}}class Cr extends Ar{static get type(){return"ConvertNode"}constructor(e,t){super(),this.node=e,this.convertTo=t}getNodeType(e){const t=this.node.getNodeType(e);let s=null;for(const r of this.convertTo.split("|"))null!==s&&e.getTypeLength(t)!==e.getTypeLength(r)||(s=r);return s}serialize(e){super.serialize(e),e.convertTo=this.convertTo}deserialize(e){super.deserialize(e),this.convertTo=e.convertTo}generate(e,t){const s=this.node,r=this.getNodeType(e),n=s.build(e,r);return e.format(n,r,t)}}class Er extends Ar{static get type(){return"TempNode"}constructor(e){super(e),this.isTempNode=!0}hasDependencies(e){return e.getDataFromNode(this).usageCount>1}build(e,t){if("generate"===e.getBuildStage()){const s=e.getVectorType(this.getNodeType(e,t)),r=e.getDataFromNode(this);if(void 0!==r.propertyName)return e.format(r.propertyName,s,t);if("void"!==s&&"void"!==t&&this.hasDependencies(e)){const n=super.build(e,s),i=e.getVarFromNode(this,null,s),o=e.getPropertyName(i);return e.addLineFlowCode(`${o} = ${n}`,this),r.snippet=n,r.propertyName=o,e.format(r.propertyName,s,t)}}return super.build(e,t)}}class wr extends Er{static get type(){return"JoinNode"}constructor(e=[],t=null){super(t),this.nodes=e}getNodeType(e){return null!==this.nodeType?e.getVectorType(this.nodeType):e.getTypeFromLength(this.nodes.reduce(((t,s)=>t+e.getTypeLength(s.getNodeType(e))),0))}generate(e,t){const s=this.getNodeType(e),r=this.nodes,n=e.getComponentType(s),i=[];for(const t of r){let s=t.build(e);const r=e.getComponentType(t.getNodeType(e));r!==n&&(s=e.format(s,r,n)),i.push(s)}const o=`${e.getType(s)}( ${i.join(", ")} )`;return e.format(o,s,t)}}const Mr=vr.join("");class Br extends Ar{static get type(){return"SplitNode"}constructor(e,t="x"){super(),this.node=e,this.components=t,this.isSplitNode=!0}getVectorLength(){let e=this.components.length;for(const t of this.components)e=Math.max(vr.indexOf(t)+1,e);return e}getComponentType(e){return e.getComponentType(this.node.getNodeType(e))}getNodeType(e){return e.getTypeFromLength(this.components.length,this.getComponentType(e))}generate(e,t){const s=this.node,r=e.getTypeLength(s.getNodeType(e));let n=null;if(r>1){let i=null;this.getVectorLength()>=r&&(i=e.getTypeFromLength(this.getVectorLength(),this.getComponentType(e)));const o=s.build(e,i);n=this.components.length===r&&this.components===Mr.slice(0,this.components.length)?e.format(o,i,t):e.format(`${o}.${this.components}`,this.getNodeType(e),t)}else n=s.build(e,t);return n}serialize(e){super.serialize(e),e.components=this.components}deserialize(e){super.deserialize(e),this.components=e.components}}class Ur extends Er{static get type(){return"SetNode"}constructor(e,t,s){super(),this.sourceNode=e,this.components=t,this.targetNode=s}getNodeType(e){return this.sourceNode.getNodeType(e)}generate(e){const{sourceNode:t,components:s,targetNode:r}=this,n=this.getNodeType(e),i=e.getTypeFromLength(s.length,r.getNodeType(e)),o=r.build(e,i),a=t.build(e,n),u=e.getTypeLength(n),l=[];for(let e=0;e<u;e++){const t=vr[e];t===s[0]?(l.push(o),e+=s.length-1):l.push(a+"."+t)}return`${e.getType(n)}( ${l.join(", ")} )`}}class Fr extends Er{static get type(){return"FlipNode"}constructor(e,t){super(),this.sourceNode=e,this.components=t}getNodeType(e){return this.sourceNode.getNodeType(e)}generate(e){const{components:t,sourceNode:s}=this,r=this.getNodeType(e),n=s.build(e),i=e.getVarFromNode(this),o=e.getPropertyName(i);e.addLineFlowCode(o+" = "+n,this);const a=e.getTypeLength(r),u=[];let l=0;for(let e=0;e<a;e++){const s=vr[e];s===t[l]?(u.push("1.0 - "+o+"."+s),l++):u.push(o+"."+s)}return`${e.getType(r)}( ${u.join(", ")} )`}}class Pr extends Ar{static get type(){return"InputNode"}constructor(e,t=null){super(t),this.isInputNode=!0,this.value=e,this.precision=null}getNodeType(){return null===this.nodeType?hr(this.value):this.nodeType}getInputType(e){return this.getNodeType(e)}setPrecision(e){return this.precision=e,this}serialize(e){super.serialize(e),e.value=this.value,this.value&&this.value.toArray&&(e.value=this.value.toArray()),e.valueType=hr(this.value),e.nodeType=this.nodeType,"ArrayBuffer"===e.valueType&&(e.value=gr(e.value)),e.precision=this.precision}deserialize(e){super.deserialize(e),this.nodeType=e.nodeType,this.value=Array.isArray(e.value)?pr(e.valueType,...e.value):e.value,this.precision=e.precision||null,this.value&&this.value.fromArray&&(this.value=this.value.fromArray(e.value))}generate(){console.warn("Abstract function.")}}class Ir extends Pr{static get type(){return"ConstNode"}constructor(e,t=null){super(e,t),this.isConstNode=!0}generateConst(e){return e.generateConst(this.getNodeType(e),this.value)}generate(e,t){const s=this.getNodeType(e);return e.format(this.generateConst(e),s,t)}}let Lr=null;const Dr=new Map;function Vr(e,t){if(Dr.has(e))console.warn(`Redefinition of method chaining ${e}`);else{if("function"!=typeof t)throw new Error(`Node element ${e} is not a function`);Dr.set(e,t)}}const Or=e=>e.replace(/r|s/g,"x").replace(/g|t/g,"y").replace(/b|p/g,"z").replace(/a|q/g,"w"),Gr=e=>Or(e).split("").sort().join(""),kr={setup(e,t){const s=t.shift();return e(pn(s),...t)},get(e,t,s){if("string"==typeof t&&void 0===e[t]){if(!0!==e.isStackNode&&"assign"===t)return(...e)=>(Lr.assign(s,...e),s);if(Dr.has(t)){const r=Dr.get(t);return e.isStackNode?(...e)=>s.add(r(...e)):(...e)=>r(s,...e)}if("self"===t)return e;if(t.endsWith("Assign")&&Dr.has(t.slice(0,t.length-6))){const r=Dr.get(t.slice(0,t.length-6));return e.isStackNode?(...e)=>s.assign(e[0],r(...e)):(...e)=>s.assign(r(s,...e))}if(!0===/^[xyzwrgbastpq]{1,4}$/.test(t))return t=Or(t),hn(new Br(s,t));if(!0===/^set[XYZWRGBASTPQ]{1,4}$/.test(t))return t=Gr(t.slice(3).toLowerCase()),s=>hn(new Ur(e,t,s));if(!0===/^flip[XYZWRGBASTPQ]{1,4}$/.test(t))return t=Gr(t.slice(4).toLowerCase()),()=>hn(new Fr(hn(e),t));if("width"===t||"height"===t||"depth"===t)return"width"===t?t="x":"height"===t?t="y":"depth"===t&&(t="z"),hn(new Br(e,t));if(!0===/^\d+$/.test(t))return hn(new Rr(s,new Ir(Number(t),"uint")))}return Reflect.get(e,t,s)},set:(e,t,s,r)=>"string"!=typeof t||void 0!==e[t]||!0!==/^[xyzwrgbastpq]{1,4}$/.test(t)&&"width"!==t&&"height"!==t&&"depth"!==t&&!0!==/^\d+$/.test(t)?Reflect.set(e,t,s,r):(r[t].assign(s),!0)},zr=new WeakMap,$r=new WeakMap,Hr=function(e,t=null){for(const s in e)e[s]=hn(e[s],t);return e},Wr=function(e,t=null){const s=e.length;for(let r=0;r<s;r++)e[r]=hn(e[r],t);return e},jr=function(e,t=null,s=null,r=null){const n=e=>hn(null!==r?Object.assign(e,r):e);return null===t?(...t)=>n(new e(...gn(t))):null!==s?(s=hn(s),(...r)=>n(new e(t,...gn(r),s))):(...s)=>n(new e(t,...gn(s)))},qr=function(e,...t){return hn(new e(...gn(t)))};class Kr extends Ar{constructor(e,t){super(),this.shaderNode=e,this.inputNodes=t}getNodeType(e){return this.shaderNode.nodeType||this.getOutputNode(e).getNodeType(e)}call(e){const{shaderNode:t,inputNodes:s}=this,r=e.getNodeProperties(t);if(r.onceOutput)return r.onceOutput;let n=null;if(t.layout){let r=$r.get(e.constructor);void 0===r&&(r=new WeakMap,$r.set(e.constructor,r));let i=r.get(t);void 0===i&&(i=hn(e.buildFunctionNode(t)),r.set(t,i)),null!==e.currentFunctionNode&&e.currentFunctionNode.includes.push(i),n=hn(i.call(s))}else{const r=t.jsFunc,i=null!==s?r(s,e):r(e);n=hn(i)}return t.once&&(r.onceOutput=n),n}getOutputNode(e){const t=e.getNodeProperties(this);return null===t.outputNode&&(t.outputNode=this.setupOutput(e)),t.outputNode}setup(e){return this.getOutputNode(e)}setupOutput(e){return e.addStack(),e.stack.outputNode=this.call(e),e.removeStack()}generate(e,t){return this.getOutputNode(e).build(e,t)}}class Xr extends Ar{constructor(e,t){super(t),this.jsFunc=e,this.layout=null,this.global=!0,this.once=!1}setLayout(e){return this.layout=e,this}call(e=null){return pn(e),hn(new Kr(this,e))}setup(){return this.call()}}const Yr=[!1,!0],Qr=[0,1,2,3],Zr=[-1,-2],Jr=[.5,1.5,1/3,1e-6,1e6,Math.PI,2*Math.PI,1/Math.PI,2/Math.PI,1/(2*Math.PI),Math.PI/2],en=new Map;for(const e of Yr)en.set(e,new Ir(e));const tn=new Map;for(const e of Qr)tn.set(e,new Ir(e,"uint"));const sn=new Map([...tn].map((e=>new Ir(e.value,"int"))));for(const e of Zr)sn.set(e,new Ir(e,"int"));const rn=new Map([...sn].map((e=>new Ir(e.value))));for(const e of Jr)rn.set(e,new Ir(e));for(const e of Jr)rn.set(-e,new Ir(-e));const nn={bool:en,uint:tn,ints:sn,float:rn},on=new Map([...en,...rn]),an=(e,t)=>on.has(e)?on.get(e):!0===e.isNode?e:new Ir(e,t),un=function(e,t=null){return(...s)=>{if((0===s.length||!["bool","float","int","uint"].includes(e)&&s.every((e=>"object"!=typeof e)))&&(s=[pr(e,...s)]),1===s.length&&null!==t&&t.has(s[0]))return hn(t.get(s[0]));if(1===s.length){const t=an(s[0],e);return(e=>{try{return e.getNodeType()}catch(e){return}})(t)===e?hn(t):hn(new Cr(t,e))}const r=s.map((e=>an(e)));return hn(new wr(r,e))}},ln=e=>"object"==typeof e&&null!==e?e.value:e,dn=e=>null!=e?e.nodeType||e.convertTo||("string"==typeof e?e:null):null;function cn(e,t){return new Proxy(new Xr(e,t),kr)}const hn=(e,t=null)=>function(e,t=null){const s=hr(e);if("node"===s){let t=zr.get(e);return void 0===t&&(t=new Proxy(e,kr),zr.set(e,t),zr.set(t,t)),t}return null===t&&("float"===s||"boolean"===s)||s&&"shader"!==s&&"string"!==s?hn(an(e,t)):"shader"===s?yn(e):e}(e,t),pn=(e,t=null)=>new Hr(e,t),gn=(e,t=null)=>new Wr(e,t),mn=(...e)=>new jr(...e),fn=(...e)=>new qr(...e),yn=(e,t)=>{const s=new cn(e,t),r=(...e)=>{let t;return pn(e),t=e[0]&&e[0].isNode?[...e]:e[0],s.call(t)};return r.shaderNode=s,r.setLayout=e=>(s.setLayout(e),r),r.once=()=>(s.once=!0,r),r},bn=(...e)=>(console.warn("TSL.ShaderNode: tslFn() has been renamed to Fn()."),yn(...e));Vr("toGlobal",(e=>(e.global=!0,e)));const xn=e=>{Lr=e},Tn=()=>Lr,_n=(...e)=>Lr.If(...e);function Nn(e){return Lr&&Lr.add(e),e}Vr("append",Nn);const vn=new un("color"),Sn=new un("float",nn.float),An=new un("int",nn.ints),Rn=new un("uint",nn.uint),Cn=new un("bool",nn.bool),En=new un("vec2"),wn=new un("ivec2"),Mn=new un("uvec2"),Bn=new un("bvec2"),Un=new un("vec3"),Fn=new un("ivec3"),Pn=new un("uvec3"),In=new un("bvec3"),Ln=new un("vec4"),Dn=new un("ivec4"),Vn=new un("uvec4"),On=new un("bvec4"),Gn=new un("mat2"),kn=new un("mat3"),zn=new un("mat4"),$n=(e="")=>hn(new Ir(e,"string")),Hn=e=>hn(new Ir(e,"ArrayBuffer"));Vr("toColor",vn),Vr("toFloat",Sn),Vr("toInt",An),Vr("toUint",Rn),Vr("toBool",Cn),Vr("toVec2",En),Vr("toIVec2",wn),Vr("toUVec2",Mn),Vr("toBVec2",Bn),Vr("toVec3",Un),Vr("toIVec3",Fn),Vr("toUVec3",Pn),Vr("toBVec3",In),Vr("toVec4",Ln),Vr("toIVec4",Dn),Vr("toUVec4",Vn),Vr("toBVec4",On),Vr("toMat2",Gn),Vr("toMat3",kn),Vr("toMat4",zn);const Wn=mn(Rr),jn=(e,t)=>hn(new Cr(hn(e),t)),qn=(e,t)=>hn(new Br(hn(e),t));Vr("element",Wn),Vr("convert",jn);class Kn extends Ar{static get type(){return"UniformGroupNode"}constructor(e,t=!1,s=1){super("string"),this.name=e,this.version=0,this.shared=t,this.order=s,this.isUniformGroup=!0}set needsUpdate(e){!0===e&&this.version++}serialize(e){super.serialize(e),e.name=this.name,e.version=this.version,e.shared=this.shared}deserialize(e){super.deserialize(e),this.name=e.name,this.version=e.version,this.shared=e.shared}}const Xn=e=>new Kn(e),Yn=(e,t=0)=>new Kn(e,!0,t),Qn=Yn("frame"),Zn=Yn("render"),Jn=Xn("object");class ei extends Pr{static get type(){return"UniformNode"}constructor(e,t=null){super(e,t),this.isUniformNode=!0,this.name="",this.groupNode=Jn}label(e){return this.name=e,this}setGroup(e){return this.groupNode=e,this}getGroup(){return this.groupNode}getUniformHash(e){return this.getHash(e)}onUpdate(e,t){const s=this.getSelf();return e=e.bind(s),super.onUpdate((t=>{const r=e(t,s);void 0!==r&&(this.value=r)}),t)}generate(e,t){const s=this.getNodeType(e),r=this.getUniformHash(e);let n=e.getNodeFromHash(r);void 0===n&&(e.setHashNode(this,r),n=this);const i=n.getInputType(e),o=e.getUniformFromNode(n,i,e.shaderStage,this.name||e.context.label),a=e.getPropertyName(o);return void 0!==e.context.label&&delete e.context.label,e.format(a,s,t)}}const ti=(e,t)=>{const s=dn(t||e),r=e&&!0===e.isNode?e.node&&e.node.value||e.value:e;return hn(new ei(r,s))};class si extends Ar{static get type(){return"PropertyNode"}constructor(e,t=null,s=!1){super(e),this.name=t,this.varying=s,this.isPropertyNode=!0}getHash(e){return this.name||super.getHash(e)}isGlobal(){return!0}generate(e){let t;return!0===this.varying?(t=e.getVaryingFromNode(this,this.name),t.needsInterpolation=!0):t=e.getVarFromNode(this,this.name),e.getPropertyName(t)}}const ri=(e,t)=>hn(new si(e,t)),ni=(e,t)=>hn(new si(e,t,!0)),ii=fn(si,"vec4","DiffuseColor"),oi=fn(si,"vec3","EmissiveColor"),ai=fn(si,"float","Roughness"),ui=fn(si,"float","Metalness"),li=fn(si,"float","Clearcoat"),di=fn(si,"float","ClearcoatRoughness"),ci=fn(si,"vec3","Sheen"),hi=fn(si,"float","SheenRoughness"),pi=fn(si,"float","Iridescence"),gi=fn(si,"float","IridescenceIOR"),mi=fn(si,"float","IridescenceThickness"),fi=fn(si,"float","AlphaT"),yi=fn(si,"float","Anisotropy"),bi=fn(si,"vec3","AnisotropyT"),xi=fn(si,"vec3","AnisotropyB"),Ti=fn(si,"color","SpecularColor"),_i=fn(si,"float","SpecularF90"),Ni=fn(si,"float","Shininess"),vi=fn(si,"vec4","Output"),Si=fn(si,"float","dashSize"),Ai=fn(si,"float","gapSize"),Ri=fn(si,"float","pointWidth"),Ci=fn(si,"float","IOR"),Ei=fn(si,"float","Transmission"),wi=fn(si,"float","Thickness"),Mi=fn(si,"float","AttenuationDistance"),Bi=fn(si,"color","AttenuationColor"),Ui=fn(si,"float","Dispersion");class Fi extends Er{static get type(){return"AssignNode"}constructor(e,t){super(),this.targetNode=e,this.sourceNode=t}hasDependencies(){return!1}getNodeType(e,t){return"void"!==t?this.targetNode.getNodeType(e):"void"}needsSplitAssign(e){const{targetNode:t}=this;if(!1===e.isAvailable("swizzleAssign")&&t.isSplitNode&&t.components.length>1){const s=e.getTypeLength(t.node.getNodeType(e));return vr.join("").slice(0,s)!==t.components}return!1}generate(e,t){const{targetNode:s,sourceNode:r}=this,n=this.needsSplitAssign(e),i=s.getNodeType(e),o=s.context({assign:!0}).build(e),a=r.build(e,i),u=r.getNodeType(e),l=e.getDataFromNode(this);let d;if(!0===l.initialized)"void"!==t&&(d=o);else if(n){const r=e.getVarFromNode(this,null,i),n=e.getPropertyName(r);e.addLineFlowCode(`${n} = ${a}`,this);const u=s.node.context({assign:!0}).build(e);for(let t=0;t<s.components.length;t++){const r=s.components[t];e.addLineFlowCode(`${u}.${r} = ${n}[ ${t} ]`,this)}"void"!==t&&(d=o)}else d=`${o} = ${a}`,"void"!==t&&"void"!==u||(e.addLineFlowCode(d,this),"void"!==t&&(d=o));return l.initialized=!0,e.format(d,i,t)}}const Pi=mn(Fi);Vr("assign",Pi);class Ii extends Er{static get type(){return"FunctionCallNode"}constructor(e=null,t={}){super(),this.functionNode=e,this.parameters=t}setParameters(e){return this.parameters=e,this}getParameters(){return this.parameters}getNodeType(e){return this.functionNode.getNodeType(e)}generate(e){const t=[],s=this.functionNode,r=s.getInputs(e),n=this.parameters,i=(t,s)=>{const r=s.type;let n;return n="pointer"===r?"&"+t.build(e):t.build(e,r),n};if(Array.isArray(n))for(let e=0;e<n.length;e++)t.push(i(n[e],r[e]));else for(const e of r){const s=n[e.name];if(void 0===s)throw new Error(`FunctionCallNode: Input '${e.name}' not found in FunctionNode.`);t.push(i(s,e))}return`${s.build(e,"property")}( ${t.join(", ")} )`}}const Li=(e,...t)=>(t=t.length>1||t[0]&&!0===t[0].isNode?gn(t):pn(t[0]),hn(new Ii(hn(e),t)));Vr("call",Li);class Di extends Er{static get type(){return"OperatorNode"}constructor(e,t,s,...r){if(super(),r.length>0){let n=new Di(e,t,s);for(let t=0;t<r.length-1;t++)n=new Di(e,n,r[t]);t=n,s=r[r.length-1]}this.op=e,this.aNode=t,this.bNode=s}getNodeType(e,t){const s=this.op,r=this.aNode,n=this.bNode,i=r.getNodeType(e),o=void 0!==n?n.getNodeType(e):null;if("void"===i||"void"===o)return"void";if("%"===s)return i;if("~"===s||"&"===s||"|"===s||"^"===s||">>"===s||"<<"===s)return e.getIntegerType(i);if("!"===s||"=="===s||"&&"===s||"||"===s||"^^"===s)return"bool";if("<"===s||">"===s||"<="===s||">="===s){const s=t?e.getTypeLength(t):Math.max(e.getTypeLength(i),e.getTypeLength(o));return s>1?`bvec${s}`:"bool"}return"float"===i&&e.isMatrix(o)?o:e.isMatrix(i)&&e.isVector(o)?e.getVectorFromMatrix(i):e.isVector(i)&&e.isMatrix(o)?e.getVectorFromMatrix(o):e.getTypeLength(o)>e.getTypeLength(i)?o:i}generate(e,t){const s=this.op,r=this.aNode,n=this.bNode,i=this.getNodeType(e,t);let o=null,a=null;"void"!==i?(o=r.getNodeType(e),a=void 0!==n?n.getNodeType(e):null,"<"===s||">"===s||"<="===s||">="===s||"=="===s?e.isVector(o)?a=o:o!==a&&(o=a="float"):">>"===s||"<<"===s?(o=i,a=e.changeComponentType(a,"uint")):e.isMatrix(o)&&e.isVector(a)?a=e.getVectorFromMatrix(o):o=e.isVector(o)&&e.isMatrix(a)?e.getVectorFromMatrix(a):a=i):o=a=i;const u=r.build(e,o),l=void 0!==n?n.build(e,a):null,d=e.getTypeLength(t),c=e.getFunctionOperator(s);return"void"!==t?"<"===s&&d>1?e.useComparisonMethod?e.format(`${e.getMethod("lessThan",t)}( ${u}, ${l} )`,i,t):e.format(`( ${u} < ${l} )`,i,t):"<="===s&&d>1?e.useComparisonMethod?e.format(`${e.getMethod("lessThanEqual",t)}( ${u}, ${l} )`,i,t):e.format(`( ${u} <= ${l} )`,i,t):">"===s&&d>1?e.useComparisonMethod?e.format(`${e.getMethod("greaterThan",t)}( ${u}, ${l} )`,i,t):e.format(`( ${u} > ${l} )`,i,t):">="===s&&d>1?e.useComparisonMethod?e.format(`${e.getMethod("greaterThanEqual",t)}( ${u}, ${l} )`,i,t):e.format(`( ${u} >= ${l} )`,i,t):"!"===s||"~"===s?e.format(`(${s}${u})`,o,t):c?e.format(`${c}( ${u}, ${l} )`,i,t):e.format(`( ${u} ${s} ${l} )`,i,t):"void"!==o?c?e.format(`${c}( ${u}, ${l} )`,i,t):e.format(`${u} ${s} ${l}`,i,t):void 0}serialize(e){super.serialize(e),e.op=this.op}deserialize(e){super.deserialize(e),this.op=e.op}}const Vi=mn(Di,"+"),Oi=mn(Di,"-"),Gi=mn(Di,"*"),ki=mn(Di,"/"),zi=mn(Di,"%"),$i=mn(Di,"=="),Hi=mn(Di,"!="),Wi=mn(Di,"<"),ji=mn(Di,">"),qi=mn(Di,"<="),Ki=mn(Di,">="),Xi=mn(Di,"&&"),Yi=mn(Di,"||"),Qi=mn(Di,"!"),Zi=mn(Di,"^^"),Ji=mn(Di,"&"),eo=mn(Di,"~"),to=mn(Di,"|"),so=mn(Di,"^"),ro=mn(Di,"<<"),no=mn(Di,">>");Vr("add",Vi),Vr("sub",Oi),Vr("mul",Gi),Vr("div",ki),Vr("modInt",zi),Vr("equal",$i),Vr("notEqual",Hi),Vr("lessThan",Wi),Vr("greaterThan",ji),Vr("lessThanEqual",qi),Vr("greaterThanEqual",Ki),Vr("and",Xi),Vr("or",Yi),Vr("not",Qi),Vr("xor",Zi),Vr("bitAnd",Ji),Vr("bitNot",eo),Vr("bitOr",to),Vr("bitXor",so),Vr("shiftLeft",ro),Vr("shiftRight",no);const io=(...e)=>(console.warn("TSL.OperatorNode: .remainder() has been renamed to .modInt()."),zi(...e));Vr("remainder",io);class oo extends Er{static get type(){return"MathNode"}constructor(e,t,s=null,r=null){super(),this.method=e,this.aNode=t,this.bNode=s,this.cNode=r}getInputType(e){const t=this.aNode.getNodeType(e),s=this.bNode?this.bNode.getNodeType(e):null,r=this.cNode?this.cNode.getNodeType(e):null,n=e.isMatrix(t)?0:e.getTypeLength(t),i=e.isMatrix(s)?0:e.getTypeLength(s),o=e.isMatrix(r)?0:e.getTypeLength(r);return n>i&&n>o?t:i>o?s:o>n?r:t}getNodeType(e){const t=this.method;return t===oo.LENGTH||t===oo.DISTANCE||t===oo.DOT?"float":t===oo.CROSS?"vec3":t===oo.ALL?"bool":t===oo.EQUALS?e.changeComponentType(this.aNode.getNodeType(e),"bool"):t===oo.MOD?this.aNode.getNodeType(e):this.getInputType(e)}generate(e,t){const s=this.method,r=this.getNodeType(e),n=this.getInputType(e),i=this.aNode,o=this.bNode,a=this.cNode,u=!0===e.renderer.isWebGLRenderer;if(s===oo.TRANSFORM_DIRECTION){let s=i,r=o;e.isMatrix(s.getNodeType(e))?r=Ln(Un(r),0):s=Ln(Un(s),0);const n=Gi(s,r).xyz;return Ao(n).build(e,t)}if(s===oo.NEGATE)return e.format("( - "+i.build(e,n)+" )",r,t);if(s===oo.ONE_MINUS)return Oi(1,i).build(e,t);if(s===oo.RECIPROCAL)return ki(1,i).build(e,t);if(s===oo.DIFFERENCE)return Fo(Oi(i,o)).build(e,t);{const l=[];return s===oo.CROSS||s===oo.MOD?l.push(i.build(e,r),o.build(e,r)):u&&s===oo.STEP?l.push(i.build(e,1===e.getTypeLength(i.getNodeType(e))?"float":n),o.build(e,n)):u&&(s===oo.MIN||s===oo.MAX)||s===oo.MOD?l.push(i.build(e,n),o.build(e,1===e.getTypeLength(o.getNodeType(e))?"float":n)):s===oo.REFRACT?l.push(i.build(e,n),o.build(e,n),a.build(e,"float")):s===oo.MIX?l.push(i.build(e,n),o.build(e,n),a.build(e,1===e.getTypeLength(a.getNodeType(e))?"float":n)):(l.push(i.build(e,n)),null!==o&&l.push(o.build(e,n)),null!==a&&l.push(a.build(e,n))),e.format(`${e.getMethod(s,r)}( ${l.join(", ")} )`,r,t)}}serialize(e){super.serialize(e),e.method=this.method}deserialize(e){super.deserialize(e),this.method=e.method}}oo.ALL="all",oo.ANY="any",oo.EQUALS="equals",oo.RADIANS="radians",oo.DEGREES="degrees",oo.EXP="exp",oo.EXP2="exp2",oo.LOG="log",oo.LOG2="log2",oo.SQRT="sqrt",oo.INVERSE_SQRT="inversesqrt",oo.FLOOR="floor",oo.CEIL="ceil",oo.NORMALIZE="normalize",oo.FRACT="fract",oo.SIN="sin",oo.COS="cos",oo.TAN="tan",oo.ASIN="asin",oo.ACOS="acos",oo.ATAN="atan",oo.ABS="abs",oo.SIGN="sign",oo.LENGTH="length",oo.NEGATE="negate",oo.ONE_MINUS="oneMinus",oo.DFDX="dFdx",oo.DFDY="dFdy",oo.ROUND="round",oo.RECIPROCAL="reciprocal",oo.TRUNC="trunc",oo.FWIDTH="fwidth",oo.BITCAST="bitcast",oo.TRANSPOSE="transpose",oo.ATAN2="atan2",oo.MIN="min",oo.MAX="max",oo.MOD="mod",oo.STEP="step",oo.REFLECT="reflect",oo.DISTANCE="distance",oo.DIFFERENCE="difference",oo.DOT="dot",oo.CROSS="cross",oo.POW="pow",oo.TRANSFORM_DIRECTION="transformDirection",oo.MIX="mix",oo.CLAMP="clamp",oo.REFRACT="refract",oo.SMOOTHSTEP="smoothstep",oo.FACEFORWARD="faceforward";const ao=Sn(1e-6),uo=Sn(1e6),lo=Sn(Math.PI),co=Sn(2*Math.PI),ho=mn(oo,oo.ALL),po=mn(oo,oo.ANY),go=mn(oo,oo.EQUALS),mo=mn(oo,oo.RADIANS),fo=mn(oo,oo.DEGREES),yo=mn(oo,oo.EXP),bo=mn(oo,oo.EXP2),xo=mn(oo,oo.LOG),To=mn(oo,oo.LOG2),_o=mn(oo,oo.SQRT),No=mn(oo,oo.INVERSE_SQRT),vo=mn(oo,oo.FLOOR),So=mn(oo,oo.CEIL),Ao=mn(oo,oo.NORMALIZE),Ro=mn(oo,oo.FRACT),Co=mn(oo,oo.SIN),Eo=mn(oo,oo.COS),wo=mn(oo,oo.TAN),Mo=mn(oo,oo.ASIN),Bo=mn(oo,oo.ACOS),Uo=mn(oo,oo.ATAN),Fo=mn(oo,oo.ABS),Po=mn(oo,oo.SIGN),Io=mn(oo,oo.LENGTH),Lo=mn(oo,oo.NEGATE),Do=mn(oo,oo.ONE_MINUS),Vo=mn(oo,oo.DFDX),Oo=mn(oo,oo.DFDY),Go=mn(oo,oo.ROUND),ko=mn(oo,oo.RECIPROCAL),zo=mn(oo,oo.TRUNC),$o=mn(oo,oo.FWIDTH),Ho=mn(oo,oo.BITCAST),Wo=mn(oo,oo.TRANSPOSE),jo=mn(oo,oo.ATAN2),qo=mn(oo,oo.MIN),Ko=mn(oo,oo.MAX),Xo=mn(oo,oo.MOD),Yo=mn(oo,oo.STEP),Qo=mn(oo,oo.REFLECT),Zo=mn(oo,oo.DISTANCE),Jo=mn(oo,oo.DIFFERENCE),ea=mn(oo,oo.DOT),ta=mn(oo,oo.CROSS),sa=mn(oo,oo.POW),ra=mn(oo,oo.POW,2),na=mn(oo,oo.POW,3),ia=mn(oo,oo.POW,4),oa=mn(oo,oo.TRANSFORM_DIRECTION),aa=e=>Gi(Po(e),sa(Fo(e),1/3)),ua=e=>ea(e,e),la=mn(oo,oo.MIX),da=(e,t=0,s=1)=>hn(new oo(oo.CLAMP,hn(e),hn(t),hn(s))),ca=e=>da(e),ha=mn(oo,oo.REFRACT),pa=mn(oo,oo.SMOOTHSTEP),ga=mn(oo,oo.FACEFORWARD),ma=yn((([e])=>{const t=ea(e.xy,En(12.9898,78.233)),s=Xo(t,lo);return Ro(Co(s).mul(43758.5453))})),fa=(e,t,s)=>la(t,s,e),ya=(e,t,s)=>pa(t,s,e);Vr("all",ho),Vr("any",po),Vr("equals",go),Vr("radians",mo),Vr("degrees",fo),Vr("exp",yo),Vr("exp2",bo),Vr("log",xo),Vr("log2",To),Vr("sqrt",_o),Vr("inverseSqrt",No),Vr("floor",vo),Vr("ceil",So),Vr("normalize",Ao),Vr("fract",Ro),Vr("sin",Co),Vr("cos",Eo),Vr("tan",wo),Vr("asin",Mo),Vr("acos",Bo),Vr("atan",Uo),Vr("abs",Fo),Vr("sign",Po),Vr("length",Io),Vr("lengthSq",ua),Vr("negate",Lo),Vr("oneMinus",Do),Vr("dFdx",Vo),Vr("dFdy",Oo),Vr("round",Go),Vr("reciprocal",ko),Vr("trunc",zo),Vr("fwidth",$o),Vr("atan2",jo),Vr("min",qo),Vr("max",Ko),Vr("mod",Xo),Vr("step",Yo),Vr("reflect",Qo),Vr("distance",Zo),Vr("dot",ea),Vr("cross",ta),Vr("pow",sa),Vr("pow2",ra),Vr("pow3",na),Vr("pow4",ia),Vr("transformDirection",oa),Vr("mix",fa),Vr("clamp",da),Vr("refract",ha),Vr("smoothstep",ya),Vr("faceForward",ga),Vr("difference",Jo),Vr("saturate",ca),Vr("cbrt",aa),Vr("transpose",Wo),Vr("rand",ma);class ba extends Ar{static get type(){return"ConditionalNode"}constructor(e,t,s=null){super(),this.condNode=e,this.ifNode=t,this.elseNode=s}getNodeType(e){const t=this.ifNode.getNodeType(e);if(null!==this.elseNode){const s=this.elseNode.getNodeType(e);if(e.getTypeLength(s)>e.getTypeLength(t))return s}return t}setup(e){const t=this.condNode.cache(),s=this.ifNode.cache(),r=this.elseNode?this.elseNode.cache():null,n=e.context.nodeBlock;e.getDataFromNode(s).parentNodeBlock=n,null!==r&&(e.getDataFromNode(r).parentNodeBlock=n);const i=e.getNodeProperties(this);i.condNode=t,i.ifNode=s.context({nodeBlock:s}),i.elseNode=r?r.context({nodeBlock:r}):null}generate(e,t){const s=this.getNodeType(e),r=e.getDataFromNode(this);if(void 0!==r.nodeProperty)return r.nodeProperty;const{condNode:n,ifNode:i,elseNode:o}=e.getNodeProperties(this),a="void"!==t,u=a?ri(s).build(e):"";r.nodeProperty=u;const l=n.build(e,"bool");e.addFlowCode(`\n${e.tab}if ( ${l} ) {\n\n`).addFlowTab();let d=i.build(e,s);if(d&&(d=a?u+" = "+d+";":"return "+d+";"),e.removeFlowTab().addFlowCode(e.tab+"\t"+d+"\n\n"+e.tab+"}"),null!==o){e.addFlowCode(" else {\n\n").addFlowTab();let t=o.build(e,s);t&&(t=a?u+" = "+t+";":"return "+t+";"),e.removeFlowTab().addFlowCode(e.tab+"\t"+t+"\n\n"+e.tab+"}\n\n")}else e.addFlowCode("\n\n");return e.format(u,s,t)}}const xa=mn(ba);Vr("select",xa);const Ta=(...e)=>(console.warn("TSL.ConditionalNode: cond() has been renamed to select()."),xa(...e));Vr("cond",Ta);class _a extends Ar{static get type(){return"ContextNode"}constructor(e,t={}){super(),this.isContextNode=!0,this.node=e,this.value=t}getScope(){return this.node.getScope()}getNodeType(e){return this.node.getNodeType(e)}analyze(e){this.node.build(e)}setup(e){const t=e.getContext();e.setContext({...e.context,...this.value});const s=this.node.build(e);return e.setContext(t),s}generate(e,t){const s=e.getContext();e.setContext({...e.context,...this.value});const r=this.node.build(e,t);return e.setContext(s),r}}const Na=mn(_a),va=(e,t)=>Na(e,{label:t});Vr("context",Na),Vr("label",va);class Sa extends Ar{static get type(){return"VarNode"}constructor(e,t=null){super(),this.node=e,this.name=t,this.global=!0,this.isVarNode=!0}getHash(e){return this.name||super.getHash(e)}getNodeType(e){return this.node.getNodeType(e)}generate(e){const{node:t,name:s}=this,r=e.getVarFromNode(this,s,e.getVectorType(this.getNodeType(e))),n=e.getPropertyName(r),i=t.build(e,r.type);return e.addLineFlowCode(`${n} = ${i}`,this),n}}const Aa=mn(Sa);Vr("toVar",((...e)=>Aa(...e).append()));const Ra=e=>(console.warn('TSL: "temp" is deprecated. Use ".toVar()" instead.'),Aa(e));Vr("temp",Ra);class Ca extends Ar{static get type(){return"VaryingNode"}constructor(e,t=null){super(),this.node=e,this.name=t,this.isVaryingNode=!0}isGlobal(){return!0}getHash(e){return this.name||super.getHash(e)}getNodeType(e){return this.node.getNodeType(e)}setupVarying(e){const t=e.getNodeProperties(this);let s=t.varying;if(void 0===s){const r=this.name,n=this.getNodeType(e);t.varying=s=e.getVaryingFromNode(this,r,n),t.node=this.node}return s.needsInterpolation||(s.needsInterpolation="fragment"===e.shaderStage),s}setup(e){this.setupVarying(e)}analyze(e){return this.setupVarying(e),this.node.analyze(e)}generate(e){const t=e.getNodeProperties(this),s=this.setupVarying(e);if(void 0===t.propertyName){const r=this.getNodeType(e),n=e.getPropertyName(s,yr.VERTEX);e.flowNodeFromShaderStage(yr.VERTEX,this.node,r,n),t.propertyName=n}return e.getPropertyName(s)}}const Ea=mn(Ca);Vr("varying",Ea);const wa=yn((([e])=>{const t=e.mul(.9478672986).add(.0521327014).pow(2.4),s=e.mul(.0773993808),r=e.lessThanEqual(.04045);return la(t,s,r)})).setLayout({name:"sRGBTransferEOTF",type:"vec3",inputs:[{name:"color",type:"vec3"}]}),Ma=yn((([e])=>{const t=e.pow(.41666).mul(1.055).sub(.055),s=e.mul(12.92),r=e.lessThanEqual(.0031308);return la(t,s,r)})).setLayout({name:"sRGBTransferOETF",type:"vec3",inputs:[{name:"color",type:"vec3"}]}),Ba="WorkingColorSpace",Ua="OutputColorSpace";class Fa extends Er{static get type(){return"ColorSpaceNode"}constructor(e,t,s){super("vec4"),this.colorNode=e,this.source=t,this.target=s}resolveColorSpace(e,t){return t===Ba?u.workingColorSpace:t===Ua?e.context.outputColorSpace||e.renderer.outputColorSpace:t}setup(e){const{colorNode:t}=this,s=this.resolveColorSpace(e,this.source),r=this.resolveColorSpace(e,this.target);let i=t;return!1!==u.enabled&&s!==r&&s&&r?(u.getTransfer(s)===l&&(i=Ln(wa(i.rgb),i.a)),u.getPrimaries(s)!==u.getPrimaries(r)&&(i=Ln(kn(u._getMatrix(new n,s,r)).mul(i.rgb),i.a)),u.getTransfer(r)===l&&(i=Ln(Ma(i.rgb),i.a)),i):i}}const Pa=e=>hn(new Fa(hn(e),Ba,Ua)),Ia=e=>hn(new Fa(hn(e),Ua,Ba)),La=(e,t)=>hn(new Fa(hn(e),Ba,t)),Da=(e,t)=>hn(new Fa(hn(e),t,Ba)),Va=(e,t,s)=>hn(new Fa(hn(e),t,s));Vr("toOutputColorSpace",Pa),Vr("toWorkingColorSpace",Ia),Vr("workingToColorSpace",La),Vr("colorSpaceToWorking",Da);let Oa=class extends Rr{static get type(){return"ReferenceElementNode"}constructor(e,t){super(e,t),this.referenceNode=e,this.isReferenceElementNode=!0}getNodeType(){return this.referenceNode.uniformType}generate(e){const t=super.generate(e),s=this.referenceNode.getNodeType(),r=this.getNodeType();return e.format(t,s,r)}};class Ga extends Ar{static get type(){return"ReferenceBaseNode"}constructor(e,t,s=null,r=null){super(),this.property=e,this.uniformType=t,this.object=s,this.count=r,this.properties=e.split("."),this.reference=s,this.node=null,this.group=null,this.updateType=br.OBJECT}setGroup(e){return this.group=e,this}element(e){return hn(new Oa(this,hn(e)))}setNodeType(e){const t=ti(null,e).getSelf();null!==this.group&&t.setGroup(this.group),this.node=t}getNodeType(e){return null===this.node&&(this.updateReference(e),this.updateValue()),this.node.getNodeType(e)}getValueFromReference(e=this.reference){const{properties:t}=this;let s=e[t[0]];for(let e=1;e<t.length;e++)s=s[t[e]];return s}updateReference(e){return this.reference=null!==this.object?this.object:e.object,this.reference}setup(){return this.updateValue(),this.node}update(){this.updateValue()}updateValue(){null===this.node&&this.setNodeType(this.uniformType);const e=this.getValueFromReference();Array.isArray(e)?this.node.array=e:this.node.value=e}}class ka extends Ga{static get type(){return"RendererReferenceNode"}constructor(e,t,s=null){super(e,t,s),this.renderer=s,this.setGroup(Zn)}updateReference(e){return this.reference=null!==this.renderer?this.renderer:e.renderer,this.reference}}const za=(e,t,s)=>hn(new ka(e,t,s));class $a extends Er{static get type(){return"ToneMappingNode"}constructor(e,t=Wa,s=null){super("vec3"),this.toneMapping=e,this.exposureNode=t,this.colorNode=s}getCacheKey(){return lr(super.getCacheKey(),this.toneMapping)}setup(e){const t=this.colorNode||e.context.color,s=this.toneMapping;if(s===d)return t;let r=null;const n=e.renderer.library.getToneMappingFunction(s);return null!==n?r=Ln(n(t.rgb,this.exposureNode),t.a):(console.error("ToneMappingNode: Unsupported Tone Mapping configuration.",s),r=t),r}}const Ha=(e,t,s)=>hn(new $a(e,hn(t),hn(s))),Wa=za("toneMappingExposure","float");Vr("toneMapping",((e,t,s)=>Ha(t,s,e)));class ja extends Pr{static get type(){return"BufferAttributeNode"}constructor(e,t=null,s=0,r=0){super(e,t),this.isBufferNode=!0,this.bufferType=t,this.bufferStride=s,this.bufferOffset=r,this.usage=c,this.instanced=!1,this.attribute=null,this.global=!0,e&&!0===e.isBufferAttribute&&(this.attribute=e,this.usage=e.usage,this.instanced=e.isInstancedBufferAttribute)}getHash(e){if(0===this.bufferStride&&0===this.bufferOffset){let t=e.globalCache.getData(this.value);return void 0===t&&(t={node:this},e.globalCache.setData(this.value,t)),t.node.uuid}return this.uuid}getNodeType(e){return null===this.bufferType&&(this.bufferType=e.getTypeFromAttribute(this.attribute)),this.bufferType}setup(e){if(null!==this.attribute)return;const t=this.getNodeType(e),s=this.value,r=e.getTypeLength(t),n=this.bufferStride||r,i=this.bufferOffset,o=!0===s.isInterleavedBuffer?s:new h(s,n),a=new g(o,r,i);o.setUsage(this.usage),this.attribute=a,this.attribute.isInstancedBufferAttribute=this.instanced}generate(e){const t=this.getNodeType(e),s=e.getBufferAttributeFromNode(this,t),r=e.getPropertyName(s);let n=null;if("vertex"===e.shaderStage||"compute"===e.shaderStage)this.name=r,n=r;else{n=Ea(this).build(e,t)}return n}getInputType(){return"bufferAttribute"}setUsage(e){return this.usage=e,this.attribute&&!0===this.attribute.isBufferAttribute&&(this.attribute.usage=e),this}setInstanced(e){return this.instanced=e,this}}const qa=(e,t,s,r)=>hn(new ja(e,t,s,r)),Ka=(e,t,s,r)=>qa(e,t,s,r).setUsage(p),Xa=(e,t,s,r)=>qa(e,t,s,r).setInstanced(!0),Ya=(e,t,s,r)=>Ka(e,t,s,r).setInstanced(!0);Vr("toAttribute",(e=>qa(e.value)));class Qa extends Ar{static get type(){return"ComputeNode"}constructor(e,t,s=[64]){super("void"),this.isComputeNode=!0,this.computeNode=e,this.count=t,this.workgroupSize=s,this.dispatchCount=0,this.version=1,this.updateBeforeType=br.OBJECT,this.onInitFunction=null,this.updateDispatchCount()}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(e){!0===e&&this.version++}updateDispatchCount(){const{count:e,workgroupSize:t}=this;let s=t[0];for(let e=1;e<t.length;e++)s*=t[e];this.dispatchCount=Math.ceil(e/s)}onInit(e){return this.onInitFunction=e,this}updateBefore({renderer:e}){e.compute(this)}generate(e){const{shaderStage:t}=e;if("compute"===t){const t=this.computeNode.build(e,"void");""!==t&&e.addLineFlowCode(t,this)}}}const Za=(e,t,s)=>hn(new Qa(hn(e),t,s));Vr("compute",Za);class Ja extends Ar{static get type(){return"CacheNode"}constructor(e,t=!0){super(),this.node=e,this.parent=t,this.isCacheNode=!0}getNodeType(e){return this.node.getNodeType(e)}build(e,...t){const s=e.getCache(),r=e.getCacheFromNode(this,this.parent);e.setCache(r);const n=this.node.build(e,...t);return e.setCache(s),n}}const eu=(e,...t)=>hn(new Ja(hn(e),...t));Vr("cache",eu);class tu extends Ar{static get type(){return"BypassNode"}constructor(e,t){super(),this.isBypassNode=!0,this.outputNode=e,this.callNode=t}getNodeType(e){return this.outputNode.getNodeType(e)}generate(e){const t=this.callNode.build(e,"void");return""!==t&&e.addLineFlowCode(t,this),this.outputNode.build(e)}}const su=mn(tu);Vr("bypass",su);class ru extends Ar{static get type(){return"RemapNode"}constructor(e,t,s,r=Sn(0),n=Sn(1)){super(),this.node=e,this.inLowNode=t,this.inHighNode=s,this.outLowNode=r,this.outHighNode=n,this.doClamp=!0}setup(){const{node:e,inLowNode:t,inHighNode:s,outLowNode:r,outHighNode:n,doClamp:i}=this;let o=e.sub(t).div(s.sub(t));return!0===i&&(o=o.clamp()),o.mul(n.sub(r)).add(r)}}const nu=mn(ru,null,null,{doClamp:!1}),iu=mn(ru);Vr("remap",nu),Vr("remapClamp",iu);class ou extends Ar{static get type(){return"ExpressionNode"}constructor(e="",t="void"){super(t),this.snippet=e}generate(e,t){const s=this.getNodeType(e),r=this.snippet;if("void"!==s)return e.format(`( ${r} )`,s,t);e.addLineFlowCode(r,this)}}const au=mn(ou),uu=e=>(e?xa(e,au("discard")):au("discard")).append(),lu=()=>au("return").append();Vr("discard",uu);class du extends Er{static get type(){return"RenderOutputNode"}constructor(e,t,s){super("vec4"),this.colorNode=e,this.toneMapping=t,this.outputColorSpace=s,this.isRenderOutput=!0}setup({context:e}){let t=this.colorNode||e.color;const s=(null!==this.toneMapping?this.toneMapping:e.toneMapping)||d,r=(null!==this.outputColorSpace?this.outputColorSpace:e.outputColorSpace)||m;return s!==d&&(t=t.toneMapping(s)),r!==m&&r!==u.workingColorSpace&&(t=t.workingToColorSpace(r)),t}}const cu=(e,t=null,s=null)=>hn(new du(hn(e),t,s));function hu(e){console.warn("THREE.TSLBase: AddNodeElement has been removed in favor of tree-shaking. Trying add",e)}Vr("renderOutput",cu);class pu extends Ar{static get type(){return"AttributeNode"}constructor(e,t=null){super(t),this.global=!0,this._attributeName=e}getHash(e){return this.getAttributeName(e)}getNodeType(e){let t=this.nodeType;if(null===t){const s=this.getAttributeName(e);if(e.hasGeometryAttribute(s)){const r=e.geometry.getAttribute(s);t=e.getTypeFromAttribute(r)}else t="float"}return t}setAttributeName(e){return this._attributeName=e,this}getAttributeName(){return this._attributeName}generate(e){const t=this.getAttributeName(e),s=this.getNodeType(e);if(!0===e.hasGeometryAttribute(t)){const r=e.geometry.getAttribute(t),n=e.getTypeFromAttribute(r),i=e.getAttribute(t,n);if("vertex"===e.shaderStage)return e.format(i.name,n,s);return Ea(this).build(e,s)}return console.warn(`AttributeNode: Vertex attribute "${t}" not found on geometry.`),e.generateConst(s)}serialize(e){super.serialize(e),e.global=this.global,e._attributeName=this._attributeName}deserialize(e){super.deserialize(e),this.global=e.global,this._attributeName=e._attributeName}}const gu=(e,t)=>hn(new pu(e,t)),mu=e=>gu("uv"+(e>0?e:""),"vec2");class fu extends Ar{static get type(){return"TextureSizeNode"}constructor(e,t=null){super("uvec2"),this.isTextureSizeNode=!0,this.textureNode=e,this.levelNode=t}generate(e,t){const s=this.textureNode.build(e,"property"),r=null===this.levelNode?"0":this.levelNode.build(e,"int");return e.format(`${e.getMethod("textureDimensions")}( ${s}, ${r} )`,this.getNodeType(e),t)}}const yu=mn(fu);class bu extends ei{static get type(){return"MaxMipLevelNode"}constructor(e){super(0),this._textureNode=e,this.updateType=br.FRAME}get textureNode(){return this._textureNode}get texture(){return this._textureNode.value}update(){const e=this.texture,t=e.images,s=t&&t.length>0?t[0]&&t[0].image||t[0]:e.image;if(s&&void 0!==s.width){const{width:e,height:t}=s;this.value=Math.log2(Math.max(e,t))}}}const xu=mn(bu);class Tu extends ei{static get type(){return"TextureNode"}constructor(e,t=null,s=null,r=null){super(e),this.isTextureNode=!0,this.uvNode=t,this.levelNode=s,this.biasNode=r,this.compareNode=null,this.depthNode=null,this.gradNode=null,this.sampler=!0,this.updateMatrix=!1,this.updateType=br.NONE,this.referenceNode=null,this._value=e,this._matrixUniform=null,this.setUpdateMatrix(null===t)}set value(e){this.referenceNode?this.referenceNode.value=e:this._value=e}get value(){return this.referenceNode?this.referenceNode.value:this._value}getUniformHash(){return this.value.uuid}getNodeType(){return!0===this.value.isDepthTexture?"float":this.value.type===f?"uvec4":this.value.type===y?"ivec4":"vec4"}getInputType(){return"texture"}getDefaultUV(){return mu(this.value.channel)}updateReference(){return this.value}getTransformedUV(e){return null===this._matrixUniform&&(this._matrixUniform=ti(this.value.matrix)),this._matrixUniform.mul(Un(e,1)).xy}setUpdateMatrix(e){return this.updateMatrix=e,this.updateType=e?br.FRAME:br.NONE,this}setupUV(e,t){const s=this.value;return!e.isFlipY()||!0!==s.isRenderTargetTexture&&!0!==s.isFramebufferTexture&&!0!==s.isDepthTexture||(t=this.sampler?t.flipY():t.setY(An(yu(this,this.levelNode).y).sub(t.y).sub(1))),t}setup(e){const t=e.getNodeProperties(this);t.referenceNode=this.referenceNode;let s=this.uvNode;null!==s&&!0!==e.context.forceUVContext||!e.context.getUV||(s=e.context.getUV(this)),s||(s=this.getDefaultUV()),!0===this.updateMatrix&&(s=this.getTransformedUV(s)),s=this.setupUV(e,s);let r=this.levelNode;null===r&&e.context.getTextureLevel&&(r=e.context.getTextureLevel(this)),t.uvNode=s,t.levelNode=r,t.biasNode=this.biasNode,t.compareNode=this.compareNode,t.gradNode=this.gradNode,t.depthNode=this.depthNode}generateUV(e,t){return t.build(e,!0===this.sampler?"vec2":"ivec2")}generateSnippet(e,t,s,r,n,i,o,a){const u=this.value;let l;return l=r?e.generateTextureLevel(u,t,s,r,i):n?e.generateTextureBias(u,t,s,n,i):a?e.generateTextureGrad(u,t,s,a,i):o?e.generateTextureCompare(u,t,s,o,i):!1===this.sampler?e.generateTextureLoad(u,t,s,i):e.generateTexture(u,t,s,i),l}generate(e,t){const s=e.getNodeProperties(this),r=this.value;if(!r||!0!==r.isTexture)throw new Error("TextureNode: Need a three.js texture.");const n=super.generate(e,"property");if("sampler"===t)return n+"_sampler";if(e.isReference(t))return n;{const i=e.getDataFromNode(this);let o=i.propertyName;if(void 0===o){const{uvNode:t,levelNode:r,biasNode:a,compareNode:u,depthNode:l,gradNode:d}=s,c=this.generateUV(e,t),h=r?r.build(e,"float"):null,p=a?a.build(e,"float"):null,g=l?l.build(e,"int"):null,m=u?u.build(e,"float"):null,f=d?[d[0].build(e,"vec2"),d[1].build(e,"vec2")]:null,y=e.getVarFromNode(this);o=e.getPropertyName(y);const b=this.generateSnippet(e,n,c,h,p,g,m,f);e.addLineFlowCode(`${o} = ${b}`,this),i.snippet=b,i.propertyName=o}let a=o;const u=this.getNodeType(e);return e.needsToWorkingColorSpace(r)&&(a=Da(au(a,u),r.colorSpace).setup(e).build(e,u)),e.format(a,u,t)}}setSampler(e){return this.sampler=e,this}getSampler(){return this.sampler}uv(e){const t=this.clone();return t.uvNode=hn(e),t.referenceNode=this.getSelf(),hn(t)}blur(e){const t=this.clone();return t.biasNode=hn(e).mul(xu(t)),t.referenceNode=this.getSelf(),hn(t)}level(e){const t=this.clone();return t.levelNode=hn(e),t.referenceNode=this.getSelf(),hn(t)}size(e){return yu(this,e)}bias(e){const t=this.clone();return t.biasNode=hn(e),t.referenceNode=this.getSelf(),hn(t)}compare(e){const t=this.clone();return t.compareNode=hn(e),t.referenceNode=this.getSelf(),hn(t)}grad(e,t){const s=this.clone();return s.gradNode=[hn(e),hn(t)],s.referenceNode=this.getSelf(),hn(s)}depth(e){const t=this.clone();return t.depthNode=hn(e),t.referenceNode=this.getSelf(),hn(t)}serialize(e){super.serialize(e),e.value=this.value.toJSON(e.meta).uuid,e.sampler=this.sampler,e.updateMatrix=this.updateMatrix,e.updateType=this.updateType}deserialize(e){super.deserialize(e),this.value=e.meta.textures[e.value],this.sampler=e.sampler,this.updateMatrix=e.updateMatrix,this.updateType=e.updateType}update(){const e=this.value,t=this._matrixUniform;null!==t&&(t.value=e.matrix),!0===e.matrixAutoUpdate&&e.updateMatrix()}clone(){const e=new this.constructor(this.value,this.uvNode,this.levelNode,this.biasNode);return e.sampler=this.sampler,e}}const _u=mn(Tu),Nu=(...e)=>_u(...e).setSampler(!1),vu=e=>(!0===e.isNode?e:_u(e)).convert("sampler"),Su=ti("float").label("cameraNear").setGroup(Zn).onRenderUpdate((({camera:e})=>e.near)),Au=ti("float").label("cameraFar").setGroup(Zn).onRenderUpdate((({camera:e})=>e.far)),Ru=ti("mat4").label("cameraProjectionMatrix").setGroup(Zn).onRenderUpdate((({camera:e})=>e.projectionMatrix)),Cu=ti("mat4").label("cameraProjectionMatrixInverse").setGroup(Zn).onRenderUpdate((({camera:e})=>e.projectionMatrixInverse)),Eu=ti("mat4").label("cameraViewMatrix").setGroup(Zn).onRenderUpdate((({camera:e})=>e.matrixWorldInverse)),wu=ti("mat4").label("cameraWorldMatrix").setGroup(Zn).onRenderUpdate((({camera:e})=>e.matrixWorld)),Mu=ti("mat3").label("cameraNormalMatrix").setGroup(Zn).onRenderUpdate((({camera:e})=>e.normalMatrix)),Bu=ti(new s).label("cameraPosition").setGroup(Zn).onRenderUpdate((({camera:e},t)=>t.value.setFromMatrixPosition(e.matrixWorld)));class Uu extends Ar{static get type(){return"Object3DNode"}constructor(e,t=null){super(),this.scope=e,this.object3d=t,this.updateType=br.OBJECT,this._uniformNode=new ei(null)}getNodeType(){const e=this.scope;return e===Uu.WORLD_MATRIX?"mat4":e===Uu.POSITION||e===Uu.VIEW_POSITION||e===Uu.DIRECTION||e===Uu.SCALE?"vec3":void 0}update(e){const t=this.object3d,r=this._uniformNode,n=this.scope;if(n===Uu.WORLD_MATRIX)r.value=t.matrixWorld;else if(n===Uu.POSITION)r.value=r.value||new s,r.value.setFromMatrixPosition(t.matrixWorld);else if(n===Uu.SCALE)r.value=r.value||new s,r.value.setFromMatrixScale(t.matrixWorld);else if(n===Uu.DIRECTION)r.value=r.value||new s,t.getWorldDirection(r.value);else if(n===Uu.VIEW_POSITION){const n=e.camera;r.value=r.value||new s,r.value.setFromMatrixPosition(t.matrixWorld),r.value.applyMatrix4(n.matrixWorldInverse)}}generate(e){const t=this.scope;return t===Uu.WORLD_MATRIX?this._uniformNode.nodeType="mat4":t!==Uu.POSITION&&t!==Uu.VIEW_POSITION&&t!==Uu.DIRECTION&&t!==Uu.SCALE||(this._uniformNode.nodeType="vec3"),this._uniformNode.build(e)}serialize(e){super.serialize(e),e.scope=this.scope}deserialize(e){super.deserialize(e),this.scope=e.scope}}Uu.WORLD_MATRIX="worldMatrix",Uu.POSITION="position",Uu.SCALE="scale",Uu.VIEW_POSITION="viewPosition",Uu.DIRECTION="direction";const Fu=mn(Uu,Uu.DIRECTION),Pu=mn(Uu,Uu.WORLD_MATRIX),Iu=mn(Uu,Uu.POSITION),Lu=mn(Uu,Uu.SCALE),Du=mn(Uu,Uu.VIEW_POSITION);class Vu extends Uu{static get type(){return"ModelNode"}constructor(e){super(e)}update(e){this.object3d=e.object,super.update(e)}}const Ou=fn(Vu,Vu.DIRECTION),Gu=fn(Vu,Vu.WORLD_MATRIX),ku=fn(Vu,Vu.POSITION),zu=fn(Vu,Vu.SCALE),$u=fn(Vu,Vu.VIEW_POSITION),Hu=ti(new n).onObjectUpdate((({object:e},t)=>t.value.getNormalMatrix(e.matrixWorld))),Wu=ti(new i).onObjectUpdate((({object:e},t)=>t.value.copy(e.matrixWorld).invert())),ju=Eu.mul(Gu).toVar("modelViewMatrix"),qu=yn((e=>(e.context.isHighPrecisionModelViewMatrix=!0,ti("mat4").onObjectUpdate((({object:e,camera:t})=>e.modelViewMatrix.multiplyMatrices(t.matrixWorldInverse,e.matrixWorld)))))).once()().toVar("highPrecisionModelViewMatrix"),Ku=yn((e=>{const t=e.context.isHighPrecisionModelViewMatrix;return ti("mat3").onObjectUpdate((({object:e,camera:s})=>(!0!==t&&e.modelViewMatrix.multiplyMatrices(s.matrixWorldInverse,e.matrixWorld),e.normalMatrix.getNormalMatrix(e.modelViewMatrix))))})).once()().toVar("highPrecisionModelNormalMatrix"),Xu=gu("position","vec3"),Yu=Xu.varying("positionLocal"),Qu=Xu.varying("positionPrevious"),Zu=Gu.mul(Yu).xyz.varying("v_positionWorld"),Ju=Yu.transformDirection(Gu).varying("v_positionWorldDirection").normalize().toVar("positionWorldDirection"),el=ju.mul(Yu).xyz.varying("v_positionView"),tl=el.negate().varying("v_positionViewDirection").normalize().toVar("positionViewDirection");class sl extends Ar{static get type(){return"FrontFacingNode"}constructor(){super("bool"),this.isFrontFacingNode=!0}generate(e){const{renderer:t,material:s}=e;return t.coordinateSystem===b&&s.side===x?"false":e.getFrontFacing()}}const rl=fn(sl),nl=Sn(rl).mul(2).sub(1),il=gu("normal","vec3"),ol=yn((e=>!1===e.geometry.hasAttribute("normal")?(console.warn('TSL.NormalNode: Vertex attribute "normal" not found on geometry.'),Un(0,1,0)):il),"vec3").once()().toVar("normalLocal"),al=el.dFdx().cross(el.dFdy()).normalize().toVar("normalFlat"),ul=yn((e=>{let t;return t=!0===e.material.flatShading?al:Ea(gl(ol),"v_normalView").normalize(),t}),"vec3").once()().toVar("normalView"),ll=Ea(ul.transformDirection(Eu),"v_normalWorld").normalize().toVar("normalWorld"),dl=yn((e=>e.context.setupNormal()),"vec3").once()().mul(nl).toVar("transformedNormalView"),cl=dl.transformDirection(Eu).toVar("transformedNormalWorld"),hl=yn((e=>e.context.setupClearcoatNormal()),"vec3").once()().mul(nl).toVar("transformedClearcoatNormalView"),pl=yn((([e,t=Gu])=>{const s=kn(t),r=e.div(Un(s[0].dot(s[0]),s[1].dot(s[1]),s[2].dot(s[2])));return s.mul(r).xyz})),gl=yn((([e],t)=>{const s=t.renderer.nodes.modelNormalViewMatrix;if(null!==s)return s.transformDirection(e);const r=Hu.mul(e);return Eu.transformDirection(r)})),ml=ti(0).onReference((({material:e})=>e)).onRenderUpdate((({material:e})=>e.refractionRatio)),fl=tl.negate().reflect(dl),yl=tl.negate().refract(dl,ml),bl=fl.transformDirection(Eu).toVar("reflectVector"),xl=yl.transformDirection(Eu).toVar("reflectVector");class Tl extends Tu{static get type(){return"CubeTextureNode"}constructor(e,t=null,s=null,r=null){super(e,t,s,r),this.isCubeTextureNode=!0}getInputType(){return"cubeTexture"}getDefaultUV(){const e=this.value;return e.mapping===T?bl:e.mapping===_?xl:(console.error('THREE.CubeTextureNode: Mapping "%s" not supported.',e.mapping),Un(0,0,0))}setUpdateMatrix(){}setupUV(e,t){const s=this.value;return e.renderer.coordinateSystem!==N&&s.isRenderTargetTexture?t:Un(t.x.negate(),t.yz)}generateUV(e,t){return t.build(e,"vec3")}}const _l=mn(Tl);class Nl extends ei{static get type(){return"BufferNode"}constructor(e,t,s=0){super(e,t),this.isBufferNode=!0,this.bufferType=t,this.bufferCount=s}getElementType(e){return this.getNodeType(e)}getInputType(){return"buffer"}}const vl=(e,t,s)=>hn(new Nl(e,t,s));class Sl extends Rr{static get type(){return"UniformArrayElementNode"}constructor(e,t){super(e,t),this.isArrayBufferElementNode=!0}generate(e){const t=super.generate(e),s=this.getNodeType();return e.format(t,"vec4",s)}}class Al extends Nl{static get type(){return"UniformArrayNode"}constructor(e,t=null){super(null,"vec4"),this.array=e,this.elementType=t,this._elementType=null,this._elementLength=0,this.updateType=br.RENDER,this.isArrayBufferNode=!0}getElementType(){return this.elementType||this._elementType}getElementLength(){return this._elementLength}update(){const{array:e,value:t}=this,s=this.getElementLength(),r=this.getElementType();if(1===s)for(let s=0;s<e.length;s++){t[4*s]=e[s]}else if("color"===r)for(let s=0;s<e.length;s++){const r=4*s,n=e[s];t[r]=n.r,t[r+1]=n.g,t[r+2]=n.b||0}else for(let s=0;s<e.length;s++){const r=4*s,n=e[s];t[r]=n.x,t[r+1]=n.y,t[r+2]=n.z||0,t[r+3]=n.w||0}}setup(e){const t=this.array.length;this._elementType=null===this.elementType?hr(this.array[0]):this.elementType,this._elementLength=e.getTypeLength(this._elementType);let s=Float32Array;return"i"===this._elementType.charAt(0)?s=Int32Array:"u"===this._elementType.charAt(0)&&(s=Uint32Array),this.value=new s(4*t),this.bufferCount=t,this.bufferType=e.changeComponentType("vec4",e.getComponentType(this._elementType)),super.setup(e)}element(e){return hn(new Sl(this,hn(e)))}}const Rl=(e,t)=>hn(new Al(e,t)),Cl=(e,t)=>(console.warn("TSL.UniformArrayNode: uniforms() has been renamed to uniformArray()."),hn(new Al(e,t)));class El extends Rr{static get type(){return"ReferenceElementNode"}constructor(e,t){super(e,t),this.referenceNode=e,this.isReferenceElementNode=!0}getNodeType(){return this.referenceNode.uniformType}generate(e){const t=super.generate(e),s=this.referenceNode.getNodeType(),r=this.getNodeType();return e.format(t,s,r)}}class wl extends Ar{static get type(){return"ReferenceNode"}constructor(e,t,s=null,r=null){super(),this.property=e,this.uniformType=t,this.object=s,this.count=r,this.properties=e.split("."),this.reference=s,this.node=null,this.group=null,this.name=null,this.updateType=br.OBJECT}element(e){return hn(new El(this,hn(e)))}setGroup(e){return this.group=e,this}label(e){return this.name=e,this}setNodeType(e){let t=null;t=null!==this.count?vl(null,e,this.count):Array.isArray(this.getValueFromReference())?Rl(null,e):"texture"===e?_u(null):"cubeTexture"===e?_l(null):ti(null,e),null!==this.group&&t.setGroup(this.group),null!==this.name&&t.label(this.name),this.node=t.getSelf()}getNodeType(e){return null===this.node&&(this.updateReference(e),this.updateValue()),this.node.getNodeType(e)}getValueFromReference(e=this.reference){const{properties:t}=this;let s=e[t[0]];for(let e=1;e<t.length;e++)s=s[t[e]];return s}updateReference(e){return this.reference=null!==this.object?this.object:e.object,this.reference}setup(){return this.updateValue(),this.node}update(){this.updateValue()}updateValue(){null===this.node&&this.setNodeType(this.uniformType);const e=this.getValueFromReference();Array.isArray(e)?this.node.array=e:this.node.value=e}}const Ml=(e,t,s)=>hn(new wl(e,t,s)),Bl=(e,t,s,r)=>hn(new wl(e,t,r,s));class Ul extends wl{static get type(){return"MaterialReferenceNode"}constructor(e,t,s=null){super(e,t,s),this.material=s,this.isMaterialReferenceNode=!0}updateReference(e){return this.reference=null!==this.material?this.material:e.material,this.reference}}const Fl=(e,t,s)=>hn(new Ul(e,t,s)),Pl=yn((e=>(!1===e.geometry.hasAttribute("tangent")&&e.geometry.computeTangents(),gu("tangent","vec4"))))(),Il=Pl.xyz.toVar("tangentLocal"),Ll=ju.mul(Ln(Il,0)).xyz.varying("v_tangentView").normalize().toVar("tangentView"),Dl=Ll.transformDirection(Eu).varying("v_tangentWorld").normalize().toVar("tangentWorld"),Vl=Ll.toVar("transformedTangentView"),Ol=Vl.transformDirection(Eu).normalize().toVar("transformedTangentWorld"),Gl=e=>e.mul(Pl.w).xyz,kl=Ea(Gl(il.cross(Pl)),"v_bitangentGeometry").normalize().toVar("bitangentGeometry"),zl=Ea(Gl(ol.cross(Il)),"v_bitangentLocal").normalize().toVar("bitangentLocal"),$l=Ea(Gl(ul.cross(Ll)),"v_bitangentView").normalize().toVar("bitangentView"),Hl=Ea(Gl(ll.cross(Dl)),"v_bitangentWorld").normalize().toVar("bitangentWorld"),Wl=Gl(dl.cross(Vl)).normalize().toVar("transformedBitangentView"),jl=Wl.transformDirection(Eu).normalize().toVar("transformedBitangentWorld"),ql=kn(Ll,$l,ul),Kl=tl.mul(ql),Xl=(e,t)=>e.sub(Kl.mul(t)),Yl=(()=>{let e=xi.cross(tl);return e=e.cross(xi).normalize(),e=la(e,dl,yi.mul(ai.oneMinus()).oneMinus().pow2().pow2()).normalize(),e})(),Ql=yn((e=>{const{eye_pos:t,surf_norm:s,mapN:r,uv:n}=e,i=t.dFdx(),o=t.dFdy(),a=n.dFdx(),u=n.dFdy(),l=s,d=o.cross(l),c=l.cross(i),h=d.mul(a.x).add(c.mul(u.x)),p=d.mul(a.y).add(c.mul(u.y)),g=h.dot(h).max(p.dot(p)),m=nl.mul(g.inverseSqrt());return Vi(h.mul(r.x,m),p.mul(r.y,m),l.mul(r.z)).normalize()}));class Zl extends Er{static get type(){return"NormalMapNode"}constructor(e,t=null){super("vec3"),this.node=e,this.scaleNode=t,this.normalMapType=v}setup(e){const{normalMapType:t,scaleNode:s}=this;let r=this.node.mul(2).sub(1);null!==s&&(r=Un(r.xy.mul(s),r.z));let n=null;if(t===S)n=gl(r);else if(t===v){n=!0===e.hasGeometryAttribute("tangent")?ql.mul(r).normalize():Ql({eye_pos:el,surf_norm:ul,mapN:r,uv:mu()})}return n}}const Jl=mn(Zl),ed=yn((({textureNode:e,bumpScale:t})=>{const s=t=>e.cache().context({getUV:e=>t(e.uvNode||mu()),forceUVContext:!0}),r=Sn(s((e=>e)));return En(Sn(s((e=>e.add(e.dFdx())))).sub(r),Sn(s((e=>e.add(e.dFdy())))).sub(r)).mul(t)})),td=yn((e=>{const{surf_pos:t,surf_norm:s,dHdxy:r}=e,n=t.dFdx().normalize(),i=s,o=t.dFdy().normalize().cross(i),a=i.cross(n),u=n.dot(o).mul(nl),l=u.sign().mul(r.x.mul(o).add(r.y.mul(a)));return u.abs().mul(s).sub(l).normalize()}));class sd extends Er{static get type(){return"BumpMapNode"}constructor(e,t=null){super("vec3"),this.textureNode=e,this.scaleNode=t}setup(){const e=null!==this.scaleNode?this.scaleNode:1,t=ed({textureNode:this.textureNode,bumpScale:e});return td({surf_pos:el,surf_norm:ul,dHdxy:t})}}const rd=mn(sd),nd=new Map;class id extends Ar{static get type(){return"MaterialNode"}constructor(e){super(),this.scope=e}getCache(e,t){let s=nd.get(e);return void 0===s&&(s=Fl(e,t),nd.set(e,s)),s}getFloat(e){return this.getCache(e,"float")}getColor(e){return this.getCache(e,"color")}getTexture(e){return this.getCache("map"===e?"map":e+"Map","texture")}setup(e){const t=e.context.material,s=this.scope;let r=null;if(s===id.COLOR){const e=void 0!==t.color?this.getColor(s):Un();r=t.map&&!0===t.map.isTexture?e.mul(this.getTexture("map")):e}else if(s===id.OPACITY){const e=this.getFloat(s);r=t.alphaMap&&!0===t.alphaMap.isTexture?e.mul(this.getTexture("alpha")):e}else if(s===id.SPECULAR_STRENGTH)r=t.specularMap&&!0===t.specularMap.isTexture?this.getTexture("specular").r:Sn(1);else if(s===id.SPECULAR_INTENSITY){const e=this.getFloat(s);r=t.specularMap?e.mul(this.getTexture(s).a):e}else if(s===id.SPECULAR_COLOR){const e=this.getColor(s);r=t.specularColorMap&&!0===t.specularColorMap.isTexture?e.mul(this.getTexture(s).rgb):e}else if(s===id.ROUGHNESS){const e=this.getFloat(s);r=t.roughnessMap&&!0===t.roughnessMap.isTexture?e.mul(this.getTexture(s).g):e}else if(s===id.METALNESS){const e=this.getFloat(s);r=t.metalnessMap&&!0===t.metalnessMap.isTexture?e.mul(this.getTexture(s).b):e}else if(s===id.EMISSIVE){const e=this.getFloat("emissiveIntensity"),n=this.getColor(s).mul(e);r=t.emissiveMap&&!0===t.emissiveMap.isTexture?n.mul(this.getTexture(s)):n}else if(s===id.NORMAL)t.normalMap?(r=Jl(this.getTexture("normal"),this.getCache("normalScale","vec2")),r.normalMapType=t.normalMapType):r=t.bumpMap?rd(this.getTexture("bump").r,this.getFloat("bumpScale")):ul;else if(s===id.CLEARCOAT){const e=this.getFloat(s);r=t.clearcoatMap&&!0===t.clearcoatMap.isTexture?e.mul(this.getTexture(s).r):e}else if(s===id.CLEARCOAT_ROUGHNESS){const e=this.getFloat(s);r=t.clearcoatRoughnessMap&&!0===t.clearcoatRoughnessMap.isTexture?e.mul(this.getTexture(s).r):e}else if(s===id.CLEARCOAT_NORMAL)r=t.clearcoatNormalMap?Jl(this.getTexture(s),this.getCache(s+"Scale","vec2")):ul;else if(s===id.SHEEN){const e=this.getColor("sheenColor").mul(this.getFloat("sheen"));r=t.sheenColorMap&&!0===t.sheenColorMap.isTexture?e.mul(this.getTexture("sheenColor").rgb):e}else if(s===id.SHEEN_ROUGHNESS){const e=this.getFloat(s);r=t.sheenRoughnessMap&&!0===t.sheenRoughnessMap.isTexture?e.mul(this.getTexture(s).a):e,r=r.clamp(.07,1)}else if(s===id.ANISOTROPY)if(t.anisotropyMap&&!0===t.anisotropyMap.isTexture){const e=this.getTexture(s);r=Gn($d.x,$d.y,$d.y.negate(),$d.x).mul(e.rg.mul(2).sub(En(1)).normalize().mul(e.b))}else r=$d;else if(s===id.IRIDESCENCE_THICKNESS){const e=Ml("1","float",t.iridescenceThicknessRange);if(t.iridescenceThicknessMap){const n=Ml("0","float",t.iridescenceThicknessRange);r=e.sub(n).mul(this.getTexture(s).g).add(n)}else r=e}else if(s===id.TRANSMISSION){const e=this.getFloat(s);r=t.transmissionMap?e.mul(this.getTexture(s).r):e}else if(s===id.THICKNESS){const e=this.getFloat(s);r=t.thicknessMap?e.mul(this.getTexture(s).g):e}else if(s===id.IOR)r=this.getFloat(s);else if(s===id.LIGHT_MAP)r=this.getTexture(s).rgb.mul(this.getFloat("lightMapIntensity"));else if(s===id.AO_MAP)r=this.getTexture(s).r.sub(1).mul(this.getFloat("aoMapIntensity")).add(1);else{const t=this.getNodeType(e);r=this.getCache(s,t)}return r}}id.ALPHA_TEST="alphaTest",id.COLOR="color",id.OPACITY="opacity",id.SHININESS="shininess",id.SPECULAR="specular",id.SPECULAR_STRENGTH="specularStrength",id.SPECULAR_INTENSITY="specularIntensity",id.SPECULAR_COLOR="specularColor",id.REFLECTIVITY="reflectivity",id.ROUGHNESS="roughness",id.METALNESS="metalness",id.NORMAL="normal",id.CLEARCOAT="clearcoat",id.CLEARCOAT_ROUGHNESS="clearcoatRoughness",id.CLEARCOAT_NORMAL="clearcoatNormal",id.EMISSIVE="emissive",id.ROTATION="rotation",id.SHEEN="sheen",id.SHEEN_ROUGHNESS="sheenRoughness",id.ANISOTROPY="anisotropy",id.IRIDESCENCE="iridescence",id.IRIDESCENCE_IOR="iridescenceIOR",id.IRIDESCENCE_THICKNESS="iridescenceThickness",id.IOR="ior",id.TRANSMISSION="transmission",id.THICKNESS="thickness",id.ATTENUATION_DISTANCE="attenuationDistance",id.ATTENUATION_COLOR="attenuationColor",id.LINE_SCALE="scale",id.LINE_DASH_SIZE="dashSize",id.LINE_GAP_SIZE="gapSize",id.LINE_WIDTH="linewidth",id.LINE_DASH_OFFSET="dashOffset",id.POINT_WIDTH="pointWidth",id.DISPERSION="dispersion",id.LIGHT_MAP="light",id.AO_MAP="ao";const od=fn(id,id.ALPHA_TEST),ad=fn(id,id.COLOR),ud=fn(id,id.SHININESS),ld=fn(id,id.EMISSIVE),dd=fn(id,id.OPACITY),cd=fn(id,id.SPECULAR),hd=fn(id,id.SPECULAR_INTENSITY),pd=fn(id,id.SPECULAR_COLOR),gd=fn(id,id.SPECULAR_STRENGTH),md=fn(id,id.REFLECTIVITY),fd=fn(id,id.ROUGHNESS),yd=fn(id,id.METALNESS),bd=fn(id,id.NORMAL).context({getUV:null}),xd=fn(id,id.CLEARCOAT),Td=fn(id,id.CLEARCOAT_ROUGHNESS),_d=fn(id,id.CLEARCOAT_NORMAL).context({getUV:null}),Nd=fn(id,id.ROTATION),vd=fn(id,id.SHEEN),Sd=fn(id,id.SHEEN_ROUGHNESS),Ad=fn(id,id.ANISOTROPY),Rd=fn(id,id.IRIDESCENCE),Cd=fn(id,id.IRIDESCENCE_IOR),Ed=fn(id,id.IRIDESCENCE_THICKNESS),wd=fn(id,id.TRANSMISSION),Md=fn(id,id.THICKNESS),Bd=fn(id,id.IOR),Ud=fn(id,id.ATTENUATION_DISTANCE),Fd=fn(id,id.ATTENUATION_COLOR),Pd=fn(id,id.LINE_SCALE),Id=fn(id,id.LINE_DASH_SIZE),Ld=fn(id,id.LINE_GAP_SIZE),Dd=fn(id,id.LINE_WIDTH),Vd=fn(id,id.LINE_DASH_OFFSET),Od=fn(id,id.POINT_WIDTH),Gd=fn(id,id.DISPERSION),kd=fn(id,id.LIGHT_MAP),zd=fn(id,id.AO_MAP),$d=ti(new t).onReference((function(e){return e.material})).onRenderUpdate((function({material:e}){this.value.set(e.anisotropy*Math.cos(e.anisotropyRotation),e.anisotropy*Math.sin(e.anisotropyRotation))}));class Hd extends Er{static get type(){return"ModelViewProjectionNode"}constructor(e=null){super("vec4"),this.positionNode=e}setup(e){if("fragment"===e.shaderStage)return Ea(e.context.mvp);const t=this.positionNode||Yu,s=e.renderer.nodes.modelViewMatrix||ju;return Ru.mul(s).mul(t)}}const Wd=mn(Hd);class jd extends Ar{static get type(){return"IndexNode"}constructor(e){super("uint"),this.scope=e,this.isInstanceIndexNode=!0}generate(e){const t=this.getNodeType(e),s=this.scope;let r,n;if(s===jd.VERTEX)r=e.getVertexIndex();else if(s===jd.INSTANCE)r=e.getInstanceIndex();else if(s===jd.DRAW)r=e.getDrawIndex();else if(s===jd.INVOCATION_LOCAL)r=e.getInvocationLocalIndex();else if(s===jd.INVOCATION_SUBGROUP)r=e.getInvocationSubgroupIndex();else{if(s!==jd.SUBGROUP)throw new Error("THREE.IndexNode: Unknown scope: "+s);r=e.getSubgroupIndex()}if("vertex"===e.shaderStage||"compute"===e.shaderStage)n=r;else{n=Ea(this).build(e,t)}return n}}jd.VERTEX="vertex",jd.INSTANCE="instance",jd.SUBGROUP="subgroup",jd.INVOCATION_LOCAL="invocationLocal",jd.INVOCATION_SUBGROUP="invocationSubgroup",jd.DRAW="draw";const qd=fn(jd,jd.VERTEX),Kd=fn(jd,jd.INSTANCE),Xd=fn(jd,jd.SUBGROUP),Yd=fn(jd,jd.INVOCATION_SUBGROUP),Qd=fn(jd,jd.INVOCATION_LOCAL),Zd=fn(jd,jd.DRAW);class Jd extends Ar{static get type(){return"InstanceNode"}constructor(e){super("void"),this.instanceMesh=e,this.instanceMatrixNode=null,this.instanceColorNode=null,this.updateType=br.FRAME,this.buffer=null,this.bufferColor=null}setup(e){let t=this.instanceMatrixNode,s=this.instanceColorNode;const r=this.instanceMesh;if(null===t){const e=r.instanceMatrix;if(r.count<=1e3)t=vl(e.array,"mat4",Math.max(r.count,1)).element(Kd);else{const s=new A(e.array,16,1);this.buffer=s;const r=e.usage===p?Ya:Xa,n=[r(s,"vec4",16,0),r(s,"vec4",16,4),r(s,"vec4",16,8),r(s,"vec4",16,12)];t=zn(...n)}this.instanceMatrixNode=t}const n=r.instanceColor;if(n&&null===s){const e=new R(n.array,3),t=n.usage===p?Ya:Xa;this.bufferColor=e,s=Un(t(e,"vec3",3,0)),this.instanceColorNode=s}const i=t.mul(Yu).xyz;if(Yu.assign(i),e.hasGeometryAttribute("normal")){const e=pl(ol,t);ol.assign(e)}null!==this.instanceColorNode&&ni("vec3","vInstanceColor").assign(this.instanceColorNode)}update(){this.instanceMesh.instanceMatrix.usage!==p&&null!=this.buffer&&this.instanceMesh.instanceMatrix.version!==this.buffer.version&&(this.buffer.version=this.instanceMesh.instanceMatrix.version),this.instanceMesh.instanceColor&&this.instanceMesh.instanceColor.usage!==p&&null!=this.bufferColor&&this.instanceMesh.instanceColor.version!==this.bufferColor.version&&(this.bufferColor.version=this.instanceMesh.instanceColor.version)}}const ec=mn(Jd);class tc extends Ar{static get type(){return"BatchNode"}constructor(e){super("void"),this.batchMesh=e,this.batchingIdNode=null}setup(e){null===this.batchingIdNode&&(null===e.getDrawIndex()?this.batchingIdNode=Kd:this.batchingIdNode=Zd);const t=yn((([e])=>{const t=yu(Nu(this.batchMesh._indirectTexture),0),s=An(e).modInt(An(t)),r=An(e).div(An(t));return Nu(this.batchMesh._indirectTexture,wn(s,r)).x})).setLayout({name:"getIndirectIndex",type:"uint",inputs:[{name:"id",type:"int"}]}),s=t(An(this.batchingIdNode)),r=this.batchMesh._matricesTexture,n=yu(Nu(r),0),i=Sn(s).mul(4).toInt().toVar(),o=i.modInt(n),a=i.div(An(n)),u=zn(Nu(r,wn(o,a)),Nu(r,wn(o.add(1),a)),Nu(r,wn(o.add(2),a)),Nu(r,wn(o.add(3),a))),l=this.batchMesh._colorsTexture;if(null!==l){const e=yn((([e])=>{const t=yu(Nu(l),0).x,s=e,r=s.modInt(t),n=s.div(t);return Nu(l,wn(r,n)).rgb})).setLayout({name:"getBatchingColor",type:"vec3",inputs:[{name:"id",type:"int"}]}),t=e(s);ni("vec3","vBatchColor").assign(t)}const d=kn(u);Yu.assign(u.mul(Yu));const c=ol.div(Un(d[0].dot(d[0]),d[1].dot(d[1]),d[2].dot(d[2]))),h=d.mul(c).xyz;ol.assign(h),e.hasGeometryAttribute("tangent")&&Il.mulAssign(d)}}const sc=mn(tc),rc=new WeakMap;class nc extends Ar{static get type(){return"SkinningNode"}constructor(e,t=!1){let s,r,n;super("void"),this.skinnedMesh=e,this.useReference=t,this.updateType=br.OBJECT,this.skinIndexNode=gu("skinIndex","uvec4"),this.skinWeightNode=gu("skinWeight","vec4"),t?(s=Ml("bindMatrix","mat4"),r=Ml("bindMatrixInverse","mat4"),n=Bl("skeleton.boneMatrices","mat4",e.skeleton.bones.length)):(s=ti(e.bindMatrix,"mat4"),r=ti(e.bindMatrixInverse,"mat4"),n=vl(e.skeleton.boneMatrices,"mat4",e.skeleton.bones.length)),this.bindMatrixNode=s,this.bindMatrixInverseNode=r,this.boneMatricesNode=n,this.previousBoneMatricesNode=null}getSkinnedPosition(e=this.boneMatricesNode,t=Yu){const{skinIndexNode:s,skinWeightNode:r,bindMatrixNode:n,bindMatrixInverseNode:i}=this,o=e.element(s.x),a=e.element(s.y),u=e.element(s.z),l=e.element(s.w),d=n.mul(t),c=Vi(o.mul(r.x).mul(d),a.mul(r.y).mul(d),u.mul(r.z).mul(d),l.mul(r.w).mul(d));return i.mul(c).xyz}getSkinnedNormal(e=this.boneMatricesNode,t=ol){const{skinIndexNode:s,skinWeightNode:r,bindMatrixNode:n,bindMatrixInverseNode:i}=this,o=e.element(s.x),a=e.element(s.y),u=e.element(s.z),l=e.element(s.w);let d=Vi(r.x.mul(o),r.y.mul(a),r.z.mul(u),r.w.mul(l));return d=i.mul(d).mul(n),d.transformDirection(t).xyz}getPreviousSkinnedPosition(e){const t=e.object;return null===this.previousBoneMatricesNode&&(t.skeleton.previousBoneMatrices=new Float32Array(t.skeleton.boneMatrices),this.previousBoneMatricesNode=Bl("skeleton.previousBoneMatrices","mat4",t.skeleton.bones.length)),this.getSkinnedPosition(this.previousBoneMatricesNode,Qu)}needsPreviousBoneMatrices(e){const t=e.renderer.getMRT();return t&&t.has("velocity")}setup(e){this.needsPreviousBoneMatrices(e)&&Qu.assign(this.getPreviousSkinnedPosition(e));const t=this.getSkinnedPosition();if(Yu.assign(t),e.hasGeometryAttribute("normal")){const t=this.getSkinnedNormal();ol.assign(t),e.hasGeometryAttribute("tangent")&&Il.assign(t)}}generate(e,t){if("void"!==t)return Yu.build(e,t)}update(e){const t=(this.useReference?e.object:this.skinnedMesh).skeleton;rc.get(t)!==e.frameId&&(rc.set(t,e.frameId),null!==this.previousBoneMatricesNode&&t.previousBoneMatrices.set(t.boneMatrices),t.update())}}const ic=e=>hn(new nc(e)),oc=e=>hn(new nc(e,!0));class ac extends Ar{static get type(){return"LoopNode"}constructor(e=[]){super(),this.params=e}getVarName(e){return String.fromCharCode("i".charCodeAt()+e)}getProperties(e){const t=e.getNodeProperties(this);if(void 0!==t.stackNode)return t;const s={};for(let e=0,t=this.params.length-1;e<t;e++){const t=this.params[e],r=!0!==t.isNode&&t.name||this.getVarName(e),n=!0!==t.isNode&&t.type||"int";s[r]=au(r,n)}const r=e.addStack();return t.returnsNode=this.params[this.params.length-1](s,r,e),t.stackNode=r,e.removeStack(),t}getNodeType(e){const{returnsNode:t}=this.getProperties(e);return t?t.getNodeType(e):"void"}setup(e){this.getProperties(e)}generate(e){const t=this.getProperties(e),s=this.params,r=t.stackNode;for(let t=0,r=s.length-1;t<r;t++){const r=s[t];let n=null,i=null,o=null,a=null,u=null,l=null;r.isNode?(a="int",o=this.getVarName(t),n="0",i=r.build(e,a),u="<"):(a=r.type||"int",o=r.name||this.getVarName(t),n=r.start,i=r.end,u=r.condition,l=r.update,"number"==typeof n?n=e.generateConst(a,n):n&&n.isNode&&(n=n.build(e,a)),"number"==typeof i?i=e.generateConst(a,i):i&&i.isNode&&(i=i.build(e,a)),void 0!==n&&void 0===i?(n+=" - 1",i="0",u=">="):void 0!==i&&void 0===n&&(n="0",u="<"),void 0===u&&(u=Number(n)>Number(i)?">=":"<"));const d={start:n,end:i,condition:u},c=d.start,h=d.end;let p="",g="",m="";l||(l="int"===a||"uint"===a?u.includes("<")?"++":"--":u.includes("<")?"+= 1.":"-= 1."),p+=e.getVar(a,o)+" = "+c,g+=o+" "+u+" "+h,m+=o+" "+l;const f=`for ( ${p}; ${g}; ${m} )`;e.addFlowCode((0===t?"\n":"")+e.tab+f+" {\n\n").addFlowTab()}const n=r.build(e,"void"),i=t.returnsNode?t.returnsNode.build(e):"";e.removeFlowTab().addFlowCode("\n"+e.tab+n);for(let t=0,s=this.params.length-1;t<s;t++)e.addFlowCode((0===t?"":e.tab)+"}\n\n").removeFlowTab();return e.addFlowTab(),i}}const uc=(...e)=>hn(new ac(gn(e,"int"))).append(),lc=()=>au("continue").append(),dc=()=>au("break").append(),cc=(...e)=>(console.warn("TSL.LoopNode: loop() has been renamed to Loop()."),uc(...e)),hc=new WeakMap,pc=new r,gc=yn((({bufferMap:e,influence:t,stride:s,width:r,depth:n,offset:i})=>{const o=An(qd).mul(s).add(i),a=o.div(r),u=o.sub(a.mul(r));return Nu(e,wn(u,a)).depth(n).mul(t)}));class mc extends Ar{static get type(){return"MorphNode"}constructor(e){super("void"),this.mesh=e,this.morphBaseInfluence=ti(1),this.updateType=br.OBJECT}setup(e){const{geometry:s}=e,r=void 0!==s.morphAttributes.position,n=s.hasAttribute("normal")&&void 0!==s.morphAttributes.normal,i=s.morphAttributes.position||s.morphAttributes.normal||s.morphAttributes.color,o=void 0!==i?i.length:0,{texture:a,stride:u,size:l}=function(e){const s=void 0!==e.morphAttributes.position,r=void 0!==e.morphAttributes.normal,n=void 0!==e.morphAttributes.color,i=e.morphAttributes.position||e.morphAttributes.normal||e.morphAttributes.color,o=void 0!==i?i.length:0;let a=hc.get(e);if(void 0===a||a.count!==o){void 0!==a&&a.texture.dispose();const u=e.morphAttributes.position||[],l=e.morphAttributes.normal||[],d=e.morphAttributes.color||[];let c=0;!0===s&&(c=1),!0===r&&(c=2),!0===n&&(c=3);let h=e.attributes.position.count*c,p=1;const g=4096;h>g&&(p=Math.ceil(h/g),h=g);const m=new Float32Array(h*p*4*o),f=new C(m,h,p,o);f.type=E,f.needsUpdate=!0;const y=4*c;for(let x=0;x<o;x++){const T=u[x],_=l[x],N=d[x],v=h*p*4*x;for(let S=0;S<T.count;S++){const A=S*y;!0===s&&(pc.fromBufferAttribute(T,S),m[v+A+0]=pc.x,m[v+A+1]=pc.y,m[v+A+2]=pc.z,m[v+A+3]=0),!0===r&&(pc.fromBufferAttribute(_,S),m[v+A+4]=pc.x,m[v+A+5]=pc.y,m[v+A+6]=pc.z,m[v+A+7]=0),!0===n&&(pc.fromBufferAttribute(N,S),m[v+A+8]=pc.x,m[v+A+9]=pc.y,m[v+A+10]=pc.z,m[v+A+11]=4===N.itemSize?pc.w:1)}}function b(){f.dispose(),hc.delete(e),e.removeEventListener("dispose",b)}a={count:o,texture:f,stride:c,size:new t(h,p)},hc.set(e,a),e.addEventListener("dispose",b)}return a}(s);!0===r&&Yu.mulAssign(this.morphBaseInfluence),!0===n&&ol.mulAssign(this.morphBaseInfluence);const d=An(l.width);uc(o,(({i:e})=>{const t=Sn(0).toVar();this.mesh.count>1&&null!==this.mesh.morphTexture&&void 0!==this.mesh.morphTexture?t.assign(Nu(this.mesh.morphTexture,wn(An(e).add(1),An(Kd))).r):t.assign(Ml("morphTargetInfluences","float").element(e).toVar()),!0===r&&Yu.addAssign(gc({bufferMap:a,influence:t,stride:u,width:d,depth:e,offset:An(0)})),!0===n&&ol.addAssign(gc({bufferMap:a,influence:t,stride:u,width:d,depth:e,offset:An(1)}))}))}update(){const e=this.morphBaseInfluence;this.mesh.geometry.morphTargetsRelative?e.value=1:e.value=1-this.mesh.morphTargetInfluences.reduce(((e,t)=>e+t),0)}}const fc=mn(mc);class yc extends Ar{static get type(){return"LightingNode"}constructor(){super("vec3"),this.isLightingNode=!0}generate(){console.warn("Abstract function.")}}class bc extends yc{static get type(){return"AONode"}constructor(e=null){super(),this.aoNode=e}setup(e){e.context.ambientOcclusion.mulAssign(this.aoNode)}}class xc extends _a{static get type(){return"LightingContextNode"}constructor(e,t=null,s=null,r=null){super(e),this.lightingModel=t,this.backdropNode=s,this.backdropAlphaNode=r,this._value=null}getContext(){const{backdropNode:e,backdropAlphaNode:t}=this,s={directDiffuse:Un().toVar("directDiffuse"),directSpecular:Un().toVar("directSpecular"),indirectDiffuse:Un().toVar("indirectDiffuse"),indirectSpecular:Un().toVar("indirectSpecular")};return{radiance:Un().toVar("radiance"),irradiance:Un().toVar("irradiance"),iblIrradiance:Un().toVar("iblIrradiance"),ambientOcclusion:Sn(1).toVar("ambientOcclusion"),reflectedLight:s,backdrop:e,backdropAlpha:t}}setup(e){return this.value=this._value||(this._value=this.getContext()),this.value.lightingModel=this.lightingModel||e.context.lightingModel,super.setup(e)}}const Tc=mn(xc);class _c extends yc{static get type(){return"IrradianceNode"}constructor(e){super(),this.node=e}setup(e){e.context.irradiance.addAssign(this.node)}}let Nc,vc;class Sc extends Ar{static get type(){return"ScreenNode"}constructor(e){super(),this.scope=e,this.isViewportNode=!0}getNodeType(){return this.scope===Sc.VIEWPORT?"vec4":"vec2"}getUpdateType(){let e=br.NONE;return this.scope!==Sc.SIZE&&this.scope!==Sc.VIEWPORT||(e=br.RENDER),this.updateType=e,e}update({renderer:e}){const t=e.getRenderTarget();this.scope===Sc.VIEWPORT?null!==t?vc.copy(t.viewport):(e.getViewport(vc),vc.multiplyScalar(e.getPixelRatio())):null!==t?(Nc.width=t.width,Nc.height=t.height):e.getDrawingBufferSize(Nc)}setup(){const e=this.scope;let s=null;return s=e===Sc.SIZE?ti(Nc||(Nc=new t)):e===Sc.VIEWPORT?ti(vc||(vc=new r)):En(Cc.div(Rc)),s}generate(e){if(this.scope===Sc.COORDINATE){let t=e.getFragCoord();if(e.isFlipY()){const s=e.getNodeProperties(Rc).outputNode.build(e);t=`${e.getType("vec2")}( ${t}.x, ${s}.y - ${t}.y )`}return t}return super.generate(e)}}Sc.COORDINATE="coordinate",Sc.VIEWPORT="viewport",Sc.SIZE="size",Sc.UV="uv";const Ac=fn(Sc,Sc.UV),Rc=fn(Sc,Sc.SIZE),Cc=fn(Sc,Sc.COORDINATE),Ec=fn(Sc,Sc.VIEWPORT),wc=Ec.zw,Mc=Cc.sub(Ec.xy),Bc=Mc.div(wc),Uc=yn((()=>(console.warn('TSL.ViewportNode: "viewportResolution" is deprecated. Use "screenSize" instead.'),Rc)),"vec2").once()(),Fc=yn((()=>(console.warn('TSL.ViewportNode: "viewportTopLeft" is deprecated. Use "screenUV" instead.'),Ac)),"vec2").once()(),Pc=yn((()=>(console.warn('TSL.ViewportNode: "viewportBottomLeft" is deprecated. Use "screenUV.flipY()" instead.'),Ac.flipY())),"vec2").once()(),Ic=new t;class Lc extends Tu{static get type(){return"ViewportTextureNode"}constructor(e=Ac,t=null,s=null){null===s&&((s=new w).minFilter=M),super(s,e,t),this.generateMipmaps=!1,this.isOutputTextureNode=!0,this.updateBeforeType=br.FRAME}updateBefore(e){const t=e.renderer;t.getDrawingBufferSize(Ic);const s=this.value;s.image.width===Ic.width&&s.image.height===Ic.height||(s.image.width=Ic.width,s.image.height=Ic.height,s.needsUpdate=!0);const r=s.generateMipmaps;s.generateMipmaps=this.generateMipmaps,t.copyFramebufferToTexture(s),s.generateMipmaps=r}clone(){const e=new this.constructor(this.uvNode,this.levelNode,this.value);return e.generateMipmaps=this.generateMipmaps,e}}const Dc=mn(Lc),Vc=mn(Lc,null,null,{generateMipmaps:!0});let Oc=null;class Gc extends Lc{static get type(){return"ViewportDepthTextureNode"}constructor(e=Ac,t=null){null===Oc&&(Oc=new B),super(e,t,Oc)}}const kc=mn(Gc);class zc extends Ar{static get type(){return"ViewportDepthNode"}constructor(e,t=null){super("float"),this.scope=e,this.valueNode=t,this.isViewportDepthNode=!0}generate(e){const{scope:t}=this;return t===zc.DEPTH_BASE?e.getFragDepth():super.generate(e)}setup({camera:e}){const{scope:t}=this,s=this.valueNode;let r=null;if(t===zc.DEPTH_BASE)null!==s&&(r=Kc().assign(s));else if(t===zc.DEPTH)r=e.isPerspectiveCamera?Wc(el.z,Su,Au):$c(el.z,Su,Au);else if(t===zc.LINEAR_DEPTH)if(null!==s)if(e.isPerspectiveCamera){const e=jc(s,Su,Au);r=$c(e,Su,Au)}else r=s;else r=$c(el.z,Su,Au);return r}}zc.DEPTH_BASE="depthBase",zc.DEPTH="depth",zc.LINEAR_DEPTH="linearDepth";const $c=(e,t,s)=>e.add(t).div(t.sub(s)),Hc=(e,t,s)=>t.sub(s).mul(e).sub(t),Wc=(e,t,s)=>t.add(e).mul(s).div(s.sub(t).mul(e)),jc=(e,t,s)=>t.mul(s).div(s.sub(t).mul(e).sub(s)),qc=(e,t,s)=>{t=t.max(1e-6).toVar();const r=To(e.div(t).add(1)),n=To(s.div(t).add(1));return r.div(n)},Kc=mn(zc,zc.DEPTH_BASE),Xc=fn(zc,zc.DEPTH),Yc=mn(zc,zc.LINEAR_DEPTH),Qc=Yc(kc());Xc.assign=e=>Kc(e);const Zc=mn(class extends Ar{constructor(e){super("float"),this.name=e,this.isBuiltinNode=!0}generate(){return this.name}});class Jc extends Ar{static get type(){return"ClippingNode"}constructor(e=Jc.DEFAULT){super(),this.scope=e}setup(e){super.setup(e);const t=e.clippingContext,{intersectionPlanes:s,unionPlanes:r}=t;return this.hardwareClipping=e.material.hardwareClipping,this.scope===Jc.ALPHA_TO_COVERAGE?this.setupAlphaToCoverage(s,r):this.scope===Jc.HARDWARE?this.setupHardwareClipping(r,e):this.setupDefault(s,r)}setupAlphaToCoverage(e,t){return yn((()=>{const s=Sn().toVar("distanceToPlane"),r=Sn().toVar("distanceToGradient"),n=Sn(1).toVar("clipOpacity"),i=t.length;if(!this.hardwareClipping&&i>0){const e=Rl(t);uc(i,(({i:t})=>{const i=e.element(t);s.assign(el.dot(i.xyz).negate().add(i.w)),r.assign(s.fwidth().div(2)),n.mulAssign(pa(r.negate(),r,s))}))}const o=e.length;if(o>0){const t=Rl(e),i=Sn(1).toVar("intersectionClipOpacity");uc(o,(({i:e})=>{const n=t.element(e);s.assign(el.dot(n.xyz).negate().add(n.w)),r.assign(s.fwidth().div(2)),i.mulAssign(pa(r.negate(),r,s).oneMinus())})),n.mulAssign(i.oneMinus())}ii.a.mulAssign(n),ii.a.equal(0).discard()}))()}setupDefault(e,t){return yn((()=>{const s=t.length;if(!this.hardwareClipping&&s>0){const e=Rl(t);uc(s,(({i:t})=>{const s=e.element(t);el.dot(s.xyz).greaterThan(s.w).discard()}))}const r=e.length;if(r>0){const t=Rl(e),s=Cn(!0).toVar("clipped");uc(r,(({i:e})=>{const r=t.element(e);s.assign(el.dot(r.xyz).greaterThan(r.w).and(s))})),s.discard()}}))()}setupHardwareClipping(e,t){const s=e.length;return t.enableHardwareClipping(s),yn((()=>{const r=Rl(e),n=Zc(t.getClipDistance());uc(s,(({i:e})=>{const t=r.element(e),s=el.dot(t.xyz).sub(t.w).negate();n.element(e).assign(s)}))}))()}}Jc.ALPHA_TO_COVERAGE="alphaToCoverage",Jc.DEFAULT="default",Jc.HARDWARE="hardware";const eh=yn((([e])=>Ro(Gi(1e4,Co(Gi(17,e.x).add(Gi(.1,e.y)))).mul(Vi(.1,Fo(Co(Gi(13,e.y).add(e.x)))))))),th=yn((([e])=>eh(En(eh(e.xy),e.z)))),sh=yn((([e])=>{const t=Ko(Io(Vo(e.xyz)),Io(Oo(e.xyz))).toVar("maxDeriv"),s=Sn(1).div(Sn(.05).mul(t)).toVar("pixScale"),r=En(bo(vo(To(s))),bo(So(To(s)))).toVar("pixScales"),n=En(th(vo(r.x.mul(e.xyz))),th(vo(r.y.mul(e.xyz)))).toVar("alpha"),i=Ro(To(s)).toVar("lerpFactor"),o=Vi(Gi(i.oneMinus(),n.x),Gi(i,n.y)).toVar("x"),a=qo(i,i.oneMinus()).toVar("a"),u=Un(o.mul(o).div(Gi(2,a).mul(Oi(1,a))),o.sub(Gi(.5,a)).div(Oi(1,a)),Oi(1,Oi(1,o).mul(Oi(1,o)).div(Gi(2,a).mul(Oi(1,a))))).toVar("cases"),l=o.lessThan(a.oneMinus()).select(o.lessThan(a).select(u.x,u.y),u.z);return da(l,1e-6,1)}));class rh extends U{static get type(){return"NodeMaterial"}get type(){return this.constructor.type}set type(e){}constructor(){super(),this.isNodeMaterial=!0,this.forceSinglePass=!1,this.fog=!0,this.lights=!1,this.hardwareClipping=!1,this.lightsNode=null,this.envNode=null,this.aoNode=null,this.colorNode=null,this.normalNode=null,this.opacityNode=null,this.backdropNode=null,this.backdropAlphaNode=null,this.alphaTestNode=null,this.positionNode=null,this.geometryNode=null,this.depthNode=null,this.shadowNode=null,this.shadowPositionNode=null,this.outputNode=null,this.mrtNode=null,this.fragmentNode=null,this.vertexNode=null}customProgramCacheKey(){return this.type+dr(this)}build(e){this.setup(e)}setupObserver(e){return new ir(e)}setup(e){e.context.setupNormal=()=>this.setupNormal(e);const t=e.renderer,s=t.getRenderTarget();let r;e.addStack(),e.stack.outputNode=this.vertexNode||this.setupPosition(e),null!==this.geometryNode&&(e.stack.outputNode=e.stack.outputNode.bypass(this.geometryNode)),e.addFlow("vertex",e.removeStack()),e.addStack();const n=this.setupClipping(e);if(!0===this.depthWrite&&(null!==s?!0===s.depthBuffer&&this.setupDepth(e):!0===t.depth&&this.setupDepth(e)),null===this.fragmentNode){this.setupDiffuseColor(e),this.setupVariants(e);const i=this.setupLighting(e);null!==n&&e.stack.add(n);const o=Ln(i,ii.a).max(0);if(r=this.setupOutput(e,o),vi.assign(r),null!==this.outputNode&&(r=this.outputNode),null!==s){const e=t.getMRT(),s=this.mrtNode;null!==e?(r=e,null!==s&&(r=e.merge(s))):null!==s&&(r=s)}}else{let t=this.fragmentNode;!0!==t.isOutputStructNode&&(t=Ln(t)),r=this.setupOutput(e,t)}e.stack.outputNode=r,e.addFlow("fragment",e.removeStack()),e.monitor=this.setupObserver(e)}setupClipping(e){if(null===e.clippingContext)return null;const{unionPlanes:t,intersectionPlanes:s}=e.clippingContext;let r=null;if(t.length>0||s.length>0){const t=e.renderer.samples;this.alphaToCoverage&&t>1?r=hn(new Jc(Jc.ALPHA_TO_COVERAGE)):e.stack.add(hn(new Jc))}return r}setupHardwareClipping(e){if(this.hardwareClipping=!1,null===e.clippingContext)return;const t=e.clippingContext.unionPlanes.length;t>0&&t<=8&&e.isAvailable("clipDistance")&&(e.stack.add(hn(new Jc(Jc.HARDWARE))),this.hardwareClipping=!0)}setupDepth(e){const{renderer:t,camera:s}=e;let r=this.depthNode;if(null===r){const e=t.getMRT();e&&e.has("depth")?r=e.get("depth"):!0===t.logarithmicDepthBuffer&&(r=s.isPerspectiveCamera?qc(Wd().w,Su,Au):$c(el.z,Su,Au))}null!==r&&Xc.assign(r).append()}setupPosition(e){const{object:t}=e,s=t.geometry;if(e.addStack(),(s.morphAttributes.position||s.morphAttributes.normal||s.morphAttributes.color)&&fc(t).append(),!0===t.isSkinnedMesh&&oc(t).append(),this.displacementMap){const e=Fl("displacementMap","texture"),t=Fl("displacementScale","float"),s=Fl("displacementBias","float");Yu.addAssign(ol.normalize().mul(e.x.mul(t).add(s)))}t.isBatchedMesh&&sc(t).append(),t.instanceMatrix&&!0===t.instanceMatrix.isInstancedBufferAttribute&&ec(t).append(),null!==this.positionNode&&Yu.assign(this.positionNode),this.setupHardwareClipping(e);const r=Wd();return e.context.vertex=e.removeStack(),e.context.mvp=r,r}setupDiffuseColor({object:e,geometry:t}){let s=this.colorNode?Ln(this.colorNode):ad;if(!0===this.vertexColors&&t.hasAttribute("color")&&(s=Ln(s.xyz.mul(gu("color","vec3")),s.a)),e.instanceColor){s=ni("vec3","vInstanceColor").mul(s)}if(e.isBatchedMesh&&e._colorsTexture){s=ni("vec3","vBatchColor").mul(s)}ii.assign(s);const r=this.opacityNode?Sn(this.opacityNode):dd;if(ii.a.assign(ii.a.mul(r)),null!==this.alphaTestNode||this.alphaTest>0){const e=null!==this.alphaTestNode?Sn(this.alphaTestNode):od;ii.a.lessThanEqual(e).discard()}!0===this.alphaHash&&ii.a.lessThan(sh(Yu)).discard(),!1===this.transparent&&this.blending===F&&!1===this.alphaToCoverage&&ii.a.assign(1)}setupVariants(){}setupOutgoingLight(){return!0===this.lights?Un(0):ii.rgb}setupNormal(){return this.normalNode?Un(this.normalNode):bd}setupEnvironment(){let e=null;return this.envNode?e=this.envNode:this.envMap&&(e=this.envMap.isCubeTexture?Fl("envMap","cubeTexture"):Fl("envMap","texture")),e}setupLightMap(e){let t=null;return e.material.lightMap&&(t=new _c(kd)),t}setupLights(e){const t=[],s=this.setupEnvironment(e);s&&s.isLightingNode&&t.push(s);const r=this.setupLightMap(e);if(r&&r.isLightingNode&&t.push(r),null!==this.aoNode||e.material.aoMap){const e=null!==this.aoNode?this.aoNode:zd;t.push(new bc(e))}let n=this.lightsNode||e.lightsNode;return t.length>0&&(n=e.renderer.lighting.createNode([...n.getLights(),...t])),n}setupLightingModel(){}setupLighting(e){const{material:t}=e,{backdropNode:s,backdropAlphaNode:r,emissiveNode:n}=this,i=!0===this.lights||null!==this.lightsNode?this.setupLights(e):null;let o=this.setupOutgoingLight(e);if(i&&i.getScope().hasLights){const t=this.setupLightingModel(e);o=Tc(i,t,s,r)}else null!==s&&(o=Un(null!==r?la(o,s,r):s));return(n&&!0===n.isNode||t.emissive&&!0===t.emissive.isColor)&&(oi.assign(Un(n||ld)),o=o.add(oi)),o}setupOutput(e,t){if(!0===this.fog){const s=e.fogNode;s&&(t=Ln(s.mix(t.rgb,s.colorNode),t.a))}return t}setDefaultValues(e){for(const t in e){const s=e[t];void 0===this[t]&&(this[t]=s,s&&s.clone&&(this[t]=s.clone()))}const t=Object.getOwnPropertyDescriptors(e.constructor.prototype);for(const e in t)void 0===Object.getOwnPropertyDescriptor(this.constructor.prototype,e)&&void 0!==t[e].get&&Object.defineProperty(this.constructor.prototype,e,t[e])}toJSON(e){const t=void 0===e||"string"==typeof e;t&&(e={textures:{},images:{},nodes:{}});const s=U.prototype.toJSON.call(this,e),r=cr(this);s.inputNodes={};for(const{property:t,childNode:n}of r)s.inputNodes[t]=n.toJSON(e).uuid;function n(e){const t=[];for(const s in e){const r=e[s];delete r.metadata,t.push(r)}return t}if(t){const t=n(e.textures),r=n(e.images),i=n(e.nodes);t.length>0&&(s.textures=t),r.length>0&&(s.images=r),i.length>0&&(s.nodes=i)}return s}copy(e){return this.lightsNode=e.lightsNode,this.envNode=e.envNode,this.colorNode=e.colorNode,this.normalNode=e.normalNode,this.opacityNode=e.opacityNode,this.backdropNode=e.backdropNode,this.backdropAlphaNode=e.backdropAlphaNode,this.alphaTestNode=e.alphaTestNode,this.positionNode=e.positionNode,this.geometryNode=e.geometryNode,this.depthNode=e.depthNode,this.shadowNode=e.shadowNode,this.shadowPositionNode=e.shadowPositionNode,this.outputNode=e.outputNode,this.mrtNode=e.mrtNode,this.fragmentNode=e.fragmentNode,this.vertexNode=e.vertexNode,super.copy(e)}}const nh=new P;class ih extends rh{static get type(){return"InstancedPointsNodeMaterial"}constructor(e={}){super(),this.lights=!1,this.useAlphaToCoverage=!0,this.useColor=e.vertexColors,this.pointWidth=1,this.pointColorNode=null,this.pointWidthNode=null,this.setDefaultValues(nh),this.setValues(e)}setup(e){this.setupShaders(e),super.setup(e)}setupShaders({renderer:e}){const t=this.alphaToCoverage,s=this.useColor;this.vertexNode=yn((()=>{const e=gu("instancePosition").xyz,t=Ln(ju.mul(Ln(e,1))),s=Ec.z.div(Ec.w),r=Ru.mul(t),n=Xu.xy.toVar();return n.mulAssign(this.pointWidthNode?this.pointWidthNode:Od),n.assign(n.div(Ec.z)),n.y.assign(n.y.mul(s)),n.assign(n.mul(r.w)),r.addAssign(Ln(n,0,0)),r}))(),this.fragmentNode=yn((()=>{const r=Sn(1).toVar(),n=ua(mu().mul(2).sub(1));if(t&&e.samples>1){const e=Sn(n.fwidth()).toVar();r.assign(pa(e.oneMinus(),e.add(1),n).oneMinus())}else n.greaterThan(1).discard();let i;if(this.pointColorNode)i=this.pointColorNode;else if(s){i=gu("instanceColor").mul(ad)}else i=ad;return r.mulAssign(dd),Ln(i,r)}))()}get alphaToCoverage(){return this.useAlphaToCoverage}set alphaToCoverage(e){this.useAlphaToCoverage!==e&&(this.useAlphaToCoverage=e,this.needsUpdate=!0)}}const oh=new I;class ah extends rh{static get type(){return"LineBasicNodeMaterial"}constructor(e){super(),this.isLineBasicNodeMaterial=!0,this.lights=!1,this.setDefaultValues(oh),this.setValues(e)}}const uh=new L;class lh extends rh{static get type(){return"LineDashedNodeMaterial"}constructor(e){super(),this.isLineDashedNodeMaterial=!0,this.lights=!1,this.setDefaultValues(uh),this.dashOffset=0,this.offsetNode=null,this.dashScaleNode=null,this.dashSizeNode=null,this.gapSizeNode=null,this.setValues(e)}setupVariants(){const e=this.offsetNode?Sn(this.offsetNodeNode):Vd,t=this.dashScaleNode?Sn(this.dashScaleNode):Pd,s=this.dashSizeNode?Sn(this.dashSizeNode):Id,r=this.dashSizeNode?Sn(this.dashGapNode):Ld;Si.assign(s),Ai.assign(r);const n=Ea(gu("lineDistance").mul(t));(e?n.add(e):n).mod(Si.add(Ai)).greaterThan(Si).discard()}}const dh=new L;class ch extends rh{static get type(){return"Line2NodeMaterial"}constructor(e={}){super(),this.lights=!1,this.setDefaultValues(dh),this.useAlphaToCoverage=!0,this.useColor=e.vertexColors,this.useDash=e.dashed,this.useWorldUnits=!1,this.dashOffset=0,this.lineWidth=1,this.lineColorNode=null,this.offsetNode=null,this.dashScaleNode=null,this.dashSizeNode=null,this.gapSizeNode=null,this.setValues(e)}setup(e){this.setupShaders(e),super.setup(e)}setupShaders({renderer:e}){const t=this.alphaToCoverage,s=this.useColor,r=this.dashed,n=this.worldUnits,i=yn((({start:e,end:t})=>{const s=Ru.element(2).element(2),r=Ru.element(3).element(2).mul(-.5).div(s).sub(e.z).div(t.z.sub(e.z));return Ln(la(e.xyz,t.xyz,r),t.w)})).setLayout({name:"trimSegment",type:"vec4",inputs:[{name:"start",type:"vec4"},{name:"end",type:"vec4"}]});this.vertexNode=yn((()=>{const e=gu("instanceStart"),t=gu("instanceEnd"),s=Ln(ju.mul(Ln(e,1))).toVar("start"),o=Ln(ju.mul(Ln(t,1))).toVar("end");if(r){const e=this.dashScaleNode?Sn(this.dashScaleNode):Pd,t=this.offsetNode?Sn(this.offsetNodeNode):Vd,s=gu("instanceDistanceStart"),r=gu("instanceDistanceEnd");let n=Xu.y.lessThan(.5).select(e.mul(s),e.mul(r));n=n.add(t),ni("float","lineDistance").assign(n)}n&&(ni("vec3","worldStart").assign(s.xyz),ni("vec3","worldEnd").assign(o.xyz));const a=Ec.z.div(Ec.w),u=Ru.element(2).element(3).equal(-1);_n(u,(()=>{_n(s.z.lessThan(0).and(o.z.greaterThan(0)),(()=>{o.assign(i({start:s,end:o}))})).ElseIf(o.z.lessThan(0).and(s.z.greaterThanEqual(0)),(()=>{s.assign(i({start:o,end:s}))}))}));const l=Ru.mul(s),d=Ru.mul(o),c=l.xyz.div(l.w),h=d.xyz.div(d.w),p=h.xy.sub(c.xy).toVar();p.x.assign(p.x.mul(a)),p.assign(p.normalize());const g=Ln().toVar();if(n){const e=o.xyz.sub(s.xyz).normalize(),t=la(s.xyz,o.xyz,.5).normalize(),n=e.cross(t).normalize(),i=e.cross(n),a=ni("vec4","worldPos");a.assign(Xu.y.lessThan(.5).select(s,o));const u=Dd.mul(.5);a.addAssign(Ln(Xu.x.lessThan(0).select(n.mul(u),n.mul(u).negate()),0)),r||(a.addAssign(Ln(Xu.y.lessThan(.5).select(e.mul(u).negate(),e.mul(u)),0)),a.addAssign(Ln(i.mul(u),0)),_n(Xu.y.greaterThan(1).or(Xu.y.lessThan(0)),(()=>{a.subAssign(Ln(i.mul(2).mul(u),0))}))),g.assign(Ru.mul(a));const l=Un().toVar();l.assign(Xu.y.lessThan(.5).select(c,h)),g.z.assign(l.z.mul(g.w))}else{const e=En(p.y,p.x.negate()).toVar("offset");p.x.assign(p.x.div(a)),e.x.assign(e.x.div(a)),e.assign(Xu.x.lessThan(0).select(e.negate(),e)),_n(Xu.y.lessThan(0),(()=>{e.assign(e.sub(p))})).ElseIf(Xu.y.greaterThan(1),(()=>{e.assign(e.add(p))})),e.assign(e.mul(Dd)),e.assign(e.div(Ec.w)),g.assign(Xu.y.lessThan(.5).select(l,d)),e.assign(e.mul(g.w)),g.assign(g.add(Ln(e,0,0)))}return g}))();const o=yn((({p1:e,p2:t,p3:s,p4:r})=>{const n=e.sub(s),i=r.sub(s),o=t.sub(e),a=n.dot(i),u=i.dot(o),l=n.dot(o),d=i.dot(i),c=o.dot(o).mul(d).sub(u.mul(u)),h=a.mul(u).sub(l.mul(d)).div(c).clamp(),p=a.add(u.mul(h)).div(d).clamp();return En(h,p)}));this.fragmentNode=yn((()=>{const i=mu();if(r){const e=this.dashSizeNode?Sn(this.dashSizeNode):Id,t=this.dashSizeNode?Sn(this.dashGapNode):Ld;Si.assign(e),Ai.assign(t);const s=ni("float","lineDistance");i.y.lessThan(-1).or(i.y.greaterThan(1)).discard(),s.mod(Si.add(Ai)).greaterThan(Si).discard()}const a=Sn(1).toVar("alpha");if(n){const s=ni("vec3","worldStart"),n=ni("vec3","worldEnd"),i=ni("vec4","worldPos").xyz.normalize().mul(1e5),u=n.sub(s),l=o({p1:s,p2:n,p3:Un(0,0,0),p4:i}),d=s.add(u.mul(l.x)),c=i.mul(l.y),h=d.sub(c).length().div(Dd);if(!r)if(t&&e.samples>1){const e=h.fwidth();a.assign(pa(e.negate().add(.5),e.add(.5),h).oneMinus())}else h.greaterThan(.5).discard()}else if(t&&e.samples>1){const e=i.x,t=i.y.greaterThan(0).select(i.y.sub(1),i.y.add(1)),s=e.mul(e).add(t.mul(t)),r=Sn(s.fwidth()).toVar("dlen");_n(i.y.abs().greaterThan(1),(()=>{a.assign(pa(r.oneMinus(),r.add(1),s).oneMinus())}))}else _n(i.y.abs().greaterThan(1),(()=>{const e=i.x,t=i.y.greaterThan(0).select(i.y.sub(1),i.y.add(1));e.mul(e).add(t.mul(t)).greaterThan(1).discard()}));let u;if(this.lineColorNode)u=this.lineColorNode;else if(s){const e=gu("instanceColorStart"),t=gu("instanceColorEnd");u=Xu.y.lessThan(.5).select(e,t).mul(ad)}else u=ad;return Ln(u,a)}))()}get worldUnits(){return this.useWorldUnits}set worldUnits(e){this.useWorldUnits!==e&&(this.useWorldUnits=e,this.needsUpdate=!0)}get dashed(){return this.useDash}set dashed(e){this.useDash!==e&&(this.useDash=e,this.needsUpdate=!0)}get alphaToCoverage(){return this.useAlphaToCoverage}set alphaToCoverage(e){this.useAlphaToCoverage!==e&&(this.useAlphaToCoverage=e,this.needsUpdate=!0)}}const hh=e=>hn(e).mul(.5).add(.5),ph=e=>hn(e).mul(2).sub(1),gh=new D;class mh extends rh{static get type(){return"MeshNormalNodeMaterial"}constructor(e){super(),this.lights=!1,this.isMeshNormalNodeMaterial=!0,this.setDefaultValues(gh),this.setValues(e)}setupDiffuseColor(){const e=this.opacityNode?Sn(this.opacityNode):dd;ii.assign(Ln(hh(dl),e))}}class fh extends Er{static get type(){return"EquirectUVNode"}constructor(e=Ju){super("vec2"),this.dirNode=e}setup(){const e=this.dirNode,t=e.z.atan2(e.x).mul(1/(2*Math.PI)).add(.5),s=e.y.clamp(-1,1).asin().mul(1/Math.PI).add(.5);return En(t,s)}}const yh=mn(fh);class bh extends V{constructor(e=1,t={}){super(e,t),this.isCubeRenderTarget=!0}fromEquirectangularTexture(e,t){const s=t.minFilter,r=t.generateMipmaps;t.generateMipmaps=!0,this.texture.type=t.type,this.texture.colorSpace=t.colorSpace,this.texture.generateMipmaps=t.generateMipmaps,this.texture.minFilter=t.minFilter,this.texture.magFilter=t.magFilter;const n=new O(5,5,5),i=yh(Ju),o=new rh;o.colorNode=_u(t,i,0),o.side=x,o.blending=G;const a=new k(n,o),u=new z;u.add(a),t.minFilter===M&&(t.minFilter=$);const l=new H(1,10,this),d=e.getMRT();return e.setMRT(null),l.update(e,u),e.setMRT(d),t.minFilter=s,t.currentGenerateMipmaps=r,a.geometry.dispose(),a.material.dispose(),this}}const xh=new WeakMap;class Th extends Er{static get type(){return"CubeMapNode"}constructor(e){super("vec3"),this.envNode=e,this._cubeTexture=null,this._cubeTextureNode=_l();const t=new W;t.isRenderTargetTexture=!0,this._defaultTexture=t,this.updateBeforeType=br.RENDER}updateBefore(e){const{renderer:t,material:s}=e,r=this.envNode;if(r.isTextureNode||r.isMaterialReferenceNode){const e=r.isTextureNode?r.value:s[r.property];if(e&&e.isTexture){const s=e.mapping;if(s===j||s===q){if(xh.has(e)){const t=xh.get(e);Nh(t,e.mapping),this._cubeTexture=t}else{const s=e.image;if(function(e){return null!=e&&e.height>0}(s)){const r=new bh(s.height);r.fromEquirectangularTexture(t,e),Nh(r.texture,e.mapping),this._cubeTexture=r.texture,xh.set(e,r.texture),e.addEventListener("dispose",_h)}else this._cubeTexture=this._defaultTexture}this._cubeTextureNode.value=this._cubeTexture}else this._cubeTextureNode=this.envNode}}}setup(e){return this.updateBefore(e),this._cubeTextureNode}}function _h(e){const t=e.target;t.removeEventListener("dispose",_h);const s=xh.get(t);void 0!==s&&(xh.delete(t),s.dispose())}function Nh(e,t){t===j?e.mapping=T:t===q&&(e.mapping=_)}const vh=mn(Th);class Sh extends yc{static get type(){return"BasicEnvironmentNode"}constructor(e=null){super(),this.envNode=e}setup(e){e.context.environment=vh(this.envNode)}}class Ah extends yc{static get type(){return"BasicLightMapNode"}constructor(e=null){super(),this.lightMapNode=e}setup(e){const t=Sn(1/Math.PI);e.context.irradianceLightMap=this.lightMapNode.mul(t)}}class Rh{start(){}finish(){}direct(){}directRectArea(){}indirect(){}ambientOcclusion(){}}class Ch extends Rh{constructor(){super()}indirect(e,t,s){const r=e.ambientOcclusion,n=e.reflectedLight,i=s.context.irradianceLightMap;n.indirectDiffuse.assign(Ln(0)),i?n.indirectDiffuse.addAssign(i):n.indirectDiffuse.addAssign(Ln(1,1,1,0)),n.indirectDiffuse.mulAssign(r),n.indirectDiffuse.mulAssign(ii.rgb)}finish(e,t,s){const r=s.material,n=e.outgoingLight,i=s.context.environment;if(i)switch(r.combine){case Y:n.rgb.assign(la(n.rgb,n.rgb.mul(i.rgb),gd.mul(md)));break;case X:n.rgb.assign(la(n.rgb,i.rgb,gd.mul(md)));break;case K:n.rgb.addAssign(i.rgb.mul(gd.mul(md)));break;default:console.warn("THREE.BasicLightingModel: Unsupported .combine value:",r.combine)}}}const Eh=new Q;class wh extends rh{static get type(){return"MeshBasicNodeMaterial"}constructor(e){super(),this.isMeshBasicNodeMaterial=!0,this.lights=!0,this.setDefaultValues(Eh),this.setValues(e)}setupNormal(){return ul}setupEnvironment(e){const t=super.setupEnvironment(e);return t?new Sh(t):null}setupLightMap(e){let t=null;return e.material.lightMap&&(t=new Ah(kd)),t}setupOutgoingLight(){return ii.rgb}setupLightingModel(){return new Ch}}const Mh=yn((({f0:e,f90:t,dotVH:s})=>{const r=s.mul(-5.55473).sub(6.98316).mul(s).exp2();return e.mul(r.oneMinus()).add(t.mul(r))})),Bh=yn((e=>e.diffuseColor.mul(1/Math.PI))),Uh=yn((({dotNH:e})=>Ni.mul(Sn(.5)).add(1).mul(Sn(1/Math.PI)).mul(e.pow(Ni)))),Fh=yn((({lightDirection:e})=>{const t=e.add(tl).normalize(),s=dl.dot(t).clamp(),r=tl.dot(t).clamp(),n=Mh({f0:Ti,f90:1,dotVH:r}),i=Sn(.25),o=Uh({dotNH:s});return n.mul(i).mul(o)}));class Ph extends Ch{constructor(e=!0){super(),this.specular=e}direct({lightDirection:e,lightColor:t,reflectedLight:s}){const r=dl.dot(e).clamp().mul(t);s.directDiffuse.addAssign(r.mul(Bh({diffuseColor:ii.rgb}))),!0===this.specular&&s.directSpecular.addAssign(r.mul(Fh({lightDirection:e})).mul(gd))}indirect({ambientOcclusion:e,irradiance:t,reflectedLight:s}){s.indirectDiffuse.addAssign(t.mul(Bh({diffuseColor:ii}))),s.indirectDiffuse.mulAssign(e)}}const Ih=new Z;class Lh extends rh{static get type(){return"MeshLambertNodeMaterial"}constructor(e){super(),this.isMeshLambertNodeMaterial=!0,this.lights=!0,this.setDefaultValues(Ih),this.setValues(e)}setupEnvironment(e){const t=super.setupEnvironment(e);return t?new Sh(t):null}setupLightingModel(){return new Ph(!1)}}const Dh=new J;class Vh extends rh{static get type(){return"MeshPhongNodeMaterial"}constructor(e){super(),this.isMeshPhongNodeMaterial=!0,this.lights=!0,this.shininessNode=null,this.specularNode=null,this.setDefaultValues(Dh),this.setValues(e)}setupEnvironment(e){const t=super.setupEnvironment(e);return t?new Sh(t):null}setupLightingModel(){return new Ph}setupVariants(){const e=(this.shininessNode?Sn(this.shininessNode):ud).max(1e-4);Ni.assign(e);const t=this.specularNode||cd;Ti.assign(t)}copy(e){return this.shininessNode=e.shininessNode,this.specularNode=e.specularNode,super.copy(e)}}const Oh=yn((e=>{if(!1===e.geometry.hasAttribute("normal"))return Sn(0);const t=ul.dFdx().abs().max(ul.dFdy().abs());return t.x.max(t.y).max(t.z)})),Gh=yn((e=>{const{roughness:t}=e,s=Oh();let r=t.max(.0525);return r=r.add(s),r=r.min(1),r})),kh=yn((({alpha:e,dotNL:t,dotNV:s})=>{const r=e.pow2(),n=t.mul(r.add(r.oneMinus().mul(s.pow2())).sqrt()),i=s.mul(r.add(r.oneMinus().mul(t.pow2())).sqrt());return ki(.5,n.add(i).max(ao))})).setLayout({name:"V_GGX_SmithCorrelated",type:"float",inputs:[{name:"alpha",type:"float"},{name:"dotNL",type:"float"},{name:"dotNV",type:"float"}]}),zh=yn((({alphaT:e,alphaB:t,dotTV:s,dotBV:r,dotTL:n,dotBL:i,dotNV:o,dotNL:a})=>{const u=a.mul(Un(e.mul(s),t.mul(r),o).length()),l=o.mul(Un(e.mul(n),t.mul(i),a).length());return ki(.5,u.add(l)).saturate()})).setLayout({name:"V_GGX_SmithCorrelated_Anisotropic",type:"float",inputs:[{name:"alphaT",type:"float",qualifier:"in"},{name:"alphaB",type:"float",qualifier:"in"},{name:"dotTV",type:"float",qualifier:"in"},{name:"dotBV",type:"float",qualifier:"in"},{name:"dotTL",type:"float",qualifier:"in"},{name:"dotBL",type:"float",qualifier:"in"},{name:"dotNV",type:"float",qualifier:"in"},{name:"dotNL",type:"float",qualifier:"in"}]}),$h=yn((({alpha:e,dotNH:t})=>{const s=e.pow2(),r=t.pow2().mul(s.oneMinus()).oneMinus();return s.div(r.pow2()).mul(1/Math.PI)})).setLayout({name:"D_GGX",type:"float",inputs:[{name:"alpha",type:"float"},{name:"dotNH",type:"float"}]}),Hh=Sn(1/Math.PI),Wh=yn((({alphaT:e,alphaB:t,dotNH:s,dotTH:r,dotBH:n})=>{const i=e.mul(t),o=Un(t.mul(r),e.mul(n),i.mul(s)),a=o.dot(o),u=i.div(a);return Hh.mul(i.mul(u.pow2()))})).setLayout({name:"D_GGX_Anisotropic",type:"float",inputs:[{name:"alphaT",type:"float",qualifier:"in"},{name:"alphaB",type:"float",qualifier:"in"},{name:"dotNH",type:"float",qualifier:"in"},{name:"dotTH",type:"float",qualifier:"in"},{name:"dotBH",type:"float",qualifier:"in"}]}),jh=yn((e=>{const{lightDirection:t,f0:s,f90:r,roughness:n,f:i,USE_IRIDESCENCE:o,USE_ANISOTROPY:a}=e,u=e.normalView||dl,l=n.pow2(),d=t.add(tl).normalize(),c=u.dot(t).clamp(),h=u.dot(tl).clamp(),p=u.dot(d).clamp(),g=tl.dot(d).clamp();let m,f,y=Mh({f0:s,f90:r,dotVH:g});if(ln(o)&&(y=pi.mix(y,i)),ln(a)){const e=bi.dot(t),s=bi.dot(tl),r=bi.dot(d),n=xi.dot(t),i=xi.dot(tl),o=xi.dot(d);m=zh({alphaT:fi,alphaB:l,dotTV:s,dotBV:i,dotTL:e,dotBL:n,dotNV:h,dotNL:c}),f=Wh({alphaT:fi,alphaB:l,dotNH:p,dotTH:r,dotBH:o})}else m=kh({alpha:l,dotNL:c,dotNV:h}),f=$h({alpha:l,dotNH:p});return y.mul(m).mul(f)})),qh=yn((({roughness:e,dotNV:t})=>{const s=Ln(-1,-.0275,-.572,.022),r=Ln(1,.0425,1.04,-.04),n=e.mul(s).add(r),i=n.x.mul(n.x).min(t.mul(-9.28).exp2()).mul(n.x).add(n.y);return En(-1.04,1.04).mul(i).add(n.zw)})).setLayout({name:"DFGApprox",type:"vec2",inputs:[{name:"roughness",type:"float"},{name:"dotNV",type:"vec3"}]}),Kh=yn((e=>{const{dotNV:t,specularColor:s,specularF90:r,roughness:n}=e,i=qh({dotNV:t,roughness:n});return s.mul(i.x).add(r.mul(i.y))})),Xh=yn((({f:e,f90:t,dotVH:s})=>{const r=s.oneMinus().saturate(),n=r.mul(r),i=r.mul(n,n).clamp(0,.9999);return e.sub(Un(t).mul(i)).div(i.oneMinus())})).setLayout({name:"Schlick_to_F0",type:"vec3",inputs:[{name:"f",type:"vec3"},{name:"f90",type:"float"},{name:"dotVH",type:"float"}]}),Yh=yn((({roughness:e,dotNH:t})=>{const s=e.pow2(),r=Sn(1).div(s),n=t.pow2().oneMinus().max(.0078125);return Sn(2).add(r).mul(n.pow(r.mul(.5))).div(2*Math.PI)})).setLayout({name:"D_Charlie",type:"float",inputs:[{name:"roughness",type:"float"},{name:"dotNH",type:"float"}]}),Qh=yn((({dotNV:e,dotNL:t})=>Sn(1).div(Sn(4).mul(t.add(e).sub(t.mul(e)))))).setLayout({name:"V_Neubelt",type:"float",inputs:[{name:"dotNV",type:"float"},{name:"dotNL",type:"float"}]}),Zh=yn((({lightDirection:e})=>{const t=e.add(tl).normalize(),s=dl.dot(e).clamp(),r=dl.dot(tl).clamp(),n=dl.dot(t).clamp(),i=Yh({roughness:hi,dotNH:n}),o=Qh({dotNV:r,dotNL:s});return ci.mul(i).mul(o)})),Jh=yn((({N:e,V:t,roughness:s})=>{const r=e.dot(t).saturate(),n=En(s,r.oneMinus().sqrt());return n.assign(n.mul(.984375).add(.0078125)),n})).setLayout({name:"LTC_Uv",type:"vec2",inputs:[{name:"N",type:"vec3"},{name:"V",type:"vec3"},{name:"roughness",type:"float"}]}),ep=yn((({f:e})=>{const t=e.length();return Ko(t.mul(t).add(e.z).div(t.add(1)),0)})).setLayout({name:"LTC_ClippedSphereFormFactor",type:"float",inputs:[{name:"f",type:"vec3"}]}),tp=yn((({v1:e,v2:t})=>{const s=e.dot(t),r=s.abs().toVar(),n=r.mul(.0145206).add(.4965155).mul(r).add(.8543985).toVar(),i=r.add(4.1616724).mul(r).add(3.417594).toVar(),o=n.div(i),a=s.greaterThan(0).select(o,Ko(s.mul(s).oneMinus(),1e-7).inverseSqrt().mul(.5).sub(o));return e.cross(t).mul(a)})).setLayout({name:"LTC_EdgeVectorFormFactor",type:"vec3",inputs:[{name:"v1",type:"vec3"},{name:"v2",type:"vec3"}]}),sp=yn((({N:e,V:t,P:s,mInv:r,p0:n,p1:i,p2:o,p3:a})=>{const u=i.sub(n).toVar(),l=a.sub(n).toVar(),d=u.cross(l),c=Un().toVar();return _n(d.dot(s.sub(n)).greaterThanEqual(0),(()=>{const u=t.sub(e.mul(t.dot(e))).normalize(),l=e.cross(u).negate(),d=r.mul(kn(u,l,e).transpose()).toVar(),h=d.mul(n.sub(s)).normalize().toVar(),p=d.mul(i.sub(s)).normalize().toVar(),g=d.mul(o.sub(s)).normalize().toVar(),m=d.mul(a.sub(s)).normalize().toVar(),f=Un(0).toVar();f.addAssign(tp({v1:h,v2:p})),f.addAssign(tp({v1:p,v2:g})),f.addAssign(tp({v1:g,v2:m})),f.addAssign(tp({v1:m,v2:h})),c.assign(Un(ep({f:f})))})),c})).setLayout({name:"LTC_Evaluate",type:"vec3",inputs:[{name:"N",type:"vec3"},{name:"V",type:"vec3"},{name:"P",type:"vec3"},{name:"mInv",type:"mat3"},{name:"p0",type:"vec3"},{name:"p1",type:"vec3"},{name:"p2",type:"vec3"},{name:"p3",type:"vec3"}]}),rp=1/6,np=e=>Gi(rp,Gi(e,Gi(e,e.negate().add(3)).sub(3)).add(1)),ip=e=>Gi(rp,Gi(e,Gi(e,Gi(3,e).sub(6))).add(4)),op=e=>Gi(rp,Gi(e,Gi(e,Gi(-3,e).add(3)).add(3)).add(1)),ap=e=>Gi(rp,sa(e,3)),up=e=>np(e).add(ip(e)),lp=e=>op(e).add(ap(e)),dp=e=>Vi(-1,ip(e).div(np(e).add(ip(e)))),cp=e=>Vi(1,ap(e).div(op(e).add(ap(e)))),hp=(e,t,s)=>{const r=e.uvNode,n=Gi(r,t.zw).add(.5),i=vo(n),o=Ro(n),a=up(o.x),u=lp(o.x),l=dp(o.x),d=cp(o.x),c=dp(o.y),h=cp(o.y),p=En(i.x.add(l),i.y.add(c)).sub(.5).mul(t.xy),g=En(i.x.add(d),i.y.add(c)).sub(.5).mul(t.xy),m=En(i.x.add(l),i.y.add(h)).sub(.5).mul(t.xy),f=En(i.x.add(d),i.y.add(h)).sub(.5).mul(t.xy),y=up(o.y).mul(Vi(a.mul(e.uv(p).level(s)),u.mul(e.uv(g).level(s)))),b=lp(o.y).mul(Vi(a.mul(e.uv(m).level(s)),u.mul(e.uv(f).level(s))));return y.add(b)},pp=yn((([e,t=Sn(3)])=>{const s=En(e.size(An(t))),r=En(e.size(An(t.add(1)))),n=ki(1,s),i=ki(1,r),o=hp(e,Ln(n,s),vo(t)),a=hp(e,Ln(i,r),So(t));return Ro(t).mix(o,a)})),gp=yn((([e,t,s,r,n])=>{const i=Un(ha(t.negate(),Ao(e),ki(1,r))),o=Un(Io(n[0].xyz),Io(n[1].xyz),Io(n[2].xyz));return Ao(i).mul(s.mul(o))})).setLayout({name:"getVolumeTransmissionRay",type:"vec3",inputs:[{name:"n",type:"vec3"},{name:"v",type:"vec3"},{name:"thickness",type:"float"},{name:"ior",type:"float"},{name:"modelMatrix",type:"mat4"}]}),mp=yn((([e,t])=>e.mul(da(t.mul(2).sub(2),0,1)))).setLayout({name:"applyIorToRoughness",type:"float",inputs:[{name:"roughness",type:"float"},{name:"ior",type:"float"}]}),fp=Vc(),yp=Vc(),bp=yn((([e,t,s],{material:r})=>{const n=(r.side==x?fp:yp).uv(e),i=To(Rc.x).mul(mp(t,s));return pp(n,i)})),xp=yn((([e,t,s])=>(_n(s.notEqual(0),(()=>{const r=xo(t).negate().div(s);return yo(r.negate().mul(e))})),Un(1)))).setLayout({name:"volumeAttenuation",type:"vec3",inputs:[{name:"transmissionDistance",type:"float"},{name:"attenuationColor",type:"vec3"},{name:"attenuationDistance",type:"float"}]}),Tp=yn((([e,t,s,r,n,i,o,a,u,l,d,c,h,p,g])=>{let m,f;if(g){m=Ln().toVar(),f=Un().toVar();const n=d.sub(1).mul(g.mul(.025)),i=Un(d.sub(n),d,d.add(n));uc({start:0,end:3},(({i:n})=>{const d=i.element(n),g=gp(e,t,c,d,a),y=o.add(g),b=l.mul(u.mul(Ln(y,1))),x=En(b.xy.div(b.w)).toVar();x.addAssign(1),x.divAssign(2),x.assign(En(x.x,x.y.oneMinus()));const T=bp(x,s,d);m.element(n).assign(T.element(n)),m.a.addAssign(T.a),f.element(n).assign(r.element(n).mul(xp(Io(g),h,p).element(n)))})),m.a.divAssign(3)}else{const n=gp(e,t,c,d,a),i=o.add(n),g=l.mul(u.mul(Ln(i,1))),y=En(g.xy.div(g.w)).toVar();y.addAssign(1),y.divAssign(2),y.assign(En(y.x,y.y.oneMinus())),m=bp(y,s,d),f=r.mul(xp(Io(n),h,p))}const y=f.rgb.mul(m.rgb),b=e.dot(t).clamp(),x=Un(Kh({dotNV:b,specularColor:n,specularF90:i,roughness:s})),T=f.r.add(f.g,f.b).div(3);return Ln(x.oneMinus().mul(y),m.a.oneMinus().mul(T).oneMinus())})),_p=kn(3.2404542,-.969266,.0556434,-1.5371385,1.8760108,-.2040259,-.4985314,.041556,1.0572252),Np=(e,t)=>e.sub(t).div(e.add(t)).pow2(),vp=yn((({outsideIOR:e,eta2:t,cosTheta1:s,thinFilmThickness:r,baseF0:n})=>{const i=la(e,t,pa(0,.03,r)),o=e.div(i).pow2().mul(s.pow2().oneMinus()).oneMinus();_n(o.lessThan(0),(()=>Un(1)));const a=o.sqrt(),u=Np(i,e),l=Mh({f0:u,f90:1,dotVH:s}),d=l.oneMinus(),c=i.lessThan(e).select(Math.PI,0),h=Sn(Math.PI).sub(c),p=(e=>{const t=e.sqrt();return Un(1).add(t).div(Un(1).sub(t))})(n.clamp(0,.9999)),g=Np(p,i.toVec3()),m=Mh({f0:g,f90:1,dotVH:a}),f=Un(p.x.lessThan(i).select(Math.PI,0),p.y.lessThan(i).select(Math.PI,0),p.z.lessThan(i).select(Math.PI,0)),y=i.mul(r,a,2),b=Un(h).add(f),x=l.mul(m).clamp(1e-5,.9999),T=x.sqrt(),_=d.pow2().mul(m).div(Un(1).sub(x)),N=l.add(_).toVar(),v=_.sub(d).toVar();return uc({start:1,end:2,condition:"<=",name:"m"},(({m:e})=>{v.mulAssign(T);const t=((e,t)=>{const s=e.mul(2*Math.PI*1e-9),r=Un(54856e-17,44201e-17,52481e-17),n=Un(1681e3,1795300,2208400),i=Un(43278e5,93046e5,66121e5),o=Sn(9747e-17*Math.sqrt(2*Math.PI*45282e5)).mul(s.mul(2239900).add(t.x).cos()).mul(s.pow2().mul(-45282e5).exp());let a=r.mul(i.mul(2*Math.PI).sqrt()).mul(n.mul(s).add(t).cos()).mul(s.pow2().negate().mul(i).exp());return a=Un(a.x.add(o),a.y,a.z).div(1.0685e-7),_p.mul(a)})(Sn(e).mul(y),Sn(e).mul(b)).mul(2);N.addAssign(v.mul(t))})),N.max(Un(0))})).setLayout({name:"evalIridescence",type:"vec3",inputs:[{name:"outsideIOR",type:"float"},{name:"eta2",type:"float"},{name:"cosTheta1",type:"float"},{name:"thinFilmThickness",type:"float"},{name:"baseF0",type:"vec3"}]}),Sp=yn((({normal:e,viewDir:t,roughness:s})=>{const r=e.dot(t).saturate(),n=s.pow2(),i=xa(s.lessThan(.25),Sn(-339.2).mul(n).add(Sn(161.4).mul(s)).sub(25.9),Sn(-8.48).mul(n).add(Sn(14.3).mul(s)).sub(9.95)),o=xa(s.lessThan(.25),Sn(44).mul(n).sub(Sn(23.7).mul(s)).add(3.26),Sn(1.97).mul(n).sub(Sn(3.27).mul(s)).add(.72));return xa(s.lessThan(.25),0,Sn(.1).mul(s).sub(.025)).add(i.mul(r).add(o).exp()).mul(1/Math.PI).saturate()})),Ap=Un(.04),Rp=Sn(1);class Cp extends Rh{constructor(e=!1,t=!1,s=!1,r=!1,n=!1,i=!1){super(),this.clearcoat=e,this.sheen=t,this.iridescence=s,this.anisotropy=r,this.transmission=n,this.dispersion=i,this.clearcoatRadiance=null,this.clearcoatSpecularDirect=null,this.clearcoatSpecularIndirect=null,this.sheenSpecularDirect=null,this.sheenSpecularIndirect=null,this.iridescenceFresnel=null,this.iridescenceF0=null}start(e){if(!0===this.clearcoat&&(this.clearcoatRadiance=Un().toVar("clearcoatRadiance"),this.clearcoatSpecularDirect=Un().toVar("clearcoatSpecularDirect"),this.clearcoatSpecularIndirect=Un().toVar("clearcoatSpecularIndirect")),!0===this.sheen&&(this.sheenSpecularDirect=Un().toVar("sheenSpecularDirect"),this.sheenSpecularIndirect=Un().toVar("sheenSpecularIndirect")),!0===this.iridescence){const e=dl.dot(tl).clamp();this.iridescenceFresnel=vp({outsideIOR:Sn(1),eta2:gi,cosTheta1:e,thinFilmThickness:mi,baseF0:Ti}),this.iridescenceF0=Xh({f:this.iridescenceFresnel,f90:1,dotVH:e})}if(!0===this.transmission){const t=Zu,s=Bu.sub(Zu).normalize(),r=cl;e.backdrop=Tp(r,s,ai,ii,Ti,_i,t,Gu,Eu,Ru,Ci,wi,Bi,Mi,this.dispersion?Ui:null),e.backdropAlpha=Ei,ii.a.mulAssign(la(1,e.backdrop.a,Ei))}}computeMultiscattering(e,t,s){const r=dl.dot(tl).clamp(),n=qh({roughness:ai,dotNV:r}),i=(this.iridescenceF0?pi.mix(Ti,this.iridescenceF0):Ti).mul(n.x).add(s.mul(n.y)),o=n.x.add(n.y).oneMinus(),a=Ti.add(Ti.oneMinus().mul(.047619)),u=i.mul(a).div(o.mul(a).oneMinus());e.addAssign(i),t.addAssign(u.mul(o))}direct({lightDirection:e,lightColor:t,reflectedLight:s}){const r=dl.dot(e).clamp().mul(t);if(!0===this.sheen&&this.sheenSpecularDirect.addAssign(r.mul(Zh({lightDirection:e}))),!0===this.clearcoat){const s=hl.dot(e).clamp().mul(t);this.clearcoatSpecularDirect.addAssign(s.mul(jh({lightDirection:e,f0:Ap,f90:Rp,roughness:di,normalView:hl})))}s.directDiffuse.addAssign(r.mul(Bh({diffuseColor:ii.rgb}))),s.directSpecular.addAssign(r.mul(jh({lightDirection:e,f0:Ti,f90:1,roughness:ai,iridescence:this.iridescence,f:this.iridescenceFresnel,USE_IRIDESCENCE:this.iridescence,USE_ANISOTROPY:this.anisotropy})))}directRectArea({lightColor:e,lightPosition:t,halfWidth:s,halfHeight:r,reflectedLight:n,ltc_1:i,ltc_2:o}){const a=t.add(s).sub(r),u=t.sub(s).sub(r),l=t.sub(s).add(r),d=t.add(s).add(r),c=dl,h=tl,p=el.toVar(),g=Jh({N:c,V:h,roughness:ai}),m=i.uv(g).toVar(),f=o.uv(g).toVar(),y=kn(Un(m.x,0,m.y),Un(0,1,0),Un(m.z,0,m.w)).toVar(),b=Ti.mul(f.x).add(Ti.oneMinus().mul(f.y)).toVar();n.directSpecular.addAssign(e.mul(b).mul(sp({N:c,V:h,P:p,mInv:y,p0:a,p1:u,p2:l,p3:d}))),n.directDiffuse.addAssign(e.mul(ii).mul(sp({N:c,V:h,P:p,mInv:kn(1,0,0,0,1,0,0,0,1),p0:a,p1:u,p2:l,p3:d})))}indirect(e,t,s){this.indirectDiffuse(e,t,s),this.indirectSpecular(e,t,s),this.ambientOcclusion(e,t,s)}indirectDiffuse({irradiance:e,reflectedLight:t}){t.indirectDiffuse.addAssign(e.mul(Bh({diffuseColor:ii})))}indirectSpecular({radiance:e,iblIrradiance:t,reflectedLight:s}){if(!0===this.sheen&&this.sheenSpecularIndirect.addAssign(t.mul(ci,Sp({normal:dl,viewDir:tl,roughness:hi}))),!0===this.clearcoat){const e=hl.dot(tl).clamp(),t=Kh({dotNV:e,specularColor:Ap,specularF90:Rp,roughness:di});this.clearcoatSpecularIndirect.addAssign(this.clearcoatRadiance.mul(t))}const r=Un().toVar("singleScattering"),n=Un().toVar("multiScattering"),i=t.mul(1/Math.PI);this.computeMultiscattering(r,n,_i);const o=r.add(n),a=ii.mul(o.r.max(o.g).max(o.b).oneMinus());s.indirectSpecular.addAssign(e.mul(r)),s.indirectSpecular.addAssign(n.mul(i)),s.indirectDiffuse.addAssign(a.mul(i))}ambientOcclusion({ambientOcclusion:e,reflectedLight:t}){const s=dl.dot(tl).clamp().add(e),r=ai.mul(-16).oneMinus().negate().exp2(),n=e.sub(s.pow(r).oneMinus()).clamp();!0===this.clearcoat&&this.clearcoatSpecularIndirect.mulAssign(e),!0===this.sheen&&this.sheenSpecularIndirect.mulAssign(e),t.indirectDiffuse.mulAssign(e),t.indirectSpecular.mulAssign(n)}finish(e){const{outgoingLight:t}=e;if(!0===this.clearcoat){const e=hl.dot(tl).clamp(),s=Mh({dotVH:e,f0:Ap,f90:Rp}),r=t.mul(li.mul(s).oneMinus()).add(this.clearcoatSpecularDirect.add(this.clearcoatSpecularIndirect).mul(li));t.assign(r)}if(!0===this.sheen){const e=ci.r.max(ci.g).max(ci.b).mul(.157).oneMinus(),s=t.mul(e).add(this.sheenSpecularDirect,this.sheenSpecularIndirect);t.assign(s)}}}const Ep=Sn(1),wp=Sn(-2),Mp=Sn(.8),Bp=Sn(-1),Up=Sn(.4),Fp=Sn(2),Pp=Sn(.305),Ip=Sn(3),Lp=Sn(.21),Dp=Sn(4),Vp=Sn(4),Op=Sn(16),Gp=yn((([e])=>{const t=Un(Fo(e)).toVar(),s=Sn(-1).toVar();return _n(t.x.greaterThan(t.z),(()=>{_n(t.x.greaterThan(t.y),(()=>{s.assign(xa(e.x.greaterThan(0),0,3))})).Else((()=>{s.assign(xa(e.y.greaterThan(0),1,4))}))})).Else((()=>{_n(t.z.greaterThan(t.y),(()=>{s.assign(xa(e.z.greaterThan(0),2,5))})).Else((()=>{s.assign(xa(e.y.greaterThan(0),1,4))}))})),s})).setLayout({name:"getFace",type:"float",inputs:[{name:"direction",type:"vec3"}]}),kp=yn((([e,t])=>{const s=En().toVar();return _n(t.equal(0),(()=>{s.assign(En(e.z,e.y).div(Fo(e.x)))})).ElseIf(t.equal(1),(()=>{s.assign(En(e.x.negate(),e.z.negate()).div(Fo(e.y)))})).ElseIf(t.equal(2),(()=>{s.assign(En(e.x.negate(),e.y).div(Fo(e.z)))})).ElseIf(t.equal(3),(()=>{s.assign(En(e.z.negate(),e.y).div(Fo(e.x)))})).ElseIf(t.equal(4),(()=>{s.assign(En(e.x.negate(),e.z).div(Fo(e.y)))})).Else((()=>{s.assign(En(e.x,e.y).div(Fo(e.z)))})),Gi(.5,s.add(1))})).setLayout({name:"getUV",type:"vec2",inputs:[{name:"direction",type:"vec3"},{name:"face",type:"float"}]}),zp=yn((([e])=>{const t=Sn(0).toVar();return _n(e.greaterThanEqual(Mp),(()=>{t.assign(Ep.sub(e).mul(Bp.sub(wp)).div(Ep.sub(Mp)).add(wp))})).ElseIf(e.greaterThanEqual(Up),(()=>{t.assign(Mp.sub(e).mul(Fp.sub(Bp)).div(Mp.sub(Up)).add(Bp))})).ElseIf(e.greaterThanEqual(Pp),(()=>{t.assign(Up.sub(e).mul(Ip.sub(Fp)).div(Up.sub(Pp)).add(Fp))})).ElseIf(e.greaterThanEqual(Lp),(()=>{t.assign(Pp.sub(e).mul(Dp.sub(Ip)).div(Pp.sub(Lp)).add(Ip))})).Else((()=>{t.assign(Sn(-2).mul(To(Gi(1.16,e))))})),t})).setLayout({name:"roughnessToMip",type:"float",inputs:[{name:"roughness",type:"float"}]}),$p=yn((([e,t])=>{const s=e.toVar();s.assign(Gi(2,s).sub(1));const r=Un(s,1).toVar();return _n(t.equal(0),(()=>{r.assign(r.zyx)})).ElseIf(t.equal(1),(()=>{r.assign(r.xzy),r.xz.mulAssign(-1)})).ElseIf(t.equal(2),(()=>{r.x.mulAssign(-1)})).ElseIf(t.equal(3),(()=>{r.assign(r.zyx),r.xz.mulAssign(-1)})).ElseIf(t.equal(4),(()=>{r.assign(r.xzy),r.xy.mulAssign(-1)})).ElseIf(t.equal(5),(()=>{r.z.mulAssign(-1)})),r})).setLayout({name:"getDirection",type:"vec3",inputs:[{name:"uv",type:"vec2"},{name:"face",type:"float"}]}),Hp=yn((([e,t,s,r,n,i])=>{const o=Sn(s),a=Un(t),u=da(zp(o),wp,i),l=Ro(u),d=vo(u),c=Un(Wp(e,a,d,r,n,i)).toVar();return _n(l.notEqual(0),(()=>{const t=Un(Wp(e,a,d.add(1),r,n,i)).toVar();c.assign(la(c,t,l))})),c})),Wp=yn((([e,t,s,r,n,i])=>{const o=Sn(s).toVar(),a=Un(t),u=Sn(Gp(a)).toVar(),l=Sn(Ko(Vp.sub(o),0)).toVar();o.assign(Ko(o,Vp));const d=Sn(bo(o)).toVar(),c=En(kp(a,u).mul(d.sub(2)).add(1)).toVar();return _n(u.greaterThan(2),(()=>{c.y.addAssign(d),u.subAssign(3)})),c.x.addAssign(u.mul(d)),c.x.addAssign(l.mul(Gi(3,Op))),c.y.addAssign(Gi(4,bo(i).sub(d))),c.x.mulAssign(r),c.y.mulAssign(n),e.uv(c).grad(En(),En())})),jp=yn((({envMap:e,mipInt:t,outputDirection:s,theta:r,axis:n,CUBEUV_TEXEL_WIDTH:i,CUBEUV_TEXEL_HEIGHT:o,CUBEUV_MAX_MIP:a})=>{const u=Eo(r),l=s.mul(u).add(n.cross(s).mul(Co(r))).add(n.mul(n.dot(s).mul(u.oneMinus())));return Wp(e,l,t,i,o,a)})),qp=yn((({n:e,latitudinal:t,poleAxis:s,outputDirection:r,weights:n,samples:i,dTheta:o,mipInt:a,envMap:u,CUBEUV_TEXEL_WIDTH:l,CUBEUV_TEXEL_HEIGHT:d,CUBEUV_MAX_MIP:c})=>{const h=Un(xa(t,s,ta(s,r))).toVar();_n(ho(h.equals(Un(0))),(()=>{h.assign(Un(r.z,0,r.x.negate()))})),h.assign(Ao(h));const p=Un().toVar();return p.addAssign(n.element(An(0)).mul(jp({theta:0,axis:h,outputDirection:r,mipInt:a,envMap:u,CUBEUV_TEXEL_WIDTH:l,CUBEUV_TEXEL_HEIGHT:d,CUBEUV_MAX_MIP:c}))),uc({start:An(1),end:e},(({i:e})=>{_n(e.greaterThanEqual(i),(()=>{dc()}));const t=Sn(o.mul(Sn(e))).toVar();p.addAssign(n.element(e).mul(jp({theta:t.mul(-1),axis:h,outputDirection:r,mipInt:a,envMap:u,CUBEUV_TEXEL_WIDTH:l,CUBEUV_TEXEL_HEIGHT:d,CUBEUV_MAX_MIP:c}))),p.addAssign(n.element(e).mul(jp({theta:t,axis:h,outputDirection:r,mipInt:a,envMap:u,CUBEUV_TEXEL_WIDTH:l,CUBEUV_TEXEL_HEIGHT:d,CUBEUV_MAX_MIP:c})))})),Ln(p,1)}));let Kp=null;const Xp=new WeakMap;function Yp(e){let t=Xp.get(e);if((void 0!==t?t.pmremVersion:-1)!==e.pmremVersion){const s=e.image;if(e.isCubeTexture){if(!function(e){if(null==e)return!1;let t=0;const s=6;for(let r=0;r<s;r++)void 0!==e[r]&&t++;return t===s}(s))return null;t=Kp.fromCubemap(e,t)}else{if(!function(e){return null!=e&&e.height>0}(s))return null;t=Kp.fromEquirectangular(e,t)}t.pmremVersion=e.pmremVersion,Xp.set(e,t)}return t.texture}class Qp extends Er{static get type(){return"PMREMNode"}constructor(e,t=null,s=null){super("vec3"),this._value=e,this._pmrem=null,this.uvNode=t,this.levelNode=s,this._generator=null;const r=new ee;r.isRenderTargetTexture=!0,this._texture=_u(r),this._width=ti(0),this._height=ti(0),this._maxMip=ti(0),this.updateBeforeType=br.RENDER}set value(e){this._value=e,this._pmrem=null}get value(){return this._value}updateFromTexture(e){const t=function(e){const t=Math.log2(e)-2,s=1/e;return{texelWidth:1/(3*Math.max(Math.pow(2,t),112)),texelHeight:s,maxMip:t}}(e.image.height);this._texture.value=e,this._width.value=t.texelWidth,this._height.value=t.texelHeight,this._maxMip.value=t.maxMip}updateBefore(){let e=this._pmrem;const t=e?e.pmremVersion:-1,s=this._value;t!==s.pmremVersion&&(e=!0===s.isPMREMTexture?s:Yp(s),null!==e&&(this._pmrem=e,this.updateFromTexture(e)))}setup(e){null===Kp&&(Kp=e.createPMREMGenerator()),this.updateBefore(e);let t=this.uvNode;null===t&&e.context.getUV&&(t=e.context.getUV(this));const s=this.value;e.renderer.coordinateSystem===b&&!0!==s.isPMREMTexture&&!0===s.isRenderTargetTexture&&(t=Un(t.x.negate(),t.yz));let r=this.levelNode;return null===r&&e.context.getTextureLevel&&(r=e.context.getTextureLevel(this)),Hp(this._texture,t,r,this._width,this._height,this._maxMip)}}const Zp=mn(Qp),Jp=new WeakMap;class eg extends yc{static get type(){return"EnvironmentNode"}constructor(e=null){super(),this.envNode=e}setup(e){const{material:t}=e;let s=this.envNode;if(s.isTextureNode||s.isMaterialReferenceNode){const e=s.isTextureNode?s.value:t[s.property];let r=Jp.get(e);void 0===r&&(r=Zp(e),Jp.set(e,r)),s=r}const r=t.envMap?Ml("envMapIntensity","float",e.material):Ml("environmentIntensity","float",e.scene),n=!0===t.useAnisotropy||t.anisotropy>0?Yl:dl,i=s.context(tg(ai,n)).mul(r),o=s.context(sg(cl)).mul(Math.PI).mul(r),a=eu(i),u=eu(o);e.context.radiance.addAssign(a),e.context.iblIrradiance.addAssign(u);const l=e.context.lightingModel.clearcoatRadiance;if(l){const e=s.context(tg(di,hl)).mul(r),t=eu(e);l.addAssign(t)}}}const tg=(e,t)=>{let s=null;return{getUV:()=>(null===s&&(s=tl.negate().reflect(t),s=e.mul(e).mix(s,t).normalize(),s=s.transformDirection(Eu)),s),getTextureLevel:()=>e}},sg=e=>({getUV:()=>e,getTextureLevel:()=>Sn(1)}),rg=new te;class ng extends rh{static get type(){return"MeshStandardNodeMaterial"}constructor(e){super(),this.isMeshStandardNodeMaterial=!0,this.lights=!0,this.emissiveNode=null,this.metalnessNode=null,this.roughnessNode=null,this.setDefaultValues(rg),this.setValues(e)}setupEnvironment(e){let t=super.setupEnvironment(e);return null===t&&e.environmentNode&&(t=e.environmentNode),t?new eg(t):null}setupLightingModel(){return new Cp}setupSpecular(){const e=la(Un(.04),ii.rgb,ui);Ti.assign(e),_i.assign(1)}setupVariants(){const e=this.metalnessNode?Sn(this.metalnessNode):yd;ui.assign(e);let t=this.roughnessNode?Sn(this.roughnessNode):fd;t=Gh({roughness:t}),ai.assign(t),this.setupSpecular(),ii.assign(Ln(ii.rgb.mul(e.oneMinus()),ii.a))}copy(e){return this.emissiveNode=e.emissiveNode,this.metalnessNode=e.metalnessNode,this.roughnessNode=e.roughnessNode,super.copy(e)}}const ig=new se;class og extends ng{static get type(){return"MeshPhysicalNodeMaterial"}constructor(e){super(),this.isMeshPhysicalNodeMaterial=!0,this.clearcoatNode=null,this.clearcoatRoughnessNode=null,this.clearcoatNormalNode=null,this.sheenNode=null,this.sheenRoughnessNode=null,this.iridescenceNode=null,this.iridescenceIORNode=null,this.iridescenceThicknessNode=null,this.specularIntensityNode=null,this.specularColorNode=null,this.iorNode=null,this.transmissionNode=null,this.thicknessNode=null,this.attenuationDistanceNode=null,this.attenuationColorNode=null,this.dispersionNode=null,this.anisotropyNode=null,this.setDefaultValues(ig),this.setValues(e)}get useClearcoat(){return this.clearcoat>0||null!==this.clearcoatNode}get useIridescence(){return this.iridescence>0||null!==this.iridescenceNode}get useSheen(){return this.sheen>0||null!==this.sheenNode}get useAnisotropy(){return this.anisotropy>0||null!==this.anisotropyNode}get useTransmission(){return this.transmission>0||null!==this.transmissionNode}get useDispersion(){return this.dispersion>0||null!==this.dispersionNode}setupSpecular(){const e=this.iorNode?Sn(this.iorNode):Bd;Ci.assign(e),Ti.assign(la(qo(ra(Ci.sub(1).div(Ci.add(1))).mul(pd),Un(1)).mul(hd),ii.rgb,ui)),_i.assign(la(hd,1,ui))}setupLightingModel(){return new Cp(this.useClearcoat,this.useSheen,this.useIridescence,this.useAnisotropy,this.useTransmission,this.useDispersion)}setupVariants(e){if(super.setupVariants(e),this.useClearcoat){const e=this.clearcoatNode?Sn(this.clearcoatNode):xd,t=this.clearcoatRoughnessNode?Sn(this.clearcoatRoughnessNode):Td;li.assign(e),di.assign(Gh({roughness:t}))}if(this.useSheen){const e=this.sheenNode?Un(this.sheenNode):vd,t=this.sheenRoughnessNode?Sn(this.sheenRoughnessNode):Sd;ci.assign(e),hi.assign(t)}if(this.useIridescence){const e=this.iridescenceNode?Sn(this.iridescenceNode):Rd,t=this.iridescenceIORNode?Sn(this.iridescenceIORNode):Cd,s=this.iridescenceThicknessNode?Sn(this.iridescenceThicknessNode):Ed;pi.assign(e),gi.assign(t),mi.assign(s)}if(this.useAnisotropy){const e=(this.anisotropyNode?En(this.anisotropyNode):Ad).toVar();yi.assign(e.length()),_n(yi.equal(0),(()=>{e.assign(En(1,0))})).Else((()=>{e.divAssign(En(yi)),yi.assign(yi.saturate())})),fi.assign(yi.pow2().mix(ai.pow2(),1)),bi.assign(ql[0].mul(e.x).add(ql[1].mul(e.y))),xi.assign(ql[1].mul(e.x).sub(ql[0].mul(e.y)))}if(this.useTransmission){const e=this.transmissionNode?Sn(this.transmissionNode):wd,t=this.thicknessNode?Sn(this.thicknessNode):Md,s=this.attenuationDistanceNode?Sn(this.attenuationDistanceNode):Ud,r=this.attenuationColorNode?Un(this.attenuationColorNode):Fd;if(Ei.assign(e),wi.assign(t),Mi.assign(s),Bi.assign(r),this.useDispersion){const e=this.dispersionNode?Sn(this.dispersionNode):Gd;Ui.assign(e)}}}setupClearcoatNormal(){return this.clearcoatNormalNode?Un(this.clearcoatNormalNode):_d}setup(e){e.context.setupClearcoatNormal=()=>this.setupClearcoatNormal(e),super.setup(e)}copy(e){return this.clearcoatNode=e.clearcoatNode,this.clearcoatRoughnessNode=e.clearcoatRoughnessNode,this.clearcoatNormalNode=e.clearcoatNormalNode,this.sheenNode=e.sheenNode,this.sheenRoughnessNode=e.sheenRoughnessNode,this.iridescenceNode=e.iridescenceNode,this.iridescenceIORNode=e.iridescenceIORNode,this.iridescenceThicknessNode=e.iridescenceThicknessNode,this.specularIntensityNode=e.specularIntensityNode,this.specularColorNode=e.specularColorNode,this.transmissionNode=e.transmissionNode,this.thicknessNode=e.thicknessNode,this.attenuationDistanceNode=e.attenuationDistanceNode,this.attenuationColorNode=e.attenuationColorNode,this.dispersionNode=e.dispersionNode,this.anisotropyNode=e.anisotropyNode,super.copy(e)}}class ag extends Cp{constructor(e,t,s,r){super(e,t,s),this.useSSS=r}direct({lightDirection:e,lightColor:t,reflectedLight:s},r,n){if(!0===this.useSSS){const r=n.material,{thicknessColorNode:i,thicknessDistortionNode:o,thicknessAmbientNode:a,thicknessAttenuationNode:u,thicknessPowerNode:l,thicknessScaleNode:d}=r,c=e.add(dl.mul(o)).normalize(),h=Sn(tl.dot(c.negate()).saturate().pow(l).mul(d)),p=Un(h.add(a).mul(i));s.directDiffuse.addAssign(p.mul(u.mul(t)))}super.direct({lightDirection:e,lightColor:t,reflectedLight:s},r,n)}}class ug extends og{static get type(){return"MeshSSSNodeMaterial"}constructor(e){super(e),this.thicknessColorNode=null,this.thicknessDistortionNode=Sn(.1),this.thicknessAmbientNode=Sn(0),this.thicknessAttenuationNode=Sn(.1),this.thicknessPowerNode=Sn(2),this.thicknessScaleNode=Sn(10)}get useSSS(){return null!==this.thicknessColorNode}setupLightingModel(){return new ag(this.useClearcoat,this.useSheen,this.useIridescence,this.useSSS)}copy(e){return this.thicknessColorNode=e.thicknessColorNode,this.thicknessDistortionNode=e.thicknessDistortionNode,this.thicknessAmbientNode=e.thicknessAmbientNode,this.thicknessAttenuationNode=e.thicknessAttenuationNode,this.thicknessPowerNode=e.thicknessPowerNode,this.thicknessScaleNode=e.thicknessScaleNode,super.copy(e)}}const lg=yn((({normal:e,lightDirection:t,builder:s})=>{const r=e.dot(t),n=En(r.mul(.5).add(.5),0);if(s.material.gradientMap){const e=Fl("gradientMap","texture").context({getUV:()=>n});return Un(e.r)}{const e=n.fwidth().mul(.5);return la(Un(.7),Un(1),pa(Sn(.7).sub(e.x),Sn(.7).add(e.x),n.x))}}));class dg extends Rh{direct({lightDirection:e,lightColor:t,reflectedLight:s},r,n){const i=lg({normal:il,lightDirection:e,builder:n}).mul(t);s.directDiffuse.addAssign(i.mul(Bh({diffuseColor:ii.rgb})))}indirect({ambientOcclusion:e,irradiance:t,reflectedLight:s}){s.indirectDiffuse.addAssign(t.mul(Bh({diffuseColor:ii}))),s.indirectDiffuse.mulAssign(e)}}const cg=new re;class hg extends rh{static get type(){return"MeshToonNodeMaterial"}constructor(e){super(),this.isMeshToonNodeMaterial=!0,this.lights=!0,this.setDefaultValues(cg),this.setValues(e)}setupLightingModel(){return new dg}}class pg extends Er{static get type(){return"MatcapUVNode"}constructor(){super("vec2")}setup(){const e=Un(tl.z,0,tl.x.negate()).normalize(),t=tl.cross(e);return En(e.dot(dl),t.dot(dl)).mul(.495).add(.5)}}const gg=fn(pg),mg=new ne;class fg extends rh{static get type(){return"MeshMatcapNodeMaterial"}constructor(e){super(),this.lights=!1,this.isMeshMatcapNodeMaterial=!0,this.setDefaultValues(mg),this.setValues(e)}setupVariants(e){const t=gg;let s;s=e.material.matcap?Fl("matcap","texture").context({getUV:()=>t}):Un(la(.2,.8,t.y)),ii.rgb.mulAssign(s.rgb)}}const yg=new P;class bg extends rh{static get type(){return"PointsNodeMaterial"}constructor(e){super(),this.isPointsNodeMaterial=!0,this.lights=!1,this.transparent=!0,this.sizeNode=null,this.setDefaultValues(yg),this.setValues(e)}copy(e){return this.sizeNode=e.sizeNode,super.copy(e)}}class xg extends Er{static get type(){return"RotateNode"}constructor(e,t){super(),this.positionNode=e,this.rotationNode=t}getNodeType(e){return this.positionNode.getNodeType(e)}setup(e){const{rotationNode:t,positionNode:s}=this;if("vec2"===this.getNodeType(e)){const e=t.cos(),r=t.sin();return Gn(e,r,r.negate(),e).mul(s)}{const e=t,r=zn(Ln(1,0,0,0),Ln(0,Eo(e.x),Co(e.x).negate(),0),Ln(0,Co(e.x),Eo(e.x),0),Ln(0,0,0,1)),n=zn(Ln(Eo(e.y),0,Co(e.y),0),Ln(0,1,0,0),Ln(Co(e.y).negate(),0,Eo(e.y),0),Ln(0,0,0,1)),i=zn(Ln(Eo(e.z),Co(e.z).negate(),0,0),Ln(Co(e.z),Eo(e.z),0,0),Ln(0,0,1,0),Ln(0,0,0,1));return r.mul(n).mul(i).mul(Ln(s,1)).xyz}}}const Tg=mn(xg),_g=new ie;class Ng extends rh{static get type(){return"SpriteNodeMaterial"}constructor(e){super(),this.isSpriteNodeMaterial=!0,this.lights=!1,this._useSizeAttenuation=!0,this.positionNode=null,this.rotationNode=null,this.scaleNode=null,this.setDefaultValues(_g),this.setValues(e)}setupPosition({object:e,camera:t,context:s}){const r=this.sizeAttenuation,{positionNode:n,rotationNode:i,scaleNode:o}=this,a=Yu;let u=ju.mul(Un(n||0)),l=En(Gu[0].xyz.length(),Gu[1].xyz.length());if(null!==o&&(l=l.mul(o)),!r)if(t.isPerspectiveCamera)l=l.mul(u.z.negate());else{const e=Sn(2).div(Ru.element(1).element(1));l=l.mul(e.mul(2))}let d=a.xy;if(e.center&&!0===e.center.isVector2){const e=((e,t,s)=>hn(new Ga(e,t,s)))("center","vec2");d=d.sub(e.sub(.5))}d=d.mul(l);const c=Sn(i||Nd),h=Tg(d,c);u=Ln(u.xy.add(h),u.zw);const p=Ru.mul(u);return s.vertex=a,p}copy(e){return this.positionNode=e.positionNode,this.rotationNode=e.rotationNode,this.scaleNode=e.scaleNode,super.copy(e)}get sizeAttenuation(){return this._useSizeAttenuation}set sizeAttenuation(e){this._useSizeAttenuation!==e&&(this._useSizeAttenuation=e,this.needsUpdate=!0)}}class vg extends Rh{constructor(){super(),this.shadowNode=Sn(1).toVar("shadowMask")}direct({shadowMask:e}){this.shadowNode.mulAssign(e)}finish(e){ii.a.mulAssign(this.shadowNode.oneMinus()),e.outgoingLight.rgb.assign(ii.rgb)}}const Sg=new oe;class Ag extends rh{static get type(){return"ShadowNodeMaterial"}constructor(e){super(),this.isShadowNodeMaterial=!0,this.lights=!0,this.setDefaultValues(Sg),this.setValues(e)}setupLightingModel(){return new vg}}const Rg=yn((({texture:e,uv:t})=>{const s=1e-4,r=Un().toVar();return _n(t.x.lessThan(s),(()=>{r.assign(Un(1,0,0))})).ElseIf(t.y.lessThan(s),(()=>{r.assign(Un(0,1,0))})).ElseIf(t.z.lessThan(s),(()=>{r.assign(Un(0,0,1))})).ElseIf(t.x.greaterThan(.9999),(()=>{r.assign(Un(-1,0,0))})).ElseIf(t.y.greaterThan(.9999),(()=>{r.assign(Un(0,-1,0))})).ElseIf(t.z.greaterThan(.9999),(()=>{r.assign(Un(0,0,-1))})).Else((()=>{const s=.01,n=e.uv(t.add(Un(-.01,0,0))).r.sub(e.uv(t.add(Un(s,0,0))).r),i=e.uv(t.add(Un(0,-.01,0))).r.sub(e.uv(t.add(Un(0,s,0))).r),o=e.uv(t.add(Un(0,0,-.01))).r.sub(e.uv(t.add(Un(0,0,s))).r);r.assign(Un(n,i,o))})),r.normalize()}));class Cg extends Tu{static get type(){return"Texture3DNode"}constructor(e,t=null,s=null){super(e,t,s),this.isTexture3DNode=!0}getInputType(){return"texture3D"}getDefaultUV(){return Un(.5,.5,.5)}setUpdateMatrix(){}setupUV(e,t){return t}generateUV(e,t){return t.build(e,"vec3")}normal(e){return Rg({texture:this,uv:e})}}const Eg=mn(Cg);class wg extends rh{static get type(){return"VolumeNodeMaterial"}constructor(e={}){super(),this.lights=!1,this.isVolumeNodeMaterial=!0,this.testNode=null,this.setValues(e)}setup(e){const t=Eg(this.map,null,0),s=yn((({orig:e,dir:t})=>{const s=Un(-.5),r=Un(.5),n=t.reciprocal(),i=s.sub(e).mul(n),o=r.sub(e).mul(n),a=qo(i,o),u=Ko(i,o),l=Ko(a.x,Ko(a.y,a.z)),d=qo(u.x,qo(u.y,u.z));return En(l,d)}));this.fragmentNode=yn((()=>{const e=Ea(Un(Wu.mul(Ln(Bu,1)))),r=Ea(Xu.sub(e)).normalize(),n=En(s({orig:e,dir:r})).toVar();n.x.greaterThan(n.y).discard(),n.assign(En(Ko(n.x,0),n.y));const i=Un(e.add(n.x.mul(r))).toVar(),o=Un(r.abs().reciprocal()).toVar(),a=Sn(qo(o.x,qo(o.y,o.z))).toVar("delta");a.divAssign(Fl("steps","float"));const u=Ln(Fl("base","color"),0).toVar();return uc({type:"float",start:n.x,end:n.y,update:"+= delta"},(()=>{const e=ri("float","d").assign(t.uv(i.add(.5)).r);null!==this.testNode?this.testNode({map:t,mapValue:e,probe:i,finalColor:u}).append():(u.a.assign(1),dc()),i.addAssign(r.mul(a))})),u.a.equal(0).discard(),Ln(u)}))(),super.setup(e)}}class Mg{constructor(e,t){this.nodes=e,this.info=t,this._context=self,this._animationLoop=null,this._requestId=null}start(){const e=(t,s)=>{this._requestId=this._context.requestAnimationFrame(e),!0===this.info.autoReset&&this.info.reset(),this.nodes.nodeFrame.update(),this.info.frame=this.nodes.nodeFrame.frameId,null!==this._animationLoop&&this._animationLoop(t,s)};e()}stop(){this._context.cancelAnimationFrame(this._requestId),this._requestId=null}setAnimationLoop(e){this._animationLoop=e}setContext(e){this._context=e}dispose(){this.stop()}}class Bg{constructor(){this.weakMap=new WeakMap}get(e){let t=this.weakMap;for(let s=0;s<e.length;s++)if(t=t.get(e[s]),void 0===t)return;return t.get(e[e.length-1])}set(e,t){let s=this.weakMap;for(let t=0;t<e.length;t++){const r=e[t];!1===s.has(r)&&s.set(r,new WeakMap),s=s.get(r)}return s.set(e[e.length-1],t)}delete(e){let t=this.weakMap;for(let s=0;s<e.length;s++)if(t=t.get(e[s]),void 0===t)return!1;return t.delete(e[e.length-1])}}let Ug=0;class Fg{constructor(e,t,s,r,n,i,o,a,u,l){this._nodes=e,this._geometries=t,this.id=Ug++,this.renderer=s,this.object=r,this.material=n,this.scene=i,this.camera=o,this.lightsNode=a,this.context=u,this.geometry=r.geometry,this.version=n.version,this.drawRange=null,this.attributes=null,this.pipeline=null,this.vertexBuffers=null,this.drawParams=null,this.bundle=null,this.clippingContext=l,this.clippingContextCacheKey=null!==l?l.cacheKey:"",this.initialNodesCacheKey=this.getDynamicCacheKey(),this.initialCacheKey=this.getCacheKey(),this._nodeBuilderState=null,this._bindings=null,this._monitor=null,this.onDispose=null,this.isRenderObject=!0,this.onMaterialDispose=()=>{this.dispose()},this.material.addEventListener("dispose",this.onMaterialDispose)}updateClipping(e){this.clippingContext=e}get clippingNeedsUpdate(){return null!==this.clippingContext&&this.clippingContext.cacheKey!==this.clippingContextCacheKey&&(this.clippingContextCacheKey=this.clippingContext.cacheKey,!0)}get hardwareClippingPlanes(){return!0===this.material.hardwareClipping?this.clippingContext.unionClippingCount:0}getNodeBuilderState(){return this._nodeBuilderState||(this._nodeBuilderState=this._nodes.getForRender(this))}getMonitor(){return this._monitor||(this._monitor=this.getNodeBuilderState().monitor)}getBindings(){return this._bindings||(this._bindings=this.getNodeBuilderState().createBindings())}getIndex(){return this._geometries.getIndex(this)}getIndirect(){return this._geometries.getIndirect(this)}getChainArray(){return[this.object,this.material,this.context,this.lightsNode]}setGeometry(e){this.geometry=e,this.attributes=null}getAttributes(){if(null!==this.attributes)return this.attributes;const e=this.getNodeBuilderState().nodeAttributes,t=this.geometry,s=[],r=new Set;for(const n of e){const e=n.node&&n.node.attribute?n.node.attribute:t.getAttribute(n.name);if(void 0===e)continue;s.push(e);const i=e.isInterleavedBufferAttribute?e.data:e;r.add(i)}return this.attributes=s,this.vertexBuffers=Array.from(r.values()),s}getVertexBuffers(){return null===this.vertexBuffers&&this.getAttributes(),this.vertexBuffers}getDrawParameters(){const{object:e,material:t,geometry:s,group:r,drawRange:n}=this,i=this.drawParams||(this.drawParams={vertexCount:0,firstVertex:0,instanceCount:0,firstInstance:0}),o=this.getIndex(),a=null!==o,u=s.isInstancedBufferGeometry?s.instanceCount:e.count>1?e.count:1;if(0===u)return null;if(i.instanceCount=u,!0===e.isBatchedMesh)return i;let l=1;!0!==t.wireframe||e.isPoints||e.isLineSegments||e.isLine||e.isLineLoop||(l=2);let d=n.start*l,c=(n.start+n.count)*l;null!==r&&(d=Math.max(d,r.start*l),c=Math.min(c,(r.start+r.count)*l));const h=s.attributes.position;let p=1/0;a?p=o.count:null!=h&&(p=h.count),d=Math.max(d,0),c=Math.min(c,p);const g=c-d;return g<0||g===1/0?null:(i.vertexCount=g,i.firstVertex=d,i)}getGeometryCacheKey(){const{geometry:e}=this;let t="";for(const s of Object.keys(e.attributes).sort()){const r=e.attributes[s];t+=s+",",r.data&&(t+=r.data.stride+","),r.offset&&(t+=r.offset+","),r.itemSize&&(t+=r.itemSize+","),r.normalized&&(t+="n,")}return e.index&&(t+="index,"),t}getMaterialCacheKey(){const{object:e,material:t}=this;let s=t.customProgramCacheKey();for(const e of function(e){const t=Object.keys(e);let s=Object.getPrototypeOf(e);for(;s;){const e=Object.getOwnPropertyDescriptors(s);for(const s in e)if(void 0!==e[s]){const r=e[s];r&&"function"==typeof r.get&&t.push(s)}s=Object.getPrototypeOf(s)}return t}(t)){if(/^(is[A-Z]|_)|^(visible|version|uuid|name|opacity|userData)$/.test(e))continue;const r=t[e];let n;if(null!==r){const e=typeof r;"number"===e?n=0!==r?"1":"0":"object"===e?(n="{",r.isTexture&&(n+=r.mapping),n+="}"):n=String(r)}else n=String(r);s+=n+","}return s+=this.clippingContextCacheKey+",",e.geometry&&(s+=this.getGeometryCacheKey()),e.skeleton&&(s+=e.skeleton.bones.length+","),e.morphTargetInfluences&&(s+=e.morphTargetInfluences.length+","),e.isBatchedMesh&&(s+=e._matricesTexture.uuid+",",null!==e._colorsTexture&&(s+=e._colorsTexture.uuid+",")),e.count>1&&(s+=e.uuid+","),ar(s)}get needsGeometryUpdate(){return this.geometry.id!==this.object.geometry.id}get needsUpdate(){return this.initialNodesCacheKey!==this.getDynamicCacheKey()||this.clippingNeedsUpdate}getDynamicCacheKey(){let e=this._nodes.getCacheKey(this.scene,this.lightsNode);return this.object.receiveShadow&&(e+=1),e}getCacheKey(){return this.getMaterialCacheKey()+this.getDynamicCacheKey()}dispose(){this.material.removeEventListener("dispose",this.onMaterialDispose),this.onDispose()}}const Pg=[];class Ig{constructor(e,t,s,r,n,i){this.renderer=e,this.nodes=t,this.geometries=s,this.pipelines=r,this.bindings=n,this.info=i,this.chainMaps={}}get(e,t,s,r,n,i,o,a){const u=this.getChainMap(a);Pg[0]=e,Pg[1]=t,Pg[2]=i,Pg[3]=n;let l=u.get(Pg);if(void 0===l)l=this.createRenderObject(this.nodes,this.geometries,this.renderer,e,t,s,r,n,i,o,a),u.set(Pg,l);else{l.updateClipping(o);const u=l.needsGeometryUpdate;(l.version!==t.version||l.needsUpdate||u)&&(l.initialCacheKey!==l.getCacheKey()?(l.dispose(),l=this.get(e,t,s,r,n,i,o,a)):(l.version=t.version,u&&l.setGeometry(e.geometry)))}return l}getChainMap(e="default"){return this.chainMaps[e]||(this.chainMaps[e]=new Bg)}dispose(){this.chainMaps={}}createRenderObject(e,t,s,r,n,i,o,a,u,l,d){const c=this.getChainMap(d),h=new Fg(e,t,s,r,n,i,o,a,u,l);return h.onDispose=()=>{this.pipelines.delete(h),this.bindings.delete(h),this.nodes.delete(h),c.delete(h.getChainArray())},h}}class Lg{constructor(){this.data=new WeakMap}get(e){let t=this.data.get(e);return void 0===t&&(t={},this.data.set(e,t)),t}delete(e){let t;return this.data.has(e)&&(t=this.data.get(e),this.data.delete(e)),t}has(e){return this.data.has(e)}dispose(){this.data=new WeakMap}}const Dg=1,Vg=2,Og=3,Gg=4,kg=16;class zg extends Lg{constructor(e){super(),this.backend=e}delete(e){const t=super.delete(e);return void 0!==t&&this.backend.destroyAttribute(e),t}update(e,t){const s=this.get(e);if(void 0===s.version)t===Dg?this.backend.createAttribute(e):t===Vg?this.backend.createIndexAttribute(e):t===Og?this.backend.createStorageAttribute(e):t===Gg&&this.backend.createIndirectStorageAttribute(e),s.version=this._getBufferAttribute(e).version;else{const t=this._getBufferAttribute(e);(s.version<t.version||t.usage===p)&&(this.backend.updateAttribute(e),s.version=t.version)}}_getBufferAttribute(e){return e.isInterleavedBufferAttribute&&(e=e.data),e}}function $g(e){return null!==e.index?e.index.version:e.attributes.position.version}function Hg(e){const t=[],s=e.index,r=e.attributes.position;if(null!==s){const e=s.array;for(let s=0,r=e.length;s<r;s+=3){const r=e[s+0],n=e[s+1],i=e[s+2];t.push(r,n,n,i,i,r)}}else{for(let e=0,s=r.array.length/3-1;e<s;e+=3){const s=e+0,r=e+1,n=e+2;t.push(s,r,r,n,n,s)}}const n=new(function(e){for(let t=e.length-1;t>=0;--t)if(e[t]>=65535)return!0;return!1}(t)?ae:ue)(t,1);return n.version=$g(e),n}class Wg extends Lg{constructor(e,t){super(),this.attributes=e,this.info=t,this.wireframes=new WeakMap,this.attributeCall=new WeakMap}has(e){const t=e.geometry;return super.has(t)&&!0===this.get(t).initialized}updateForRender(e){!1===this.has(e)&&this.initGeometry(e),this.updateAttributes(e)}initGeometry(e){const t=e.geometry;this.get(t).initialized=!0,this.info.memory.geometries++;const s=()=>{this.info.memory.geometries--;const r=t.index,n=e.getAttributes();null!==r&&this.attributes.delete(r);for(const e of n)this.attributes.delete(e);const i=this.wireframes.get(t);void 0!==i&&this.attributes.delete(i),t.removeEventListener("dispose",s)};t.addEventListener("dispose",s)}updateAttributes(e){const t=e.getAttributes();for(const e of t)e.isStorageBufferAttribute||e.isStorageInstancedBufferAttribute?this.updateAttribute(e,Og):this.updateAttribute(e,Dg);const s=this.getIndex(e);null!==s&&this.updateAttribute(s,Vg);const r=e.geometry.indirect;null!==r&&this.updateAttribute(r,Gg)}updateAttribute(e,t){const s=this.info.render.calls;e.isInterleavedBufferAttribute?void 0===this.attributeCall.get(e)?(this.attributes.update(e,t),this.attributeCall.set(e,s)):this.attributeCall.get(e.data)!==s&&(this.attributes.update(e,t),this.attributeCall.set(e.data,s),this.attributeCall.set(e,s)):this.attributeCall.get(e)!==s&&(this.attributes.update(e,t),this.attributeCall.set(e,s))}getIndirect(e){return e.geometry.indirect}getIndex(e){const{geometry:t,material:s}=e;let r=t.index;if(!0===s.wireframe){const e=this.wireframes;let s=e.get(t);void 0===s?(s=Hg(t),e.set(t,s)):s.version!==$g(t)&&(this.attributes.delete(s),s=Hg(t),e.set(t,s)),r=s}return r}}class jg{constructor(){this.autoReset=!0,this.frame=0,this.calls=0,this.render={calls:0,frameCalls:0,drawCalls:0,triangles:0,points:0,lines:0,timestamp:0,previousFrameCalls:0,timestampCalls:0},this.compute={calls:0,frameCalls:0,timestamp:0,previousFrameCalls:0,timestampCalls:0},this.memory={geometries:0,textures:0}}update(e,t,s){this.render.drawCalls++,e.isMesh||e.isSprite?this.render.triangles+=s*(t/3):e.isPoints?this.render.points+=s*t:e.isLineSegments?this.render.lines+=s*(t/2):e.isLine?this.render.lines+=s*(t-1):console.error("THREE.WebGPUInfo: Unknown object type.")}updateTimestamp(e,t){0===this[e].timestampCalls&&(this[e].timestamp=0),this[e].timestamp+=t,this[e].timestampCalls++,this[e].timestampCalls>=this[e].previousFrameCalls&&(this[e].timestampCalls=0)}reset(){const e=this.render.frameCalls;this.render.previousFrameCalls=e;const t=this.compute.frameCalls;this.compute.previousFrameCalls=t,this.render.drawCalls=0,this.render.frameCalls=0,this.compute.frameCalls=0,this.render.triangles=0,this.render.points=0,this.render.lines=0}dispose(){this.reset(),this.calls=0,this.render.calls=0,this.compute.calls=0,this.render.timestamp=0,this.compute.timestamp=0,this.memory.geometries=0,this.memory.textures=0}}class qg{constructor(e){this.cacheKey=e,this.usedTimes=0}}class Kg extends qg{constructor(e,t,s){super(e),this.vertexProgram=t,this.fragmentProgram=s}}class Xg extends qg{constructor(e,t){super(e),this.computeProgram=t,this.isComputePipeline=!0}}let Yg=0;class Qg{constructor(e,t,s=null,r=null){this.id=Yg++,this.code=e,this.stage=t,this.transforms=s,this.attributes=r,this.usedTimes=0}}class Zg extends Lg{constructor(e,t){super(),this.backend=e,this.nodes=t,this.bindings=null,this.caches=new Map,this.programs={vertex:new Map,fragment:new Map,compute:new Map}}getForCompute(e,t){const{backend:s}=this,r=this.get(e);if(this._needsComputeUpdate(e)){const n=r.pipeline;n&&(n.usedTimes--,n.computeProgram.usedTimes--);const i=this.nodes.getForCompute(e);let o=this.programs.compute.get(i.computeShader);void 0===o&&(n&&0===n.computeProgram.usedTimes&&this._releaseProgram(n.computeProgram),o=new Qg(i.computeShader,"compute",i.transforms,i.nodeAttributes),this.programs.compute.set(i.computeShader,o),s.createProgram(o));const a=this._getComputeCacheKey(e,o);let u=this.caches.get(a);void 0===u&&(n&&0===n.usedTimes&&this._releasePipeline(n),u=this._getComputePipeline(e,o,a,t)),u.usedTimes++,o.usedTimes++,r.version=e.version,r.pipeline=u}return r.pipeline}getForRender(e,t=null){const{backend:s}=this,r=this.get(e);if(this._needsRenderUpdate(e)){const n=r.pipeline;n&&(n.usedTimes--,n.vertexProgram.usedTimes--,n.fragmentProgram.usedTimes--);const i=e.getNodeBuilderState();let o=this.programs.vertex.get(i.vertexShader);void 0===o&&(n&&0===n.vertexProgram.usedTimes&&this._releaseProgram(n.vertexProgram),o=new Qg(i.vertexShader,"vertex"),this.programs.vertex.set(i.vertexShader,o),s.createProgram(o));let a=this.programs.fragment.get(i.fragmentShader);void 0===a&&(n&&0===n.fragmentProgram.usedTimes&&this._releaseProgram(n.fragmentProgram),a=new Qg(i.fragmentShader,"fragment"),this.programs.fragment.set(i.fragmentShader,a),s.createProgram(a));const u=this._getRenderCacheKey(e,o,a);let l=this.caches.get(u);void 0===l?(n&&0===n.usedTimes&&this._releasePipeline(n),l=this._getRenderPipeline(e,o,a,u,t)):e.pipeline=l,l.usedTimes++,o.usedTimes++,a.usedTimes++,r.pipeline=l}return r.pipeline}delete(e){const t=this.get(e).pipeline;return t&&(t.usedTimes--,0===t.usedTimes&&this._releasePipeline(t),t.isComputePipeline?(t.computeProgram.usedTimes--,0===t.computeProgram.usedTimes&&this._releaseProgram(t.computeProgram)):(t.fragmentProgram.usedTimes--,t.vertexProgram.usedTimes--,0===t.vertexProgram.usedTimes&&this._releaseProgram(t.vertexProgram),0===t.fragmentProgram.usedTimes&&this._releaseProgram(t.fragmentProgram))),super.delete(e)}dispose(){super.dispose(),this.caches=new Map,this.programs={vertex:new Map,fragment:new Map,compute:new Map}}updateForRender(e){this.getForRender(e)}_getComputePipeline(e,t,s,r){s=s||this._getComputeCacheKey(e,t);let n=this.caches.get(s);return void 0===n&&(n=new Xg(s,t),this.caches.set(s,n),this.backend.createComputePipeline(n,r)),n}_getRenderPipeline(e,t,s,r,n){r=r||this._getRenderCacheKey(e,t,s);let i=this.caches.get(r);return void 0===i&&(i=new Kg(r,t,s),this.caches.set(r,i),e.pipeline=i,this.backend.createRenderPipeline(e,n)),i}_getComputeCacheKey(e,t){return e.id+","+t.id}_getRenderCacheKey(e,t,s){return t.id+","+s.id+","+this.backend.getRenderCacheKey(e)}_releasePipeline(e){this.caches.delete(e.cacheKey)}_releaseProgram(e){const t=e.code,s=e.stage;this.programs[s].delete(t)}_needsComputeUpdate(e){const t=this.get(e);return void 0===t.pipeline||t.version!==e.version}_needsRenderUpdate(e){return void 0===this.get(e).pipeline||this.backend.needsRenderUpdate(e)}}class Jg extends Lg{constructor(e,t,s,r,n,i){super(),this.backend=e,this.textures=s,this.pipelines=n,this.attributes=r,this.nodes=t,this.info=i,this.pipelines.bindings=this}getForRender(e){const t=e.getBindings();for(const e of t){const s=this.get(e);void 0===s.bindGroup&&(this._init(e),this.backend.createBindings(e,t),s.bindGroup=e)}return t}getForCompute(e){const t=this.nodes.getForCompute(e).bindings;for(const e of t){const s=this.get(e);void 0===s.bindGroup&&(this._init(e),this.backend.createBindings(e,t),s.bindGroup=e)}return t}updateForCompute(e){this._updateBindings(this.getForCompute(e))}updateForRender(e){this._updateBindings(this.getForRender(e))}_updateBindings(e){for(const t of e)this._update(t,e)}_init(e){for(const t of e.bindings)if(t.isSampledTexture)this.textures.updateTexture(t.texture);else if(t.isStorageBuffer){const e=t.attribute,s=e.isIndirectStorageBufferAttribute?Gg:Og;this.attributes.update(e,s)}}_update(e,t){const{backend:s}=this;let r=!1;for(const t of e.bindings){if(t.isNodeUniformsGroup){if(!this.nodes.updateGroup(t))continue}if(t.isUniformBuffer){t.update()&&s.updateBinding(t)}else if(t.isSampler)t.update();else if(t.isSampledTexture){t.needsBindingsUpdate(this.textures.get(t.texture).generation)&&(r=!0);const e=t.update(),n=t.texture;e&&this.textures.updateTexture(n);const i=s.get(n);if(!0===s.isWebGPUBackend&&void 0===i.texture&&void 0===i.externalTexture&&(console.error("Bindings._update: binding should be available:",t,e,n,t.textureNode.value,r),this.textures.updateTexture(n),r=!0),!0===n.isStorageTexture){const e=this.get(n);!0===t.store?e.needsMipmap=!0:this.textures.needsMipmaps(n)&&!0===e.needsMipmap&&(this.backend.generateMipmaps(n),e.needsMipmap=!1)}}}!0===r&&this.backend.updateBindings(e,t)}}function em(e,t){return e.groupOrder!==t.groupOrder?e.groupOrder-t.groupOrder:e.renderOrder!==t.renderOrder?e.renderOrder-t.renderOrder:e.material.id!==t.material.id?e.material.id-t.material.id:e.z!==t.z?e.z-t.z:e.id-t.id}function tm(e,t){return e.groupOrder!==t.groupOrder?e.groupOrder-t.groupOrder:e.renderOrder!==t.renderOrder?e.renderOrder-t.renderOrder:e.z!==t.z?t.z-e.z:e.id-t.id}function sm(e){return(e.transmission>0||e.transmissionNode)&&e.side===le&&!1===e.forceSinglePass}class rm{constructor(e,t,s){this.renderItems=[],this.renderItemsIndex=0,this.opaque=[],this.transparentDoublePass=[],this.transparent=[],this.bundles=[],this.lightsNode=e.getNode(t,s),this.lightsArray=[],this.scene=t,this.camera=s,this.occlusionQueryCount=0}begin(){return this.renderItemsIndex=0,this.opaque.length=0,this.transparentDoublePass.length=0,this.transparent.length=0,this.bundles.length=0,this.lightsArray.length=0,this.occlusionQueryCount=0,this}getNextRenderItem(e,t,s,r,n,i,o){let a=this.renderItems[this.renderItemsIndex];return void 0===a?(a={id:e.id,object:e,geometry:t,material:s,groupOrder:r,renderOrder:e.renderOrder,z:n,group:i,clippingContext:o},this.renderItems[this.renderItemsIndex]=a):(a.id=e.id,a.object=e,a.geometry=t,a.material=s,a.groupOrder=r,a.renderOrder=e.renderOrder,a.z=n,a.group=i,a.clippingContext=o),this.renderItemsIndex++,a}push(e,t,s,r,n,i,o){const a=this.getNextRenderItem(e,t,s,r,n,i,o);!0===e.occlusionTest&&this.occlusionQueryCount++,!0===s.transparent||s.transmission>0?(sm(s)&&this.transparentDoublePass.push(a),this.transparent.push(a)):this.opaque.push(a)}unshift(e,t,s,r,n,i,o){const a=this.getNextRenderItem(e,t,s,r,n,i,o);!0===s.transparent||s.transmission>0?(sm(s)&&this.transparentDoublePass.unshift(a),this.transparent.unshift(a)):this.opaque.unshift(a)}pushBundle(e){this.bundles.push(e)}pushLight(e){this.lightsArray.push(e)}sort(e,t){this.opaque.length>1&&this.opaque.sort(e||em),this.transparentDoublePass.length>1&&this.transparentDoublePass.sort(t||tm),this.transparent.length>1&&this.transparent.sort(t||tm)}finish(){this.lightsNode.setLights(this.lightsArray);for(let e=this.renderItemsIndex,t=this.renderItems.length;e<t;e++){const t=this.renderItems[e];if(null===t.id)break;t.id=null,t.object=null,t.geometry=null,t.material=null,t.groupOrder=null,t.renderOrder=null,t.z=null,t.group=null,t.clippingContext=null}}}class nm{constructor(e){this.lighting=e,this.lists=new Bg}get(e,t){const s=this.lists,r=[e,t];let n=s.get(r);return void 0===n&&(n=new rm(this.lighting,e,t),s.set(r,n)),n}dispose(){this.lists=new Bg}}let im=0;class om{constructor(){this.id=im++,this.color=!0,this.clearColor=!0,this.clearColorValue={r:0,g:0,b:0,a:1},this.depth=!0,this.clearDepth=!0,this.clearDepthValue=1,this.stencil=!1,this.clearStencil=!0,this.clearStencilValue=1,this.viewport=!1,this.viewportValue=new r,this.scissor=!1,this.scissorValue=new r,this.textures=null,this.depthTexture=null,this.activeCubeFace=0,this.sampleCount=1,this.width=0,this.height=0,this.isRenderContext=!0}getCacheKey(){return am(this)}}function am(e){const{textures:t,activeCubeFace:s}=e,r=[s];for(const e of t)r.push(e.id);return ur(r)}class um{constructor(){this.chainMaps={}}get(e,t,s=null){const r=[e,t];let n;if(null===s)n="default";else{const e=s.texture.format;n=`${s.textures.length}:${e}:${s.samples}:${s.depthBuffer}:${s.stencilBuffer}`}const i=this.getChainMap(n);let o=i.get(r);return void 0===o&&(o=new om,i.set(r,o)),null!==s&&(o.sampleCount=0===s.samples?1:s.samples),o}getChainMap(e){return this.chainMaps[e]||(this.chainMaps[e]=new Bg)}dispose(){this.chainMaps={}}}const lm=new s;class dm extends Lg{constructor(e,t,s){super(),this.renderer=e,this.backend=t,this.info=s}updateRenderTarget(e,t=0){const s=this.get(e),r=0===e.samples?1:e.samples,n=s.depthTextureMips||(s.depthTextureMips={}),i=e.textures,o=this.getSize(i[0]),a=o.width>>t,u=o.height>>t;let l=e.depthTexture||n[t];const d=!0===e.depthBuffer||!0===e.stencilBuffer;let c=!1;void 0===l&&d&&(l=new B,l.format=e.stencilBuffer?de:ce,l.type=e.stencilBuffer?he:f,l.image.width=a,l.image.height=u,n[t]=l),s.width===o.width&&o.height===s.height||(c=!0,l&&(l.needsUpdate=!0,l.image.width=a,l.image.height=u)),s.width=o.width,s.height=o.height,s.textures=i,s.depthTexture=l||null,s.depth=e.depthBuffer,s.stencil=e.stencilBuffer,s.renderTarget=e,s.sampleCount!==r&&(c=!0,l&&(l.needsUpdate=!0),s.sampleCount=r);const h={sampleCount:r};for(let e=0;e<i.length;e++){const t=i[e];c&&(t.needsUpdate=!0),this.updateTexture(t,h)}if(l&&this.updateTexture(l,h),!0!==s.initialized){s.initialized=!0;const t=()=>{e.removeEventListener("dispose",t);for(let e=0;e<i.length;e++)this._destroyTexture(i[e]);l&&this._destroyTexture(l),this.delete(e)};e.addEventListener("dispose",t)}}updateTexture(e,t={}){const s=this.get(e);if(!0===s.initialized&&s.version===e.version)return;const r=e.isRenderTargetTexture||e.isDepthTexture||e.isFramebufferTexture,n=this.backend;if(r&&!0===s.initialized&&(n.destroySampler(e),n.destroyTexture(e)),e.isFramebufferTexture){const t=this.renderer.getRenderTarget();e.type=t?t.texture.type:pe}const{width:i,height:o,depth:a}=this.getSize(e);if(t.width=i,t.height=o,t.depth=a,t.needsMipmaps=this.needsMipmaps(e),t.levels=t.needsMipmaps?this.getMipLevels(e,i,o):1,r||!0===e.isStorageTexture)n.createSampler(e),n.createTexture(e,t),s.generation=e.version;else{if(!0!==s.initialized&&n.createSampler(e),e.version>0){const r=e.image;if(void 0===r)console.warn("THREE.Renderer: Texture marked for update but image is undefined.");else if(!1===r.complete)console.warn("THREE.Renderer: Texture marked for update but image is incomplete.");else{if(e.images){const s=[];for(const t of e.images)s.push(t);t.images=s}else t.image=r;void 0!==s.isDefaultTexture&&!0!==s.isDefaultTexture||(n.createTexture(e,t),s.isDefaultTexture=!1,s.generation=e.version),!0===e.source.dataReady&&n.updateTexture(e,t),t.needsMipmaps&&0===e.mipmaps.length&&n.generateMipmaps(e)}}else n.createDefaultTexture(e),s.isDefaultTexture=!0,s.generation=e.version}if(!0!==s.initialized){s.initialized=!0,s.generation=e.version,this.info.memory.textures++;const t=()=>{e.removeEventListener("dispose",t),this._destroyTexture(e),this.info.memory.textures--};e.addEventListener("dispose",t)}s.version=e.version}getSize(e,t=lm){let s=e.images?e.images[0]:e.image;return s?(void 0!==s.image&&(s=s.image),t.width=s.width||1,t.height=s.height||1,t.depth=e.isCubeTexture?6:s.depth||1):t.width=t.height=t.depth=1,t}getMipLevels(e,t,s){let r;return r=e.isCompressedTexture?e.mipmaps?e.mipmaps.length:1:Math.floor(Math.log2(Math.max(t,s)))+1,r}needsMipmaps(e){return this.isEnvironmentTexture(e)||!0===e.isCompressedTexture||e.generateMipmaps}isEnvironmentTexture(e){const t=e.mapping;return t===j||t===q||t===T||t===_}_destroyTexture(e){this.backend.destroySampler(e),this.backend.destroyTexture(e),this.delete(e)}}class cm extends e{constructor(e,t,s,r=1){super(e,t,s),this.a=r}set(e,t,s,r=1){return this.a=r,super.set(e,t,s)}copy(e){return void 0!==e.a&&(this.a=e.a),super.copy(e)}clone(){return new this.constructor(this.r,this.g,this.b,this.a)}}class hm extends si{static get type(){return"ParameterNode"}constructor(e,t=null){super(e,t),this.isParameterNode=!0}getHash(){return this.uuid}generate(){return this.name}}const pm=(e,t)=>hn(new hm(e,t));class gm extends Ar{static get type(){return"StackNode"}constructor(e=null){super(),this.nodes=[],this.outputNode=null,this.parent=e,this._currentCond=null,this.isStackNode=!0}getNodeType(e){return this.outputNode?this.outputNode.getNodeType(e):"void"}add(e){return this.nodes.push(e),this}If(e,t){const s=new cn(t);return this._currentCond=xa(e,s),this.add(this._currentCond)}ElseIf(e,t){const s=new cn(t),r=xa(e,s);return this._currentCond.elseNode=r,this._currentCond=r,this}Else(e){return this._currentCond.elseNode=new cn(e),this}build(e,...t){const s=Tn();xn(this);for(const t of this.nodes)t.build(e,"void");return xn(s),this.outputNode?this.outputNode.build(e,...t):super.build(e,...t)}else(...e){return console.warn("TSL.StackNode: .else() has been renamed to .Else()."),this.Else(...e)}elseif(...e){return console.warn("TSL.StackNode: .elseif() has been renamed to .ElseIf()."),this.ElseIf(...e)}}const mm=mn(gm);class fm extends Ar{static get type(){return"StructTypeNode"}constructor(e){super(),this.types=e,this.isStructTypeNode=!0}getMemberTypes(){return this.types}}class ym extends Ar{static get type(){return"OutputStructNode"}constructor(...e){super(),this.members=e,this.isOutputStructNode=!0}setup(e){super.setup(e);const t=this.members,s=[];for(let r=0;r<t.length;r++)s.push(t[r].getNodeType(e));this.nodeType=e.getStructTypeFromNode(new fm(s)).name}generate(e,t){const s=e.getOutputStructName(),r=this.members,n=""!==s?s+".":"";for(let s=0;s<r.length;s++){const i=r[s].build(e,t);e.addLineFlowCode(`${n}m${s} = ${i}`,this)}return s}}const bm=mn(ym);function xm(e,t){for(let s=0;s<e.length;s++)if(e[s].name===t)return s;return-1}class Tm extends ym{static get type(){return"MRTNode"}constructor(e){super(),this.outputNodes=e,this.isMRTNode=!0}has(e){return void 0!==this.outputNodes[e]}get(e){return this.outputNodes[e]}merge(e){const t={...this.outputNodes,...e.outputNodes};return _m(t)}setup(e){const t=this.outputNodes,s=[],r=e.renderer.getRenderTarget().textures;for(const e in t){s[xm(r,e)]=Ln(t[e])}return this.members=s,super.setup(e)}}const _m=mn(Tm),Nm=yn((([e])=>{const t=e.toUint().mul(747796405).add(2891336453),s=t.shiftRight(t.shiftRight(28).add(4)).bitXor(t).mul(277803737);return s.shiftRight(22).bitXor(s).toFloat().mul(1/2**32)})),vm=(e,t)=>sa(Gi(4,e.mul(Oi(1,e))),t),Sm=(e,t)=>e.lessThan(.5)?vm(e.mul(2),t).div(2):Oi(1,vm(Gi(Oi(1,e),2),t).div(2)),Am=(e,t,s)=>sa(ki(sa(e,t),Vi(sa(e,t),sa(Oi(1,e),s))),1/t),Rm=(e,t)=>Co(lo.mul(t.mul(e).sub(1))).div(lo.mul(t.mul(e).sub(1))),Cm=yn((([e])=>e.fract().sub(.5).abs())).setLayout({name:"tri",type:"float",inputs:[{name:"x",type:"float"}]}),Em=yn((([e])=>Un(Cm(e.z.add(Cm(e.y.mul(1)))),Cm(e.z.add(Cm(e.x.mul(1)))),Cm(e.y.add(Cm(e.x.mul(1))))))).setLayout({name:"tri3",type:"vec3",inputs:[{name:"p",type:"vec3"}]}),wm=yn((([e,t,s])=>{const r=Un(e).toVar(),n=Sn(1.4).toVar(),i=Sn(0).toVar(),o=Un(r).toVar();return uc({start:Sn(0),end:Sn(3),type:"float",condition:"<="},(()=>{const e=Un(Em(o.mul(2))).toVar();r.addAssign(e.add(s.mul(Sn(.1).mul(t)))),o.mulAssign(1.8),n.mulAssign(1.5),r.mulAssign(1.2);const a=Sn(Cm(r.z.add(Cm(r.x.add(Cm(r.y)))))).toVar();i.addAssign(a.div(n)),o.addAssign(.14)})),i})).setLayout({name:"triNoise3D",type:"float",inputs:[{name:"p",type:"vec3"},{name:"spd",type:"float"},{name:"time",type:"float"}]});class Mm extends Ar{static get type(){return"FunctionOverloadingNode"}constructor(e=[],...t){super(),this.functionNodes=e,this.parametersNodes=t,this._candidateFnCall=null,this.global=!0}getNodeType(){return this.functionNodes[0].shaderNode.layout.type}setup(e){const t=this.parametersNodes;let s=this._candidateFnCall;if(null===s){let r=null,n=-1;for(const s of this.functionNodes){const i=s.shaderNode.layout;if(null===i)throw new Error("FunctionOverloadingNode: FunctionNode must be a layout.");const o=i.inputs;if(t.length===o.length){let i=0;for(let s=0;s<t.length;s++){const r=t[s],n=o[s];r.getNodeType(e)===n.type?i++:i=0}i>n&&(r=s,n=i)}}this._candidateFnCall=s=r(...t)}return s}}const Bm=mn(Mm),Um=e=>(...t)=>Bm(e,...t),Fm=ti(0).setGroup(Zn).onRenderUpdate((e=>e.time)),Pm=ti(0).setGroup(Zn).onRenderUpdate((e=>e.deltaTime)),Im=ti(0,"uint").setGroup(Zn).onRenderUpdate((e=>e.frameId)),Lm=(e=1)=>(console.warn('TSL: timerLocal() is deprecated. Use "time" instead.'),Fm.mul(e)),Dm=(e=1)=>(console.warn('TSL: timerGlobal() is deprecated. Use "time" instead.'),Fm.mul(e)),Vm=(e=1)=>(console.warn('TSL: timerDelta() is deprecated. Use "deltaTime" instead.'),Pm.mul(e)),Om=(e=Fm)=>e.add(.75).mul(2*Math.PI).sin().mul(.5).add(.5),Gm=(e=Fm)=>e.fract().round(),km=(e=Fm)=>e.add(.5).fract().mul(2).sub(1).abs(),zm=(e=Fm)=>e.fract(),$m=yn((([e,t,s=En(.5)])=>Tg(e.sub(s),t).add(s))),Hm=yn((([e,t,s=En(.5)])=>{const r=e.sub(s),n=r.dot(r),i=n.mul(n).mul(t);return e.add(r.mul(i))})),Wm=yn((({position:e=null,horizontal:t=!0,vertical:s=!1})=>{let r;null!==e?(r=Gu.toVar(),r[3][0]=e.x,r[3][1]=e.y,r[3][2]=e.z):r=Gu;const n=Eu.mul(r);return ln(t)&&(n[0][0]=Gu[0].length(),n[0][1]=0,n[0][2]=0),ln(s)&&(n[1][0]=0,n[1][1]=Gu[1].length(),n[1][2]=0),n[2][0]=0,n[2][1]=0,n[2][2]=1,Ru.mul(n).mul(Yu)})),jm=yn((([e=null])=>{const t=Yc();return Yc(kc(e)).sub(t).lessThan(0).select(Ac,e)}));class qm extends Ar{static get type(){return"SpriteSheetUVNode"}constructor(e,t=mu(),s=Sn(0)){super("vec2"),this.countNode=e,this.uvNode=t,this.frameNode=s}setup(){const{frameNode:e,uvNode:t,countNode:s}=this,{width:r,height:n}=s,i=e.mod(r.mul(n)).floor(),o=i.mod(r),a=n.sub(i.add(1).div(r).ceil()),u=s.reciprocal(),l=En(o,a);return t.add(l).mul(u)}}const Km=mn(qm);class Xm extends Ar{static get type(){return"TriplanarTexturesNode"}constructor(e,t=null,s=null,r=Sn(1),n=Yu,i=ol){super("vec4"),this.textureXNode=e,this.textureYNode=t,this.textureZNode=s,this.scaleNode=r,this.positionNode=n,this.normalNode=i}setup(){const{textureXNode:e,textureYNode:t,textureZNode:s,scaleNode:r,positionNode:n,normalNode:i}=this;let o=i.abs().normalize();o=o.div(o.dot(Un(1)));const a=n.yz.mul(r),u=n.zx.mul(r),l=n.xy.mul(r),d=e.value,c=null!==t?t.value:d,h=null!==s?s.value:d,p=_u(d,a).mul(o.x),g=_u(c,u).mul(o.y),m=_u(h,l).mul(o.z);return Vi(p,g,m)}}const Ym=mn(Xm),Qm=(...e)=>Ym(...e),Zm=new me,Jm=new s,ef=new s,tf=new s,sf=new i,rf=new s(0,0,-1),nf=new r,of=new s,af=new s,uf=new r,lf=new t,df=new ge,cf=Ac.flipX();df.depthTexture=new B(1,1);let hf=!1;class pf extends Tu{static get type(){return"ReflectorNode"}constructor(e={}){super(e.defaultTexture||df.texture,cf),this._reflectorBaseNode=e.reflector||new gf(this,e),this._depthNode=null,this.setUpdateMatrix(!1)}get reflector(){return this._reflectorBaseNode}get target(){return this._reflectorBaseNode.target}getDepthNode(){if(null===this._depthNode){if(!0!==this._reflectorBaseNode.depth)throw new Error("THREE.ReflectorNode: Depth node can only be requested when the reflector is created with { depth: true }. ");this._depthNode=hn(new pf({defaultTexture:df.depthTexture,reflector:this._reflectorBaseNode}))}return this._depthNode}setup(e){return e.object.isQuadMesh||this._reflectorBaseNode.build(e),super.setup(e)}clone(){const e=new this.constructor(this.reflectorNode);return e._reflectorBaseNode=this._reflectorBaseNode,e}}class gf extends Ar{static get type(){return"ReflectorBaseNode"}constructor(e,t={}){super();const{target:s=new fe,resolution:r=1,generateMipmaps:n=!1,bounces:i=!0,depth:o=!1}=t;this.textureNode=e,this.target=s,this.resolution=r,this.generateMipmaps=n,this.bounces=i,this.depth=o,this.updateBeforeType=i?br.RENDER:br.FRAME,this.virtualCameras=new WeakMap,this.renderTargets=new WeakMap}_updateResolution(e,t){const s=this.resolution;t.getDrawingBufferSize(lf),e.setSize(Math.round(lf.width*s),Math.round(lf.height*s))}setup(e){return this._updateResolution(df,e.renderer),super.setup(e)}getVirtualCamera(e){let t=this.virtualCameras.get(e);return void 0===t&&(t=e.clone(),this.virtualCameras.set(e,t)),t}getRenderTarget(e){let t=this.renderTargets.get(e);return void 0===t&&(t=new ge(0,0,{type:ye}),!0===this.generateMipmaps&&(t.texture.minFilter=be,t.texture.generateMipmaps=!0),!0===this.depth&&(t.depthTexture=new B),this.renderTargets.set(e,t)),t}updateBefore(e){if(!1===this.bounces&&hf)return;hf=!0;const{scene:t,camera:s,renderer:r,material:n}=e,{target:i}=this,o=this.getVirtualCamera(s),a=this.getRenderTarget(o);if(r.getDrawingBufferSize(lf),this._updateResolution(a,r),ef.setFromMatrixPosition(i.matrixWorld),tf.setFromMatrixPosition(s.matrixWorld),sf.extractRotation(i.matrixWorld),Jm.set(0,0,1),Jm.applyMatrix4(sf),of.subVectors(ef,tf),of.dot(Jm)>0)return;of.reflect(Jm).negate(),of.add(ef),sf.extractRotation(s.matrixWorld),rf.set(0,0,-1),rf.applyMatrix4(sf),rf.add(tf),af.subVectors(ef,rf),af.reflect(Jm).negate(),af.add(ef),o.coordinateSystem=s.coordinateSystem,o.position.copy(of),o.up.set(0,1,0),o.up.applyMatrix4(sf),o.up.reflect(Jm),o.lookAt(af),o.near=s.near,o.far=s.far,o.updateMatrixWorld(),o.projectionMatrix.copy(s.projectionMatrix),Zm.setFromNormalAndCoplanarPoint(Jm,ef),Zm.applyMatrix4(o.matrixWorldInverse),nf.set(Zm.normal.x,Zm.normal.y,Zm.normal.z,Zm.constant);const u=o.projectionMatrix;uf.x=(Math.sign(nf.x)+u.elements[8])/u.elements[0],uf.y=(Math.sign(nf.y)+u.elements[9])/u.elements[5],uf.z=-1,uf.w=(1+u.elements[10])/u.elements[14],nf.multiplyScalar(1/nf.dot(uf));u.elements[2]=nf.x,u.elements[6]=nf.y,u.elements[10]=r.coordinateSystem===N?nf.z-0:nf.z+1-0,u.elements[14]=nf.w,this.textureNode.value=a.texture,!0===this.depth&&(this.textureNode.getDepthNode().value=a.depthTexture),n.visible=!1;const l=r.getRenderTarget(),d=r.getMRT();r.setMRT(null),r.setRenderTarget(a),r.render(t,o),r.setMRT(d),r.setRenderTarget(l),n.visible=!0,hf=!1}}const mf=e=>hn(new pf(e)),ff=new xe(-1,1,1,-1,0,1);class yf extends Te{constructor(e=!1){super();const t=!1===e?[0,-1,0,1,2,1]:[0,2,0,0,2,0];this.setAttribute("position",new _e([-1,3,0,-1,-1,0,3,-1,0],3)),this.setAttribute("uv",new _e(t,2))}}const bf=new yf;class xf extends k{constructor(e=null){super(bf,e),this.camera=ff,this.isQuadMesh=!0}renderAsync(e){return e.renderAsync(this,ff)}render(e){e.render(this,ff)}}const Tf=new t;class _f extends Tu{static get type(){return"RTTNode"}constructor(e,t=null,s=null,r={type:ye}){const n=new ge(t,s,r);super(n.texture,mu()),this.node=e,this.width=t,this.height=s,this.renderTarget=n,this.textureNeedsUpdate=!0,this.autoUpdate=!0,this.updateMap=new WeakMap,this._rttNode=null,this._quadMesh=new xf(new rh),this.updateBeforeType=br.RENDER}get autoSize(){return null===this.width}setup(e){return this._rttNode=this.node.context(e.getSharedContext()),this._quadMesh.material.name="RTT",this._quadMesh.material.needsUpdate=!0,super.setup(e)}setSize(e,t){this.width=e,this.height=t;const s=e*this.pixelRatio,r=t*this.pixelRatio;this.renderTarget.setSize(s,r),this.textureNeedsUpdate=!0}setPixelRatio(e){this.pixelRatio=e,this.setSize(this.width,this.height)}updateBefore({renderer:e}){if(!1===this.textureNeedsUpdate&&!1===this.autoUpdate)return;if(this.textureNeedsUpdate=!1,!0===this.autoSize){this.pixelRatio=e.getPixelRatio();const t=e.getSize(Tf);this.setSize(t.width,t.height)}this._quadMesh.material.fragmentNode=this._rttNode;const t=e.getRenderTarget();e.setRenderTarget(this.renderTarget),this._quadMesh.render(e),e.setRenderTarget(t)}clone(){const e=new Tu(this.value,this.uvNode,this.levelNode);return e.sampler=this.sampler,e.referenceNode=this,e}}const Nf=(e,...t)=>hn(new _f(hn(e),...t)),vf=(e,...t)=>e.isTextureNode?e:Nf(e,...t),Sf=yn((([e,t,s],r)=>{let n;r.renderer.coordinateSystem===N?(e=En(e.x,e.y.oneMinus()).mul(2).sub(1),n=Ln(Un(e,t),1)):n=Ln(Un(e.x,e.y.oneMinus(),t).mul(2).sub(1),1);const i=Ln(s.mul(n));return i.xyz.div(i.w)})),Af=yn((([e,t])=>{const s=t.mul(Ln(e,1)),r=s.xy.div(s.w).mul(.5).add(.5).toVar();return En(r.x,r.y.oneMinus())})),Rf=yn((([e,t,s])=>{const r=yu(Nu(t)),n=wn(e.mul(r)).toVar(),i=Nu(t,n).toVar(),o=Nu(t,n.sub(wn(2,0))).toVar(),a=Nu(t,n.sub(wn(1,0))).toVar(),u=Nu(t,n.add(wn(1,0))).toVar(),l=Nu(t,n.add(wn(2,0))).toVar(),d=Nu(t,n.add(wn(0,2))).toVar(),c=Nu(t,n.add(wn(0,1))).toVar(),h=Nu(t,n.sub(wn(0,1))).toVar(),p=Nu(t,n.sub(wn(0,2))).toVar(),g=Fo(Oi(Sn(2).mul(a).sub(o),i)).toVar(),m=Fo(Oi(Sn(2).mul(u).sub(l),i)).toVar(),f=Fo(Oi(Sn(2).mul(c).sub(d),i)).toVar(),y=Fo(Oi(Sn(2).mul(h).sub(p),i)).toVar(),b=Sf(e,i,s).toVar(),x=g.lessThan(m).select(b.sub(Sf(e.sub(En(Sn(1).div(r.x),0)),a,s)),b.negate().add(Sf(e.add(En(Sn(1).div(r.x),0)),u,s))),T=f.lessThan(y).select(b.sub(Sf(e.add(En(0,Sn(1).div(r.y))),c,s)),b.negate().add(Sf(e.sub(En(0,Sn(1).div(r.y))),h,s)));return Ao(ta(x,T))}));class Cf extends pu{static get type(){return"VertexColorNode"}constructor(e=0){super(null,"vec4"),this.isVertexColorNode=!0,this.index=e}getAttributeName(){const e=this.index;return"color"+(e>0?e:"")}generate(e){const t=this.getAttributeName(e);let s;return s=!0===e.hasGeometryAttribute(t)?super.generate(e):e.generateConst(this.nodeType,new r(1,1,1,1)),s}serialize(e){super.serialize(e),e.index=this.index}deserialize(e){super.deserialize(e),this.index=e.index}}const Ef=(...e)=>hn(new Cf(...e));class wf extends Ar{static get type(){return"PointUVNode"}constructor(){super("vec2"),this.isPointUVNode=!0}generate(){return"vec2( gl_PointCoord.x, 1.0 - gl_PointCoord.y )"}}const Mf=fn(wf),Bf=new ve,Uf=new i;class Ff extends Ar{static get type(){return"SceneNode"}constructor(e=Ff.BACKGROUND_BLURRINESS,t=null){super(),this.scope=e,this.scene=t}setup(e){const t=this.scope,s=null!==this.scene?this.scene:e.scene;let r;return t===Ff.BACKGROUND_BLURRINESS?r=Ml("backgroundBlurriness","float",s):t===Ff.BACKGROUND_INTENSITY?r=Ml("backgroundIntensity","float",s):t===Ff.BACKGROUND_ROTATION?r=ti("mat4").label("backgroundRotation").setGroup(Zn).onRenderUpdate((()=>{const e=s.background;return null!==e&&e.isTexture&&e.mapping!==Ne?(Bf.copy(s.backgroundRotation),Bf.x*=-1,Bf.y*=-1,Bf.z*=-1,Uf.makeRotationFromEuler(Bf)):Uf.identity(),Uf})):console.error("THREE.SceneNode: Unknown scope:",t),r}}Ff.BACKGROUND_BLURRINESS="backgroundBlurriness",Ff.BACKGROUND_INTENSITY="backgroundIntensity",Ff.BACKGROUND_ROTATION="backgroundRotation";const Pf=fn(Ff,Ff.BACKGROUND_BLURRINESS),If=fn(Ff,Ff.BACKGROUND_INTENSITY),Lf=fn(Ff,Ff.BACKGROUND_ROTATION);class Df extends Rr{static get type(){return"StorageArrayElementNode"}constructor(e,t){super(e,t),this.isStorageArrayElementNode=!0}set storageBufferNode(e){this.node=e}get storageBufferNode(){return this.node}setup(e){return!1===e.isAvailable("storageBuffer")&&!0===this.node.bufferObject&&e.setupPBO(this.node),super.setup(e)}generate(e,t){let s;const r=e.context.assign;if(s=!1===e.isAvailable("storageBuffer")?!0===this.node.bufferObject&&!0!==r?e.generatePBO(this):this.node.build(e):super.generate(e),!0!==r){const r=this.getNodeType(e);s=e.format(s,r,t)}return s}}const Vf=mn(Df),Of="point-list",Gf="line-list",kf="line-strip",zf="triangle-list",$f="triangle-strip",Hf="never",Wf="less",jf="equal",qf="less-equal",Kf="greater",Xf="not-equal",Yf="greater-equal",Qf="always",Zf="store",Jf="load",ey="clear",ty="ccw",sy="none",ry="front",ny="back",iy="uint16",oy="uint32",ay={R8Unorm:"r8unorm",R8Snorm:"r8snorm",R8Uint:"r8uint",R8Sint:"r8sint",R16Uint:"r16uint",R16Sint:"r16sint",R16Float:"r16float",RG8Unorm:"rg8unorm",RG8Snorm:"rg8snorm",RG8Uint:"rg8uint",RG8Sint:"rg8sint",R32Uint:"r32uint",R32Sint:"r32sint",R32Float:"r32float",RG16Uint:"rg16uint",RG16Sint:"rg16sint",RG16Float:"rg16float",RGBA8Unorm:"rgba8unorm",RGBA8UnormSRGB:"rgba8unorm-srgb",RGBA8Snorm:"rgba8snorm",RGBA8Uint:"rgba8uint",RGBA8Sint:"rgba8sint",BGRA8Unorm:"bgra8unorm",BGRA8UnormSRGB:"bgra8unorm-srgb",RGB9E5UFloat:"rgb9e5ufloat",RGB10A2Unorm:"rgb10a2unorm",RG11B10uFloat:"rgb10a2unorm",RG32Uint:"rg32uint",RG32Sint:"rg32sint",RG32Float:"rg32float",RGBA16Uint:"rgba16uint",RGBA16Sint:"rgba16sint",RGBA16Float:"rgba16float",RGBA32Uint:"rgba32uint",RGBA32Sint:"rgba32sint",RGBA32Float:"rgba32float",Stencil8:"stencil8",Depth16Unorm:"depth16unorm",Depth24Plus:"depth24plus",Depth24PlusStencil8:"depth24plus-stencil8",Depth32Float:"depth32float",Depth32FloatStencil8:"depth32float-stencil8",BC1RGBAUnorm:"bc1-rgba-unorm",BC1RGBAUnormSRGB:"bc1-rgba-unorm-srgb",BC2RGBAUnorm:"bc2-rgba-unorm",BC2RGBAUnormSRGB:"bc2-rgba-unorm-srgb",BC3RGBAUnorm:"bc3-rgba-unorm",BC3RGBAUnormSRGB:"bc3-rgba-unorm-srgb",BC4RUnorm:"bc4-r-unorm",BC4RSnorm:"bc4-r-snorm",BC5RGUnorm:"bc5-rg-unorm",BC5RGSnorm:"bc5-rg-snorm",BC6HRGBUFloat:"bc6h-rgb-ufloat",BC6HRGBFloat:"bc6h-rgb-float",BC7RGBAUnorm:"bc7-rgba-unorm",BC7RGBAUnormSRGB:"bc7-rgba-srgb",ETC2RGB8Unorm:"etc2-rgb8unorm",ETC2RGB8UnormSRGB:"etc2-rgb8unorm-srgb",ETC2RGB8A1Unorm:"etc2-rgb8a1unorm",ETC2RGB8A1UnormSRGB:"etc2-rgb8a1unorm-srgb",ETC2RGBA8Unorm:"etc2-rgba8unorm",ETC2RGBA8UnormSRGB:"etc2-rgba8unorm-srgb",EACR11Unorm:"eac-r11unorm",EACR11Snorm:"eac-r11snorm",EACRG11Unorm:"eac-rg11unorm",EACRG11Snorm:"eac-rg11snorm",ASTC4x4Unorm:"astc-4x4-unorm",ASTC4x4UnormSRGB:"astc-4x4-unorm-srgb",ASTC5x4Unorm:"astc-5x4-unorm",ASTC5x4UnormSRGB:"astc-5x4-unorm-srgb",ASTC5x5Unorm:"astc-5x5-unorm",ASTC5x5UnormSRGB:"astc-5x5-unorm-srgb",ASTC6x5Unorm:"astc-6x5-unorm",ASTC6x5UnormSRGB:"astc-6x5-unorm-srgb",ASTC6x6Unorm:"astc-6x6-unorm",ASTC6x6UnormSRGB:"astc-6x6-unorm-srgb",ASTC8x5Unorm:"astc-8x5-unorm",ASTC8x5UnormSRGB:"astc-8x5-unorm-srgb",ASTC8x6Unorm:"astc-8x6-unorm",ASTC8x6UnormSRGB:"astc-8x6-unorm-srgb",ASTC8x8Unorm:"astc-8x8-unorm",ASTC8x8UnormSRGB:"astc-8x8-unorm-srgb",ASTC10x5Unorm:"astc-10x5-unorm",ASTC10x5UnormSRGB:"astc-10x5-unorm-srgb",ASTC10x6Unorm:"astc-10x6-unorm",ASTC10x6UnormSRGB:"astc-10x6-unorm-srgb",ASTC10x8Unorm:"astc-10x8-unorm",ASTC10x8UnormSRGB:"astc-10x8-unorm-srgb",ASTC10x10Unorm:"astc-10x10-unorm",ASTC10x10UnormSRGB:"astc-10x10-unorm-srgb",ASTC12x10Unorm:"astc-12x10-unorm",ASTC12x10UnormSRGB:"astc-12x10-unorm-srgb",ASTC12x12Unorm:"astc-12x12-unorm",ASTC12x12UnormSRGB:"astc-12x12-unorm-srgb"},uy="clamp-to-edge",ly="repeat",dy="mirror-repeat",cy="linear",hy="nearest",py="zero",gy="one",my="src",fy="one-minus-src",yy="src-alpha",by="one-minus-src-alpha",xy="dst",Ty="one-minus-dst",_y="dst-alpha",Ny="one-minus-dst-alpha",vy="src-alpha-saturated",Sy="constant",Ay="one-minus-constant",Ry="add",Cy="subtract",Ey="reverse-subtract",wy="min",My="max",By=0,Uy=15,Fy="keep",Py="zero",Iy="replace",Ly="invert",Dy="increment-clamp",Vy="decrement-clamp",Oy="increment-wrap",Gy="decrement-wrap",ky="storage",zy="read-only-storage",$y="write-only",Hy="read-only",Wy="float",jy="unfilterable-float",qy="depth",Ky="sint",Xy="uint",Yy="2d",Qy="3d",Zy="2d",Jy="2d-array",eb="cube",tb="3d",sb="all",rb="vertex",nb="instance",ib={DepthClipControl:"depth-clip-control",Depth32FloatStencil8:"depth32float-stencil8",TextureCompressionBC:"texture-compression-bc",TextureCompressionETC2:"texture-compression-etc2",TextureCompressionASTC:"texture-compression-astc",TimestampQuery:"timestamp-query",IndirectFirstInstance:"indirect-first-instance",ShaderF16:"shader-f16",RG11B10UFloat:"rg11b10ufloat-renderable",BGRA8UNormStorage:"bgra8unorm-storage",Float32Filterable:"float32-filterable",ClipDistances:"clip-distances",DualSourceBlending:"dual-source-blending",Subgroups:"subgroups"};class ob extends Nl{static get type(){return"StorageBufferNode"}constructor(e,t,s=0){super(e,t,s),this.isStorageBufferNode=!0,this.access=ky,this.isAtomic=!1,this.bufferObject=!1,this.bufferCount=s,this._attribute=null,this._varying=null,this.global=!0,!0!==e.isStorageBufferAttribute&&!0!==e.isStorageInstancedBufferAttribute&&(e.isInstancedBufferAttribute?e.isStorageInstancedBufferAttribute=!0:e.isStorageBufferAttribute=!0)}getHash(e){if(0===this.bufferCount){let t=e.globalCache.getData(this.value);return void 0===t&&(t={node:this},e.globalCache.setData(this.value,t)),t.node.uuid}return this.uuid}getInputType(){return this.value.isIndirectStorageBufferAttribute?"indirectStorageBuffer":"storageBuffer"}element(e){return Vf(this,e)}setBufferObject(e){return this.bufferObject=e,this}setAccess(e){return this.access=e,this}toReadOnly(){return this.setAccess(zy)}setAtomic(e){return this.isAtomic=e,this}toAtomic(){return this.setAtomic(!0)}getAttributeData(){return null===this._attribute&&(this._attribute=qa(this.value),this._varying=Ea(this._attribute)),{attribute:this._attribute,varying:this._varying}}getNodeType(e){if(e.isAvailable("storageBuffer")||e.isAvailable("indirectStorageBuffer"))return super.getNodeType(e);const{attribute:t}=this.getAttributeData();return t.getNodeType(e)}generate(e){if(e.isAvailable("storageBuffer")||e.isAvailable("indirectStorageBuffer"))return super.generate(e);const{attribute:t,varying:s}=this.getAttributeData(),r=s.build(e);return e.registerTransform(r,t),r}}const ab=(e,t,s)=>hn(new ob(e,t,s)),ub=(e,t,s)=>hn(new ob(e,t,s).setBufferObject(!0));class lb extends Tu{static get type(){return"StorageTextureNode"}constructor(e,t,s=null){super(e,t),this.storeNode=s,this.isStorageTextureNode=!0,this.access=$y}getInputType(){return"storageTexture"}setup(e){super.setup(e);e.getNodeProperties(this).storeNode=this.storeNode}setAccess(e){return this.access=e,this}generate(e,t){let s;return s=null!==this.storeNode?this.generateStore(e):super.generate(e,t),s}toReadOnly(){return this.setAccess(Hy)}toWriteOnly(){return this.setAccess($y)}generateStore(e){const t=e.getNodeProperties(this),{uvNode:s,storeNode:r}=t,n=super.generate(e,"property"),i=s.build(e,"uvec2"),o=r.build(e,"vec4"),a=e.generateTextureStore(e,n,i,o);e.addLineFlowCode(a,this)}}const db=mn(lb),cb=(e,t,s)=>{const r=db(e,t,s);return null!==s&&r.append(),r};class hb extends wl{static get type(){return"UserDataNode"}constructor(e,t,s=null){super(e,t,s),this.userData=s}updateReference(e){return this.reference=null!==this.userData?this.userData:e.object.userData,this.reference}}const pb=(e,t,s)=>hn(new hb(e,t,s)),gb=new WeakMap;class mb extends Er{static get type(){return"VelocityNode"}constructor(){super("vec2"),this.projectionMatrix=null,this.updateType=br.OBJECT,this.updateAfterType=br.OBJECT,this.previousModelWorldMatrix=ti(new i),this.previousProjectionMatrix=ti(new i).setGroup(Zn),this.previousCameraViewMatrix=ti(new i)}setProjectionMatrix(e){this.projectionMatrix=e}update({frameId:e,camera:t,object:s}){const r=yb(s);this.previousModelWorldMatrix.value.copy(r);const n=fb(t);n.frameId!==e&&(n.frameId=e,void 0===n.previousProjectionMatrix?(n.previousProjectionMatrix=new i,n.previousCameraViewMatrix=new i,n.currentProjectionMatrix=new i,n.currentCameraViewMatrix=new i,n.previousProjectionMatrix.copy(this.projectionMatrix||t.projectionMatrix),n.previousCameraViewMatrix.copy(t.matrixWorldInverse)):(n.previousProjectionMatrix.copy(n.currentProjectionMatrix),n.previousCameraViewMatrix.copy(n.currentCameraViewMatrix)),n.currentProjectionMatrix.copy(this.projectionMatrix||t.projectionMatrix),n.currentCameraViewMatrix.copy(t.matrixWorldInverse),this.previousProjectionMatrix.value.copy(n.previousProjectionMatrix),this.previousCameraViewMatrix.value.copy(n.previousCameraViewMatrix))}updateAfter({object:e}){yb(e).copy(e.matrixWorld)}setup(){const e=null===this.projectionMatrix?Ru:ti(this.projectionMatrix),t=this.previousCameraViewMatrix.mul(this.previousModelWorldMatrix),s=e.mul(ju).mul(Yu),r=this.previousProjectionMatrix.mul(t).mul(Qu),n=s.xy.div(s.w),i=r.xy.div(r.w);return Oi(n,i)}}function fb(e){let t=gb.get(e);return void 0===t&&(t={},gb.set(e,t)),t}function yb(e,t=0){const s=fb(e);let r=s[t];return void 0===r&&(s[t]=r=new i),r}const bb=fn(mb),xb=yn((([e,t])=>qo(1,e.oneMinus().div(t)).oneMinus())).setLayout({name:"burnBlend",type:"vec3",inputs:[{name:"base",type:"vec3"},{name:"blend",type:"vec3"}]}),Tb=yn((([e,t])=>qo(e.div(t.oneMinus()),1))).setLayout({name:"dodgeBlend",type:"vec3",inputs:[{name:"base",type:"vec3"},{name:"blend",type:"vec3"}]}),_b=yn((([e,t])=>e.oneMinus().mul(t.oneMinus()).oneMinus())).setLayout({name:"screenBlend",type:"vec3",inputs:[{name:"base",type:"vec3"},{name:"blend",type:"vec3"}]}),Nb=yn((([e,t])=>la(e.mul(2).mul(t),e.oneMinus().mul(2).mul(t.oneMinus()).oneMinus(),Yo(.5,e)))).setLayout({name:"overlayBlend",type:"vec3",inputs:[{name:"base",type:"vec3"},{name:"blend",type:"vec3"}]}),vb=yn((([e])=>Cb(e.rgb))),Sb=yn((([e,t=Sn(1)])=>t.mix(Cb(e.rgb),e.rgb))),Ab=yn((([e,t=Sn(1)])=>{const s=Vi(e.r,e.g,e.b).div(3),r=e.r.max(e.g.max(e.b)),n=r.sub(s).mul(t).mul(-3);return la(e.rgb,r,n)})),Rb=yn((([e,t=Sn(1)])=>{const s=Un(.57735,.57735,.57735),r=t.cos();return Un(e.rgb.mul(r).add(s.cross(e.rgb).mul(t.sin()).add(s.mul(ea(s,e.rgb).mul(r.oneMinus())))))})),Cb=(e,t=Un(u.getLuminanceCoefficients(new s)))=>ea(e,t),Eb=(e,t)=>la(Un(0),e,Cb(e).sub(t).max(0)),wb=yn((([e,t=Un(1),r=Un(0),n=Un(1),i=Sn(1),o=Un(u.getLuminanceCoefficients(new s,Se))])=>{const a=e.rgb.dot(Un(o)),l=Ko(e.rgb.mul(t).add(r),0).toVar(),d=l.pow(n).toVar();return _n(l.r.greaterThan(0),(()=>{l.r.assign(d.r)})),_n(l.g.greaterThan(0),(()=>{l.g.assign(d.g)})),_n(l.b.greaterThan(0),(()=>{l.b.assign(d.b)})),l.assign(a.add(l.sub(a).mul(i))),Ln(l.rgb,e.a)}));class Mb extends Er{static get type(){return"PosterizeNode"}constructor(e,t){super(),this.sourceNode=e,this.stepsNode=t}setup(){const{sourceNode:e,stepsNode:t}=this;return e.mul(t).floor().div(t)}}const Bb=mn(Mb);let Ub=null;class Fb extends Lc{static get type(){return"ViewportSharedTextureNode"}constructor(e=Ac,t=null){null===Ub&&(Ub=new w),super(e,t,Ub)}updateReference(){return this}}const Pb=mn(Fb),Ib=new t;class Lb extends Tu{static get type(){return"PassTextureNode"}constructor(e,t){super(t),this.passNode=e,this.setUpdateMatrix(!1)}setup(e){return e.object.isQuadMesh&&this.passNode.build(e),super.setup(e)}clone(){return new this.constructor(this.passNode,this.value)}}class Db extends Lb{static get type(){return"PassMultipleTextureNode"}constructor(e,t,s=!1){super(e,null),this.textureName=t,this.previousTexture=s}updateTexture(){this.value=this.previousTexture?this.passNode.getPreviousTexture(this.textureName):this.passNode.getTexture(this.textureName)}setup(e){return this.updateTexture(),super.setup(e)}clone(){return new this.constructor(this.passNode,this.textureName,this.previousTexture)}}class Vb extends Er{static get type(){return"PassNode"}constructor(e,t,s,r={}){super("vec4"),this.scope=e,this.scene=t,this.camera=s,this.options=r,this._pixelRatio=1,this._width=1,this._height=1;const n=new B;n.isRenderTargetTexture=!0,n.name="depth";const i=new ge(this._width*this._pixelRatio,this._height*this._pixelRatio,{type:ye,...r});i.texture.name="output",i.depthTexture=n,this.renderTarget=i,this.updateBeforeType=br.FRAME,this._textures={output:i.texture,depth:n},this._textureNodes={},this._linearDepthNodes={},this._viewZNodes={},this._previousTextures={},this._previousTextureNodes={},this._cameraNear=ti(0),this._cameraFar=ti(0),this._mrt=null,this.isPassNode=!0}setMRT(e){return this._mrt=e,this}getMRT(){return this._mrt}isGlobal(){return!0}getTexture(e){let t=this._textures[e];if(void 0===t){t=this.renderTarget.texture.clone(),t.isRenderTargetTexture=!0,t.name=e,this._textures[e]=t,this.renderTarget.textures.push(t)}return t}getPreviousTexture(e){let t=this._previousTextures[e];return void 0===t&&(t=this.getTexture(e).clone(),t.isRenderTargetTexture=!0,this._previousTextures[e]=t),t}toggleTexture(e){const t=this._previousTextures[e];if(void 0!==t){const s=this._textures[e],r=this.renderTarget.textures.indexOf(s);this.renderTarget.textures[r]=t,this._textures[e]=t,this._previousTextures[e]=s,this._textureNodes[e].updateTexture(),this._previousTextureNodes[e].updateTexture()}}getTextureNode(e="output"){let t=this._textureNodes[e];return void 0===t&&(t=hn(new Db(this,e)),t.updateTexture(),this._textureNodes[e]=t),t}getPreviousTextureNode(e="output"){let t=this._previousTextureNodes[e];return void 0===t&&(void 0===this._textureNodes[e]&&this.getTextureNode(e),t=hn(new Db(this,e,!0)),t.updateTexture(),this._previousTextureNodes[e]=t),t}getViewZNode(e="depth"){let t=this._viewZNodes[e];if(void 0===t){const s=this._cameraNear,r=this._cameraFar;this._viewZNodes[e]=t=jc(this.getTextureNode(e),s,r)}return t}getLinearDepthNode(e="depth"){let t=this._linearDepthNodes[e];if(void 0===t){const s=this._cameraNear,r=this._cameraFar,n=this.getViewZNode(e);this._linearDepthNodes[e]=t=$c(n,s,r)}return t}setup({renderer:e}){return this.renderTarget.samples=void 0===this.options.samples?e.samples:this.options.samples,!0===e.backend.isWebGLBackend&&(this.renderTarget.samples=0),this.renderTarget.depthTexture.isMultisampleRenderTargetTexture=this.renderTarget.samples>1,this.scope===Vb.COLOR?this.getTextureNode():this.getLinearDepthNode()}updateBefore(e){const{renderer:t}=e,{scene:s,camera:r}=this;this._pixelRatio=t.getPixelRatio();const n=t.getSize(Ib);this.setSize(n.width,n.height);const i=t.getRenderTarget(),o=t.getMRT();this._cameraNear.value=r.near,this._cameraFar.value=r.far;for(const e in this._previousTextures)this.toggleTexture(e);t.setRenderTarget(this.renderTarget),t.setMRT(this._mrt),t.render(s,r),t.setRenderTarget(i),t.setMRT(o)}setSize(e,t){this._width=e,this._height=t;const s=this._width*this._pixelRatio,r=this._height*this._pixelRatio;this.renderTarget.setSize(s,r)}setPixelRatio(e){this._pixelRatio=e,this.setSize(this._width,this._height)}dispose(){this.renderTarget.dispose()}}Vb.COLOR="color",Vb.DEPTH="depth";const Ob=(e,t,s)=>hn(new Vb(Vb.COLOR,e,t,s)),Gb=(e,t)=>hn(new Lb(e,t)),kb=(e,t)=>hn(new Vb(Vb.DEPTH,e,t));class zb extends Vb{static get type(){return"ToonOutlinePassNode"}constructor(e,t,s,r,n){super(Vb.COLOR,e,t),this.colorNode=s,this.thicknessNode=r,this.alphaNode=n,this._materialCache=new WeakMap}updateBefore(e){const{renderer:t}=e,s=t.getRenderObjectFunction();t.setRenderObjectFunction(((e,s,r,n,i,o,a,u)=>{if((i.isMeshToonMaterial||i.isMeshToonNodeMaterial)&&!1===i.wireframe){const l=this._getOutlineMaterial(i);t.renderObject(e,s,r,n,l,o,a,u)}t.renderObject(e,s,r,n,i,o,a,u)})),super.updateBefore(e),t.setRenderObjectFunction(s)}_createMaterial(){const e=new rh;e.isMeshToonOutlineMaterial=!0,e.name="Toon_Outline",e.side=x;const t=ol.negate(),s=Ru.mul(ju),r=Sn(1),n=s.mul(Ln(Yu,1)),i=s.mul(Ln(Yu.add(t),1)),o=Ao(n.sub(i));return e.vertexNode=n.add(o.mul(this.thicknessNode).mul(n.w).mul(r)),e.colorNode=Ln(this.colorNode,this.alphaNode),e}_getOutlineMaterial(e){let t=this._materialCache.get(e);return void 0===t&&(t=this._createMaterial(),this._materialCache.set(e,t)),t}}const $b=(t,s,r=new e(0,0,0),n=.003,i=1)=>hn(new zb(t,s,hn(r),hn(n),hn(i))),Hb=yn((([e,t])=>e.mul(t).clamp())).setLayout({name:"linearToneMapping",type:"vec3",inputs:[{name:"color",type:"vec3"},{name:"exposure",type:"float"}]}),Wb=yn((([e,t])=>(e=e.mul(t)).div(e.add(1)).clamp())).setLayout({name:"reinhardToneMapping",type:"vec3",inputs:[{name:"color",type:"vec3"},{name:"exposure",type:"float"}]}),jb=yn((([e,t])=>{const s=(e=(e=e.mul(t)).sub(.004).max(0)).mul(e.mul(6.2).add(.5)),r=e.mul(e.mul(6.2).add(1.7)).add(.06);return s.div(r).pow(2.2)})).setLayout({name:"cineonToneMapping",type:"vec3",inputs:[{name:"color",type:"vec3"},{name:"exposure",type:"float"}]}),qb=yn((([e])=>{const t=e.mul(e.add(.0245786)).sub(90537e-9),s=e.mul(e.add(.432951).mul(.983729)).add(.238081);return t.div(s)})),Kb=yn((([e,t])=>{const s=kn(.59719,.35458,.04823,.076,.90834,.01566,.0284,.13383,.83777),r=kn(1.60475,-.53108,-.07367,-.10208,1.10813,-.00605,-.00327,-.07276,1.07602);return e=e.mul(t).div(.6),e=s.mul(e),e=qb(e),(e=r.mul(e)).clamp()})).setLayout({name:"acesFilmicToneMapping",type:"vec3",inputs:[{name:"color",type:"vec3"},{name:"exposure",type:"float"}]}),Xb=kn(Un(1.6605,-.1246,-.0182),Un(-.5876,1.1329,-.1006),Un(-.0728,-.0083,1.1187)),Yb=kn(Un(.6274,.0691,.0164),Un(.3293,.9195,.088),Un(.0433,.0113,.8956)),Qb=yn((([e])=>{const t=Un(e).toVar(),s=Un(t.mul(t)).toVar(),r=Un(s.mul(s)).toVar();return Sn(15.5).mul(r.mul(s)).sub(Gi(40.14,r.mul(t))).add(Gi(31.96,r).sub(Gi(6.868,s.mul(t))).add(Gi(.4298,s).add(Gi(.1191,t).sub(.00232))))})),Zb=yn((([e,t])=>{const s=Un(e).toVar(),r=kn(Un(.856627153315983,.137318972929847,.11189821299995),Un(.0951212405381588,.761241990602591,.0767994186031903),Un(.0482516061458583,.101439036467562,.811302368396859)),n=kn(Un(1.1271005818144368,-.1413297634984383,-.14132976349843826),Un(-.11060664309660323,1.157823702216272,-.11060664309660294),Un(-.016493938717834573,-.016493938717834257,1.2519364065950405)),i=Sn(-12.47393),o=Sn(4.026069);return s.mulAssign(t),s.assign(Yb.mul(s)),s.assign(r.mul(s)),s.assign(Ko(s,1e-10)),s.assign(To(s)),s.assign(s.sub(i).div(o.sub(i))),s.assign(da(s,0,1)),s.assign(Qb(s)),s.assign(n.mul(s)),s.assign(sa(Ko(Un(0),s),Un(2.2))),s.assign(Xb.mul(s)),s.assign(da(s,0,1)),s})).setLayout({name:"agxToneMapping",type:"vec3",inputs:[{name:"color",type:"vec3"},{name:"exposure",type:"float"}]}),Jb=yn((([e,t])=>{const s=Sn(.76),r=Sn(.15);e=e.mul(t);const n=qo(e.r,qo(e.g,e.b)),i=xa(n.lessThan(.08),n.sub(Gi(6.25,n.mul(n))),.04);e.subAssign(i);const o=Ko(e.r,Ko(e.g,e.b));_n(o.lessThan(s),(()=>e));const a=Oi(1,s),u=Oi(1,a.mul(a).div(o.add(a.sub(s))));e.mulAssign(u.div(o));const l=Oi(1,ki(1,r.mul(o.sub(u)).add(1)));return la(e,Un(u),l)})).setLayout({name:"neutralToneMapping",type:"vec3",inputs:[{name:"color",type:"vec3"},{name:"exposure",type:"float"}]});class ex extends Ar{static get type(){return"CodeNode"}constructor(e="",t=[],s=""){super("code"),this.isCodeNode=!0,this.code=e,this.language=s,this.includes=t}isGlobal(){return!0}setIncludes(e){return this.includes=e,this}getIncludes(){return this.includes}generate(e){const t=this.getIncludes(e);for(const s of t)s.build(e);const s=e.getCodeFromNode(this,this.getNodeType(e));return s.code=this.code,s.code}serialize(e){super.serialize(e),e.code=this.code,e.language=this.language}deserialize(e){super.deserialize(e),this.code=e.code,this.language=e.language}}const tx=mn(ex),sx=(e,t)=>tx(e,t,"js"),rx=(e,t)=>tx(e,t,"wgsl"),nx=(e,t)=>tx(e,t,"glsl");class ix extends ex{static get type(){return"FunctionNode"}constructor(e="",t=[],s=""){super(e,t,s)}getNodeType(e){return this.getNodeFunction(e).type}getInputs(e){return this.getNodeFunction(e).inputs}getNodeFunction(e){const t=e.getDataFromNode(this);let s=t.nodeFunction;return void 0===s&&(s=e.parser.parseFunction(this.code),t.nodeFunction=s),s}generate(e,t){super.generate(e);const s=this.getNodeFunction(e),r=s.name,n=s.type,i=e.getCodeFromNode(this,n);""!==r&&(i.name=r);const o=e.getPropertyName(i),a=this.getNodeFunction(e).getCode(o);return i.code=a+"\n","property"===t?o:e.format(`${o}()`,n,t)}}const ox=(e,t=[],s="")=>{for(let e=0;e<t.length;e++){const s=t[e];"function"==typeof s&&(t[e]=s.functionNode)}const r=hn(new ix(e,t,s)),n=(...e)=>r.call(...e);return n.functionNode=r,n},ax=(e,t)=>ox(e,t,"glsl"),ux=(e,t)=>ox(e,t,"wgsl");class lx extends Ar{static get type(){return"ScriptableValueNode"}constructor(e=null){super(),this._value=e,this._cache=null,this.inputType=null,this.outpuType=null,this.events=new o,this.isScriptableValueNode=!0}get isScriptableOutputNode(){return null!==this.outputType}set value(e){this._value!==e&&(this._cache&&"URL"===this.inputType&&this.value.value instanceof ArrayBuffer&&(URL.revokeObjectURL(this._cache),this._cache=null),this._value=e,this.events.dispatchEvent({type:"change"}),this.refresh())}get value(){return this._value}refresh(){this.events.dispatchEvent({type:"refresh"})}getValue(){const e=this.value;if(e&&null===this._cache&&"URL"===this.inputType&&e.value instanceof ArrayBuffer)this._cache=URL.createObjectURL(new Blob([e.value]));else if(e&&null!==e.value&&void 0!==e.value&&(("URL"===this.inputType||"String"===this.inputType)&&"string"==typeof e.value||"Number"===this.inputType&&"number"==typeof e.value||"Vector2"===this.inputType&&e.value.isVector2||"Vector3"===this.inputType&&e.value.isVector3||"Vector4"===this.inputType&&e.value.isVector4||"Color"===this.inputType&&e.value.isColor||"Matrix3"===this.inputType&&e.value.isMatrix3||"Matrix4"===this.inputType&&e.value.isMatrix4))return e.value;return this._cache||e}getNodeType(e){return this.value&&this.value.isNode?this.value.getNodeType(e):"float"}setup(){return this.value&&this.value.isNode?this.value:Sn()}serialize(e){super.serialize(e),null!==this.value?"ArrayBuffer"===this.inputType?e.value=gr(this.value):e.value=this.value?this.value.toJSON(e.meta).uuid:null:e.value=null,e.inputType=this.inputType,e.outputType=this.outputType}deserialize(e){super.deserialize(e);let t=null;null!==e.value&&(t="ArrayBuffer"===e.inputType?mr(e.value):"Texture"===e.inputType?e.meta.textures[e.value]:e.meta.nodes[e.value]||null),this.value=t,this.inputType=e.inputType,this.outputType=e.outputType}}const dx=mn(lx);class cx extends Map{get(e,t=null,...s){if(this.has(e))return super.get(e);if(null!==t){const r=t(...s);return this.set(e,r),r}}}class hx{constructor(e){this.scriptableNode=e}get parameters(){return this.scriptableNode.parameters}get layout(){return this.scriptableNode.getLayout()}getInputLayout(e){return this.scriptableNode.getInputLayout(e)}get(e){const t=this.parameters[e];return t?t.getValue():null}}const px=new cx;class gx extends Ar{static get type(){return"ScriptableNode"}constructor(e=null,t={}){super(),this.codeNode=e,this.parameters=t,this._local=new cx,this._output=dx(),this._outputs={},this._source=this.source,this._method=null,this._object=null,this._value=null,this._needsOutputUpdate=!0,this.onRefresh=this.onRefresh.bind(this),this.isScriptableNode=!0}get source(){return this.codeNode?this.codeNode.code:""}setLocal(e,t){return this._local.set(e,t)}getLocal(e){return this._local.get(e)}onRefresh(){this._refresh()}getInputLayout(e){for(const t of this.getLayout())if(t.inputType&&(t.id===e||t.name===e))return t}getOutputLayout(e){for(const t of this.getLayout())if(t.outputType&&(t.id===e||t.name===e))return t}setOutput(e,t){const s=this._outputs;return void 0===s[e]?s[e]=dx(t):s[e].value=t,this}getOutput(e){return this._outputs[e]}getParameter(e){return this.parameters[e]}setParameter(e,t){const s=this.parameters;return t&&t.isScriptableNode?(this.deleteParameter(e),s[e]=t,s[e].getDefaultOutput().events.addEventListener("refresh",this.onRefresh)):t&&t.isScriptableValueNode?(this.deleteParameter(e),s[e]=t,s[e].events.addEventListener("refresh",this.onRefresh)):void 0===s[e]?(s[e]=dx(t),s[e].events.addEventListener("refresh",this.onRefresh)):s[e].value=t,this}getValue(){return this.getDefaultOutput().getValue()}deleteParameter(e){let t=this.parameters[e];return t&&(t.isScriptableNode&&(t=t.getDefaultOutput()),t.events.removeEventListener("refresh",this.onRefresh)),this}clearParameters(){for(const e of Object.keys(this.parameters))this.deleteParameter(e);return this.needsUpdate=!0,this}call(e,...t){const s=this.getObject()[e];if("function"==typeof s)return s(...t)}async callAsync(e,...t){const s=this.getObject()[e];if("function"==typeof s)return"AsyncFunction"===s.constructor.name?await s(...t):s(...t)}getNodeType(e){return this.getDefaultOutputNode().getNodeType(e)}refresh(e=null){null!==e?this.getOutput(e).refresh():this._refresh()}getObject(){if(this.needsUpdate&&this.dispose(),null!==this._object)return this._object;const e=new hx(this),t=px.get("THREE"),s=px.get("TSL"),r=this.getMethod(this.codeNode),n=[e,this._local,px,()=>this.refresh(),(e,t)=>this.setOutput(e,t),t,s];this._object=r(...n);const i=this._object.layout;if(i&&(!1===i.cache&&this._local.clear(),this._output.outputType=i.outputType||null,Array.isArray(i.elements)))for(const e of i.elements){const t=e.id||e.name;e.inputType&&(void 0===this.getParameter(t)&&this.setParameter(t,null),this.getParameter(t).inputType=e.inputType),e.outputType&&(void 0===this.getOutput(t)&&this.setOutput(t,null),this.getOutput(t).outputType=e.outputType)}return this._object}deserialize(e){super.deserialize(e);for(const e in this.parameters){let t=this.parameters[e];t.isScriptableNode&&(t=t.getDefaultOutput()),t.events.addEventListener("refresh",this.onRefresh)}}getLayout(){return this.getObject().layout}getDefaultOutputNode(){const e=this.getDefaultOutput().value;return e&&e.isNode?e:Sn()}getDefaultOutput(){return this._exec()._output}getMethod(){if(this.needsUpdate&&this.dispose(),null!==this._method)return this._method;const e=["layout","init","main","dispose"].join(", "),t="\nreturn { ...output, "+e+" };",s="var "+e+"; var output = {};\n"+this.codeNode.code+t;return this._method=new Function(...["parameters","local","global","refresh","setOutput","THREE","TSL"],s),this._method}dispose(){null!==this._method&&(this._object&&"function"==typeof this._object.dispose&&this._object.dispose(),this._method=null,this._object=null,this._source=null,this._value=null,this._needsOutputUpdate=!0,this._output.value=null,this._outputs={})}setup(){return this.getDefaultOutputNode()}getCacheKey(e){const t=[ar(this.source),this.getDefaultOutputNode().getCacheKey(e)];for(const s in this.parameters)t.push(this.parameters[s].getCacheKey(e));return ur(t)}set needsUpdate(e){!0===e&&this.dispose()}get needsUpdate(){return this.source!==this._source}_exec(){return null===this.codeNode||(!0===this._needsOutputUpdate&&(this._value=this.call("main"),this._needsOutputUpdate=!1),this._output.value=this._value),this}_refresh(){this.needsUpdate=!0,this._exec(),this._output.refresh()}}const mx=mn(gx);class fx extends Ar{static get type(){return"FogNode"}constructor(e,t){super("float"),this.isFogNode=!0,this.colorNode=e,this.factorNode=t}getViewZNode(e){let t;const s=e.context.getViewZ;return void 0!==s&&(t=s(this)),(t||el.z).negate()}setup(){return this.factorNode}}const yx=mn(fx);class bx extends fx{static get type(){return"FogRangeNode"}constructor(e,t,s){super(e),this.isFogRangeNode=!0,this.nearNode=t,this.farNode=s}setup(e){const t=this.getViewZNode(e);return pa(this.nearNode,this.farNode,t)}}const xx=mn(bx);class Tx extends fx{static get type(){return"FogExp2Node"}constructor(e,t){super(e),this.isFogExp2Node=!0,this.densityNode=t}setup(e){const t=this.getViewZNode(e),s=this.densityNode;return s.mul(s,t,t).negate().exp().oneMinus()}}const _x=mn(Tx);let Nx=null,vx=null;class Sx extends Ar{static get type(){return"RangeNode"}constructor(e=Sn(),t=Sn()){super(),this.minNode=e,this.maxNode=t}getVectorLength(e){const t=e.getTypeLength(hr(this.minNode.value)),s=e.getTypeLength(hr(this.maxNode.value));return t>s?t:s}getNodeType(e){return e.object.count>1?e.getTypeFromLength(this.getVectorLength(e)):"float"}setup(e){const t=e.object;let s=null;if(t.count>1){const n=this.minNode.value,i=this.maxNode.value,o=e.getTypeLength(hr(n)),u=e.getTypeLength(hr(i));Nx=Nx||new r,vx=vx||new r,Nx.setScalar(0),vx.setScalar(0),1===o?Nx.setScalar(n):n.isColor?Nx.set(n.r,n.g,n.b):Nx.set(n.x,n.y,n.z||0,n.w||0),1===u?vx.setScalar(i):i.isColor?vx.set(i.r,i.g,i.b):vx.set(i.x,i.y,i.z||0,i.w||0);const l=4,d=l*t.count,c=new Float32Array(d);for(let e=0;e<d;e++){const t=e%l,s=Nx.getComponent(t),r=vx.getComponent(t);c[e]=a.lerp(s,r,Math.random())}const h=this.getNodeType(e);if(t.count<=4096)s=vl(c,"vec4",t.count).element(Kd).convert(h);else{const t=new R(c,4);e.geometry.setAttribute("__range"+this.id,t),s=Xa(t).convert(h)}}else s=Sn(0);return s}}const Ax=mn(Sx);class Rx extends Ar{static get type(){return"ComputeBuiltinNode"}constructor(e,t){super(t),this._builtinName=e}getHash(e){return this.getBuiltinName(e)}getNodeType(){return this.nodeType}setBuiltinName(e){return this._builtinName=e,this}getBuiltinName(){return this._builtinName}hasBuiltin(e){e.hasBuiltin(this._builtinName)}generate(e,t){const s=this.getBuiltinName(e),r=this.getNodeType(e);return"compute"===e.shaderStage?e.format(s,r,t):(console.warn(`ComputeBuiltinNode: Compute built-in value ${s} can not be accessed in the ${e.shaderStage} stage`),e.generateConst(r))}serialize(e){super.serialize(e),e.global=this.global,e._builtinName=this._builtinName}deserialize(e){super.deserialize(e),this.global=e.global,this._builtinName=e._builtinName}}const Cx=(e,t)=>hn(new Rx(e,t)),Ex=Cx("numWorkgroups","uvec3"),wx=Cx("workgroupId","uvec3"),Mx=Cx("localId","uvec3"),Bx=Cx("subgroupSize","uint");const Ux=mn(class extends Ar{constructor(e){super(),this.scope=e}generate(e){const{scope:t}=this,{renderer:s}=e;!0===s.backend.isWebGLBackend?e.addFlowCode(`\t// ${t}Barrier \n`):e.addLineFlowCode(`${t}Barrier()`,this)}}),Fx=()=>Ux("workgroup").append(),Px=()=>Ux("storage").append(),Ix=()=>Ux("texture").append();class Lx extends Rr{constructor(e,t){super(e,t),this.isWorkgroupInfoElementNode=!0}generate(e,t){let s;const r=e.context.assign;if(s=super.generate(e),!0!==r){const r=this.getNodeType(e);s=e.format(s,r,t)}return s}}class Dx extends Ar{constructor(e,t,s=0){super(t),this.bufferType=t,this.bufferCount=s,this.isWorkgroupInfoNode=!0,this.scope=e}label(e){return this.name=e,this}getHash(){return this.uuid}setScope(e){return this.scope=e,this}getInputType(){return`${this.scope}Array`}element(e){return hn(new Lx(this,e))}generate(e){return e.getScopedArray(this.name||`${this.scope}Array_${this.id}`,this.scope.toLowerCase(),this.bufferType,this.bufferCount)}}const Vx=(e,t)=>hn(new Dx("Workgroup",e,t));class Ox extends Er{static get type(){return"AtomicFunctionNode"}constructor(e,t,s,r=null){super("uint"),this.method=e,this.pointerNode=t,this.valueNode=s,this.storeNode=r}getInputType(e){return this.pointerNode.getNodeType(e)}getNodeType(e){return this.getInputType(e)}generate(e){const t=this.method,s=this.getNodeType(e),r=this.getInputType(e),n=this.pointerNode,i=this.valueNode,o=[];o.push(`&${n.build(e,r)}`),o.push(i.build(e,r));const a=`${e.getMethod(t,s)}( ${o.join(", ")} )`;if(null!==this.storeNode){const t=this.storeNode.build(e,r);e.addLineFlowCode(`${t} = ${a}`,this)}else e.addLineFlowCode(a,this)}}Ox.ATOMIC_LOAD="atomicLoad",Ox.ATOMIC_STORE="atomicStore",Ox.ATOMIC_ADD="atomicAdd",Ox.ATOMIC_SUB="atomicSub",Ox.ATOMIC_MAX="atomicMax",Ox.ATOMIC_MIN="atomicMin",Ox.ATOMIC_AND="atomicAnd",Ox.ATOMIC_OR="atomicOr",Ox.ATOMIC_XOR="atomicXor";const Gx=mn(Ox),kx=(e,t,s,r)=>{const n=Gx(e,t,s,r);return n.append(),n},zx=(e,t,s=null)=>kx(Ox.ATOMIC_STORE,e,t,s),$x=(e,t,s=null)=>kx(Ox.ATOMIC_ADD,e,t,s),Hx=(e,t,s=null)=>kx(Ox.ATOMIC_SUB,e,t,s),Wx=(e,t,s=null)=>kx(Ox.ATOMIC_MAX,e,t,s),jx=(e,t,s=null)=>kx(Ox.ATOMIC_MIN,e,t,s),qx=(e,t,s=null)=>kx(Ox.ATOMIC_AND,e,t,s),Kx=(e,t,s=null)=>kx(Ox.ATOMIC_OR,e,t,s),Xx=(e,t,s=null)=>kx(Ox.ATOMIC_XOR,e,t,s);let Yx;function Qx(e){Yx=Yx||new WeakMap;let t=Yx.get(e);return void 0===t&&Yx.set(e,t={}),t}function Zx(e){const t=Qx(e);return t.position||(t.position=ti(new s).setGroup(Zn).onRenderUpdate(((t,s)=>s.value.setFromMatrixPosition(e.matrixWorld))))}function Jx(e){const t=Qx(e);return t.targetPosition||(t.targetPosition=ti(new s).setGroup(Zn).onRenderUpdate(((t,s)=>s.value.setFromMatrixPosition(e.target.matrixWorld))))}function eT(e){const t=Qx(e);return t.viewPosition||(t.viewPosition=ti(new s).setGroup(Zn).onRenderUpdate((({camera:t},r)=>{r.value=r.value||new s,r.value.setFromMatrixPosition(e.matrixWorld),r.value.applyMatrix4(t.matrixWorldInverse)})))}const tT=e=>Eu.transformDirection(Zx(e).sub(Jx(e))),sT=(e,t)=>{for(const s of t)if(s.isAnalyticLightNode&&s.light.id===e)return s;return null},rT=new WeakMap;class nT extends Ar{static get type(){return"LightsNode"}constructor(){super("vec3"),this.totalDiffuseNode=Un().toVar("totalDiffuse"),this.totalSpecularNode=Un().toVar("totalSpecular"),this.outgoingLightNode=Un().toVar("outgoingLight"),this._lights=[],this._lightNodes=null,this._lightNodesHash=null,this.global=!0}getHash(e){if(null===this._lightNodesHash){null===this._lightNodes&&this.setupLightsNode(e);const t=[];for(const e of this._lightNodes)t.push(e.getSelf().getHash());this._lightNodesHash="lights-"+t.join(",")}return this._lightNodesHash}analyze(e){const t=e.getDataFromNode(this);for(const s of t.nodes)s.build(e)}setupLightsNode(e){const t=[],s=this._lightNodes,r=(e=>e.sort(((e,t)=>e.id-t.id)))(this._lights),n=e.renderer.library;for(const e of r)if(e.isNode)t.push(hn(e));else{let r=null;if(null!==s&&(r=sT(e.id,s)),null===r){const s=n.getLightNodeClass(e.constructor);if(null===s){console.warn(`LightsNode.setupNodeLights: Light node not found for ${e.constructor.name}`);continue}let r=null;rT.has(e)?r=rT.get(e):(r=hn(new s(e)),rT.set(e,r)),t.push(r)}}this._lightNodes=t}setupLights(e,t){for(const s of t)s.build(e)}setup(e){null===this._lightNodes&&this.setupLightsNode(e);const t=e.context,s=t.lightingModel;let r=this.outgoingLightNode;if(s){const{_lightNodes:n,totalDiffuseNode:i,totalSpecularNode:o}=this;t.outgoingLight=r;const a=e.addStack();e.getDataFromNode(this).nodes=a.nodes,s.start(t,a,e),this.setupLights(e,n),s.indirect(t,a,e);const{backdrop:u,backdropAlpha:l}=t,{directDiffuse:d,directSpecular:c,indirectDiffuse:h,indirectSpecular:p}=t.reflectedLight;let g=d.add(h);null!==u&&(g=Un(null!==l?l.mix(g,u):u),t.material.transparent=!0),i.assign(g),o.assign(c.add(p)),r.assign(i.add(o)),s.finish(t,a,e),r=r.bypass(e.removeStack())}return r}setLights(e){return this._lights=e,this._lightNodes=null,this._lightNodesHash=null,this}getLights(){return this._lights}get hasLights(){return this._lights.length>0}}const iT=(e=[])=>hn(new nT).setLights(e),oT=yn((({depthTexture:e,shadowCoord:t})=>_u(e,t.xy).compare(t.z))),aT=yn((({depthTexture:e,shadowCoord:t,shadow:s})=>{const r=(t,s)=>_u(e,t).compare(s),n=Ml("mapSize","vec2",s).setGroup(Zn),i=Ml("radius","float",s).setGroup(Zn),o=En(1).div(n),a=o.x.negate().mul(i),u=o.y.negate().mul(i),l=o.x.mul(i),d=o.y.mul(i),c=a.div(2),h=u.div(2),p=l.div(2),g=d.div(2);return Vi(r(t.xy.add(En(a,u)),t.z),r(t.xy.add(En(0,u)),t.z),r(t.xy.add(En(l,u)),t.z),r(t.xy.add(En(c,h)),t.z),r(t.xy.add(En(0,h)),t.z),r(t.xy.add(En(p,h)),t.z),r(t.xy.add(En(a,0)),t.z),r(t.xy.add(En(c,0)),t.z),r(t.xy,t.z),r(t.xy.add(En(p,0)),t.z),r(t.xy.add(En(l,0)),t.z),r(t.xy.add(En(c,g)),t.z),r(t.xy.add(En(0,g)),t.z),r(t.xy.add(En(p,g)),t.z),r(t.xy.add(En(a,d)),t.z),r(t.xy.add(En(0,d)),t.z),r(t.xy.add(En(l,d)),t.z)).mul(1/17)})),uT=yn((({depthTexture:e,shadowCoord:t,shadow:s})=>{const r=(t,s)=>_u(e,t).compare(s),n=Ml("mapSize","vec2",s).setGroup(Zn),i=En(1).div(n),o=i.x,a=i.y,u=t.xy,l=Ro(u.mul(n).add(.5));return u.subAssign(l.mul(i)),Vi(r(u,t.z),r(u.add(En(o,0)),t.z),r(u.add(En(0,a)),t.z),r(u.add(i),t.z),la(r(u.add(En(o.negate(),0)),t.z),r(u.add(En(o.mul(2),0)),t.z),l.x),la(r(u.add(En(o.negate(),a)),t.z),r(u.add(En(o.mul(2),a)),t.z),l.x),la(r(u.add(En(0,a.negate())),t.z),r(u.add(En(0,a.mul(2))),t.z),l.y),la(r(u.add(En(o,a.negate())),t.z),r(u.add(En(o,a.mul(2))),t.z),l.y),la(la(r(u.add(En(o.negate(),a.negate())),t.z),r(u.add(En(o.mul(2),a.negate())),t.z),l.x),la(r(u.add(En(o.negate(),a.mul(2))),t.z),r(u.add(En(o.mul(2),a.mul(2))),t.z),l.x),l.y)).mul(1/9)})),lT=yn((({depthTexture:e,shadowCoord:t})=>{const s=Sn(1).toVar(),r=_u(e).uv(t.xy).rg,n=Yo(t.z,r.x);return _n(n.notEqual(Sn(1)),(()=>{const e=t.z.sub(r.x),i=Ko(0,r.y.mul(r.y));let o=i.div(i.add(e.mul(e)));o=da(Oi(o,.3).div(.95-.3)),s.assign(da(Ko(n,o)))})),s})),dT=yn((({samples:e,radius:t,size:s,shadowPass:r})=>{const n=Sn(0).toVar(),i=Sn(0).toVar(),o=e.lessThanEqual(Sn(1)).select(Sn(0),Sn(2).div(e.sub(1))),a=e.lessThanEqual(Sn(1)).select(Sn(0),Sn(-1));uc({start:An(0),end:An(e),type:"int",condition:"<"},(({i:e})=>{const u=a.add(Sn(e).mul(o)),l=r.uv(Vi(Cc.xy,En(0,u).mul(t)).div(s)).x;n.addAssign(l),i.addAssign(l.mul(l))})),n.divAssign(e),i.divAssign(e);const u=_o(i.sub(n.mul(n)));return En(n,u)})),cT=yn((({samples:e,radius:t,size:s,shadowPass:r})=>{const n=Sn(0).toVar(),i=Sn(0).toVar(),o=e.lessThanEqual(Sn(1)).select(Sn(0),Sn(2).div(e.sub(1))),a=e.lessThanEqual(Sn(1)).select(Sn(0),Sn(-1));uc({start:An(0),end:An(e),type:"int",condition:"<"},(({i:e})=>{const u=a.add(Sn(e).mul(o)),l=r.uv(Vi(Cc.xy,En(u,0).mul(t)).div(s));n.addAssign(l.x),i.addAssign(Vi(l.y.mul(l.y),l.x.mul(l.x)))})),n.divAssign(e),i.divAssign(e);const u=_o(i.sub(n.mul(n)));return En(n,u)})),hT=[oT,aT,uT,lT];let pT=null;const gT=new xf;class mT extends Ar{static get type(){return"ShadowNode"}constructor(e,t=null){super(),this.light=e,this.shadow=t||e.shadow,this.shadowMap=null,this.vsmShadowMapVertical=null,this.vsmShadowMapHorizontal=null,this.vsmMaterialVertical=null,this.vsmMaterialHorizontal=null,this.updateBeforeType=br.RENDER,this._node=null,this.isShadowNode=!0}setupShadow(e){const{object:t,renderer:s}=e;null===pT&&(pT=new rh,pT.fragmentNode=Ln(0,0,0,1),pT.isShadowNodeMaterial=!0,pT.name="ShadowMaterial");const r=this.shadow,n=s.shadowMap.type,i=new B(r.mapSize.width,r.mapSize.height);i.compareFunction=Ae;const o=e.createRenderTarget(r.mapSize.width,r.mapSize.height);if(o.depthTexture=i,r.camera.updateProjectionMatrix(),n===Re){i.compareFunction=null,this.vsmShadowMapVertical=e.createRenderTarget(r.mapSize.width,r.mapSize.height,{format:Ce,type:ye}),this.vsmShadowMapHorizontal=e.createRenderTarget(r.mapSize.width,r.mapSize.height,{format:Ce,type:ye});const t=_u(i),s=_u(this.vsmShadowMapVertical.texture),n=Ml("blurSamples","float",r).setGroup(Zn),o=Ml("radius","float",r).setGroup(Zn),a=Ml("mapSize","vec2",r).setGroup(Zn);let u=this.vsmMaterialVertical||(this.vsmMaterialVertical=new rh);u.fragmentNode=dT({samples:n,radius:o,size:a,shadowPass:t}).context(e.getSharedContext()),u.name="VSMVertical",u=this.vsmMaterialHorizontal||(this.vsmMaterialHorizontal=new rh),u.fragmentNode=cT({samples:n,radius:o,size:a,shadowPass:s}).context(e.getSharedContext()),u.name="VSMHorizontal"}const a=Ml("intensity","float",r).setGroup(Zn),u=Ml("bias","float",r).setGroup(Zn),l=Ml("normalBias","float",r).setGroup(Zn),d=t.material.shadowPositionNode||Zu;let c,h=ti(r.matrix).setGroup(Zn).mul(d.add(cl.mul(l)));if(r.camera.isOrthographicCamera||!0!==s.logarithmicDepthBuffer)h=h.xyz.div(h.w),c=h.z,s.coordinateSystem===N&&(c=c.mul(2).sub(1));else{const e=h.w;h=h.xy.div(e);const t=ti("float").onRenderUpdate((()=>r.camera.near)),s=ti("float").onRenderUpdate((()=>r.camera.far));c=qc(e,t,s)}h=Un(h.x,h.y.oneMinus(),c.add(u));const p=h.x.greaterThanEqual(0).and(h.x.lessThanEqual(1)).and(h.y.greaterThanEqual(0)).and(h.y.lessThanEqual(1)).and(h.z.lessThanEqual(1)),g=r.filterNode||hT[s.shadowMap.type]||null;if(null===g)throw new Error("THREE.WebGPURenderer: Shadow map type not supported yet.");const m=_u(o.texture,h),f=p.select(g({depthTexture:n===Re?this.vsmShadowMapHorizontal.texture:i,shadowCoord:h,shadow:r}),Sn(1)),y=la(1,f.rgb.mix(m,1),a.mul(m.a)).toVar();return this.shadowMap=o,this.shadow.map=o,y}setup(e){if(!1===e.renderer.shadowMap.enabled)return;let t=this._node;return null===t&&(this._node=t=this.setupShadow(e)),fT.mulAssign(t),t}updateShadow(e){const{shadowMap:t,light:s,shadow:r}=this,{renderer:n,scene:i,camera:o}=e,a=n.shadowMap.type,u=t.depthTexture.version;this._depthVersionCached=u;const l=i.overrideMaterial;i.overrideMaterial=pT,t.setSize(r.mapSize.width,r.mapSize.height),r.updateMatrices(s),r.camera.layers.mask=o.layers.mask;const d=n.getRenderTarget(),c=n.getRenderObjectFunction();n.setRenderObjectFunction(((e,...t)=>{(!0===e.castShadow||e.receiveShadow&&a===Re)&&n.renderObject(e,...t)})),n.setRenderTarget(t),n.render(i,r.camera),n.setRenderObjectFunction(c),!0!==s.isPointLight&&a===Re&&this.vsmPass(n),n.setRenderTarget(d),i.overrideMaterial=l}vsmPass(e){const{shadow:t}=this;this.vsmShadowMapVertical.setSize(t.mapSize.width,t.mapSize.height),this.vsmShadowMapHorizontal.setSize(t.mapSize.width,t.mapSize.height),e.setRenderTarget(this.vsmShadowMapVertical),gT.material=this.vsmMaterialVertical,gT.render(e),e.setRenderTarget(this.vsmShadowMapHorizontal),gT.material=this.vsmMaterialHorizontal,gT.render(e)}dispose(){this.shadowMap.dispose(),this.shadowMap=null,null!==this.vsmShadowMapVertical&&(this.vsmShadowMapVertical.dispose(),this.vsmShadowMapVertical=null,this.vsmMaterialVertical.dispose(),this.vsmMaterialVertical=null),null!==this.vsmShadowMapHorizontal&&(this.vsmShadowMapHorizontal.dispose(),this.vsmShadowMapHorizontal=null,this.vsmMaterialHorizontal.dispose(),this.vsmMaterialHorizontal=null),this.updateBeforeType=br.NONE}updateBefore(e){const{shadow:t}=this;(t.needsUpdate||t.autoUpdate)&&(this.updateShadow(e),this.shadowMap.depthTexture.version===this._depthVersionCached&&(t.needsUpdate=!1))}}const fT=Sn(1).toVar(),yT=(e,t)=>hn(new mT(e,t)),bT=fT.oneMinus().toVar("shadows");class xT extends yc{static get type(){return"AnalyticLightNode"}constructor(t=null){super(),this.updateType=br.FRAME,this.light=t,this.color=new e,this.colorNode=ti(this.color).setGroup(Zn),this.baseColorNode=null,this.shadowNode=null,this.shadowColorNode=null,this.isAnalyticLightNode=!0}getCacheKey(){return lr(super.getCacheKey(),this.light.id,this.light.castShadow?1:0)}getHash(){return this.light.uuid}setupShadow(e){const{renderer:t}=e;if(!1===t.shadowMap.enabled)return;let s=this.shadowColorNode;if(null===s){const e=this.light.shadow.shadowNode;let t;t=void 0!==e?hn(e):yT(this.light),this.shadowNode=t,this.shadowColorNode=s=this.colorNode.mul(t),this.baseColorNode=this.colorNode}this.colorNode=s}setup(e){this.colorNode=this.baseColorNode||this.colorNode,this.light.castShadow?e.object.receiveShadow&&this.setupShadow(e):null!==this.shadowNode&&this.shadowNode.dispose()}update(){const{light:e}=this;this.color.copy(e.color).multiplyScalar(e.intensity)}}const TT=yn((e=>{const{lightDistance:t,cutoffDistance:s,decayExponent:r}=e,n=t.pow(r).max(.01).reciprocal();return s.greaterThan(0).select(n.mul(t.div(s).pow4().oneMinus().clamp().pow2()),n)})),_T=yn((({color:e,lightViewPosition:t,cutoffDistance:s,decayExponent:r},n)=>{const i=n.context.lightingModel,o=t.sub(el),a=o.normalize(),u=o.length(),l=TT({lightDistance:u,cutoffDistance:s,decayExponent:r}),d=e.mul(l),c=n.context.reflectedLight;i.direct({lightDirection:a,lightColor:d,reflectedLight:c},n.stack,n)}));class NT extends xT{static get type(){return"PointLightNode"}constructor(e=null){super(e),this.cutoffDistanceNode=ti(0).setGroup(Zn),this.decayExponentNode=ti(0).setGroup(Zn)}update(e){const{light:t}=this;super.update(e),this.cutoffDistanceNode.value=t.distance,this.decayExponentNode.value=t.decay}setup(){_T({color:this.colorNode,lightViewPosition:eT(this.light),cutoffDistance:this.cutoffDistanceNode,decayExponent:this.decayExponentNode}).append()}}const vT=yn((([e=t()])=>{const t=e.mul(2),s=t.x.floor(),r=t.y.floor();return s.add(r).mod(2).sign()})),ST=yn((([e,t,s])=>{const r=Sn(s).toVar(),n=Sn(t).toVar(),i=Cn(e).toVar();return xa(i,n,r)})).setLayout({name:"mx_select",type:"float",inputs:[{name:"b",type:"bool"},{name:"t",type:"float"},{name:"f",type:"float"}]}),AT=yn((([e,t])=>{const s=Cn(t).toVar(),r=Sn(e).toVar();return xa(s,r.negate(),r)})).setLayout({name:"mx_negate_if",type:"float",inputs:[{name:"val",type:"float"},{name:"b",type:"bool"}]}),RT=yn((([e])=>{const t=Sn(e).toVar();return An(vo(t))})).setLayout({name:"mx_floor",type:"int",inputs:[{name:"x",type:"float"}]}),CT=yn((([e,t])=>{const s=Sn(e).toVar();return t.assign(RT(s)),s.sub(Sn(t))})),ET=Um([yn((([e,t,s,r,n,i])=>{const o=Sn(i).toVar(),a=Sn(n).toVar(),u=Sn(r).toVar(),l=Sn(s).toVar(),d=Sn(t).toVar(),c=Sn(e).toVar(),h=Sn(Oi(1,a)).toVar();return Oi(1,o).mul(c.mul(h).add(d.mul(a))).add(o.mul(l.mul(h).add(u.mul(a))))})).setLayout({name:"mx_bilerp_0",type:"float",inputs:[{name:"v0",type:"float"},{name:"v1",type:"float"},{name:"v2",type:"float"},{name:"v3",type:"float"},{name:"s",type:"float"},{name:"t",type:"float"}]}),yn((([e,t,s,r,n,i])=>{const o=Sn(i).toVar(),a=Sn(n).toVar(),u=Un(r).toVar(),l=Un(s).toVar(),d=Un(t).toVar(),c=Un(e).toVar(),h=Sn(Oi(1,a)).toVar();return Oi(1,o).mul(c.mul(h).add(d.mul(a))).add(o.mul(l.mul(h).add(u.mul(a))))})).setLayout({name:"mx_bilerp_1",type:"vec3",inputs:[{name:"v0",type:"vec3"},{name:"v1",type:"vec3"},{name:"v2",type:"vec3"},{name:"v3",type:"vec3"},{name:"s",type:"float"},{name:"t",type:"float"}]})]),wT=Um([yn((([e,t,s,r,n,i,o,a,u,l,d])=>{const c=Sn(d).toVar(),h=Sn(l).toVar(),p=Sn(u).toVar(),g=Sn(a).toVar(),m=Sn(o).toVar(),f=Sn(i).toVar(),y=Sn(n).toVar(),b=Sn(r).toVar(),x=Sn(s).toVar(),T=Sn(t).toVar(),_=Sn(e).toVar(),N=Sn(Oi(1,p)).toVar(),v=Sn(Oi(1,h)).toVar();return Sn(Oi(1,c)).toVar().mul(v.mul(_.mul(N).add(T.mul(p))).add(h.mul(x.mul(N).add(b.mul(p))))).add(c.mul(v.mul(y.mul(N).add(f.mul(p))).add(h.mul(m.mul(N).add(g.mul(p))))))})).setLayout({name:"mx_trilerp_0",type:"float",inputs:[{name:"v0",type:"float"},{name:"v1",type:"float"},{name:"v2",type:"float"},{name:"v3",type:"float"},{name:"v4",type:"float"},{name:"v5",type:"float"},{name:"v6",type:"float"},{name:"v7",type:"float"},{name:"s",type:"float"},{name:"t",type:"float"},{name:"r",type:"float"}]}),yn((([e,t,s,r,n,i,o,a,u,l,d])=>{const c=Sn(d).toVar(),h=Sn(l).toVar(),p=Sn(u).toVar(),g=Un(a).toVar(),m=Un(o).toVar(),f=Un(i).toVar(),y=Un(n).toVar(),b=Un(r).toVar(),x=Un(s).toVar(),T=Un(t).toVar(),_=Un(e).toVar(),N=Sn(Oi(1,p)).toVar(),v=Sn(Oi(1,h)).toVar();return Sn(Oi(1,c)).toVar().mul(v.mul(_.mul(N).add(T.mul(p))).add(h.mul(x.mul(N).add(b.mul(p))))).add(c.mul(v.mul(y.mul(N).add(f.mul(p))).add(h.mul(m.mul(N).add(g.mul(p))))))})).setLayout({name:"mx_trilerp_1",type:"vec3",inputs:[{name:"v0",type:"vec3"},{name:"v1",type:"vec3"},{name:"v2",type:"vec3"},{name:"v3",type:"vec3"},{name:"v4",type:"vec3"},{name:"v5",type:"vec3"},{name:"v6",type:"vec3"},{name:"v7",type:"vec3"},{name:"s",type:"float"},{name:"t",type:"float"},{name:"r",type:"float"}]})]),MT=yn((([e,t,s])=>{const r=Sn(s).toVar(),n=Sn(t).toVar(),i=Rn(e).toVar(),o=Rn(i.bitAnd(Rn(7))).toVar(),a=Sn(ST(o.lessThan(Rn(4)),n,r)).toVar(),u=Sn(Gi(2,ST(o.lessThan(Rn(4)),r,n))).toVar();return AT(a,Cn(o.bitAnd(Rn(1)))).add(AT(u,Cn(o.bitAnd(Rn(2)))))})).setLayout({name:"mx_gradient_float_0",type:"float",inputs:[{name:"hash",type:"uint"},{name:"x",type:"float"},{name:"y",type:"float"}]}),BT=yn((([e,t,s,r])=>{const n=Sn(r).toVar(),i=Sn(s).toVar(),o=Sn(t).toVar(),a=Rn(e).toVar(),u=Rn(a.bitAnd(Rn(15))).toVar(),l=Sn(ST(u.lessThan(Rn(8)),o,i)).toVar(),d=Sn(ST(u.lessThan(Rn(4)),i,ST(u.equal(Rn(12)).or(u.equal(Rn(14))),o,n))).toVar();return AT(l,Cn(u.bitAnd(Rn(1)))).add(AT(d,Cn(u.bitAnd(Rn(2)))))})).setLayout({name:"mx_gradient_float_1",type:"float",inputs:[{name:"hash",type:"uint"},{name:"x",type:"float"},{name:"y",type:"float"},{name:"z",type:"float"}]}),UT=Um([MT,BT]),FT=yn((([e,t,s])=>{const r=Sn(s).toVar(),n=Sn(t).toVar(),i=Pn(e).toVar();return Un(UT(i.x,n,r),UT(i.y,n,r),UT(i.z,n,r))})).setLayout({name:"mx_gradient_vec3_0",type:"vec3",inputs:[{name:"hash",type:"uvec3"},{name:"x",type:"float"},{name:"y",type:"float"}]}),PT=yn((([e,t,s,r])=>{const n=Sn(r).toVar(),i=Sn(s).toVar(),o=Sn(t).toVar(),a=Pn(e).toVar();return Un(UT(a.x,o,i,n),UT(a.y,o,i,n),UT(a.z,o,i,n))})).setLayout({name:"mx_gradient_vec3_1",type:"vec3",inputs:[{name:"hash",type:"uvec3"},{name:"x",type:"float"},{name:"y",type:"float"},{name:"z",type:"float"}]}),IT=Um([FT,PT]),LT=yn((([e])=>{const t=Sn(e).toVar();return Gi(.6616,t)})).setLayout({name:"mx_gradient_scale2d_0",type:"float",inputs:[{name:"v",type:"float"}]}),DT=yn((([e])=>{const t=Sn(e).toVar();return Gi(.982,t)})).setLayout({name:"mx_gradient_scale3d_0",type:"float",inputs:[{name:"v",type:"float"}]}),VT=Um([LT,yn((([e])=>{const t=Un(e).toVar();return Gi(.6616,t)})).setLayout({name:"mx_gradient_scale2d_1",type:"vec3",inputs:[{name:"v",type:"vec3"}]})]),OT=Um([DT,yn((([e])=>{const t=Un(e).toVar();return Gi(.982,t)})).setLayout({name:"mx_gradient_scale3d_1",type:"vec3",inputs:[{name:"v",type:"vec3"}]})]),GT=yn((([e,t])=>{const s=An(t).toVar(),r=Rn(e).toVar();return r.shiftLeft(s).bitOr(r.shiftRight(An(32).sub(s)))})).setLayout({name:"mx_rotl32",type:"uint",inputs:[{name:"x",type:"uint"},{name:"k",type:"int"}]}),kT=yn((([e,t,s])=>{e.subAssign(s),e.bitXorAssign(GT(s,An(4))),s.addAssign(t),t.subAssign(e),t.bitXorAssign(GT(e,An(6))),e.addAssign(s),s.subAssign(t),s.bitXorAssign(GT(t,An(8))),t.addAssign(e),e.subAssign(s),e.bitXorAssign(GT(s,An(16))),s.addAssign(t),t.subAssign(e),t.bitXorAssign(GT(e,An(19))),e.addAssign(s),s.subAssign(t),s.bitXorAssign(GT(t,An(4))),t.addAssign(e)})),zT=yn((([e,t,s])=>{const r=Rn(s).toVar(),n=Rn(t).toVar(),i=Rn(e).toVar();return r.bitXorAssign(n),r.subAssign(GT(n,An(14))),i.bitXorAssign(r),i.subAssign(GT(r,An(11))),n.bitXorAssign(i),n.subAssign(GT(i,An(25))),r.bitXorAssign(n),r.subAssign(GT(n,An(16))),i.bitXorAssign(r),i.subAssign(GT(r,An(4))),n.bitXorAssign(i),n.subAssign(GT(i,An(14))),r.bitXorAssign(n),r.subAssign(GT(n,An(24))),r})).setLayout({name:"mx_bjfinal",type:"uint",inputs:[{name:"a",type:"uint"},{name:"b",type:"uint"},{name:"c",type:"uint"}]}),$T=yn((([e])=>{const t=Rn(e).toVar();return Sn(t).div(Sn(Rn(An(4294967295))))})).setLayout({name:"mx_bits_to_01",type:"float",inputs:[{name:"bits",type:"uint"}]}),HT=yn((([e])=>{const t=Sn(e).toVar();return t.mul(t).mul(t).mul(t.mul(t.mul(6).sub(15)).add(10))})).setLayout({name:"mx_fade",type:"float",inputs:[{name:"t",type:"float"}]}),WT=Um([yn((([e])=>{const t=An(e).toVar(),s=Rn(Rn(1)).toVar(),r=Rn(Rn(An(3735928559)).add(s.shiftLeft(Rn(2))).add(Rn(13))).toVar();return zT(r.add(Rn(t)),r,r)})).setLayout({name:"mx_hash_int_0",type:"uint",inputs:[{name:"x",type:"int"}]}),yn((([e,t])=>{const s=An(t).toVar(),r=An(e).toVar(),n=Rn(Rn(2)).toVar(),i=Rn().toVar(),o=Rn().toVar(),a=Rn().toVar();return i.assign(o.assign(a.assign(Rn(An(3735928559)).add(n.shiftLeft(Rn(2))).add(Rn(13))))),i.addAssign(Rn(r)),o.addAssign(Rn(s)),zT(i,o,a)})).setLayout({name:"mx_hash_int_1",type:"uint",inputs:[{name:"x",type:"int"},{name:"y",type:"int"}]}),yn((([e,t,s])=>{const r=An(s).toVar(),n=An(t).toVar(),i=An(e).toVar(),o=Rn(Rn(3)).toVar(),a=Rn().toVar(),u=Rn().toVar(),l=Rn().toVar();return a.assign(u.assign(l.assign(Rn(An(3735928559)).add(o.shiftLeft(Rn(2))).add(Rn(13))))),a.addAssign(Rn(i)),u.addAssign(Rn(n)),l.addAssign(Rn(r)),zT(a,u,l)})).setLayout({name:"mx_hash_int_2",type:"uint",inputs:[{name:"x",type:"int"},{name:"y",type:"int"},{name:"z",type:"int"}]}),yn((([e,t,s,r])=>{const n=An(r).toVar(),i=An(s).toVar(),o=An(t).toVar(),a=An(e).toVar(),u=Rn(Rn(4)).toVar(),l=Rn().toVar(),d=Rn().toVar(),c=Rn().toVar();return l.assign(d.assign(c.assign(Rn(An(3735928559)).add(u.shiftLeft(Rn(2))).add(Rn(13))))),l.addAssign(Rn(a)),d.addAssign(Rn(o)),c.addAssign(Rn(i)),kT(l,d,c),l.addAssign(Rn(n)),zT(l,d,c)})).setLayout({name:"mx_hash_int_3",type:"uint",inputs:[{name:"x",type:"int"},{name:"y",type:"int"},{name:"z",type:"int"},{name:"xx",type:"int"}]}),yn((([e,t,s,r,n])=>{const i=An(n).toVar(),o=An(r).toVar(),a=An(s).toVar(),u=An(t).toVar(),l=An(e).toVar(),d=Rn(Rn(5)).toVar(),c=Rn().toVar(),h=Rn().toVar(),p=Rn().toVar();return c.assign(h.assign(p.assign(Rn(An(3735928559)).add(d.shiftLeft(Rn(2))).add(Rn(13))))),c.addAssign(Rn(l)),h.addAssign(Rn(u)),p.addAssign(Rn(a)),kT(c,h,p),c.addAssign(Rn(o)),h.addAssign(Rn(i)),zT(c,h,p)})).setLayout({name:"mx_hash_int_4",type:"uint",inputs:[{name:"x",type:"int"},{name:"y",type:"int"},{name:"z",type:"int"},{name:"xx",type:"int"},{name:"yy",type:"int"}]})]),jT=Um([yn((([e,t])=>{const s=An(t).toVar(),r=An(e).toVar(),n=Rn(WT(r,s)).toVar(),i=Pn().toVar();return i.x.assign(n.bitAnd(An(255))),i.y.assign(n.shiftRight(An(8)).bitAnd(An(255))),i.z.assign(n.shiftRight(An(16)).bitAnd(An(255))),i})).setLayout({name:"mx_hash_vec3_0",type:"uvec3",inputs:[{name:"x",type:"int"},{name:"y",type:"int"}]}),yn((([e,t,s])=>{const r=An(s).toVar(),n=An(t).toVar(),i=An(e).toVar(),o=Rn(WT(i,n,r)).toVar(),a=Pn().toVar();return a.x.assign(o.bitAnd(An(255))),a.y.assign(o.shiftRight(An(8)).bitAnd(An(255))),a.z.assign(o.shiftRight(An(16)).bitAnd(An(255))),a})).setLayout({name:"mx_hash_vec3_1",type:"uvec3",inputs:[{name:"x",type:"int"},{name:"y",type:"int"},{name:"z",type:"int"}]})]),qT=Um([yn((([e])=>{const t=En(e).toVar(),s=An().toVar(),r=An().toVar(),n=Sn(CT(t.x,s)).toVar(),i=Sn(CT(t.y,r)).toVar(),o=Sn(HT(n)).toVar(),a=Sn(HT(i)).toVar(),u=Sn(ET(UT(WT(s,r),n,i),UT(WT(s.add(An(1)),r),n.sub(1),i),UT(WT(s,r.add(An(1))),n,i.sub(1)),UT(WT(s.add(An(1)),r.add(An(1))),n.sub(1),i.sub(1)),o,a)).toVar();return VT(u)})).setLayout({name:"mx_perlin_noise_float_0",type:"float",inputs:[{name:"p",type:"vec2"}]}),yn((([e])=>{const t=Un(e).toVar(),s=An().toVar(),r=An().toVar(),n=An().toVar(),i=Sn(CT(t.x,s)).toVar(),o=Sn(CT(t.y,r)).toVar(),a=Sn(CT(t.z,n)).toVar(),u=Sn(HT(i)).toVar(),l=Sn(HT(o)).toVar(),d=Sn(HT(a)).toVar(),c=Sn(wT(UT(WT(s,r,n),i,o,a),UT(WT(s.add(An(1)),r,n),i.sub(1),o,a),UT(WT(s,r.add(An(1)),n),i,o.sub(1),a),UT(WT(s.add(An(1)),r.add(An(1)),n),i.sub(1),o.sub(1),a),UT(WT(s,r,n.add(An(1))),i,o,a.sub(1)),UT(WT(s.add(An(1)),r,n.add(An(1))),i.sub(1),o,a.sub(1)),UT(WT(s,r.add(An(1)),n.add(An(1))),i,o.sub(1),a.sub(1)),UT(WT(s.add(An(1)),r.add(An(1)),n.add(An(1))),i.sub(1),o.sub(1),a.sub(1)),u,l,d)).toVar();return OT(c)})).setLayout({name:"mx_perlin_noise_float_1",type:"float",inputs:[{name:"p",type:"vec3"}]})]),KT=Um([yn((([e])=>{const t=En(e).toVar(),s=An().toVar(),r=An().toVar(),n=Sn(CT(t.x,s)).toVar(),i=Sn(CT(t.y,r)).toVar(),o=Sn(HT(n)).toVar(),a=Sn(HT(i)).toVar(),u=Un(ET(IT(jT(s,r),n,i),IT(jT(s.add(An(1)),r),n.sub(1),i),IT(jT(s,r.add(An(1))),n,i.sub(1)),IT(jT(s.add(An(1)),r.add(An(1))),n.sub(1),i.sub(1)),o,a)).toVar();return VT(u)})).setLayout({name:"mx_perlin_noise_vec3_0",type:"vec3",inputs:[{name:"p",type:"vec2"}]}),yn((([e])=>{const t=Un(e).toVar(),s=An().toVar(),r=An().toVar(),n=An().toVar(),i=Sn(CT(t.x,s)).toVar(),o=Sn(CT(t.y,r)).toVar(),a=Sn(CT(t.z,n)).toVar(),u=Sn(HT(i)).toVar(),l=Sn(HT(o)).toVar(),d=Sn(HT(a)).toVar(),c=Un(wT(IT(jT(s,r,n),i,o,a),IT(jT(s.add(An(1)),r,n),i.sub(1),o,a),IT(jT(s,r.add(An(1)),n),i,o.sub(1),a),IT(jT(s.add(An(1)),r.add(An(1)),n),i.sub(1),o.sub(1),a),IT(jT(s,r,n.add(An(1))),i,o,a.sub(1)),IT(jT(s.add(An(1)),r,n.add(An(1))),i.sub(1),o,a.sub(1)),IT(jT(s,r.add(An(1)),n.add(An(1))),i,o.sub(1),a.sub(1)),IT(jT(s.add(An(1)),r.add(An(1)),n.add(An(1))),i.sub(1),o.sub(1),a.sub(1)),u,l,d)).toVar();return OT(c)})).setLayout({name:"mx_perlin_noise_vec3_1",type:"vec3",inputs:[{name:"p",type:"vec3"}]})]),XT=Um([yn((([e])=>{const t=Sn(e).toVar(),s=An(RT(t)).toVar();return $T(WT(s))})).setLayout({name:"mx_cell_noise_float_0",type:"float",inputs:[{name:"p",type:"float"}]}),yn((([e])=>{const t=En(e).toVar(),s=An(RT(t.x)).toVar(),r=An(RT(t.y)).toVar();return $T(WT(s,r))})).setLayout({name:"mx_cell_noise_float_1",type:"float",inputs:[{name:"p",type:"vec2"}]}),yn((([e])=>{const t=Un(e).toVar(),s=An(RT(t.x)).toVar(),r=An(RT(t.y)).toVar(),n=An(RT(t.z)).toVar();return $T(WT(s,r,n))})).setLayout({name:"mx_cell_noise_float_2",type:"float",inputs:[{name:"p",type:"vec3"}]}),yn((([e])=>{const t=Ln(e).toVar(),s=An(RT(t.x)).toVar(),r=An(RT(t.y)).toVar(),n=An(RT(t.z)).toVar(),i=An(RT(t.w)).toVar();return $T(WT(s,r,n,i))})).setLayout({name:"mx_cell_noise_float_3",type:"float",inputs:[{name:"p",type:"vec4"}]})]),YT=Um([yn((([e])=>{const t=Sn(e).toVar(),s=An(RT(t)).toVar();return Un($T(WT(s,An(0))),$T(WT(s,An(1))),$T(WT(s,An(2))))})).setLayout({name:"mx_cell_noise_vec3_0",type:"vec3",inputs:[{name:"p",type:"float"}]}),yn((([e])=>{const t=En(e).toVar(),s=An(RT(t.x)).toVar(),r=An(RT(t.y)).toVar();return Un($T(WT(s,r,An(0))),$T(WT(s,r,An(1))),$T(WT(s,r,An(2))))})).setLayout({name:"mx_cell_noise_vec3_1",type:"vec3",inputs:[{name:"p",type:"vec2"}]}),yn((([e])=>{const t=Un(e).toVar(),s=An(RT(t.x)).toVar(),r=An(RT(t.y)).toVar(),n=An(RT(t.z)).toVar();return Un($T(WT(s,r,n,An(0))),$T(WT(s,r,n,An(1))),$T(WT(s,r,n,An(2))))})).setLayout({name:"mx_cell_noise_vec3_2",type:"vec3",inputs:[{name:"p",type:"vec3"}]}),yn((([e])=>{const t=Ln(e).toVar(),s=An(RT(t.x)).toVar(),r=An(RT(t.y)).toVar(),n=An(RT(t.z)).toVar(),i=An(RT(t.w)).toVar();return Un($T(WT(s,r,n,i,An(0))),$T(WT(s,r,n,i,An(1))),$T(WT(s,r,n,i,An(2))))})).setLayout({name:"mx_cell_noise_vec3_3",type:"vec3",inputs:[{name:"p",type:"vec4"}]})]),QT=yn((([e,t,s,r])=>{const n=Sn(r).toVar(),i=Sn(s).toVar(),o=An(t).toVar(),a=Un(e).toVar(),u=Sn(0).toVar(),l=Sn(1).toVar();return uc(o,(()=>{u.addAssign(l.mul(qT(a))),l.mulAssign(n),a.mulAssign(i)})),u})).setLayout({name:"mx_fractal_noise_float",type:"float",inputs:[{name:"p",type:"vec3"},{name:"octaves",type:"int"},{name:"lacunarity",type:"float"},{name:"diminish",type:"float"}]}),ZT=yn((([e,t,s,r])=>{const n=Sn(r).toVar(),i=Sn(s).toVar(),o=An(t).toVar(),a=Un(e).toVar(),u=Un(0).toVar(),l=Sn(1).toVar();return uc(o,(()=>{u.addAssign(l.mul(KT(a))),l.mulAssign(n),a.mulAssign(i)})),u})).setLayout({name:"mx_fractal_noise_vec3",type:"vec3",inputs:[{name:"p",type:"vec3"},{name:"octaves",type:"int"},{name:"lacunarity",type:"float"},{name:"diminish",type:"float"}]}),JT=yn((([e,t,s,r])=>{const n=Sn(r).toVar(),i=Sn(s).toVar(),o=An(t).toVar(),a=Un(e).toVar();return En(QT(a,o,i,n),QT(a.add(Un(An(19),An(193),An(17))),o,i,n))})).setLayout({name:"mx_fractal_noise_vec2",type:"vec2",inputs:[{name:"p",type:"vec3"},{name:"octaves",type:"int"},{name:"lacunarity",type:"float"},{name:"diminish",type:"float"}]}),e_=yn((([e,t,s,r])=>{const n=Sn(r).toVar(),i=Sn(s).toVar(),o=An(t).toVar(),a=Un(e).toVar(),u=Un(ZT(a,o,i,n)).toVar(),l=Sn(QT(a.add(Un(An(19),An(193),An(17))),o,i,n)).toVar();return Ln(u,l)})).setLayout({name:"mx_fractal_noise_vec4",type:"vec4",inputs:[{name:"p",type:"vec3"},{name:"octaves",type:"int"},{name:"lacunarity",type:"float"},{name:"diminish",type:"float"}]}),t_=Um([yn((([e,t,s,r,n,i,o])=>{const a=An(o).toVar(),u=Sn(i).toVar(),l=An(n).toVar(),d=An(r).toVar(),c=An(s).toVar(),h=An(t).toVar(),p=En(e).toVar(),g=Un(YT(En(h.add(d),c.add(l)))).toVar(),m=En(g.x,g.y).toVar();m.subAssign(.5),m.mulAssign(u),m.addAssign(.5);const f=En(En(Sn(h),Sn(c)).add(m)).toVar(),y=En(f.sub(p)).toVar();return _n(a.equal(An(2)),(()=>Fo(y.x).add(Fo(y.y)))),_n(a.equal(An(3)),(()=>Ko(Fo(y.x),Fo(y.y)))),ea(y,y)})).setLayout({name:"mx_worley_distance_0",type:"float",inputs:[{name:"p",type:"vec2"},{name:"x",type:"int"},{name:"y",type:"int"},{name:"xoff",type:"int"},{name:"yoff",type:"int"},{name:"jitter",type:"float"},{name:"metric",type:"int"}]}),yn((([e,t,s,r,n,i,o,a,u])=>{const l=An(u).toVar(),d=Sn(a).toVar(),c=An(o).toVar(),h=An(i).toVar(),p=An(n).toVar(),g=An(r).toVar(),m=An(s).toVar(),f=An(t).toVar(),y=Un(e).toVar(),b=Un(YT(Un(f.add(p),m.add(h),g.add(c)))).toVar();b.subAssign(.5),b.mulAssign(d),b.addAssign(.5);const x=Un(Un(Sn(f),Sn(m),Sn(g)).add(b)).toVar(),T=Un(x.sub(y)).toVar();return _n(l.equal(An(2)),(()=>Fo(T.x).add(Fo(T.y)).add(Fo(T.z)))),_n(l.equal(An(3)),(()=>Ko(Ko(Fo(T.x),Fo(T.y)),Fo(T.z)))),ea(T,T)})).setLayout({name:"mx_worley_distance_1",type:"float",inputs:[{name:"p",type:"vec3"},{name:"x",type:"int"},{name:"y",type:"int"},{name:"z",type:"int"},{name:"xoff",type:"int"},{name:"yoff",type:"int"},{name:"zoff",type:"int"},{name:"jitter",type:"float"},{name:"metric",type:"int"}]})]),s_=yn((([e,t,s])=>{const r=An(s).toVar(),n=Sn(t).toVar(),i=En(e).toVar(),o=An().toVar(),a=An().toVar(),u=En(CT(i.x,o),CT(i.y,a)).toVar(),l=Sn(1e6).toVar();return uc({start:-1,end:An(1),name:"x",condition:"<="},(({x:e})=>{uc({start:-1,end:An(1),name:"y",condition:"<="},(({y:t})=>{const s=Sn(t_(u,e,t,o,a,n,r)).toVar();l.assign(qo(l,s))}))})),_n(r.equal(An(0)),(()=>{l.assign(_o(l))})),l})).setLayout({name:"mx_worley_noise_float_0",type:"float",inputs:[{name:"p",type:"vec2"},{name:"jitter",type:"float"},{name:"metric",type:"int"}]}),r_=yn((([e,t,s])=>{const r=An(s).toVar(),n=Sn(t).toVar(),i=En(e).toVar(),o=An().toVar(),a=An().toVar(),u=En(CT(i.x,o),CT(i.y,a)).toVar(),l=En(1e6,1e6).toVar();return uc({start:-1,end:An(1),name:"x",condition:"<="},(({x:e})=>{uc({start:-1,end:An(1),name:"y",condition:"<="},(({y:t})=>{const s=Sn(t_(u,e,t,o,a,n,r)).toVar();_n(s.lessThan(l.x),(()=>{l.y.assign(l.x),l.x.assign(s)})).ElseIf(s.lessThan(l.y),(()=>{l.y.assign(s)}))}))})),_n(r.equal(An(0)),(()=>{l.assign(_o(l))})),l})).setLayout({name:"mx_worley_noise_vec2_0",type:"vec2",inputs:[{name:"p",type:"vec2"},{name:"jitter",type:"float"},{name:"metric",type:"int"}]}),n_=yn((([e,t,s])=>{const r=An(s).toVar(),n=Sn(t).toVar(),i=En(e).toVar(),o=An().toVar(),a=An().toVar(),u=En(CT(i.x,o),CT(i.y,a)).toVar(),l=Un(1e6,1e6,1e6).toVar();return uc({start:-1,end:An(1),name:"x",condition:"<="},(({x:e})=>{uc({start:-1,end:An(1),name:"y",condition:"<="},(({y:t})=>{const s=Sn(t_(u,e,t,o,a,n,r)).toVar();_n(s.lessThan(l.x),(()=>{l.z.assign(l.y),l.y.assign(l.x),l.x.assign(s)})).ElseIf(s.lessThan(l.y),(()=>{l.z.assign(l.y),l.y.assign(s)})).ElseIf(s.lessThan(l.z),(()=>{l.z.assign(s)}))}))})),_n(r.equal(An(0)),(()=>{l.assign(_o(l))})),l})).setLayout({name:"mx_worley_noise_vec3_0",type:"vec3",inputs:[{name:"p",type:"vec2"},{name:"jitter",type:"float"},{name:"metric",type:"int"}]}),i_=Um([s_,yn((([e,t,s])=>{const r=An(s).toVar(),n=Sn(t).toVar(),i=Un(e).toVar(),o=An().toVar(),a=An().toVar(),u=An().toVar(),l=Un(CT(i.x,o),CT(i.y,a),CT(i.z,u)).toVar(),d=Sn(1e6).toVar();return uc({start:-1,end:An(1),name:"x",condition:"<="},(({x:e})=>{uc({start:-1,end:An(1),name:"y",condition:"<="},(({y:t})=>{uc({start:-1,end:An(1),name:"z",condition:"<="},(({z:s})=>{const i=Sn(t_(l,e,t,s,o,a,u,n,r)).toVar();d.assign(qo(d,i))}))}))})),_n(r.equal(An(0)),(()=>{d.assign(_o(d))})),d})).setLayout({name:"mx_worley_noise_float_1",type:"float",inputs:[{name:"p",type:"vec3"},{name:"jitter",type:"float"},{name:"metric",type:"int"}]})]),o_=Um([r_,yn((([e,t,s])=>{const r=An(s).toVar(),n=Sn(t).toVar(),i=Un(e).toVar(),o=An().toVar(),a=An().toVar(),u=An().toVar(),l=Un(CT(i.x,o),CT(i.y,a),CT(i.z,u)).toVar(),d=En(1e6,1e6).toVar();return uc({start:-1,end:An(1),name:"x",condition:"<="},(({x:e})=>{uc({start:-1,end:An(1),name:"y",condition:"<="},(({y:t})=>{uc({start:-1,end:An(1),name:"z",condition:"<="},(({z:s})=>{const i=Sn(t_(l,e,t,s,o,a,u,n,r)).toVar();_n(i.lessThan(d.x),(()=>{d.y.assign(d.x),d.x.assign(i)})).ElseIf(i.lessThan(d.y),(()=>{d.y.assign(i)}))}))}))})),_n(r.equal(An(0)),(()=>{d.assign(_o(d))})),d})).setLayout({name:"mx_worley_noise_vec2_1",type:"vec2",inputs:[{name:"p",type:"vec3"},{name:"jitter",type:"float"},{name:"metric",type:"int"}]})]),a_=Um([n_,yn((([e,t,s])=>{const r=An(s).toVar(),n=Sn(t).toVar(),i=Un(e).toVar(),o=An().toVar(),a=An().toVar(),u=An().toVar(),l=Un(CT(i.x,o),CT(i.y,a),CT(i.z,u)).toVar(),d=Un(1e6,1e6,1e6).toVar();return uc({start:-1,end:An(1),name:"x",condition:"<="},(({x:e})=>{uc({start:-1,end:An(1),name:"y",condition:"<="},(({y:t})=>{uc({start:-1,end:An(1),name:"z",condition:"<="},(({z:s})=>{const i=Sn(t_(l,e,t,s,o,a,u,n,r)).toVar();_n(i.lessThan(d.x),(()=>{d.z.assign(d.y),d.y.assign(d.x),d.x.assign(i)})).ElseIf(i.lessThan(d.y),(()=>{d.z.assign(d.y),d.y.assign(i)})).ElseIf(i.lessThan(d.z),(()=>{d.z.assign(i)}))}))}))})),_n(r.equal(An(0)),(()=>{d.assign(_o(d))})),d})).setLayout({name:"mx_worley_noise_vec3_1",type:"vec3",inputs:[{name:"p",type:"vec3"},{name:"jitter",type:"float"},{name:"metric",type:"int"}]})]),u_=yn((([e])=>{const t=e.y,s=e.z,r=Un().toVar();return _n(t.lessThan(1e-4),(()=>{r.assign(Un(s,s,s))})).Else((()=>{let n=e.x;n=n.sub(vo(n)).mul(6).toVar();const i=An(zo(n)),o=n.sub(Sn(i)),a=s.mul(t.oneMinus()),u=s.mul(t.mul(o).oneMinus()),l=s.mul(t.mul(o.oneMinus()).oneMinus());_n(i.equal(An(0)),(()=>{r.assign(Un(s,l,a))})).ElseIf(i.equal(An(1)),(()=>{r.assign(Un(u,s,a))})).ElseIf(i.equal(An(2)),(()=>{r.assign(Un(a,s,l))})).ElseIf(i.equal(An(3)),(()=>{r.assign(Un(a,u,s))})).ElseIf(i.equal(An(4)),(()=>{r.assign(Un(l,a,s))})).Else((()=>{r.assign(Un(s,a,u))}))})),r})).setLayout({name:"mx_hsvtorgb",type:"vec3",inputs:[{name:"hsv",type:"vec3"}]}),l_=yn((([e])=>{const t=Un(e).toVar(),s=Sn(t.x).toVar(),r=Sn(t.y).toVar(),n=Sn(t.z).toVar(),i=Sn(qo(s,qo(r,n))).toVar(),o=Sn(Ko(s,Ko(r,n))).toVar(),a=Sn(o.sub(i)).toVar(),u=Sn().toVar(),l=Sn().toVar(),d=Sn().toVar();return d.assign(o),_n(o.greaterThan(0),(()=>{l.assign(a.div(o))})).Else((()=>{l.assign(0)})),_n(l.lessThanEqual(0),(()=>{u.assign(0)})).Else((()=>{_n(s.greaterThanEqual(o),(()=>{u.assign(r.sub(n).div(a))})).ElseIf(r.greaterThanEqual(o),(()=>{u.assign(Vi(2,n.sub(s).div(a)))})).Else((()=>{u.assign(Vi(4,s.sub(r).div(a)))})),u.mulAssign(1/6),_n(u.lessThan(0),(()=>{u.addAssign(1)}))})),Un(u,l,d)})).setLayout({name:"mx_rgbtohsv",type:"vec3",inputs:[{name:"c",type:"vec3"}]}),d_=yn((([e])=>{const t=Un(e).toVar(),s=In(ji(t,Un(.04045))).toVar(),r=Un(t.div(12.92)).toVar(),n=Un(sa(Ko(t.add(Un(.055)),Un(0)).div(1.055),Un(2.4))).toVar();return la(r,n,s)})).setLayout({name:"mx_srgb_texture_to_lin_rec709",type:"vec3",inputs:[{name:"color",type:"vec3"}]}),c_=(e,t)=>{e=Sn(e),t=Sn(t);const s=En(t.dFdx(),t.dFdy()).length().mul(.7071067811865476);return pa(e.sub(s),e.add(s),t)},h_=(e,t,s,r)=>la(e,t,s[r].clamp()),p_=(e,t,s=mu())=>h_(e,t,s,"x"),g_=(e,t,s=mu())=>h_(e,t,s,"y"),m_=(e,t,s,r,n)=>la(e,t,c_(s,r[n])),f_=(e,t,s,r=mu())=>m_(e,t,s,r,"x"),y_=(e,t,s,r=mu())=>m_(e,t,s,r,"y"),b_=(e=1,t=0,s=mu())=>s.mul(e).add(t),x_=(e,t=1)=>(e=Sn(e)).abs().pow(t).mul(e.sign()),T_=(e,t=1,s=.5)=>Sn(e).sub(s).mul(t).add(s),__=(e=mu(),t=1,s=0)=>qT(e.convert("vec2|vec3")).mul(t).add(s),N_=(e=mu(),t=1,s=0)=>KT(e.convert("vec2|vec3")).mul(t).add(s),v_=(e=mu(),t=1,s=0)=>{e=e.convert("vec2|vec3");return Ln(KT(e),qT(e.add(En(19,73)))).mul(t).add(s)},S_=(e=mu(),t=1)=>i_(e.convert("vec2|vec3"),t,An(1)),A_=(e=mu(),t=1)=>o_(e.convert("vec2|vec3"),t,An(1)),R_=(e=mu(),t=1)=>a_(e.convert("vec2|vec3"),t,An(1)),C_=(e=mu())=>XT(e.convert("vec2|vec3")),E_=(e=mu(),t=3,s=2,r=.5,n=1)=>QT(e,An(t),s,r).mul(n),w_=(e=mu(),t=3,s=2,r=.5,n=1)=>JT(e,An(t),s,r).mul(n),M_=(e=mu(),t=3,s=2,r=.5,n=1)=>ZT(e,An(t),s,r).mul(n),B_=(e=mu(),t=3,s=2,r=.5,n=1)=>e_(e,An(t),s,r).mul(n),U_=yn((([e,t,s])=>{const r=Ao(e).toVar("nDir"),n=Oi(Sn(.5).mul(t.sub(s)),Zu).div(r).toVar("rbmax"),i=Oi(Sn(-.5).mul(t.sub(s)),Zu).div(r).toVar("rbmin"),o=Un().toVar("rbminmax");o.x=r.x.greaterThan(Sn(0)).select(n.x,i.x),o.y=r.y.greaterThan(Sn(0)).select(n.y,i.y),o.z=r.z.greaterThan(Sn(0)).select(n.z,i.z);const a=qo(qo(o.x,o.y),o.z).toVar("correction");return Zu.add(r.mul(a)).toVar("boxIntersection").sub(s)})),F_=yn((([e,t])=>{const s=e.x,r=e.y,n=e.z;let i=t.element(0).mul(.886227);return i=i.add(t.element(1).mul(1.023328).mul(r)),i=i.add(t.element(2).mul(1.023328).mul(n)),i=i.add(t.element(3).mul(1.023328).mul(s)),i=i.add(t.element(4).mul(.858086).mul(s).mul(r)),i=i.add(t.element(5).mul(.858086).mul(r).mul(n)),i=i.add(t.element(6).mul(n.mul(n).mul(.743125).sub(.247708))),i=i.add(t.element(7).mul(.858086).mul(s).mul(n)),i=i.add(t.element(8).mul(.429043).mul(Gi(s,s).sub(Gi(r,r)))),i})),P_=new cm;class I_ extends Lg{constructor(e,t){super(),this.renderer=e,this.nodes=t}update(e,t,s){const r=this.renderer,n=this.nodes.getBackgroundNode(e)||e.background;let i=!1;if(null===n)r._clearColor.getRGB(P_,Se),P_.a=r._clearColor.a;else if(!0===n.isColor)n.getRGB(P_,Se),P_.a=1,i=!0;else if(!0===n.isNode){const s=this.get(e),i=n;P_.copy(r._clearColor);let o=s.backgroundMesh;if(void 0===o){const e=Na(Ln(i).mul(If),{getUV:()=>Lf.mul(ll),getTextureLevel:()=>Pf});let t=Wd();t=t.setZ(t.w);const r=new rh;r.name="Background.material",r.side=x,r.depthTest=!1,r.depthWrite=!1,r.fog=!1,r.lights=!1,r.vertexNode=t,r.colorNode=e,s.backgroundMeshNode=e,s.backgroundMesh=o=new k(new Ee(1,32,32),r),o.frustumCulled=!1,o.name="Background.mesh",o.onBeforeRender=function(e,t,s){this.matrixWorld.copyPosition(s.matrixWorld)}}const a=i.getCacheKey();s.backgroundCacheKey!==a&&(s.backgroundMeshNode.node=Ln(i).mul(If),s.backgroundMeshNode.needsUpdate=!0,o.material.needsUpdate=!0,s.backgroundCacheKey=a),t.unshift(o,o.geometry,o.material,0,0,null,null)}else console.error("THREE.Renderer: Unsupported background configuration.",n);if(!0===r.autoClear||!0===i){const e=s.clearColorValue;e.r=P_.r,e.g=P_.g,e.b=P_.b,e.a=P_.a,!0!==r.backend.isWebGLBackend&&!0!==r.alpha||(e.r*=e.a,e.g*=e.a,e.b*=e.a),s.depthClearValue=r._clearDepth,s.stencilClearValue=r._clearStencil,s.clearColor=!0===r.autoClearColor,s.clearDepth=!0===r.autoClearDepth,s.clearStencil=!0===r.autoClearStencil}else s.clearColor=!1,s.clearDepth=!1,s.clearStencil=!1}}let L_=0;class D_{constructor(e="",t=[],s=0,r=[]){this.name=e,this.bindings=t,this.index=s,this.bindingsReference=r,this.id=L_++}}class V_{constructor(e,t,s,r,n,i,o,a,u,l=[]){this.vertexShader=e,this.fragmentShader=t,this.computeShader=s,this.transforms=l,this.nodeAttributes=r,this.bindings=n,this.updateNodes=i,this.updateBeforeNodes=o,this.updateAfterNodes=a,this.monitor=u,this.usedTimes=0}createBindings(){const e=[];for(const t of this.bindings){if(!0!==t.bindings[0].groupNode.shared){const s=new D_(t.name,[],t.index,t);e.push(s);for(const e of t.bindings)s.bindings.push(e.clone())}else e.push(t)}return e}}class O_{constructor(e,t,s=null){this.isNodeAttribute=!0,this.name=e,this.type=t,this.node=s}}class G_{constructor(e,t,s){this.isNodeUniform=!0,this.name=e,this.type=t,this.node=s.getSelf()}get value(){return this.node.value}set value(e){this.node.value=e}get id(){return this.node.id}get groupNode(){return this.node.groupNode}}class k_{constructor(e,t){this.isNodeVar=!0,this.name=e,this.type=t}}class z_ extends k_{constructor(e,t){super(e,t),this.needsInterpolation=!1,this.isNodeVarying=!0}}class $_{constructor(e,t,s=""){this.name=e,this.type=t,this.code=s,Object.defineProperty(this,"isNodeCode",{value:!0})}}let H_=0;class W_{constructor(e=null){this.id=H_++,this.nodesData=new WeakMap,this.parent=e}getData(e){let t=this.nodesData.get(e);return void 0===t&&null!==this.parent&&(t=this.parent.getData(e)),t}setData(e,t){this.nodesData.set(e,t)}}class j_{constructor(e,t){this.name=e,this.value=t,this.boundary=0,this.itemSize=0,this.offset=0}setValue(e){this.value=e}getValue(){return this.value}}class q_ extends j_{constructor(e,t=0){super(e,t),this.isNumberUniform=!0,this.boundary=4,this.itemSize=1}}class K_ extends j_{constructor(e,s=new t){super(e,s),this.isVector2Uniform=!0,this.boundary=8,this.itemSize=2}}class X_ extends j_{constructor(e,t=new s){super(e,t),this.isVector3Uniform=!0,this.boundary=16,this.itemSize=3}}class Y_ extends j_{constructor(e,t=new r){super(e,t),this.isVector4Uniform=!0,this.boundary=16,this.itemSize=4}}class Q_ extends j_{constructor(t,s=new e){super(t,s),this.isColorUniform=!0,this.boundary=16,this.itemSize=3}}class Z_ extends j_{constructor(e,t=new n){super(e,t),this.isMatrix3Uniform=!0,this.boundary=48,this.itemSize=12}}class J_ extends j_{constructor(e,t=new i){super(e,t),this.isMatrix4Uniform=!0,this.boundary=64,this.itemSize=16}}class eN extends q_{constructor(e){super(e.name,e.value),this.nodeUniform=e}getValue(){return this.nodeUniform.value}}class tN extends K_{constructor(e){super(e.name,e.value),this.nodeUniform=e}getValue(){return this.nodeUniform.value}}class sN extends X_{constructor(e){super(e.name,e.value),this.nodeUniform=e}getValue(){return this.nodeUniform.value}}class rN extends Y_{constructor(e){super(e.name,e.value),this.nodeUniform=e}getValue(){return this.nodeUniform.value}}class nN extends Q_{constructor(e){super(e.name,e.value),this.nodeUniform=e}getValue(){return this.nodeUniform.value}}class iN extends Z_{constructor(e){super(e.name,e.value),this.nodeUniform=e}getValue(){return this.nodeUniform.value}}class oN extends J_{constructor(e){super(e.name,e.value),this.nodeUniform=e}getValue(){return this.nodeUniform.value}}const aN=[.125,.215,.35,.446,.526,.582],uN=20,lN=new xe(-1,1,1,-1,0,1),dN=new Be(90,1),cN=new e;let hN=null,pN=0,gN=0;const mN=(1+Math.sqrt(5))/2,fN=1/mN,yN=[new s(-mN,fN,0),new s(mN,fN,0),new s(-fN,0,mN),new s(fN,0,mN),new s(0,mN,-fN),new s(0,mN,fN),new s(-1,1,-1),new s(1,1,-1),new s(-1,1,1),new s(1,1,1)],bN=[3,1,5,0,4,2],xN=$p(mu(),gu("faceIndex")).normalize(),TN=Un(xN.x,xN.y.negate(),xN.z);class _N{constructor(e){this._renderer=e,this._pingPongRenderTarget=null,this._lodMax=0,this._cubeSize=0,this._lodPlanes=[],this._sizeLods=[],this._sigmas=[],this._lodMeshes=[],this._blurMaterial=null,this._cubemapMaterial=null,this._equirectMaterial=null,this._backgroundBox=null}fromScene(e,t=0,s=.1,r=100){hN=this._renderer.getRenderTarget(),pN=this._renderer.getActiveCubeFace(),gN=this._renderer.getActiveMipmapLevel(),this._setSize(256);const n=this._allocateTargets();return n.depthBuffer=!0,this._sceneToCubeUV(e,s,r,n),t>0&&this._blur(n,0,0,t),this._applyPMREM(n),this._cleanup(n),n}fromEquirectangular(e,t=null){return this._fromTexture(e,t)}fromCubemap(e,t=null){return this._fromTexture(e,t)}async compileCubemapShader(){null===this._cubemapMaterial&&(this._cubemapMaterial=AN(),await this._compileMaterial(this._cubemapMaterial))}async compileEquirectangularShader(){null===this._equirectMaterial&&(this._equirectMaterial=RN(),await this._compileMaterial(this._equirectMaterial))}dispose(){this._dispose(),null!==this._cubemapMaterial&&this._cubemapMaterial.dispose(),null!==this._equirectMaterial&&this._equirectMaterial.dispose(),null!==this._backgroundBox&&(this._backgroundBox.geometry.dispose(),this._backgroundBox.material.dispose())}_setSize(e){this._lodMax=Math.floor(Math.log2(e)),this._cubeSize=Math.pow(2,this._lodMax)}_dispose(){null!==this._blurMaterial&&this._blurMaterial.dispose(),null!==this._pingPongRenderTarget&&this._pingPongRenderTarget.dispose();for(let e=0;e<this._lodPlanes.length;e++)this._lodPlanes[e].dispose()}_cleanup(e){this._renderer.setRenderTarget(hN,pN,gN),e.scissorTest=!1,vN(e,0,0,e.width,e.height)}_fromTexture(e,t){e.mapping===T||e.mapping===_?this._setSize(0===e.image.length?16:e.image[0].width||e.image[0].image.width):this._setSize(e.image.width/4),hN=this._renderer.getRenderTarget(),pN=this._renderer.getActiveCubeFace(),gN=this._renderer.getActiveMipmapLevel();const s=t||this._allocateTargets();return this._textureToCubeUV(e,s),this._applyPMREM(s),this._cleanup(s),s}_allocateTargets(){const e=3*Math.max(this._cubeSize,112),t=4*this._cubeSize,r={magFilter:$,minFilter:$,generateMipmaps:!1,type:ye,format:Ue,colorSpace:Se},n=NN(e,t,r);if(null===this._pingPongRenderTarget||this._pingPongRenderTarget.width!==e||this._pingPongRenderTarget.height!==t){null!==this._pingPongRenderTarget&&this._dispose(),this._pingPongRenderTarget=NN(e,t,r);const{_lodMax:n}=this;({sizeLods:this._sizeLods,lodPlanes:this._lodPlanes,sigmas:this._sigmas,lodMeshes:this._lodMeshes}=function(e){const t=[],s=[],r=[],n=[];let i=e;const o=e-4+1+aN.length;for(let a=0;a<o;a++){const o=Math.pow(2,i);s.push(o);let u=1/o;a>e-4?u=aN[a-e+4-1]:0===a&&(u=0),r.push(u);const l=1/(o-2),d=-l,c=1+l,h=[d,d,c,d,c,c,d,d,c,c,d,c],p=6,g=6,m=3,f=2,y=1,b=new Float32Array(m*g*p),x=new Float32Array(f*g*p),T=new Float32Array(y*g*p);for(let e=0;e<p;e++){const t=e%3*2/3-1,s=e>2?0:-1,r=[t,s,0,t+2/3,s,0,t+2/3,s+1,0,t,s,0,t+2/3,s+1,0,t,s+1,0],n=bN[e];b.set(r,m*g*n),x.set(h,f*g*n);const i=[n,n,n,n,n,n];T.set(i,y*g*n)}const _=new Te;_.setAttribute("position",new we(b,m)),_.setAttribute("uv",new we(x,f)),_.setAttribute("faceIndex",new we(T,y)),t.push(_),n.push(new k(_,null)),i>4&&i--}return{lodPlanes:t,sizeLods:s,sigmas:r,lodMeshes:n}}(n)),this._blurMaterial=function(e,t,r){const n=Rl(new Array(uN).fill(0)),i=ti(new s(0,1,0)),o=ti(0),a=Sn(uN),u=ti(0),l=ti(1),d=_u(null),c=ti(0),h=Sn(1/t),p=Sn(1/r),g=Sn(e),m={n:a,latitudinal:u,weights:n,poleAxis:i,outputDirection:TN,dTheta:o,samples:l,envMap:d,mipInt:c,CUBEUV_TEXEL_WIDTH:h,CUBEUV_TEXEL_HEIGHT:p,CUBEUV_MAX_MIP:g},f=SN("blur");return f.uniforms=m,f.fragmentNode=qp({...m,latitudinal:u.equal(1)}),f}(n,e,t)}return n}async _compileMaterial(e){const t=new k(this._lodPlanes[0],e);await this._renderer.compile(t,lN)}_sceneToCubeUV(e,t,s,r){const n=dN;n.near=t,n.far=s;const i=[-1,1,-1,-1,-1,-1],o=[1,1,1,-1,-1,-1],a=this._renderer,u=a.autoClear;a.getClearColor(cN),a.autoClear=!1;let l=this._backgroundBox;if(null===l){const e=new Q({name:"PMREM.Background",side:x,depthWrite:!1,depthTest:!1});l=new k(new O,e)}let d=!1;const c=e.background;c?c.isColor&&(l.material.color.copy(c),e.background=null,d=!0):(l.material.color.copy(cN),d=!0),a.setRenderTarget(r),a.clear(),d&&a.render(l,n);for(let t=0;t<6;t++){const s=t%3;0===s?(n.up.set(0,i[t],0),n.lookAt(o[t],0,0)):1===s?(n.up.set(0,0,i[t]),n.lookAt(0,o[t],0)):(n.up.set(0,i[t],0),n.lookAt(0,0,o[t]));const u=this._cubeSize;vN(r,s*u,t>2?u:0,u,u),a.render(e,n)}a.autoClear=u,e.background=c}_textureToCubeUV(e,t){const s=this._renderer,r=e.mapping===T||e.mapping===_;r?null===this._cubemapMaterial&&(this._cubemapMaterial=AN(e)):null===this._equirectMaterial&&(this._equirectMaterial=RN(e));const n=r?this._cubemapMaterial:this._equirectMaterial;n.fragmentNode.value=e;const i=this._lodMeshes[0];i.material=n;const o=this._cubeSize;vN(t,0,0,3*o,2*o),s.setRenderTarget(t),s.render(i,lN)}_applyPMREM(e){const t=this._renderer,s=t.autoClear;t.autoClear=!1;const r=this._lodPlanes.length;for(let t=1;t<r;t++){const s=Math.sqrt(this._sigmas[t]*this._sigmas[t]-this._sigmas[t-1]*this._sigmas[t-1]),n=yN[(r-t-1)%yN.length];this._blur(e,t-1,t,s,n)}t.autoClear=s}_blur(e,t,s,r,n){const i=this._pingPongRenderTarget;this._halfBlur(e,i,t,s,r,"latitudinal",n),this._halfBlur(i,e,s,s,r,"longitudinal",n)}_halfBlur(e,t,s,r,n,i,o){const a=this._renderer,u=this._blurMaterial;"latitudinal"!==i&&"longitudinal"!==i&&console.error("blur direction must be either latitudinal or longitudinal!");const l=this._lodMeshes[r];l.material=u;const d=u.uniforms,c=this._sizeLods[s]-1,h=isFinite(n)?Math.PI/(2*c):2*Math.PI/39,p=n/h,g=isFinite(n)?1+Math.floor(3*p):uN;g>uN&&console.warn(`sigmaRadians, ${n}, is too large and will clip, as it requested ${g} samples when the maximum is set to 20`);const m=[];let f=0;for(let e=0;e<uN;++e){const t=e/p,s=Math.exp(-t*t/2);m.push(s),0===e?f+=s:e<g&&(f+=2*s)}for(let e=0;e<m.length;e++)m[e]=m[e]/f;e.texture.frame=(e.texture.frame||0)+1,d.envMap.value=e.texture,d.samples.value=g,d.weights.array=m,d.latitudinal.value="latitudinal"===i?1:0,o&&(d.poleAxis.value=o);const{_lodMax:y}=this;d.dTheta.value=h,d.mipInt.value=y-s;const b=this._sizeLods[r];vN(t,3*b*(r>y-4?r-y+4:0),4*(this._cubeSize-b),3*b,2*b),a.setRenderTarget(t),a.render(l,lN)}}function NN(e,t,s){const r=new ge(e,t,s);return r.texture.mapping=Me,r.texture.name="PMREM.cubeUv",r.texture.isPMREMTexture=!0,r.scissorTest=!0,r}function vN(e,t,s,r,n){e.viewport.set(t,s,r,n),e.scissor.set(t,s,r,n)}function SN(e){const t=new rh;return t.depthTest=!1,t.depthWrite=!1,t.blending=G,t.name=`PMREM_${e}`,t}function AN(e){const t=SN("cubemap");return t.fragmentNode=_l(e,TN),t}function RN(e){const t=SN("equirect");return t.fragmentNode=_u(e,yh(TN),0),t}const CN=new WeakMap,EN=new Map([[2,"vec2"],[3,"vec3"],[4,"vec4"],[9,"mat3"],[16,"mat4"]]),wN=new Map([[Int8Array,"int"],[Int16Array,"int"],[Int32Array,"int"],[Uint8Array,"uint"],[Uint16Array,"uint"],[Uint32Array,"uint"],[Float32Array,"float"]]),MN=e=>/e/g.test(e)?String(e).replace(/\+/g,""):(e=Number(e))+(e%1?"":".0");class BN{constructor(e,t,s){this.object=e,this.material=e&&e.material||null,this.geometry=e&&e.geometry||null,this.renderer=t,this.parser=s,this.scene=null,this.camera=null,this.nodes=[],this.sequentialNodes=[],this.updateNodes=[],this.updateBeforeNodes=[],this.updateAfterNodes=[],this.hashNodes={},this.monitor=null,this.lightsNode=null,this.environmentNode=null,this.fogNode=null,this.clippingContext=null,this.vertexShader=null,this.fragmentShader=null,this.computeShader=null,this.flowNodes={vertex:[],fragment:[],compute:[]},this.flowCode={vertex:"",fragment:"",compute:""},this.uniforms={vertex:[],fragment:[],compute:[],index:0},this.structs={vertex:[],fragment:[],compute:[],index:0},this.bindings={vertex:{},fragment:{},compute:{}},this.bindingsIndexes={},this.bindGroups=null,this.attributes=[],this.bufferAttributes=[],this.varyings=[],this.codes={},this.vars={},this.flow={code:""},this.chaining=[],this.stack=mm(),this.stacks=[],this.tab="\t",this.currentFunctionNode=null,this.context={material:this.material},this.cache=new W_,this.globalCache=this.cache,this.flowsData=new WeakMap,this.shaderStage=null,this.buildStage=null,this.useComparisonMethod=!1}getBindGroupsCache(){let e=CN.get(this.renderer);return void 0===e&&(e=new Bg,CN.set(this.renderer,e)),e}createRenderTarget(e,t,s){return new ge(e,t,s)}createCubeRenderTarget(e,t){return new bh(e,t)}createPMREMGenerator(){return new _N(this.renderer)}includes(e){return this.nodes.includes(e)}_getBindGroup(e,t){const s=this.getBindGroupsCache(),r=[];let n,i=!0;for(const e of t)r.push(e),i=i&&!0!==e.groupNode.shared;return i?(n=s.get(r),void 0===n&&(n=new D_(e,r,this.bindingsIndexes[e].group,r),s.set(r,n))):n=new D_(e,r,this.bindingsIndexes[e].group,r),n}getBindGroupArray(e,t){const s=this.bindings[t];let r=s[e];return void 0===r&&(void 0===this.bindingsIndexes[e]&&(this.bindingsIndexes[e]={binding:0,group:Object.keys(this.bindingsIndexes).length}),s[e]=r=[]),r}getBindings(){let e=this.bindGroups;if(null===e){const t={},s=this.bindings;for(const e of Nr)for(const r in s[e]){const n=s[e][r];(t[r]||(t[r]=[])).push(...n)}e=[];for(const s in t){const r=t[s],n=this._getBindGroup(s,r);e.push(n)}this.bindGroups=e}return e}sortBindingGroups(){const e=this.getBindings();e.sort(((e,t)=>e.bindings[0].groupNode.order-t.bindings[0].groupNode.order));for(let t=0;t<e.length;t++){const s=e[t];this.bindingsIndexes[s.name].group=t,s.index=t}}setHashNode(e,t){this.hashNodes[t]=e}addNode(e){!1===this.nodes.includes(e)&&(this.nodes.push(e),this.setHashNode(e,e.getHash(this)))}addSequentialNode(e){!1===this.sequentialNodes.includes(e)&&this.sequentialNodes.push(e)}buildUpdateNodes(){for(const e of this.nodes){e.getUpdateType()!==br.NONE&&this.updateNodes.push(e.getSelf())}for(const e of this.sequentialNodes){const t=e.getUpdateBeforeType(),s=e.getUpdateAfterType();t!==br.NONE&&this.updateBeforeNodes.push(e.getSelf()),s!==br.NONE&&this.updateAfterNodes.push(e.getSelf())}}get currentNode(){return this.chaining[this.chaining.length-1]}isFilteredTexture(e){return e.magFilter===$||e.magFilter===Fe||e.magFilter===Pe||e.magFilter===M||e.minFilter===$||e.minFilter===Fe||e.minFilter===Pe||e.minFilter===M}addChain(e){this.chaining.push(e)}removeChain(e){if(this.chaining.pop()!==e)throw new Error("NodeBuilder: Invalid node chaining!")}getMethod(e){return e}getNodeFromHash(e){return this.hashNodes[e]}addFlow(e,t){return this.flowNodes[e].push(t),t}setContext(e){this.context=e}getContext(){return this.context}getSharedContext(){return this.context,this.context}setCache(e){this.cache=e}getCache(){return this.cache}getCacheFromNode(e,t=!0){const s=this.getDataFromNode(e);return void 0===s.cache&&(s.cache=new W_(t?this.getCache():null)),s.cache}isAvailable(){return!1}getVertexIndex(){console.warn("Abstract function.")}getInstanceIndex(){console.warn("Abstract function.")}getDrawIndex(){console.warn("Abstract function.")}getFrontFacing(){console.warn("Abstract function.")}getFragCoord(){console.warn("Abstract function.")}isFlipY(){return!1}increaseUsage(e){const t=this.getDataFromNode(e);return t.usageCount=void 0===t.usageCount?1:t.usageCount+1,t.usageCount}generateTexture(){console.warn("Abstract function.")}generateTextureLod(){console.warn("Abstract function.")}generateConst(n,i=null){if(null===i&&("float"===n||"int"===n||"uint"===n?i=0:"bool"===n?i=!1:"color"===n?i=new e:"vec2"===n?i=new t:"vec3"===n?i=new s:"vec4"===n&&(i=new r)),"float"===n)return MN(i);if("int"===n)return`${Math.round(i)}`;if("uint"===n)return i>=0?`${Math.round(i)}u`:"0u";if("bool"===n)return i?"true":"false";if("color"===n)return`${this.getType("vec3")}( ${MN(i.r)}, ${MN(i.g)}, ${MN(i.b)} )`;const o=this.getTypeLength(n),a=this.getComponentType(n),u=e=>this.generateConst(a,e);if(2===o)return`${this.getType(n)}( ${u(i.x)}, ${u(i.y)} )`;if(3===o)return`${this.getType(n)}( ${u(i.x)}, ${u(i.y)}, ${u(i.z)} )`;if(4===o)return`${this.getType(n)}( ${u(i.x)}, ${u(i.y)}, ${u(i.z)}, ${u(i.w)} )`;if(o>4&&i&&(i.isMatrix3||i.isMatrix4))return`${this.getType(n)}( ${i.elements.map(u).join(", ")} )`;if(o>4)return`${this.getType(n)}()`;throw new Error(`NodeBuilder: Type '${n}' not found in generate constant attempt.`)}getType(e){return"color"===e?"vec3":e}hasGeometryAttribute(e){return this.geometry&&void 0!==this.geometry.getAttribute(e)}getAttribute(e,t){const s=this.attributes;for(const t of s)if(t.name===e)return t;const r=new O_(e,t);return s.push(r),r}getPropertyName(e){return e.name}isVector(e){return/vec\d/.test(e)}isMatrix(e){return/mat\d/.test(e)}isReference(e){return"void"===e||"property"===e||"sampler"===e||"texture"===e||"cubeTexture"===e||"storageTexture"===e||"depthTexture"===e||"texture3D"===e}needsToWorkingColorSpace(){return!1}getComponentTypeFromTexture(e){const t=e.type;if(e.isDataTexture){if(t===y)return"int";if(t===f)return"uint"}return"float"}getElementType(e){return"mat2"===e?"vec2":"mat3"===e?"vec3":"mat4"===e?"vec4":this.getComponentType(e)}getComponentType(e){if("float"===(e=this.getVectorType(e))||"bool"===e||"int"===e||"uint"===e)return e;const t=/(b|i|u|)(vec|mat)([2-4])/.exec(e);return null===t?null:"b"===t[1]?"bool":"i"===t[1]?"int":"u"===t[1]?"uint":"float"}getVectorType(e){return"color"===e?"vec3":"texture"===e||"cubeTexture"===e||"storageTexture"===e||"texture3D"===e?"vec4":e}getTypeFromLength(e,t="float"){if(1===e)return t;const s=EN.get(e);return("float"===t?"":t[0])+s}getTypeFromArray(e){return wN.get(e.constructor)}getTypeFromAttribute(e){let t=e;e.isInterleavedBufferAttribute&&(t=e.data);const s=t.array,r=e.itemSize,n=e.normalized;let i;return e instanceof Ie||!0===n||(i=this.getTypeFromArray(s)),this.getTypeFromLength(r,i)}getTypeLength(e){const t=this.getVectorType(e),s=/vec([2-4])/.exec(t);return null!==s?Number(s[1]):"float"===t||"bool"===t||"int"===t||"uint"===t?1:!0===/mat2/.test(e)?4:!0===/mat3/.test(e)?9:!0===/mat4/.test(e)?16:0}getVectorFromMatrix(e){return e.replace("mat","vec")}changeComponentType(e,t){return this.getTypeFromLength(this.getTypeLength(e),t)}getIntegerType(e){const t=this.getComponentType(e);return"int"===t||"uint"===t?e:this.changeComponentType(e,"int")}addStack(){return this.stack=mm(this.stack),this.stacks.push(Tn()||this.stack),xn(this.stack),this.stack}removeStack(){const e=this.stack;return this.stack=e.parent,xn(this.stacks.pop()),e}getDataFromNode(e,t=this.shaderStage,s=null){let r=(s=null===s?e.isGlobal(this)?this.globalCache:this.cache:s).getData(e);return void 0===r&&(r={},s.setData(e,r)),void 0===r[t]&&(r[t]={}),r[t]}getNodeProperties(e,t="any"){const s=this.getDataFromNode(e,t);return s.properties||(s.properties={outputNode:null})}getBufferAttributeFromNode(e,t){const s=this.getDataFromNode(e);let r=s.bufferAttribute;if(void 0===r){const n=this.uniforms.index++;r=new O_("nodeAttribute"+n,t,e),this.bufferAttributes.push(r),s.bufferAttribute=r}return r}getStructTypeFromNode(e,t=this.shaderStage){const s=this.getDataFromNode(e,t);if(void 0===s.structType){const r=this.structs.index++;e.name=`StructType${r}`,this.structs[t].push(e),s.structType=e}return e}getUniformFromNode(e,t,s=this.shaderStage,r=null){const n=this.getDataFromNode(e,s,this.globalCache);let i=n.uniform;if(void 0===i){const o=this.uniforms.index++;i=new G_(r||"nodeUniform"+o,t,e),this.uniforms[s].push(i),n.uniform=i}return i}getVarFromNode(e,t=null,s=e.getNodeType(this),r=this.shaderStage){const n=this.getDataFromNode(e,r);let i=n.variable;if(void 0===i){const e=this.vars[r]||(this.vars[r]=[]);null===t&&(t="nodeVar"+e.length),i=new k_(t,s),e.push(i),n.variable=i}return i}getVaryingFromNode(e,t=null,s=e.getNodeType(this)){const r=this.getDataFromNode(e,"any");let n=r.varying;if(void 0===n){const e=this.varyings,i=e.length;null===t&&(t="nodeVarying"+i),n=new z_(t,s),e.push(n),r.varying=n}return n}getCodeFromNode(e,t,s=this.shaderStage){const r=this.getDataFromNode(e);let n=r.code;if(void 0===n){const e=this.codes[s]||(this.codes[s]=[]),i=e.length;n=new $_("nodeCode"+i,t),e.push(n),r.code=n}return n}addFlowCodeHierarchy(e,t){const{flowCodes:s,flowCodeBlock:r}=this.getDataFromNode(e);let n=!0,i=t;for(;i;){if(!0===r.get(i)){n=!1;break}i=this.getDataFromNode(i).parentNodeBlock}if(n)for(const e of s)this.addLineFlowCode(e)}addLineFlowCodeBlock(e,t,s){const r=this.getDataFromNode(e),n=r.flowCodes||(r.flowCodes=[]),i=r.flowCodeBlock||(r.flowCodeBlock=new WeakMap);n.push(t),i.set(s,!0)}addLineFlowCode(e,t=null){return""===e||(null!==t&&this.context.nodeBlock&&this.addLineFlowCodeBlock(t,e,this.context.nodeBlock),e=this.tab+e,/;\s*$/.test(e)||(e+=";\n"),this.flow.code+=e),this}addFlowCode(e){return this.flow.code+=e,this}addFlowTab(){return this.tab+="\t",this}removeFlowTab(){return this.tab=this.tab.slice(0,-1),this}getFlowData(e){return this.flowsData.get(e)}flowNode(e){const t=e.getNodeType(this),s=this.flowChildNode(e,t);return this.flowsData.set(e,s),s}buildFunctionNode(e){const t=new ix,s=this.currentFunctionNode;return this.currentFunctionNode=t,t.code=this.buildFunctionCode(e),this.currentFunctionNode=s,t}flowShaderNode(e){const t=e.layout,s={[Symbol.iterator](){let e=0;const t=Object.values(this);return{next:()=>({value:t[e],done:e++>=t.length})}}};for(const e of t.inputs)s[e.name]=new hm(e.type,e.name);e.layout=null;const r=e.call(s),n=this.flowStagesNode(r,t.type);return e.layout=t,n}flowStagesNode(e,t=null){const s=this.flow,r=this.vars,n=this.cache,i=this.buildStage,o=this.stack,a={code:""};this.flow=a,this.vars={},this.cache=new W_,this.stack=mm();for(const s of _r)this.setBuildStage(s),a.result=e.build(this,t);return a.vars=this.getVars(this.shaderStage),this.flow=s,this.vars=r,this.cache=n,this.stack=o,this.setBuildStage(i),a}getFunctionOperator(){return null}flowChildNode(e,t=null){const s=this.flow,r={code:""};return this.flow=r,r.result=e.build(this,t),this.flow=s,r}flowNodeFromShaderStage(e,t,s=null,r=null){const n=this.shaderStage;this.setShaderStage(e);const i=this.flowChildNode(t,s);return null!==r&&(i.code+=`${this.tab+r} = ${i.result};\n`),this.flowCode[e]=this.flowCode[e]+i.code,this.setShaderStage(n),i}getAttributesArray(){return this.attributes.concat(this.bufferAttributes)}getAttributes(){console.warn("Abstract function.")}getVaryings(){console.warn("Abstract function.")}getVar(e,t){return`${this.getType(e)} ${t}`}getVars(e){let t="";const s=this.vars[e];if(void 0!==s)for(const e of s)t+=`${this.getVar(e.type,e.name)}; `;return t}getUniforms(){console.warn("Abstract function.")}getCodes(e){const t=this.codes[e];let s="";if(void 0!==t)for(const e of t)s+=e.code+"\n";return s}getHash(){return this.vertexShader+this.fragmentShader+this.computeShader}setShaderStage(e){this.shaderStage=e}getShaderStage(){return this.shaderStage}setBuildStage(e){this.buildStage=e}getBuildStage(){return this.buildStage}buildCode(){console.warn("Abstract function.")}build(){const{object:e,material:t,renderer:s}=this;if(null!==t){let e=s.library.fromMaterial(t);null===e&&(console.error(`NodeMaterial: Material "${t.type}" is not compatible.`),e=new rh),e.build(this)}else this.addFlow("compute",e);for(const e of _r){this.setBuildStage(e),this.context.vertex&&this.context.vertex.isNode&&this.flowNodeFromShaderStage("vertex",this.context.vertex);for(const t of Nr){this.setShaderStage(t);const s=this.flowNodes[t];for(const t of s)"generate"===e?this.flowNode(t):t.build(this)}}return this.setBuildStage(null),this.setShaderStage(null),this.buildCode(),this.buildUpdateNodes(),this}getNodeUniform(e,t){if("float"===t||"int"===t||"uint"===t)return new eN(e);if("vec2"===t||"ivec2"===t||"uvec2"===t)return new tN(e);if("vec3"===t||"ivec3"===t||"uvec3"===t)return new sN(e);if("vec4"===t||"ivec4"===t||"uvec4"===t)return new rN(e);if("color"===t)return new nN(e);if("mat3"===t)return new iN(e);if("mat4"===t)return new oN(e);throw new Error(`Uniform "${t}" not declared.`)}createNodeMaterial(e="NodeMaterial"){throw new Error(`THREE.NodeBuilder: createNodeMaterial() was deprecated. Use new ${e}() instead.`)}format(e,t,s){if((t=this.getVectorType(t))===(s=this.getVectorType(s))||null===s||this.isReference(s))return e;const r=this.getTypeLength(t),n=this.getTypeLength(s);return 16===r&&9===n?`${this.getType(s)}(${e}[0].xyz, ${e}[1].xyz, ${e}[2].xyz)`:9===r&&4===n?`${this.getType(s)}(${e}[0].xy, ${e}[1].xy)`:r>4||n>4||0===n?e:r===n?`${this.getType(s)}( ${e} )`:r>n?this.format(`${e}.${"xyz".slice(0,n)}`,this.getTypeFromLength(n,this.getComponentType(t)),s):4===n&&r>1?`${this.getType(s)}( ${this.format(e,t,"vec3")}, 1.0 )`:2===r?`${this.getType(s)}( ${this.format(e,t,"vec2")}, 0.0 )`:(1===r&&n>1&&t!==this.getComponentType(s)&&(e=`${this.getType(this.getComponentType(s))}( ${e} )`),`${this.getType(s)}( ${e} )`)}getSignature(){return`// Three.js r${Le} - Node System\n`}}class UN{constructor(){this.time=0,this.deltaTime=0,this.frameId=0,this.renderId=0,this.startTime=null,this.updateMap=new WeakMap,this.updateBeforeMap=new WeakMap,this.updateAfterMap=new WeakMap,this.renderer=null,this.material=null,this.camera=null,this.object=null,this.scene=null}_getMaps(e,t){let s=e.get(t);return void 0===s&&(s={renderMap:new WeakMap,frameMap:new WeakMap},e.set(t,s)),s}updateBeforeNode(e){const t=e.getUpdateBeforeType(),s=e.updateReference(this);if(t===br.FRAME){const{frameMap:t}=this._getMaps(this.updateBeforeMap,s);t.get(s)!==this.frameId&&!1!==e.updateBefore(this)&&t.set(s,this.frameId)}else if(t===br.RENDER){const{renderMap:t}=this._getMaps(this.updateBeforeMap,s);t.get(s)!==this.renderId&&!1!==e.updateBefore(this)&&t.set(s,this.renderId)}else t===br.OBJECT&&e.updateBefore(this)}updateAfterNode(e){const t=e.getUpdateAfterType(),s=e.updateReference(this);if(t===br.FRAME){const{frameMap:t}=this._getMaps(this.updateAfterMap,s);t.get(s)!==this.frameId&&!1!==e.updateAfter(this)&&t.set(s,this.frameId)}else if(t===br.RENDER){const{renderMap:t}=this._getMaps(this.updateAfterMap,s);t.get(s)!==this.renderId&&!1!==e.updateAfter(this)&&t.set(s,this.renderId)}else t===br.OBJECT&&e.updateAfter(this)}updateNode(e){const t=e.getUpdateType(),s=e.updateReference(this);if(t===br.FRAME){const{frameMap:t}=this._getMaps(this.updateMap,s);t.get(s)!==this.frameId&&!1!==e.update(this)&&t.set(s,this.frameId)}else if(t===br.RENDER){const{renderMap:t}=this._getMaps(this.updateMap,s);t.get(s)!==this.renderId&&!1!==e.update(this)&&t.set(s,this.renderId)}else t===br.OBJECT&&e.update(this)}update(){this.frameId++,void 0===this.lastTime&&(this.lastTime=performance.now()),this.deltaTime=(performance.now()-this.lastTime)/1e3,this.lastTime=performance.now(),this.time+=this.deltaTime}}class FN{constructor(e,t,s=null,r="",n=!1){this.type=e,this.name=t,this.count=s,this.qualifier=r,this.isConst=n}}FN.isNodeFunctionInput=!0;class PN extends xT{static get type(){return"DirectionalLightNode"}constructor(e=null){super(e)}setup(e){super.setup(e);const t=e.context.lightingModel,s=this.colorNode,r=tT(this.light),n=e.context.reflectedLight;t.direct({lightDirection:r,lightColor:s,reflectedLight:n},e.stack,e)}}const IN=new i,LN=new i;let DN=null;class VN extends xT{static get type(){return"RectAreaLightNode"}constructor(e=null){super(e),this.halfHeight=ti(new s).setGroup(Zn),this.halfWidth=ti(new s).setGroup(Zn),this.updateType=br.RENDER}update(e){super.update(e);const{light:t}=this,s=e.camera.matrixWorldInverse;LN.identity(),IN.copy(t.matrixWorld),IN.premultiply(s),LN.extractRotation(IN),this.halfWidth.value.set(.5*t.width,0,0),this.halfHeight.value.set(0,.5*t.height,0),this.halfWidth.value.applyMatrix4(LN),this.halfHeight.value.applyMatrix4(LN)}setup(e){let t,s;super.setup(e),e.isAvailable("float32Filterable")?(t=_u(DN.LTC_FLOAT_1),s=_u(DN.LTC_FLOAT_2)):(t=_u(DN.LTC_HALF_1),s=_u(DN.LTC_HALF_2));const{colorNode:r,light:n}=this,i=e.context.lightingModel,o=eT(n),a=e.context.reflectedLight;i.directRectArea({lightColor:r,lightPosition:o,halfWidth:this.halfWidth,halfHeight:this.halfHeight,reflectedLight:a,ltc_1:t,ltc_2:s},e.stack,e)}static setLTC(e){DN=e}}class ON extends xT{static get type(){return"SpotLightNode"}constructor(e=null){super(e),this.coneCosNode=ti(0).setGroup(Zn),this.penumbraCosNode=ti(0).setGroup(Zn),this.cutoffDistanceNode=ti(0).setGroup(Zn),this.decayExponentNode=ti(0).setGroup(Zn)}update(e){super.update(e);const{light:t}=this;this.coneCosNode.value=Math.cos(t.angle),this.penumbraCosNode.value=Math.cos(t.angle*(1-t.penumbra)),this.cutoffDistanceNode.value=t.distance,this.decayExponentNode.value=t.decay}getSpotAttenuation(e){const{coneCosNode:t,penumbraCosNode:s}=this;return pa(t,s,e)}setup(e){super.setup(e);const t=e.context.lightingModel,{colorNode:s,cutoffDistanceNode:r,decayExponentNode:n,light:i}=this,o=eT(i).sub(el),a=o.normalize(),u=a.dot(tT(i)),l=this.getSpotAttenuation(u),d=o.length(),c=TT({lightDistance:d,cutoffDistance:r,decayExponent:n}),h=s.mul(l).mul(c),p=e.context.reflectedLight;t.direct({lightDirection:a,lightColor:h,reflectedLight:p},e.stack,e)}}class GN extends ON{static get type(){return"IESSpotLightNode"}getSpotAttenuation(e){const t=this.light.iesMap;let s=null;if(t&&!0===t.isTexture){const r=e.acos().mul(1/Math.PI);s=_u(t,En(r,0),0).r}else s=super.getSpotAttenuation(e);return s}}class kN extends xT{static get type(){return"AmbientLightNode"}constructor(e=null){super(e)}setup({context:e}){e.irradiance.addAssign(this.colorNode)}}class zN extends xT{static get type(){return"HemisphereLightNode"}constructor(t=null){super(t),this.lightPositionNode=Zx(t),this.lightDirectionNode=this.lightPositionNode.normalize(),this.groundColorNode=ti(new e).setGroup(Zn)}update(e){const{light:t}=this;super.update(e),this.lightPositionNode.object3d=t,this.groundColorNode.value.copy(t.groundColor).multiplyScalar(t.intensity)}setup(e){const{colorNode:t,groundColorNode:s,lightDirectionNode:r}=this,n=ul.dot(r).mul(.5).add(.5),i=la(s,t,n);e.context.irradiance.addAssign(i)}}class $N extends xT{static get type(){return"LightProbeNode"}constructor(e=null){super(e);const t=[];for(let e=0;e<9;e++)t.push(new s);this.lightProbe=Rl(t)}update(e){const{light:t}=this;super.update(e);for(let e=0;e<9;e++)this.lightProbe.array[e].copy(t.sh.coefficients[e]).multiplyScalar(t.intensity)}setup(e){const t=F_(ll,this.lightProbe);e.context.irradiance.addAssign(t)}}class HN{parseFunction(){console.warn("Abstract function.")}}class WN{constructor(e,t,s="",r=""){this.type=e,this.inputs=t,this.name=s,this.precision=r}getCode(){console.warn("Abstract function.")}}WN.isNodeFunction=!0;const jN=/^\s*(highp|mediump|lowp)?\s*([a-z_0-9]+)\s*([a-z_0-9]+)?\s*\(([\s\S]*?)\)/i,qN=/[a-z_0-9]+/gi,KN="#pragma main";class XN extends WN{constructor(e){const{type:t,inputs:s,name:r,precision:n,inputsCode:i,blockCode:o,headerCode:a}=(e=>{const t=(e=e.trim()).indexOf(KN),s=-1!==t?e.slice(t+12):e,r=s.match(jN);if(null!==r&&5===r.length){const n=r[4],i=[];let o=null;for(;null!==(o=qN.exec(n));)i.push(o);const a=[];let u=0;for(;u<i.length;){const e="const"===i[u][0];!0===e&&u++;let t=i[u][0];"in"===t||"out"===t||"inout"===t?u++:t="";const s=i[u++][0];let r=Number.parseInt(i[u][0]);!1===Number.isNaN(r)?u++:r=null;const n=i[u++][0];a.push(new FN(s,n,r,t,e))}const l=s.substring(r[0].length),d=void 0!==r[3]?r[3]:"";return{type:r[2],inputs:a,name:d,precision:void 0!==r[1]?r[1]:"",inputsCode:n,blockCode:l,headerCode:-1!==t?e.slice(0,t):""}}throw new Error("FunctionNode: Function is not a GLSL code.")})(e);super(t,s,r,n),this.inputsCode=i,this.blockCode=o,this.headerCode=a}getCode(e=this.name){let t;const s=this.blockCode;if(""!==s){const{type:r,inputsCode:n,headerCode:i,precision:o}=this;let a=`${r} ${e} ( ${n.trim()} )`;""!==o&&(a=`${o} ${a}`),t=i+a+s}else t="";return t}}class YN extends HN{parseFunction(e){return new XN(e)}}const QN=new WeakMap;class ZN extends Lg{constructor(e,t){super(),this.renderer=e,this.backend=t,this.nodeFrame=new UN,this.nodeBuilderCache=new Map,this.callHashCache=new Bg,this.groupsData=new Bg}updateGroup(e){const t=e.groupNode,s=t.name;if(s===Jn.name)return!0;if(s===Zn.name){const t=this.get(e),s=this.nodeFrame.renderId;return t.renderId!==s&&(t.renderId=s,!0)}if(s===Qn.name){const t=this.get(e),s=this.nodeFrame.frameId;return t.frameId!==s&&(t.frameId=s,!0)}const r=[t,e];let n=this.groupsData.get(r);return void 0===n&&this.groupsData.set(r,n={}),n.version!==t.version&&(n.version=t.version,!0)}getForRenderCacheKey(e){return e.initialCacheKey}getForRender(e){const t=this.get(e);let s=t.nodeBuilderState;if(void 0===s){const{nodeBuilderCache:r}=this,n=this.getForRenderCacheKey(e);if(s=r.get(n),void 0===s){const t=this.backend.createNodeBuilder(e.object,this.renderer);t.scene=e.scene,t.material=e.material,t.camera=e.camera,t.context.material=e.material,t.lightsNode=e.lightsNode,t.environmentNode=this.getEnvironmentNode(e.scene),t.fogNode=this.getFogNode(e.scene),t.clippingContext=e.clippingContext,t.build(),s=this._createNodeBuilderState(t),r.set(n,s)}s.usedTimes++,t.nodeBuilderState=s}return s}delete(e){if(e.isRenderObject){const t=this.get(e).nodeBuilderState;t.usedTimes--,0===t.usedTimes&&this.nodeBuilderCache.delete(this.getForRenderCacheKey(e))}return super.delete(e)}getForCompute(e){const t=this.get(e);let s=t.nodeBuilderState;if(void 0===s){const r=this.backend.createNodeBuilder(e,this.renderer);r.build(),s=this._createNodeBuilderState(r),t.nodeBuilderState=s}return s}_createNodeBuilderState(e){return new V_(e.vertexShader,e.fragmentShader,e.computeShader,e.getAttributesArray(),e.getBindings(),e.updateNodes,e.updateBeforeNodes,e.updateAfterNodes,e.monitor,e.transforms)}getEnvironmentNode(e){return e.environmentNode||this.get(e).environmentNode||null}getBackgroundNode(e){return e.backgroundNode||this.get(e).backgroundNode||null}getFogNode(e){return e.fogNode||this.get(e).fogNode||null}getCacheKey(e,t){const s=[e,t],r=this.renderer.info.calls;let n=this.callHashCache.get(s);if(void 0===n||n.callId!==r){const i=this.getEnvironmentNode(e),o=this.getFogNode(e),a=[];t&&a.push(t.getCacheKey(!0)),i&&a.push(i.getCacheKey()),o&&a.push(o.getCacheKey()),a.push(this.renderer.shadowMap.enabled?1:0),n={callId:r,cacheKey:ur(a)},this.callHashCache.set(s,n)}return n.cacheKey}updateScene(e){this.updateEnvironment(e),this.updateFog(e),this.updateBackground(e)}get isToneMappingState(){return!this.renderer.getRenderTarget()}updateBackground(e){const t=this.get(e),s=e.background;if(s){const r=0===e.backgroundBlurriness&&t.backgroundBlurriness>0||e.backgroundBlurriness>0&&0===t.backgroundBlurriness;if(t.background!==s||r){let r=null;if(!0===s.isCubeTexture||s.mapping===j||s.mapping===q||s.mapping===Me)if(e.backgroundBlurriness>0||s.mapping===Me)r=Zp(s);else{let e;e=!0===s.isCubeTexture?_l(s):_u(s),r=vh(e)}else!0===s.isTexture?r=_u(s,Ac.flipY()).setUpdateMatrix(!0):!0!==s.isColor&&console.error("WebGPUNodes: Unsupported background configuration.",s);t.backgroundNode=r,t.background=s,t.backgroundBlurriness=e.backgroundBlurriness}}else t.backgroundNode&&(delete t.backgroundNode,delete t.background)}updateFog(e){const t=this.get(e),s=e.fog;if(s){if(t.fog!==s){let e=null;if(s.isFogExp2){const t=Ml("color","color",s).setGroup(Zn),r=Ml("density","float",s).setGroup(Zn);e=_x(t,r)}else if(s.isFog){const t=Ml("color","color",s).setGroup(Zn),r=Ml("near","float",s).setGroup(Zn),n=Ml("far","float",s).setGroup(Zn);e=xx(t,r,n)}else console.error("WebGPUNodes: Unsupported fog configuration.",s);t.fogNode=e,t.fog=s}}else delete t.fogNode,delete t.fog}updateEnvironment(e){const t=this.get(e),s=e.environment;if(s){if(t.environment!==s){let e=null;!0===s.isCubeTexture?e=_l(s):!0===s.isTexture?e=_u(s):console.error("Nodes: Unsupported environment configuration.",s),t.environmentNode=e,t.environment=s}}else t.environmentNode&&(delete t.environmentNode,delete t.environment)}getNodeFrame(e=this.renderer,t=null,s=null,r=null,n=null){const i=this.nodeFrame;return i.renderer=e,i.scene=t,i.object=s,i.camera=r,i.material=n,i}getNodeFrameForRender(e){return this.getNodeFrame(e.renderer,e.scene,e.object,e.camera,e.material)}getOutputCacheKey(){const e=this.renderer;return e.toneMapping+","+e.currentColorSpace}hasOutputChange(e){return QN.get(e)!==this.getOutputCacheKey()}getOutputNode(e){const t=this.renderer,s=this.getOutputCacheKey(),r=_u(e,Ac).renderOutput(t.toneMapping,t.currentColorSpace);return QN.set(e,s),r}updateBefore(e){const t=e.getNodeBuilderState();for(const s of t.updateBeforeNodes)this.getNodeFrameForRender(e).updateBeforeNode(s)}updateAfter(e){const t=e.getNodeBuilderState();for(const s of t.updateAfterNodes)this.getNodeFrameForRender(e).updateAfterNode(s)}updateForCompute(e){const t=this.getNodeFrame(),s=this.getForCompute(e);for(const e of s.updateNodes)t.updateNode(e)}updateForRender(e){const t=this.getNodeFrameForRender(e),s=e.getNodeBuilderState();for(const e of s.updateNodes)t.updateNode(e)}needsRefresh(e){const t=this.getNodeFrameForRender(e);return e.getMonitor().needsRefresh(e,t)}dispose(){super.dispose(),this.nodeFrame=new UN,this.nodeBuilderCache=new Map}}const JN=new me;class ev{constructor(e=null){this.version=0,this.clipIntersection=null,this.cacheKey="",null===e?(this.intersectionPlanes=[],this.unionPlanes=[],this.viewNormalMatrix=new n,this.clippingGroupContexts=new WeakMap,this.shadowPass=!1):(this.viewNormalMatrix=e.viewNormalMatrix,this.clippingGroupContexts=e.clippingGroupContexts,this.shadowPass=e.shadowPass,this.viewMatrix=e.viewMatrix),this.parentVersion=null}projectPlanes(e,t,s){const r=e.length;for(let n=0;n<r;n++){JN.copy(e[n]).applyMatrix4(this.viewMatrix,this.viewNormalMatrix);const r=t[s+n],i=JN.normal;r.x=-i.x,r.y=-i.y,r.z=-i.z,r.w=JN.constant}}updateGlobal(e,t){this.shadowPass=null!==e.overrideMaterial&&e.overrideMaterial.isShadowNodeMaterial,this.viewMatrix=t.matrixWorldInverse,this.viewNormalMatrix.getNormalMatrix(this.viewMatrix)}update(e,t){let s=!1;e.version!==this.parentVersion&&(this.intersectionPlanes=Array.from(e.intersectionPlanes),this.unionPlanes=Array.from(e.unionPlanes),this.parentVersion=e.version),this.clipIntersection!==t.clipIntersection&&(this.clipIntersection=t.clipIntersection,this.clipIntersection?this.unionPlanes.length=e.unionPlanes.length:this.intersectionPlanes.length=e.intersectionPlanes.length);const n=t.clippingPlanes,i=n.length;let o,a;if(this.clipIntersection?(o=this.intersectionPlanes,a=e.intersectionPlanes.length):(o=this.unionPlanes,a=e.unionPlanes.length),o.length!==a+i){o.length=a+i;for(let e=0;e<i;e++)o[a+e]=new r;s=!0}this.projectPlanes(n,o,a),s&&(this.version++,this.cacheKey=`${this.intersectionPlanes.length}:${this.unionPlanes.length}`)}getGroupContext(e){if(this.shadowPass&&!e.clipShadows)return this;let t=this.clippingGroupContexts.get(e);return void 0===t&&(t=new ev(this),this.clippingGroupContexts.set(e,t)),t.update(this,e),t}get unionClippingCount(){return this.unionPlanes.length}}class tv{constructor(e,t){this.scene=e,this.camera=t}clone(){return Object.assign(new this.constructor,this)}}class sv{constructor(){this.lists=new Bg}get(e,t){const s=this.lists,r=[e,t];let n=s.get(r);return void 0===n&&(n=new tv(e,t),s.set(r,n)),n}dispose(){this.lists=new Bg}}class rv{constructor(){this.lightNodes=new WeakMap,this.materialNodes=new Map,this.toneMappingNodes=new Map}fromMaterial(e){if(e.isNodeMaterial)return e;let t=null;const s=this.getMaterialNodeClass(e.type);if(null!==s){t=new s;for(const s in e)t[s]=e[s]}return t}addToneMapping(e,t){this.addType(e,t,this.toneMappingNodes)}getToneMappingFunction(e){return this.toneMappingNodes.get(e)||null}getMaterialNodeClass(e){return this.materialNodes.get(e)||null}addMaterial(e,t){this.addType(e,t,this.materialNodes)}getLightNodeClass(e){return this.lightNodes.get(e)||null}addLight(e,t){this.addClass(e,t,this.lightNodes)}addType(e,t,s){if(s.has(t))console.warn(`Redefinition of node ${t}`);else{if("function"!=typeof e)throw new Error(`Node class ${e.name} is not a class.`);if("function"==typeof t||"object"==typeof t)throw new Error(`Base class ${t} is not a class.`);s.set(t,e)}}addClass(e,t,s){if(s.has(t))console.warn(`Redefinition of node ${t.name}`);else{if("function"!=typeof e)throw new Error(`Node class ${e.name} is not a class.`);if("function"!=typeof t)throw new Error(`Base class ${t.name} is not a class.`);s.set(t,e)}}}const nv=new nT;class iv extends Bg{constructor(){super()}createNode(e=[]){return(new nT).setLights(e)}getNode(e,t){if(e.isQuadMesh)return nv;const s=[e,t];let r=this.get(s);return void 0===r&&(r=this.createNode(),this.set(s,r)),r}}const ov=new z,av=new t,uv=new r,lv=new Ge,dv=new i,cv=new r;class hv{constructor(e,t={}){this.isRenderer=!0;const{logarithmicDepthBuffer:s=!1,alpha:n=!0,depth:i=!0,stencil:o=!1,antialias:a=!1,samples:u=0,getFallback:l=null}=t;this.domElement=e.getDomElement(),this.backend=e,this.samples=u||!0===a?4:0,this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.alpha=n,this.logarithmicDepthBuffer=s,this.outputColorSpace=De,this.toneMapping=d,this.toneMappingExposure=1,this.sortObjects=!0,this.depth=i,this.stencil=o,this.info=new jg,this.nodes={modelViewMatrix:null,modelNormalViewMatrix:null},this.library=new rv,this.lighting=new iv,this._getFallback=l,this._pixelRatio=1,this._width=this.domElement.width,this._height=this.domElement.height,this._viewport=new r(0,0,this._width,this._height),this._scissor=new r(0,0,this._width,this._height),this._scissorTest=!1,this._attributes=null,this._geometries=null,this._nodes=null,this._animation=null,this._bindings=null,this._objects=null,this._pipelines=null,this._bundles=null,this._renderLists=null,this._renderContexts=null,this._textures=null,this._background=null,this._quad=new xf(new rh),this._quad.material.type="Renderer_output",this._currentRenderContext=null,this._opaqueSort=null,this._transparentSort=null,this._frameBufferTarget=null;const c=!0===this.alpha?0:1;this._clearColor=new cm(0,0,0,c),this._clearDepth=1,this._clearStencil=0,this._renderTarget=null,this._activeCubeFace=0,this._activeMipmapLevel=0,this._mrt=null,this._renderObjectFunction=null,this._currentRenderObjectFunction=null,this._currentRenderBundle=null,this._handleObjectFunction=this._renderObjectDirect,this._isDeviceLost=!1,this.onDeviceLost=this._onDeviceLost,this._initialized=!1,this._initPromise=null,this._compilationPromises=null,this.transparent=!0,this.opaque=!0,this.shadowMap={enabled:!1,type:Ve},this.xr={enabled:!1},this.debug={checkShaderErrors:!0,onShaderError:null,getShaderAsync:async(e,t,s)=>{await this.compileAsync(e,t);const r=this._renderLists.get(e,t),n=this._renderContexts.get(e,t,this._renderTarget),i=e.overrideMaterial||s.material,o=this._objects.get(s,i,e,t,r.lightsNode,n,n.clippingContext),{fragmentShader:a,vertexShader:u}=o.getNodeBuilderState();return{fragmentShader:a,vertexShader:u}}}}async init(){if(this._initialized)throw new Error("Renderer: Backend has already been initialized.");return null!==this._initPromise||(this._initPromise=new Promise((async(e,t)=>{let s=this.backend;try{await s.init(this)}catch(e){if(null===this._getFallback)return void t(e);try{this.backend=s=this._getFallback(e),await s.init(this)}catch(e){return void t(e)}}this._nodes=new ZN(this,s),this._animation=new Mg(this._nodes,this.info),this._attributes=new zg(s),this._background=new I_(this,this._nodes),this._geometries=new Wg(this._attributes,this.info),this._textures=new dm(this,s,this.info),this._pipelines=new Zg(s,this._nodes),this._bindings=new Jg(s,this._nodes,this._textures,this._attributes,this._pipelines,this.info),this._objects=new Ig(this,this._nodes,this._geometries,this._pipelines,this._bindings,this.info),this._renderLists=new nm(this.lighting),this._bundles=new sv,this._renderContexts=new um,this._animation.start(),this._initialized=!0,e()}))),this._initPromise}get coordinateSystem(){return this.backend.coordinateSystem}async compileAsync(e,t,s=null){if(!0===this._isDeviceLost)return;!1===this._initialized&&await this.init();const r=this._nodes.nodeFrame,n=r.renderId,i=this._currentRenderContext,o=this._currentRenderObjectFunction,a=this._compilationPromises,u=!0===e.isScene?e:ov;null===s&&(s=e);const l=this._renderTarget,d=this._renderContexts.get(s,t,l),c=this._activeMipmapLevel,h=[];this._currentRenderContext=d,this._currentRenderObjectFunction=this.renderObject,this._handleObjectFunction=this._createObjectPipeline,this._compilationPromises=h,r.renderId++,r.update(),d.depth=this.depth,d.stencil=this.stencil,d.clippingContext||(d.clippingContext=new ev),d.clippingContext.updateGlobal(u,t),u.onBeforeRender(this,e,t,l);const p=this._renderLists.get(e,t);if(p.begin(),this._projectObject(e,t,0,p,d.clippingContext),s!==e&&s.traverseVisible((function(e){e.isLight&&e.layers.test(t.layers)&&p.pushLight(e)})),p.finish(),null!==l){this._textures.updateRenderTarget(l,c);const e=this._textures.get(l);d.textures=e.textures,d.depthTexture=e.depthTexture}else d.textures=null,d.depthTexture=null;this._nodes.updateScene(u),this._background.update(u,p,d);const g=p.opaque,m=p.transparent,f=p.transparentDoublePass,y=p.lightsNode;!0===this.opaque&&g.length>0&&this._renderObjects(g,t,u,y),!0===this.transparent&&m.length>0&&this._renderTransparents(m,f,t,u,y),r.renderId=n,this._currentRenderContext=i,this._currentRenderObjectFunction=o,this._compilationPromises=a,this._handleObjectFunction=this._renderObjectDirect,await Promise.all(h)}async renderAsync(e,t){!1===this._initialized&&await this.init();const s=this._renderScene(e,t);await this.backend.resolveTimestampAsync(s,"render")}async waitForGPU(){await this.backend.waitForGPU()}setMRT(e){return this._mrt=e,this}getMRT(){return this._mrt}_onDeviceLost(e){let t=`THREE.WebGPURenderer: ${e.api} Device Lost:\n\nMessage: ${e.message}`;e.reason&&(t+=`\nReason: ${e.reason}`),console.error(t),this._isDeviceLost=!0}_renderBundle(e,t,s){const{bundleGroup:r,camera:n,renderList:i}=e,o=this._currentRenderContext,a=this._bundles.get(r,n),u=this.backend.get(a);void 0===u.renderContexts&&(u.renderContexts=new Set);const l=r.version!==u.version,d=!1===u.renderContexts.has(o)||l;if(u.renderContexts.add(o),d){this.backend.beginBundle(o),(void 0===u.renderObjects||l)&&(u.renderObjects=[]),this._currentRenderBundle=a;const e=i.opaque;!0===this.opaque&&e.length>0&&this._renderObjects(e,n,t,s),this._currentRenderBundle=null,this.backend.finishBundle(o,a),u.version=r.version}else{const{renderObjects:e}=u;for(let t=0,s=e.length;t<s;t++){const s=e[t];this._nodes.needsRefresh(s)&&(this._nodes.updateBefore(s),this._nodes.updateForRender(s),this._bindings.updateForRender(s),this._nodes.updateAfter(s))}}this.backend.addBundle(o,a)}render(e,t){if(!1===this._initialized)return console.warn("THREE.Renderer: .render() called before the backend is initialized. Try using .renderAsync() instead."),this.renderAsync(e,t);this._renderScene(e,t)}_getFrameBufferTarget(){const{currentToneMapping:e,currentColorSpace:t}=this;if(!1===(e!==d)&&!1===(t!==Se))return null;const{width:s,height:r}=this.getDrawingBufferSize(av),{depth:n,stencil:i}=this;let o=this._frameBufferTarget;return null===o&&(o=new ge(s,r,{depthBuffer:n,stencilBuffer:i,type:ye,format:Ue,colorSpace:Se,generateMipmaps:!1,minFilter:$,magFilter:$,samples:this.samples}),o.isPostProcessingRenderTarget=!0,this._frameBufferTarget=o),o.depthBuffer=n,o.stencilBuffer=i,o.setSize(s,r),o.viewport.copy(this._viewport),o.scissor.copy(this._scissor),o.viewport.multiplyScalar(this._pixelRatio),o.scissor.multiplyScalar(this._pixelRatio),o.scissorTest=this._scissorTest,o}_renderScene(e,t,s=!0){if(!0===this._isDeviceLost)return;const r=s?this._getFrameBufferTarget():null,n=this._nodes.nodeFrame,i=n.renderId,o=this._currentRenderContext,a=this._currentRenderObjectFunction,u=!0===e.isScene?e:ov,l=this._renderTarget,d=this._activeCubeFace,c=this._activeMipmapLevel;let h;null!==r?(h=r,this.setRenderTarget(h)):h=l;const p=this._renderContexts.get(e,t,h);this._currentRenderContext=p,this._currentRenderObjectFunction=this._renderObjectFunction||this.renderObject,this.info.calls++,this.info.render.calls++,this.info.render.frameCalls++,n.renderId=this.info.calls;const g=this.coordinateSystem;t.coordinateSystem!==g&&(t.coordinateSystem=g,t.updateProjectionMatrix()),!0===e.matrixWorldAutoUpdate&&e.updateMatrixWorld(),null===t.parent&&!0===t.matrixWorldAutoUpdate&&t.updateMatrixWorld();let m=this._viewport,f=this._scissor,y=this._pixelRatio;null!==h&&(m=h.viewport,f=h.scissor,y=1),this.getDrawingBufferSize(av),uv.set(0,0,av.width,av.height);const b=void 0===m.minDepth?0:m.minDepth,x=void 0===m.maxDepth?1:m.maxDepth;p.viewportValue.copy(m).multiplyScalar(y).floor(),p.viewportValue.width>>=c,p.viewportValue.height>>=c,p.viewportValue.minDepth=b,p.viewportValue.maxDepth=x,p.viewport=!1===p.viewportValue.equals(uv),p.scissorValue.copy(f).multiplyScalar(y).floor(),p.scissor=this._scissorTest&&!1===p.scissorValue.equals(uv),p.scissorValue.width>>=c,p.scissorValue.height>>=c,p.clippingContext||(p.clippingContext=new ev),p.clippingContext.updateGlobal(u,t),u.onBeforeRender(this,e,t,h),dv.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),lv.setFromProjectionMatrix(dv,g);const T=this._renderLists.get(e,t);if(T.begin(),this._projectObject(e,t,0,T,p.clippingContext),T.finish(),!0===this.sortObjects&&T.sort(this._opaqueSort,this._transparentSort),null!==h){this._textures.updateRenderTarget(h,c);const e=this._textures.get(h);p.textures=e.textures,p.depthTexture=e.depthTexture,p.width=e.width,p.height=e.height,p.renderTarget=h,p.depth=h.depthBuffer,p.stencil=h.stencilBuffer}else p.textures=null,p.depthTexture=null,p.width=this.domElement.width,p.height=this.domElement.height,p.depth=this.depth,p.stencil=this.stencil;p.width>>=c,p.height>>=c,p.activeCubeFace=d,p.activeMipmapLevel=c,p.occlusionQueryCount=T.occlusionQueryCount,this._nodes.updateScene(u),this._background.update(u,T,p),this.backend.beginRender(p);const{bundles:_,lightsNode:N,transparentDoublePass:v,transparent:S,opaque:A}=T;if(_.length>0&&this._renderBundles(_,u,N),!0===this.opaque&&A.length>0&&this._renderObjects(A,t,u,N),!0===this.transparent&&S.length>0&&this._renderTransparents(S,v,t,u,N),this.backend.finishRender(p),n.renderId=i,this._currentRenderContext=o,this._currentRenderObjectFunction=a,null!==r){this.setRenderTarget(l,d,c);const e=this._quad;this._nodes.hasOutputChange(h.texture)&&(e.material.fragmentNode=this._nodes.getOutputNode(h.texture),e.material.needsUpdate=!0),this._renderScene(e,e.camera,!1)}return u.onAfterRender(this,e,t,h),p}getMaxAnisotropy(){return this.backend.getMaxAnisotropy()}getActiveCubeFace(){return this._activeCubeFace}getActiveMipmapLevel(){return this._activeMipmapLevel}async setAnimationLoop(e){!1===this._initialized&&await this.init(),this._animation.setAnimationLoop(e)}async getArrayBufferAsync(e){return await this.backend.getArrayBufferAsync(e)}getContext(){return this.backend.getContext()}getPixelRatio(){return this._pixelRatio}getDrawingBufferSize(e){return e.set(this._width*this._pixelRatio,this._height*this._pixelRatio).floor()}getSize(e){return e.set(this._width,this._height)}setPixelRatio(e=1){this._pixelRatio!==e&&(this._pixelRatio=e,this.setSize(this._width,this._height,!1))}setDrawingBufferSize(e,t,s){this._width=e,this._height=t,this._pixelRatio=s,this.domElement.width=Math.floor(e*s),this.domElement.height=Math.floor(t*s),this.setViewport(0,0,e,t),this._initialized&&this.backend.updateSize()}setSize(e,t,s=!0){this._width=e,this._height=t,this.domElement.width=Math.floor(e*this._pixelRatio),this.domElement.height=Math.floor(t*this._pixelRatio),!0===s&&(this.domElement.style.width=e+"px",this.domElement.style.height=t+"px"),this.setViewport(0,0,e,t),this._initialized&&this.backend.updateSize()}setOpaqueSort(e){this._opaqueSort=e}setTransparentSort(e){this._transparentSort=e}getScissor(e){const t=this._scissor;return e.x=t.x,e.y=t.y,e.width=t.width,e.height=t.height,e}setScissor(e,t,s,r){const n=this._scissor;e.isVector4?n.copy(e):n.set(e,t,s,r)}getScissorTest(){return this._scissorTest}setScissorTest(e){this._scissorTest=e,this.backend.setScissorTest(e)}getViewport(e){return e.copy(this._viewport)}setViewport(e,t,s,r,n=0,i=1){const o=this._viewport;e.isVector4?o.copy(e):o.set(e,t,s,r),o.minDepth=n,o.maxDepth=i}getClearColor(e){return e.copy(this._clearColor)}setClearColor(e,t=1){this._clearColor.set(e),this._clearColor.a=t}getClearAlpha(){return this._clearColor.a}setClearAlpha(e){this._clearColor.a=e}getClearDepth(){return this._clearDepth}setClearDepth(e){this._clearDepth=e}getClearStencil(){return this._clearStencil}setClearStencil(e){this._clearStencil=e}isOccluded(e){const t=this._currentRenderContext;return t&&this.backend.isOccluded(t,e)}clear(e=!0,t=!0,s=!0){if(!1===this._initialized)return console.warn("THREE.Renderer: .clear() called before the backend is initialized. Try using .clearAsync() instead."),this.clearAsync(e,t,s);const r=this._renderTarget||this._getFrameBufferTarget();let n=null;if(null!==r&&(this._textures.updateRenderTarget(r),n=this._textures.get(r)),this.backend.clear(e,t,s,n),null!==r&&null===this._renderTarget){const e=this._quad;this._nodes.hasOutputChange(r.texture)&&(e.material.fragmentNode=this._nodes.getOutputNode(r.texture),e.material.needsUpdate=!0),this._renderScene(e,e.camera,!1)}}clearColor(){return this.clear(!0,!1,!1)}clearDepth(){return this.clear(!1,!0,!1)}clearStencil(){return this.clear(!1,!1,!0)}async clearAsync(e=!0,t=!0,s=!0){!1===this._initialized&&await this.init(),this.clear(e,t,s)}clearColorAsync(){return this.clearAsync(!0,!1,!1)}clearDepthAsync(){return this.clearAsync(!1,!0,!1)}clearStencilAsync(){return this.clearAsync(!1,!1,!0)}get currentToneMapping(){return null!==this._renderTarget?d:this.toneMapping}get currentColorSpace(){return null!==this._renderTarget?Se:this.outputColorSpace}dispose(){this.info.dispose(),this.backend.dispose(),this._animation.dispose(),this._objects.dispose(),this._pipelines.dispose(),this._nodes.dispose(),this._bindings.dispose(),this._renderLists.dispose(),this._renderContexts.dispose(),this._textures.dispose(),this.setRenderTarget(null),this.setAnimationLoop(null)}setRenderTarget(e,t=0,s=0){this._renderTarget=e,this._activeCubeFace=t,this._activeMipmapLevel=s}getRenderTarget(){return this._renderTarget}setRenderObjectFunction(e){this._renderObjectFunction=e}getRenderObjectFunction(){return this._renderObjectFunction}compute(e){if(!0===this.isDeviceLost)return;if(!1===this._initialized)return console.warn("THREE.Renderer: .compute() called before the backend is initialized. Try using .computeAsync() instead."),this.computeAsync(e);const t=this._nodes.nodeFrame,s=t.renderId;this.info.calls++,this.info.compute.calls++,this.info.compute.frameCalls++,t.renderId=this.info.calls;const r=this.backend,n=this._pipelines,i=this._bindings,o=this._nodes,a=Array.isArray(e)?e:[e];if(void 0===a[0]||!0!==a[0].isComputeNode)throw new Error("THREE.Renderer: .compute() expects a ComputeNode.");r.beginCompute(e);for(const t of a){if(!1===n.has(t)){const e=()=>{t.removeEventListener("dispose",e),n.delete(t),i.delete(t),o.delete(t)};t.addEventListener("dispose",e);const s=t.onInitFunction;null!==s&&s.call(t,{renderer:this})}o.updateForCompute(t),i.updateForCompute(t);const s=i.getForCompute(t),a=n.getForCompute(t,s);r.compute(e,t,s,a)}r.finishCompute(e),t.renderId=s}async computeAsync(e){!1===this._initialized&&await this.init(),this.compute(e),await this.backend.resolveTimestampAsync(e,"compute")}async hasFeatureAsync(e){return!1===this._initialized&&await this.init(),this.backend.hasFeature(e)}hasFeature(e){return!1===this._initialized?(console.warn("THREE.Renderer: .hasFeature() called before the backend is initialized. Try using .hasFeatureAsync() instead."),!1):this.backend.hasFeature(e)}copyFramebufferToTexture(e,t=null){if(null!==t)if(t.isVector2)t=cv.set(t.x,t.y,e.image.width,e.image.height).floor();else{if(!t.isVector4)return void console.error("THREE.Renderer.copyFramebufferToTexture: Invalid rectangle.");t=cv.copy(t).floor()}else t=cv.set(0,0,e.image.width,e.image.height);let s,r=this._currentRenderContext;null!==r?s=r.renderTarget:(s=this._renderTarget||this._getFrameBufferTarget(),null!==s&&(this._textures.updateRenderTarget(s),r=this._textures.get(s))),this._textures.updateTexture(e,{renderTarget:s}),this.backend.copyFramebufferToTexture(e,r,t)}copyTextureToTexture(e,t,s=null,r=null,n=0){this._textures.updateTexture(e),this._textures.updateTexture(t),this.backend.copyTextureToTexture(e,t,s,r,n)}readRenderTargetPixelsAsync(e,t,s,r,n,i=0,o=0){return this.backend.copyTextureToBuffer(e.textures[i],t,s,r,n,o)}_projectObject(e,t,s,r,n){if(!1===e.visible)return;if(e.layers.test(t.layers))if(e.isGroup)s=e.renderOrder,e.isClippingGroup&&e.enabled&&(n=n.getGroupContext(e));else if(e.isLOD)!0===e.autoUpdate&&e.update(t);else if(e.isLight)r.pushLight(e);else if(e.isSprite){if(!e.frustumCulled||lv.intersectsSprite(e)){!0===this.sortObjects&&cv.setFromMatrixPosition(e.matrixWorld).applyMatrix4(dv);const{geometry:t,material:i}=e;i.visible&&r.push(e,t,i,s,cv.z,null,n)}}else if(e.isLineLoop)console.error("THREE.Renderer: Objects of type THREE.LineLoop are not supported. Please use THREE.Line or THREE.LineSegments.");else if((e.isMesh||e.isLine||e.isPoints)&&(!e.frustumCulled||lv.intersectsObject(e))){const{geometry:t,material:i}=e;if(!0===this.sortObjects&&(null===t.boundingSphere&&t.computeBoundingSphere(),cv.copy(t.boundingSphere.center).applyMatrix4(e.matrixWorld).applyMatrix4(dv)),Array.isArray(i)){const o=t.groups;for(let a=0,u=o.length;a<u;a++){const u=o[a],l=i[u.materialIndex];l&&l.visible&&r.push(e,t,l,s,cv.z,u,n)}}else i.visible&&r.push(e,t,i,s,cv.z,null,n)}if(!0===e.isBundleGroup&&void 0!==this.backend.beginBundle){const s=r;(r=this._renderLists.get(e,t)).begin(),s.pushBundle({bundleGroup:e,camera:t,renderList:r}),r.finish()}const i=e.children;for(let e=0,o=i.length;e<o;e++)this._projectObject(i[e],t,s,r,n)}_renderBundles(e,t,s){for(const r of e)this._renderBundle(r,t,s)}_renderTransparents(e,t,s,r,n){if(t.length>0){for(const{material:e}of t)e.side=x;this._renderObjects(t,s,r,n,"backSide");for(const{material:e}of t)e.side=Oe;this._renderObjects(e,s,r,n);for(const{material:e}of t)e.side=le}else this._renderObjects(e,s,r,n)}_renderObjects(e,t,s,r,n=null){for(let i=0,o=e.length;i<o;i++){const o=e[i],{object:a,geometry:u,material:l,group:d,clippingContext:c}=o;if(t.isArrayCamera){const e=t.cameras;for(let t=0,i=e.length;t<i;t++){const i=e[t];if(a.layers.test(i.layers)){const e=i.viewport,t=void 0===e.minDepth?0:e.minDepth,o=void 0===e.maxDepth?1:e.maxDepth,h=this._currentRenderContext.viewportValue;h.copy(e).multiplyScalar(this._pixelRatio).floor(),h.minDepth=t,h.maxDepth=o,this.backend.updateViewport(this._currentRenderContext),this._currentRenderObjectFunction(a,s,i,u,l,d,r,c,n)}}}else this._currentRenderObjectFunction(a,s,t,u,l,d,r,c,n)}}renderObject(e,t,s,r,n,i,o,a=null,u=null){let l,d,c;if(e.onBeforeRender(this,t,s,r,n,i),null!==t.overrideMaterial){const e=t.overrideMaterial;n.positionNode&&n.positionNode.isNode&&(l=e.positionNode,e.positionNode=n.positionNode),e.isShadowNodeMaterial&&(e.side=null===n.shadowSide?n.side:n.shadowSide,n.depthNode&&n.depthNode.isNode&&(c=e.depthNode,e.depthNode=n.depthNode),n.shadowNode&&n.shadowNode.isNode&&(d=e.fragmentNode,e.fragmentNode=n.shadowNode)),n=e}!0===n.transparent&&n.side===le&&!1===n.forceSinglePass?(n.side=x,this._handleObjectFunction(e,n,t,s,o,i,a,"backSide"),n.side=Oe,this._handleObjectFunction(e,n,t,s,o,i,a,u),n.side=le):this._handleObjectFunction(e,n,t,s,o,i,a,u),void 0!==l&&(t.overrideMaterial.positionNode=l),void 0!==c&&(t.overrideMaterial.depthNode=c),void 0!==d&&(t.overrideMaterial.fragmentNode=d),e.onAfterRender(this,t,s,r,n,i)}_renderObjectDirect(e,t,s,r,n,i,o,a){const u=this._objects.get(e,t,s,r,n,this._currentRenderContext,o,a);u.drawRange=e.geometry.drawRange,u.group=i;const l=this._nodes.needsRefresh(u);if(l&&(this._nodes.updateBefore(u),this._geometries.updateForRender(u),this._nodes.updateForRender(u),this._bindings.updateForRender(u)),this._pipelines.updateForRender(u),null!==this._currentRenderBundle){this.backend.get(this._currentRenderBundle).renderObjects.push(u),u.bundle=this._currentRenderBundle.scene}this.backend.draw(u,this.info),l&&this._nodes.updateAfter(u)}_createObjectPipeline(e,t,s,r,n,i,o){const a=this._objects.get(e,t,s,r,n,this._currentRenderContext,i,o);this._nodes.updateBefore(a),this._geometries.updateForRender(a),this._nodes.updateForRender(a),this._bindings.updateForRender(a),this._pipelines.getForRender(a,this._compilationPromises),this._nodes.updateAfter(a)}get compile(){return this.compileAsync}}class pv{constructor(e=""){this.name=e,this.visibility=0}setVisibility(e){this.visibility|=e}clone(){return Object.assign(new this.constructor,this)}}class gv extends pv{constructor(e,t=null){super(e),this.isBuffer=!0,this.bytesPerElement=Float32Array.BYTES_PER_ELEMENT,this._buffer=t}get byteLength(){return(e=this._buffer.byteLength)+(kg-e%kg)%kg;var e}get buffer(){return this._buffer}update(){return!0}}class mv extends gv{constructor(e,t=null){super(e,t),this.isUniformBuffer=!0}}let fv=0;class yv extends mv{constructor(e,t){super("UniformBuffer_"+fv++,e?e.value:null),this.nodeUniform=e,this.groupNode=t}get buffer(){return this.nodeUniform.value}}class bv extends mv{constructor(e){super(e),this.isUniformsGroup=!0,this._values=null,this.uniforms=[]}addUniform(e){return this.uniforms.push(e),this}removeUniform(e){const t=this.uniforms.indexOf(e);return-1!==t&&this.uniforms.splice(t,1),this}get values(){return null===this._values&&(this._values=Array.from(this.buffer)),this._values}get buffer(){let e=this._buffer;if(null===e){const t=this.byteLength;e=new Float32Array(new ArrayBuffer(t)),this._buffer=e}return e}get byteLength(){let e=0;for(let t=0,s=this.uniforms.length;t<s;t++){const s=this.uniforms[t],{boundary:r,itemSize:n}=s,i=e%kg;0!==i&&kg-i-r<0?e+=kg-i:i%r!=0&&(e+=i%r),s.offset=e/this.bytesPerElement,e+=n*this.bytesPerElement}return Math.ceil(e/kg)*kg}update(){let e=!1;for(const t of this.uniforms)!0===this.updateByType(t)&&(e=!0);return e}updateByType(e){return e.isNumberUniform?this.updateNumber(e):e.isVector2Uniform?this.updateVector2(e):e.isVector3Uniform?this.updateVector3(e):e.isVector4Uniform?this.updateVector4(e):e.isColorUniform?this.updateColor(e):e.isMatrix3Uniform?this.updateMatrix3(e):e.isMatrix4Uniform?this.updateMatrix4(e):void console.error("THREE.WebGPUUniformsGroup: Unsupported uniform type.",e)}updateNumber(e){let t=!1;const s=this.values,r=e.getValue(),n=e.offset;if(s[n]!==r){this.buffer[n]=s[n]=r,t=!0}return t}updateVector2(e){let t=!1;const s=this.values,r=e.getValue(),n=e.offset;if(s[n+0]!==r.x||s[n+1]!==r.y){const e=this.buffer;e[n+0]=s[n+0]=r.x,e[n+1]=s[n+1]=r.y,t=!0}return t}updateVector3(e){let t=!1;const s=this.values,r=e.getValue(),n=e.offset;if(s[n+0]!==r.x||s[n+1]!==r.y||s[n+2]!==r.z){const e=this.buffer;e[n+0]=s[n+0]=r.x,e[n+1]=s[n+1]=r.y,e[n+2]=s[n+2]=r.z,t=!0}return t}updateVector4(e){let t=!1;const s=this.values,r=e.getValue(),n=e.offset;if(s[n+0]!==r.x||s[n+1]!==r.y||s[n+2]!==r.z||s[n+4]!==r.w){const e=this.buffer;e[n+0]=s[n+0]=r.x,e[n+1]=s[n+1]=r.y,e[n+2]=s[n+2]=r.z,e[n+3]=s[n+3]=r.w,t=!0}return t}updateColor(e){let t=!1;const s=this.values,r=e.getValue(),n=e.offset;if(s[n+0]!==r.r||s[n+1]!==r.g||s[n+2]!==r.b){const e=this.buffer;e[n+0]=s[n+0]=r.r,e[n+1]=s[n+1]=r.g,e[n+2]=s[n+2]=r.b,t=!0}return t}updateMatrix3(e){let t=!1;const s=this.values,r=e.getValue().elements,n=e.offset;if(s[n+0]!==r[0]||s[n+1]!==r[1]||s[n+2]!==r[2]||s[n+4]!==r[3]||s[n+5]!==r[4]||s[n+6]!==r[5]||s[n+8]!==r[6]||s[n+9]!==r[7]||s[n+10]!==r[8]){const e=this.buffer;e[n+0]=s[n+0]=r[0],e[n+1]=s[n+1]=r[1],e[n+2]=s[n+2]=r[2],e[n+4]=s[n+4]=r[3],e[n+5]=s[n+5]=r[4],e[n+6]=s[n+6]=r[5],e[n+8]=s[n+8]=r[6],e[n+9]=s[n+9]=r[7],e[n+10]=s[n+10]=r[8],t=!0}return t}updateMatrix4(e){let t=!1;const s=this.values,r=e.getValue().elements,n=e.offset;if(!1===function(e,t,s){for(let r=0,n=t.length;r<n;r++)if(e[s+r]!==t[r])return!1;return!0}(s,r,n)){this.buffer.set(r,n),function(e,t,s){for(let r=0,n=t.length;r<n;r++)e[s+r]=t[r]}(s,r,n),t=!0}return t}}let xv=0;class Tv extends bv{constructor(e,t){super(e),this.id=xv++,this.groupNode=t,this.isNodeUniformsGroup=!0}getNodes(){const e=[];for(const t of this.uniforms){const s=t.nodeUniform.node;if(!s)throw new Error("NodeUniformsGroup: Uniform has no node.");e.push(s)}return e}}let _v=0;class Nv extends pv{constructor(e,t){super(e),this.id=_v++,this.texture=t,this.version=t?t.version:0,this.store=!1,this.generation=null,this.isSampledTexture=!0}needsBindingsUpdate(e){const{texture:t}=this;return e!==this.generation?(this.generation=e,!0):t.isVideoTexture}update(){const{texture:e,version:t}=this;return t!==e.version&&(this.version=e.version,!0)}}class vv extends Nv{constructor(e,t,s,r=null){super(e,t?t.value:null),this.textureNode=t,this.groupNode=s,this.access=r}needsBindingsUpdate(e){return this.textureNode.value!==this.texture||super.needsBindingsUpdate(e)}update(){const{textureNode:e}=this;return this.texture!==e.value?(this.texture=e.value,!0):super.update()}}class Sv extends vv{constructor(e,t,s,r){super(e,t,s,r),this.isSampledCubeTexture=!0}}class Av extends vv{constructor(e,t,s,r){super(e,t,s,r),this.isSampledTexture3D=!0}}const Rv={atan2:"atan",textureDimensions:"textureSize",equals:"equal"},Cv={low:"lowp",medium:"mediump",high:"highp"},Ev={swizzleAssign:!0,storageBuffer:!1},wv="\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\nprecision highp sampler3D;\nprecision highp samplerCube;\nprecision highp sampler2DArray;\n\nprecision highp usampler2D;\nprecision highp usampler3D;\nprecision highp usamplerCube;\nprecision highp usampler2DArray;\n\nprecision highp isampler2D;\nprecision highp isampler3D;\nprecision highp isamplerCube;\nprecision highp isampler2DArray;\n\nprecision lowp sampler2DShadow;\n";class Mv extends BN{constructor(e,t){super(e,t,new YN),this.uniformGroups={},this.transforms=[],this.extensions={},this.builtins={vertex:[],fragment:[],compute:[]},this.useComparisonMethod=!0}needsColorSpaceToLinearSRGB(e){return!0===e.isVideoTexture&&e.colorSpace!==m}getMethod(e){return Rv[e]||e}getOutputStructName(){return""}buildFunctionCode(e){const t=e.layout,s=this.flowShaderNode(e),r=[];for(const e of t.inputs)r.push(this.getType(e.type)+" "+e.name);return`${this.getType(t.type)} ${t.name}( ${r.join(", ")} ) {\n\n\t${s.vars}\n\n${s.code}\n\treturn ${s.result};\n\n}`}setupPBO(e){const t=e.value;if(void 0===t.pbo){const e=t.array,s=t.count*t.itemSize,{itemSize:r}=t,n=t.array.constructor.name.toLowerCase().includes("int");let i=n?ze:$e;2===r?i=n?He:Ce:3===r?i=n?We:je:4===r&&(i=n?qe:Ue);const o={Float32Array:E,Uint8Array:pe,Uint16Array:Ke,Uint32Array:f,Int8Array:Xe,Int16Array:Ye,Int32Array:y,Uint8ClampedArray:pe},a=Math.pow(2,Math.ceil(Math.log2(Math.sqrt(s/r))));let u=Math.ceil(s/r/a);a*u*r<s&&u++;const l=a*u*r,d=new e.constructor(l);d.set(e,0),t.array=d;const c=new ke(t.array,a,u,i,o[t.array.constructor.name]||E);c.needsUpdate=!0,c.isPBOTexture=!0;const h=new Tu(c,null,null);h.setPrecision("high"),t.pboNode=h,t.pbo=h.value,this.getUniformFromNode(t.pboNode,"texture",this.shaderStage,this.context.label)}}getPropertyName(e,t=this.shaderStage){return e.isNodeUniform&&!0!==e.node.isTextureNode&&!0!==e.node.isBufferNode?t.charAt(0)+"_"+e.name:super.getPropertyName(e,t)}generatePBO(e){const{node:t,indexNode:s}=e,r=t.value;if(this.renderer.backend.has(r)){this.renderer.backend.get(r).pbo=r.pbo}const n=this.getUniformFromNode(r.pboNode,"texture",this.shaderStage,this.context.label),i=this.getPropertyName(n);this.increaseUsage(s);const o=s.build(this,"uint"),a=this.getDataFromNode(e);let u=a.propertyName;if(void 0===u){const s=this.getVarFromNode(e);u=this.getPropertyName(s);const n=this.getDataFromNode(t);let l=n.propertySizeName;void 0===l&&(l=u+"Size",this.getVarFromNode(t,l,"uint"),this.addLineFlowCode(`${l} = uint( textureSize( ${i}, 0 ).x )`,e),n.propertySizeName=l);const{itemSize:d}=r,c="."+vr.join("").slice(0,d),h=`ivec2(${o} % ${l}, ${o} / ${l})`,p=this.generateTextureLoad(null,i,h,null,"0");let g="vec4";r.pbo.type===f?g="uvec4":r.pbo.type===y&&(g="ivec4"),this.addLineFlowCode(`${u} = ${g}(${p})${c}`,e),a.propertyName=u}return u}generateTextureLoad(e,t,s,r,n="0"){return r?`texelFetch( ${t}, ivec3( ${s}, ${r} ), ${n} )`:`texelFetch( ${t}, ${s}, ${n} )`}generateTexture(e,t,s,r){return e.isDepthTexture?`texture( ${t}, ${s} ).x`:(r&&(s=`vec3( ${s}, ${r} )`),`texture( ${t}, ${s} )`)}generateTextureLevel(e,t,s,r){return`textureLod( ${t}, ${s}, ${r} )`}generateTextureBias(e,t,s,r){return`texture( ${t}, ${s}, ${r} )`}generateTextureGrad(e,t,s,r){return`textureGrad( ${t}, ${s}, ${r[0]}, ${r[1]} )`}generateTextureCompare(e,t,s,r,n,i=this.shaderStage){if("fragment"===i)return`texture( ${t}, vec3( ${s}, ${r} ) )`;console.error(`WebGPURenderer: THREE.DepthTexture.compareFunction() does not support ${i} shader.`)}getVars(e){const t=[],s=this.vars[e];if(void 0!==s)for(const e of s)t.push(`${this.getVar(e.type,e.name)};`);return t.join("\n\t")}getUniforms(e){const t=this.uniforms[e],s=[],r={};for(const n of t){let t=null,i=!1;if("texture"===n.type){const e=n.node.value;let s="";!0===e.isDataTexture&&(e.type===f?s="u":e.type===y&&(s="i")),t=e.compareFunction?`sampler2DShadow ${n.name};`:!0===e.isDataArrayTexture||!0===e.isCompressedArrayTexture?`${s}sampler2DArray ${n.name};`:`${s}sampler2D ${n.name};`}else if("cubeTexture"===n.type)t=`samplerCube ${n.name};`;else if("texture3D"===n.type)t=`sampler3D ${n.name};`;else if("buffer"===n.type){const e=n.node,s=this.getType(e.bufferType),r=e.bufferCount,i=r>0?r:"";t=`${e.name} {\n\t${s} ${n.name}[${i}];\n};\n`}else{t=`${this.getVectorType(n.type)} ${this.getPropertyName(n,e)};`,i=!0}const o=n.node.precision;if(null!==o&&(t=Cv[o]+" "+t),i){t="\t"+t;const e=n.groupNode.name;(r[e]||(r[e]=[])).push(t)}else t="uniform "+t,s.push(t)}let n="";for(const t in r){const s=r[t];n+=this._getGLSLUniformStruct(e+"_"+t,s.join("\n"))+"\n"}return n+=s.join("\n"),n}getTypeFromAttribute(e){let t=super.getTypeFromAttribute(e);if(/^[iu]/.test(t)&&e.gpuType!==y){let s=e;e.isInterleavedBufferAttribute&&(s=e.data);const r=s.array;!1==(r instanceof Uint32Array||r instanceof Int32Array)&&(t=t.slice(1))}return t}getAttributes(e){let t="";if("vertex"===e||"compute"===e){const e=this.getAttributesArray();let s=0;for(const r of e)t+=`layout( location = ${s++} ) in ${r.type} ${r.name};\n`}return t}getStructMembers(e){const t=[],s=e.getMemberTypes();for(let e=0;e<s.length;e++){const r=s[e];t.push(`layout( location = ${e} ) out ${r} m${e};`)}return t.join("\n")}getStructs(e){const t=[],s=this.structs[e];if(0===s.length)return"layout( location = 0 ) out vec4 fragColor;\n";for(let e=0,r=s.length;e<r;e++){const r=s[e];let n="\n";n+=this.getStructMembers(r),n+="\n",t.push(n)}return t.join("\n\n")}getVaryings(e){let t="";const s=this.varyings;if("vertex"===e||"compute"===e)for(const r of s){"compute"===e&&(r.needsInterpolation=!0);const s=r.type;t+=`${s.includes("int")||s.includes("uv")||s.includes("iv")?"flat ":""}${r.needsInterpolation?"out":"/*out*/"} ${s} ${r.name};\n`}else if("fragment"===e)for(const e of s)if(e.needsInterpolation){const s=e.type;t+=`${s.includes("int")||s.includes("uv")||s.includes("iv")?"flat ":""}in ${s} ${e.name};\n`}for(const s of this.builtins[e])t+=`${s};\n`;return t}getVertexIndex(){return"uint( gl_VertexID )"}getInstanceIndex(){return"uint( gl_InstanceID )"}getInvocationLocalIndex(){return`uint( gl_InstanceID ) % ${this.object.workgroupSize.reduce(((e,t)=>e*t),1)}u`}getDrawIndex(){return this.renderer.backend.extensions.has("WEBGL_multi_draw")?"uint( gl_DrawID )":null}getFrontFacing(){return"gl_FrontFacing"}getFragCoord(){return"gl_FragCoord.xy"}getFragDepth(){return"gl_FragDepth"}enableExtension(e,t,s=this.shaderStage){const r=this.extensions[s]||(this.extensions[s]=new Map);!1===r.has(e)&&r.set(e,{name:e,behavior:t})}getExtensions(e){const t=[];if("vertex"===e){const t=this.renderer.backend.extensions;this.object.isBatchedMesh&&t.has("WEBGL_multi_draw")&&this.enableExtension("GL_ANGLE_multi_draw","require",e)}const s=this.extensions[e];if(void 0!==s)for(const{name:e,behavior:r}of s.values())t.push(`#extension ${e} : ${r}`);return t.join("\n")}getClipDistance(){return"gl_ClipDistance"}isAvailable(e){let t=Ev[e];if(void 0===t){let s;switch(t=!1,e){case"float32Filterable":s="OES_texture_float_linear";break;case"clipDistance":s="WEBGL_clip_cull_distance"}if(void 0!==s){const e=this.renderer.backend.extensions;e.has(s)&&(e.get(s),t=!0)}Ev[e]=t}return t}isFlipY(){return!0}enableHardwareClipping(e){this.enableExtension("GL_ANGLE_clip_cull_distance","require"),this.builtins.vertex.push(`out float gl_ClipDistance[ ${e} ]`)}registerTransform(e,t){this.transforms.push({varyingName:e,attributeNode:t})}getTransforms(){const e=this.transforms;let t="";for(let s=0;s<e.length;s++){const r=e[s],n=this.getPropertyName(r.attributeNode);t+=`${r.varyingName} = ${n};\n\t`}return t}_getGLSLUniformStruct(e,t){return`\nlayout( std140 ) uniform ${e} {\n${t}\n};`}_getGLSLVertexCode(e){return`#version 300 es\n\n${this.getSignature()}\n\n// extensions \n${e.extensions}\n\n// precision\n${wv}\n\n// uniforms\n${e.uniforms}\n\n// varyings\n${e.varyings}\n\n// attributes\n${e.attributes}\n\n// codes\n${e.codes}\n\nvoid main() {\n\n\t// vars\n\t${e.vars}\n\n\t// transforms\n\t${e.transforms}\n\n\t// flow\n\t${e.flow}\n\n\tgl_PointSize = 1.0;\n\n}\n`}_getGLSLFragmentCode(e){return`#version 300 es\n\n${this.getSignature()}\n\n// precision\n${wv}\n\n// uniforms\n${e.uniforms}\n\n// varyings\n${e.varyings}\n\n// codes\n${e.codes}\n\n${e.structs}\n\nvoid main() {\n\n\t// vars\n\t${e.vars}\n\n\t// flow\n\t${e.flow}\n\n}\n`}buildCode(){const e=null!==this.material?{fragment:{},vertex:{}}:{compute:{}};this.sortBindingGroups();for(const t in e){let s="// code\n\n";s+=this.flowCode[t];const r=this.flowNodes[t],n=r[r.length-1];for(const e of r){const r=this.getFlowData(e),i=e.name;i&&(s.length>0&&(s+="\n"),s+=`\t// flow -> ${i}\n\t`),s+=`${r.code}\n\t`,e===n&&"compute"!==t&&(s+="// result\n\t","vertex"===t?(s+="gl_Position = ",s+=`${r.result};`):"fragment"===t&&(e.outputNode.isOutputStructNode||(s+="fragColor = ",s+=`${r.result};`)))}const i=e[t];i.extensions=this.getExtensions(t),i.uniforms=this.getUniforms(t),i.attributes=this.getAttributes(t),i.varyings=this.getVaryings(t),i.vars=this.getVars(t),i.structs=this.getStructs(t),i.codes=this.getCodes(t),i.transforms=this.getTransforms(t),i.flow=s}null!==this.material?(this.vertexShader=this._getGLSLVertexCode(e.vertex),this.fragmentShader=this._getGLSLFragmentCode(e.fragment)):this.computeShader=this._getGLSLVertexCode(e.compute)}getUniformFromNode(e,t,s,r=null){const n=super.getUniformFromNode(e,t,s,r),i=this.getDataFromNode(e,s,this.globalCache);let o=i.uniformGPU;if(void 0===o){const r=e.groupNode,a=r.name,u=this.getBindGroupArray(a,s);if("texture"===t)o=new vv(n.name,n.node,r),u.push(o);else if("cubeTexture"===t)o=new Sv(n.name,n.node,r),u.push(o);else if("texture3D"===t)o=new Av(n.name,n.node,r),u.push(o);else if("buffer"===t){e.name=`NodeBuffer_${e.id}`,n.name=`buffer${e.id}`;const t=new yv(e,r);t.name=e.name,u.push(t),o=t}else{const e=this.uniformGroups[s]||(this.uniformGroups[s]={});let i=e[a];void 0===i&&(i=new Tv(s+"_"+a,r),e[a]=i,u.push(i)),o=this.getNodeUniform(n,t),i.addUniform(o)}i.uniformGPU=o}return n}}let Bv=null,Uv=null,Fv=null;class Pv{constructor(e={}){this.parameters=Object.assign({},e),this.data=new WeakMap,this.renderer=null,this.domElement=null}async init(e){this.renderer=e}begin(){}finish(){}draw(){}createProgram(){}destroyProgram(){}createBindings(){}updateBindings(){}createRenderPipeline(){}createComputePipeline(){}destroyPipeline(){}needsRenderUpdate(){}getRenderCacheKey(){}createNodeBuilder(){}createSampler(){}createDefaultTexture(){}createTexture(){}copyTextureToBuffer(){}createAttribute(){}createIndexAttribute(){}updateAttribute(){}destroyAttribute(){}getContext(){}updateSize(){}resolveTimestampAsync(){}hasFeatureAsync(){}hasFeature(){}getInstanceCount(e){const{object:t,geometry:s}=e;return s.isInstancedBufferGeometry?s.instanceCount:t.count>1?t.count:1}getDrawingBufferSize(){return Bv=Bv||new t,this.renderer.getDrawingBufferSize(Bv)}getScissor(){return Uv=Uv||new r,this.renderer.getScissor(Uv)}setScissorTest(){}getClearColor(){const e=this.renderer;return Fv=Fv||new cm,e.getClearColor(Fv),Fv.getRGB(Fv,this.renderer.currentColorSpace),Fv}getDomElement(){let e=this.domElement;return null===e&&(e=void 0!==this.parameters.canvas?this.parameters.canvas:Qe(),"setAttribute"in e&&e.setAttribute("data-engine",`three.js r${Le} webgpu`),this.domElement=e),e}set(e,t){this.data.set(e,t)}get(e){let t=this.data.get(e);return void 0===t&&(t={},this.data.set(e,t)),t}has(e){return this.data.has(e)}delete(e){this.data.delete(e)}dispose(){}}let Iv=0;class Lv{constructor(e,t){this.buffers=[e.bufferGPU,t],this.type=e.type,this.bufferType=e.bufferType,this.pbo=e.pbo,this.byteLength=e.byteLength,this.bytesPerElement=e.BYTES_PER_ELEMENT,this.version=e.version,this.isInteger=e.isInteger,this.activeBufferIndex=0,this.baseId=e.id}get id(){return`${this.baseId}|${this.activeBufferIndex}`}get bufferGPU(){return this.buffers[this.activeBufferIndex]}get transformBuffer(){return this.buffers[1^this.activeBufferIndex]}switchBuffers(){this.activeBufferIndex^=1}}class Dv{constructor(e){this.backend=e}createAttribute(e,t){const s=this.backend,{gl:r}=s,n=e.array,i=e.usage||r.STATIC_DRAW,o=e.isInterleavedBufferAttribute?e.data:e,a=s.get(o);let u,l=a.bufferGPU;if(void 0===l&&(l=this._createBuffer(r,t,n,i),a.bufferGPU=l,a.bufferType=t,a.version=o.version),n instanceof Float32Array)u=r.FLOAT;else if(n instanceof Uint16Array)u=e.isFloat16BufferAttribute?r.HALF_FLOAT:r.UNSIGNED_SHORT;else if(n instanceof Int16Array)u=r.SHORT;else if(n instanceof Uint32Array)u=r.UNSIGNED_INT;else if(n instanceof Int32Array)u=r.INT;else if(n instanceof Int8Array)u=r.BYTE;else if(n instanceof Uint8Array)u=r.UNSIGNED_BYTE;else{if(!(n instanceof Uint8ClampedArray))throw new Error("THREE.WebGLBackend: Unsupported buffer data format: "+n);u=r.UNSIGNED_BYTE}let d={bufferGPU:l,bufferType:t,type:u,byteLength:n.byteLength,bytesPerElement:n.BYTES_PER_ELEMENT,version:e.version,pbo:e.pbo,isInteger:u===r.INT||u===r.UNSIGNED_INT||e.gpuType===y,id:Iv++};if(e.isStorageBufferAttribute||e.isStorageInstancedBufferAttribute){const e=this._createBuffer(r,t,n,i);d=new Lv(d,e)}s.set(e,d)}updateAttribute(e){const t=this.backend,{gl:s}=t,r=e.array,n=e.isInterleavedBufferAttribute?e.data:e,i=t.get(n),o=i.bufferType,a=e.isInterleavedBufferAttribute?e.data.updateRanges:e.updateRanges;if(s.bindBuffer(o,i.bufferGPU),0===a.length)s.bufferSubData(o,0,r);else{for(let e=0,t=a.length;e<t;e++){const t=a[e];s.bufferSubData(o,t.start*r.BYTES_PER_ELEMENT,r,t.start,t.count)}n.clearUpdateRanges()}s.bindBuffer(o,null),i.version=n.version}destroyAttribute(e){const t=this.backend,{gl:s}=t;e.isInterleavedBufferAttribute&&t.delete(e.data);const r=t.get(e);s.deleteBuffer(r.bufferGPU),t.delete(e)}async getArrayBufferAsync(e){const t=this.backend,{gl:s}=t,r=e.isInterleavedBufferAttribute?e.data:e,{bufferGPU:n}=t.get(r),i=e.array,o=i.byteLength;s.bindBuffer(s.COPY_READ_BUFFER,n);const a=s.createBuffer();s.bindBuffer(s.COPY_WRITE_BUFFER,a),s.bufferData(s.COPY_WRITE_BUFFER,o,s.STREAM_READ),s.copyBufferSubData(s.COPY_READ_BUFFER,s.COPY_WRITE_BUFFER,0,0,o),await t.utils._clientWaitAsync();const u=new e.array.constructor(i.length);return s.bindBuffer(s.COPY_WRITE_BUFFER,a),s.getBufferSubData(s.COPY_WRITE_BUFFER,0,u),s.deleteBuffer(a),s.bindBuffer(s.COPY_READ_BUFFER,null),s.bindBuffer(s.COPY_WRITE_BUFFER,null),u.buffer}_createBuffer(e,t,s,r){const n=e.createBuffer();return e.bindBuffer(t,n),e.bufferData(t,s,r),e.bindBuffer(t,null),n}}let Vv,Ov,Gv=!1;class kv{constructor(e){this.backend=e,this.gl=this.backend.gl,this.enabled={},this.currentFlipSided=null,this.currentCullFace=null,this.currentProgram=null,this.currentBlendingEnabled=!1,this.currentBlending=null,this.currentBlendSrc=null,this.currentBlendDst=null,this.currentBlendSrcAlpha=null,this.currentBlendDstAlpha=null,this.currentPremultipledAlpha=null,this.currentPolygonOffsetFactor=null,this.currentPolygonOffsetUnits=null,this.currentColorMask=null,this.currentDepthFunc=null,this.currentDepthMask=null,this.currentStencilFunc=null,this.currentStencilRef=null,this.currentStencilFuncMask=null,this.currentStencilFail=null,this.currentStencilZFail=null,this.currentStencilZPass=null,this.currentStencilMask=null,this.currentLineWidth=null,this.currentClippingPlanes=0,this.currentBoundFramebuffers={},this.currentDrawbuffers=new WeakMap,this.maxTextures=this.gl.getParameter(this.gl.MAX_TEXTURE_IMAGE_UNITS),this.currentTextureSlot=null,this.currentBoundTextures={},this.currentBoundBufferBases={},!1===Gv&&(this._init(this.gl),Gv=!0)}_init(e){Vv={[Ze]:e.FUNC_ADD,[Je]:e.FUNC_SUBTRACT,[et]:e.FUNC_REVERSE_SUBTRACT},Ov={[tt]:e.ZERO,[st]:e.ONE,[rt]:e.SRC_COLOR,[nt]:e.SRC_ALPHA,[it]:e.SRC_ALPHA_SATURATE,[ot]:e.DST_COLOR,[at]:e.DST_ALPHA,[ut]:e.ONE_MINUS_SRC_COLOR,[lt]:e.ONE_MINUS_SRC_ALPHA,[dt]:e.ONE_MINUS_DST_COLOR,[ct]:e.ONE_MINUS_DST_ALPHA}}enable(e){const{enabled:t}=this;!0!==t[e]&&(this.gl.enable(e),t[e]=!0)}disable(e){const{enabled:t}=this;!1!==t[e]&&(this.gl.disable(e),t[e]=!1)}setFlipSided(e){if(this.currentFlipSided!==e){const{gl:t}=this;e?t.frontFace(t.CW):t.frontFace(t.CCW),this.currentFlipSided=e}}setCullFace(e){const{gl:t}=this;e!==ht?(this.enable(t.CULL_FACE),e!==this.currentCullFace&&(e===pt?t.cullFace(t.BACK):e===gt?t.cullFace(t.FRONT):t.cullFace(t.FRONT_AND_BACK))):this.disable(t.CULL_FACE),this.currentCullFace=e}setLineWidth(e){const{currentLineWidth:t,gl:s}=this;e!==t&&(s.lineWidth(e),this.currentLineWidth=e)}setBlending(e,t,s,r,n,i,o,a){const{gl:u}=this;if(e!==G){if(!1===this.currentBlendingEnabled&&(this.enable(u.BLEND),this.currentBlendingEnabled=!0),e===mt)n=n||t,i=i||s,o=o||r,t===this.currentBlendEquation&&n===this.currentBlendEquationAlpha||(u.blendEquationSeparate(Vv[t],Vv[n]),this.currentBlendEquation=t,this.currentBlendEquationAlpha=n),s===this.currentBlendSrc&&r===this.currentBlendDst&&i===this.currentBlendSrcAlpha&&o===this.currentBlendDstAlpha||(u.blendFuncSeparate(Ov[s],Ov[r],Ov[i],Ov[o]),this.currentBlendSrc=s,this.currentBlendDst=r,this.currentBlendSrcAlpha=i,this.currentBlendDstAlpha=o),this.currentBlending=e,this.currentPremultipledAlpha=!1;else if(e!==this.currentBlending||a!==this.currentPremultipledAlpha){if(this.currentBlendEquation===Ze&&this.currentBlendEquationAlpha===Ze||(u.blendEquation(u.FUNC_ADD),this.currentBlendEquation=Ze,this.currentBlendEquationAlpha=Ze),a)switch(e){case F:u.blendFuncSeparate(u.ONE,u.ONE_MINUS_SRC_ALPHA,u.ONE,u.ONE_MINUS_SRC_ALPHA);break;case bt:u.blendFunc(u.ONE,u.ONE);break;case yt:u.blendFuncSeparate(u.ZERO,u.ONE_MINUS_SRC_COLOR,u.ZERO,u.ONE);break;case ft:u.blendFuncSeparate(u.ZERO,u.SRC_COLOR,u.ZERO,u.SRC_ALPHA);break;default:console.error("THREE.WebGLState: Invalid blending: ",e)}else switch(e){case F:u.blendFuncSeparate(u.SRC_ALPHA,u.ONE_MINUS_SRC_ALPHA,u.ONE,u.ONE_MINUS_SRC_ALPHA);break;case bt:u.blendFunc(u.SRC_ALPHA,u.ONE);break;case yt:u.blendFuncSeparate(u.ZERO,u.ONE_MINUS_SRC_COLOR,u.ZERO,u.ONE);break;case ft:u.blendFunc(u.ZERO,u.SRC_COLOR);break;default:console.error("THREE.WebGLState: Invalid blending: ",e)}this.currentBlendSrc=null,this.currentBlendDst=null,this.currentBlendSrcAlpha=null,this.currentBlendDstAlpha=null,this.currentBlending=e,this.currentPremultipledAlpha=a}}else!0===this.currentBlendingEnabled&&(this.disable(u.BLEND),this.currentBlendingEnabled=!1)}setColorMask(e){this.currentColorMask!==e&&(this.gl.colorMask(e,e,e,e),this.currentColorMask=e)}setDepthTest(e){const{gl:t}=this;e?this.enable(t.DEPTH_TEST):this.disable(t.DEPTH_TEST)}setDepthMask(e){this.currentDepthMask!==e&&(this.gl.depthMask(e),this.currentDepthMask=e)}setDepthFunc(e){if(this.currentDepthFunc!==e){const{gl:t}=this;switch(e){case Rt:t.depthFunc(t.NEVER);break;case At:t.depthFunc(t.ALWAYS);break;case St:t.depthFunc(t.LESS);break;case vt:t.depthFunc(t.LEQUAL);break;case Nt:t.depthFunc(t.EQUAL);break;case _t:t.depthFunc(t.GEQUAL);break;case Tt:t.depthFunc(t.GREATER);break;case xt:t.depthFunc(t.NOTEQUAL);break;default:t.depthFunc(t.LEQUAL)}this.currentDepthFunc=e}}setStencilTest(e){const{gl:t}=this;e?this.enable(t.STENCIL_TEST):this.disable(t.STENCIL_TEST)}setStencilMask(e){this.currentStencilMask!==e&&(this.gl.stencilMask(e),this.currentStencilMask=e)}setStencilFunc(e,t,s){this.currentStencilFunc===e&&this.currentStencilRef===t&&this.currentStencilFuncMask===s||(this.gl.stencilFunc(e,t,s),this.currentStencilFunc=e,this.currentStencilRef=t,this.currentStencilFuncMask=s)}setStencilOp(e,t,s){this.currentStencilFail===e&&this.currentStencilZFail===t&&this.currentStencilZPass===s||(this.gl.stencilOp(e,t,s),this.currentStencilFail=e,this.currentStencilZFail=t,this.currentStencilZPass=s)}setMaterial(e,t,s){const{gl:r}=this;e.side===le?this.disable(r.CULL_FACE):this.enable(r.CULL_FACE);let n=e.side===x;t&&(n=!n),this.setFlipSided(n),e.blending===F&&!1===e.transparent?this.setBlending(G):this.setBlending(e.blending,e.blendEquation,e.blendSrc,e.blendDst,e.blendEquationAlpha,e.blendSrcAlpha,e.blendDstAlpha,e.premultipliedAlpha),this.setDepthFunc(e.depthFunc),this.setDepthTest(e.depthTest),this.setDepthMask(e.depthWrite),this.setColorMask(e.colorWrite);const i=e.stencilWrite;if(this.setStencilTest(i),i&&(this.setStencilMask(e.stencilWriteMask),this.setStencilFunc(e.stencilFunc,e.stencilRef,e.stencilFuncMask),this.setStencilOp(e.stencilFail,e.stencilZFail,e.stencilZPass)),this.setPolygonOffset(e.polygonOffset,e.polygonOffsetFactor,e.polygonOffsetUnits),!0===e.alphaToCoverage&&this.backend.renderer.samples>1?this.enable(r.SAMPLE_ALPHA_TO_COVERAGE):this.disable(r.SAMPLE_ALPHA_TO_COVERAGE),s>0&&this.currentClippingPlanes!==s){const e=12288;for(let t=0;t<8;t++)t<s?this.enable(e+t):this.disable(e+t)}}setPolygonOffset(e,t,s){const{gl:r}=this;e?(this.enable(r.POLYGON_OFFSET_FILL),this.currentPolygonOffsetFactor===t&&this.currentPolygonOffsetUnits===s||(r.polygonOffset(t,s),this.currentPolygonOffsetFactor=t,this.currentPolygonOffsetUnits=s)):this.disable(r.POLYGON_OFFSET_FILL)}useProgram(e){return this.currentProgram!==e&&(this.gl.useProgram(e),this.currentProgram=e,!0)}bindFramebuffer(e,t){const{gl:s,currentBoundFramebuffers:r}=this;return r[e]!==t&&(s.bindFramebuffer(e,t),r[e]=t,e===s.DRAW_FRAMEBUFFER&&(r[s.FRAMEBUFFER]=t),e===s.FRAMEBUFFER&&(r[s.DRAW_FRAMEBUFFER]=t),!0)}drawBuffers(e,t){const{gl:s}=this;let r=[],n=!1;if(null!==e.textures){r=this.currentDrawbuffers.get(t),void 0===r&&(r=[],this.currentDrawbuffers.set(t,r));const i=e.textures;if(r.length!==i.length||r[0]!==s.COLOR_ATTACHMENT0){for(let e=0,t=i.length;e<t;e++)r[e]=s.COLOR_ATTACHMENT0+e;r.length=i.length,n=!0}}else r[0]!==s.BACK&&(r[0]=s.BACK,n=!0);n&&s.drawBuffers(r)}activeTexture(e){const{gl:t,currentTextureSlot:s,maxTextures:r}=this;void 0===e&&(e=t.TEXTURE0+r-1),s!==e&&(t.activeTexture(e),this.currentTextureSlot=e)}bindTexture(e,t,s){const{gl:r,currentTextureSlot:n,currentBoundTextures:i,maxTextures:o}=this;void 0===s&&(s=null===n?r.TEXTURE0+o-1:n);let a=i[s];void 0===a&&(a={type:void 0,texture:void 0},i[s]=a),a.type===e&&a.texture===t||(n!==s&&(r.activeTexture(s),this.currentTextureSlot=s),r.bindTexture(e,t),a.type=e,a.texture=t)}bindBufferBase(e,t,s){const{gl:r}=this,n=`${e}-${t}`;return this.currentBoundBufferBases[n]!==s&&(r.bindBufferBase(e,t,s),this.currentBoundBufferBases[n]=s,!0)}unbindTexture(){const{gl:e,currentTextureSlot:t,currentBoundTextures:s}=this,r=s[t];void 0!==r&&void 0!==r.type&&(e.bindTexture(r.type,null),r.type=void 0,r.texture=void 0)}}class zv{constructor(e){this.backend=e,this.gl=this.backend.gl,this.extensions=e.extensions}convert(e,t=m){const{gl:s,extensions:r}=this;let n;if(e===pe)return s.UNSIGNED_BYTE;if(e===Ct)return s.UNSIGNED_SHORT_4_4_4_4;if(e===Et)return s.UNSIGNED_SHORT_5_5_5_1;if(e===wt)return s.UNSIGNED_INT_5_9_9_9_REV;if(e===Xe)return s.BYTE;if(e===Ye)return s.SHORT;if(e===Ke)return s.UNSIGNED_SHORT;if(e===y)return s.INT;if(e===f)return s.UNSIGNED_INT;if(e===E)return s.FLOAT;if(e===ye)return s.HALF_FLOAT;if(e===Mt)return s.ALPHA;if(e===je)return s.RGB;if(e===Ue)return s.RGBA;if(e===Bt)return s.LUMINANCE;if(e===Ut)return s.LUMINANCE_ALPHA;if(e===ce)return s.DEPTH_COMPONENT;if(e===de)return s.DEPTH_STENCIL;if(e===$e)return s.RED;if(e===ze)return s.RED_INTEGER;if(e===Ce)return s.RG;if(e===He)return s.RG_INTEGER;if(e===qe)return s.RGBA_INTEGER;if(e===Ft||e===Pt||e===It||e===Lt)if(t===De){if(n=r.get("WEBGL_compressed_texture_s3tc_srgb"),null===n)return null;if(e===Ft)return n.COMPRESSED_SRGB_S3TC_DXT1_EXT;if(e===Pt)return n.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;if(e===It)return n.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;if(e===Lt)return n.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT}else{if(n=r.get("WEBGL_compressed_texture_s3tc"),null===n)return null;if(e===Ft)return n.COMPRESSED_RGB_S3TC_DXT1_EXT;if(e===Pt)return n.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(e===It)return n.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(e===Lt)return n.COMPRESSED_RGBA_S3TC_DXT5_EXT}if(e===Dt||e===Vt||e===Ot||e===Gt){if(n=r.get("WEBGL_compressed_texture_pvrtc"),null===n)return null;if(e===Dt)return n.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(e===Vt)return n.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(e===Ot)return n.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(e===Gt)return n.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}if(e===kt||e===zt||e===$t){if(n=r.get("WEBGL_compressed_texture_etc"),null===n)return null;if(e===kt||e===zt)return t===De?n.COMPRESSED_SRGB8_ETC2:n.COMPRESSED_RGB8_ETC2;if(e===$t)return t===De?n.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:n.COMPRESSED_RGBA8_ETC2_EAC}if(e===Ht||e===Wt||e===jt||e===qt||e===Kt||e===Xt||e===Yt||e===Qt||e===Zt||e===Jt||e===es||e===ts||e===ss||e===rs){if(n=r.get("WEBGL_compressed_texture_astc"),null===n)return null;if(e===Ht)return t===De?n.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR:n.COMPRESSED_RGBA_ASTC_4x4_KHR;if(e===Wt)return t===De?n.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR:n.COMPRESSED_RGBA_ASTC_5x4_KHR;if(e===jt)return t===De?n.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR:n.COMPRESSED_RGBA_ASTC_5x5_KHR;if(e===qt)return t===De?n.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR:n.COMPRESSED_RGBA_ASTC_6x5_KHR;if(e===Kt)return t===De?n.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR:n.COMPRESSED_RGBA_ASTC_6x6_KHR;if(e===Xt)return t===De?n.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR:n.COMPRESSED_RGBA_ASTC_8x5_KHR;if(e===Yt)return t===De?n.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR:n.COMPRESSED_RGBA_ASTC_8x6_KHR;if(e===Qt)return t===De?n.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR:n.COMPRESSED_RGBA_ASTC_8x8_KHR;if(e===Zt)return t===De?n.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR:n.COMPRESSED_RGBA_ASTC_10x5_KHR;if(e===Jt)return t===De?n.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR:n.COMPRESSED_RGBA_ASTC_10x6_KHR;if(e===es)return t===De?n.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR:n.COMPRESSED_RGBA_ASTC_10x8_KHR;if(e===ts)return t===De?n.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR:n.COMPRESSED_RGBA_ASTC_10x10_KHR;if(e===ss)return t===De?n.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR:n.COMPRESSED_RGBA_ASTC_12x10_KHR;if(e===rs)return t===De?n.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR:n.COMPRESSED_RGBA_ASTC_12x12_KHR}if(e===ns){if(n=r.get("EXT_texture_compression_bptc"),null===n)return null;if(e===ns)return t===De?n.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT:n.COMPRESSED_RGBA_BPTC_UNORM_EXT}if(e===is||e===os||e===as||e===us){if(n=r.get("EXT_texture_compression_rgtc"),null===n)return null;if(e===ns)return n.COMPRESSED_RED_RGTC1_EXT;if(e===os)return n.COMPRESSED_SIGNED_RED_RGTC1_EXT;if(e===as)return n.COMPRESSED_RED_GREEN_RGTC2_EXT;if(e===us)return n.COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT}return e===he?s.UNSIGNED_INT_24_8:void 0!==s[e]?s[e]:null}_clientWaitAsync(){const{gl:e}=this,t=e.fenceSync(e.SYNC_GPU_COMMANDS_COMPLETE,0);return e.flush(),new Promise(((s,r)=>{!function n(){const i=e.clientWaitSync(t,e.SYNC_FLUSH_COMMANDS_BIT,0);if(i===e.WAIT_FAILED)return e.deleteSync(t),void r();i!==e.TIMEOUT_EXPIRED?(e.deleteSync(t),s()):requestAnimationFrame(n)}()}))}}let $v,Hv,Wv,jv=!1;class qv{constructor(e){this.backend=e,this.gl=e.gl,this.extensions=e.extensions,this.defaultTextures={},!1===jv&&(this._init(this.gl),jv=!0)}_init(e){$v={[ls]:e.REPEAT,[ds]:e.CLAMP_TO_EDGE,[cs]:e.MIRRORED_REPEAT},Hv={[hs]:e.NEAREST,[ps]:e.NEAREST_MIPMAP_NEAREST,[Pe]:e.NEAREST_MIPMAP_LINEAR,[$]:e.LINEAR,[Fe]:e.LINEAR_MIPMAP_NEAREST,[M]:e.LINEAR_MIPMAP_LINEAR},Wv={[gs]:e.NEVER,[ms]:e.ALWAYS,[Ae]:e.LESS,[fs]:e.LEQUAL,[ys]:e.EQUAL,[bs]:e.GEQUAL,[xs]:e.GREATER,[Ts]:e.NOTEQUAL}}filterFallback(e){const{gl:t}=this;return e===hs||e===ps||e===Pe?t.NEAREST:t.LINEAR}getGLTextureType(e){const{gl:t}=this;let s;return s=!0===e.isCubeTexture?t.TEXTURE_CUBE_MAP:!0===e.isDataArrayTexture||!0===e.isCompressedArrayTexture?t.TEXTURE_2D_ARRAY:!0===e.isData3DTexture?t.TEXTURE_3D:t.TEXTURE_2D,s}getInternalFormat(e,t,s,r,n=!1){const{gl:i,extensions:o}=this;if(null!==e){if(void 0!==i[e])return i[e];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+e+"'")}let a=t;return t===i.RED&&(s===i.FLOAT&&(a=i.R32F),s===i.HALF_FLOAT&&(a=i.R16F),s===i.UNSIGNED_BYTE&&(a=i.R8),s===i.UNSIGNED_SHORT&&(a=i.R16),s===i.UNSIGNED_INT&&(a=i.R32UI),s===i.BYTE&&(a=i.R8I),s===i.SHORT&&(a=i.R16I),s===i.INT&&(a=i.R32I)),t===i.RED_INTEGER&&(s===i.UNSIGNED_BYTE&&(a=i.R8UI),s===i.UNSIGNED_SHORT&&(a=i.R16UI),s===i.UNSIGNED_INT&&(a=i.R32UI),s===i.BYTE&&(a=i.R8I),s===i.SHORT&&(a=i.R16I),s===i.INT&&(a=i.R32I)),t===i.RG&&(s===i.FLOAT&&(a=i.RG32F),s===i.HALF_FLOAT&&(a=i.RG16F),s===i.UNSIGNED_BYTE&&(a=i.RG8),s===i.UNSIGNED_SHORT&&(a=i.RG16),s===i.UNSIGNED_INT&&(a=i.RG32UI),s===i.BYTE&&(a=i.RG8I),s===i.SHORT&&(a=i.RG16I),s===i.INT&&(a=i.RG32I)),t===i.RG_INTEGER&&(s===i.UNSIGNED_BYTE&&(a=i.RG8UI),s===i.UNSIGNED_SHORT&&(a=i.RG16UI),s===i.UNSIGNED_INT&&(a=i.RG32UI),s===i.BYTE&&(a=i.RG8I),s===i.SHORT&&(a=i.RG16I),s===i.INT&&(a=i.RG32I)),t===i.RGB&&(s===i.FLOAT&&(a=i.RGB32F),s===i.HALF_FLOAT&&(a=i.RGB16F),s===i.UNSIGNED_BYTE&&(a=i.RGB8),s===i.UNSIGNED_SHORT&&(a=i.RGB16),s===i.UNSIGNED_INT&&(a=i.RGB32UI),s===i.BYTE&&(a=i.RGB8I),s===i.SHORT&&(a=i.RGB16I),s===i.INT&&(a=i.RGB32I),s===i.UNSIGNED_BYTE&&(a=r===De&&!1===n?i.SRGB8:i.RGB8),s===i.UNSIGNED_SHORT_5_6_5&&(a=i.RGB565),s===i.UNSIGNED_SHORT_5_5_5_1&&(a=i.RGB5_A1),s===i.UNSIGNED_SHORT_4_4_4_4&&(a=i.RGB4),s===i.UNSIGNED_INT_5_9_9_9_REV&&(a=i.RGB9_E5)),t===i.RGB_INTEGER&&(s===i.UNSIGNED_BYTE&&(a=i.RGB8UI),s===i.UNSIGNED_SHORT&&(a=i.RGB16UI),s===i.UNSIGNED_INT&&(a=i.RGB32UI),s===i.BYTE&&(a=i.RGB8I),s===i.SHORT&&(a=i.RGB16I),s===i.INT&&(a=i.RGB32I)),t===i.RGBA&&(s===i.FLOAT&&(a=i.RGBA32F),s===i.HALF_FLOAT&&(a=i.RGBA16F),s===i.UNSIGNED_BYTE&&(a=i.RGBA8),s===i.UNSIGNED_SHORT&&(a=i.RGBA16),s===i.UNSIGNED_INT&&(a=i.RGBA32UI),s===i.BYTE&&(a=i.RGBA8I),s===i.SHORT&&(a=i.RGBA16I),s===i.INT&&(a=i.RGBA32I),s===i.UNSIGNED_BYTE&&(a=r===De&&!1===n?i.SRGB8_ALPHA8:i.RGBA8),s===i.UNSIGNED_SHORT_4_4_4_4&&(a=i.RGBA4),s===i.UNSIGNED_SHORT_5_5_5_1&&(a=i.RGB5_A1)),t===i.RGBA_INTEGER&&(s===i.UNSIGNED_BYTE&&(a=i.RGBA8UI),s===i.UNSIGNED_SHORT&&(a=i.RGBA16UI),s===i.UNSIGNED_INT&&(a=i.RGBA32UI),s===i.BYTE&&(a=i.RGBA8I),s===i.SHORT&&(a=i.RGBA16I),s===i.INT&&(a=i.RGBA32I)),t===i.DEPTH_COMPONENT&&(s===i.UNSIGNED_INT&&(a=i.DEPTH24_STENCIL8),s===i.FLOAT&&(a=i.DEPTH_COMPONENT32F)),t===i.DEPTH_STENCIL&&s===i.UNSIGNED_INT_24_8&&(a=i.DEPTH24_STENCIL8),a!==i.R16F&&a!==i.R32F&&a!==i.RG16F&&a!==i.RG32F&&a!==i.RGBA16F&&a!==i.RGBA32F||o.get("EXT_color_buffer_float"),a}setTextureParameters(e,t){const{gl:s,extensions:r,backend:n}=this;s.pixelStorei(s.UNPACK_FLIP_Y_WEBGL,t.flipY),s.pixelStorei(s.UNPACK_PREMULTIPLY_ALPHA_WEBGL,t.premultiplyAlpha),s.pixelStorei(s.UNPACK_ALIGNMENT,t.unpackAlignment),s.pixelStorei(s.UNPACK_COLORSPACE_CONVERSION_WEBGL,s.NONE),s.texParameteri(e,s.TEXTURE_WRAP_S,$v[t.wrapS]),s.texParameteri(e,s.TEXTURE_WRAP_T,$v[t.wrapT]),e!==s.TEXTURE_3D&&e!==s.TEXTURE_2D_ARRAY||s.texParameteri(e,s.TEXTURE_WRAP_R,$v[t.wrapR]),s.texParameteri(e,s.TEXTURE_MAG_FILTER,Hv[t.magFilter]);const i=void 0!==t.mipmaps&&t.mipmaps.length>0,o=t.minFilter===$&&i?M:t.minFilter;if(s.texParameteri(e,s.TEXTURE_MIN_FILTER,Hv[o]),t.compareFunction&&(s.texParameteri(e,s.TEXTURE_COMPARE_MODE,s.COMPARE_REF_TO_TEXTURE),s.texParameteri(e,s.TEXTURE_COMPARE_FUNC,Wv[t.compareFunction])),!0===r.has("EXT_texture_filter_anisotropic")){if(t.magFilter===hs)return;if(t.minFilter!==Pe&&t.minFilter!==M)return;if(t.type===E&&!1===r.has("OES_texture_float_linear"))return;if(t.anisotropy>1){const i=r.get("EXT_texture_filter_anisotropic");s.texParameterf(e,i.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(t.anisotropy,n.getMaxAnisotropy()))}}}createDefaultTexture(e){const{gl:t,backend:s,defaultTextures:r}=this,n=this.getGLTextureType(e);let i=r[n];void 0===i&&(i=t.createTexture(),s.state.bindTexture(n,i),t.texParameteri(n,t.TEXTURE_MIN_FILTER,t.NEAREST),t.texParameteri(n,t.TEXTURE_MAG_FILTER,t.NEAREST),r[n]=i),s.set(e,{textureGPU:i,glTextureType:n,isDefault:!0})}createTexture(e,t){const{gl:s,backend:r}=this,{levels:n,width:i,height:o,depth:a}=t,u=r.utils.convert(e.format,e.colorSpace),l=r.utils.convert(e.type),d=this.getInternalFormat(e.internalFormat,u,l,e.colorSpace,e.isVideoTexture),c=s.createTexture(),h=this.getGLTextureType(e);r.state.bindTexture(h,c),this.setTextureParameters(h,e),e.isDataArrayTexture||e.isCompressedArrayTexture?s.texStorage3D(s.TEXTURE_2D_ARRAY,n,d,i,o,a):e.isData3DTexture?s.texStorage3D(s.TEXTURE_3D,n,d,i,o,a):e.isVideoTexture||s.texStorage2D(h,n,d,i,o),r.set(e,{textureGPU:c,glTextureType:h,glFormat:u,glType:l,glInternalFormat:d})}copyBufferToTexture(e,t){const{gl:s,backend:r}=this,{textureGPU:n,glTextureType:i,glFormat:o,glType:a}=r.get(t),{width:u,height:l}=t.source.data;s.bindBuffer(s.PIXEL_UNPACK_BUFFER,e),r.state.bindTexture(i,n),s.pixelStorei(s.UNPACK_FLIP_Y_WEBGL,!1),s.pixelStorei(s.UNPACK_PREMULTIPLY_ALPHA_WEBGL,!1),s.texSubImage2D(i,0,0,0,u,l,o,a,0),s.bindBuffer(s.PIXEL_UNPACK_BUFFER,null),r.state.unbindTexture()}updateTexture(e,t){const{gl:s}=this,{width:r,height:n}=t,{textureGPU:i,glTextureType:o,glFormat:a,glType:u,glInternalFormat:l}=this.backend.get(e);if(e.isRenderTargetTexture||void 0===i)return;const d=e=>e.isDataTexture?e.image.data:e instanceof ImageBitmap||e instanceof OffscreenCanvas||e instanceof HTMLImageElement||e instanceof HTMLCanvasElement?e:e.data;if(this.backend.state.bindTexture(o,i),this.setTextureParameters(o,e),e.isCompressedTexture){const r=e.mipmaps,n=t.image;for(let t=0;t<r.length;t++){const i=r[t];e.isCompressedArrayTexture?e.format!==s.RGBA?null!==a?s.compressedTexSubImage3D(s.TEXTURE_2D_ARRAY,t,0,0,0,i.width,i.height,n.depth,a,i.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):s.texSubImage3D(s.TEXTURE_2D_ARRAY,t,0,0,0,i.width,i.height,n.depth,a,u,i.data):null!==a?s.compressedTexSubImage2D(s.TEXTURE_2D,t,0,0,i.width,i.height,a,i.data):console.warn("Unsupported compressed texture format")}}else if(e.isCubeTexture){const e=t.images;for(let t=0;t<6;t++){const i=d(e[t]);s.texSubImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+t,0,0,0,r,n,a,u,i)}}else if(e.isDataArrayTexture){const e=t.image;s.texSubImage3D(s.TEXTURE_2D_ARRAY,0,0,0,0,e.width,e.height,e.depth,a,u,e.data)}else if(e.isData3DTexture){const e=t.image;s.texSubImage3D(s.TEXTURE_3D,0,0,0,0,e.width,e.height,e.depth,a,u,e.data)}else if(e.isVideoTexture)e.update(),s.texImage2D(o,0,l,a,u,t.image);else{const e=d(t.image);s.texSubImage2D(o,0,0,0,r,n,a,u,e)}}generateMipmaps(e){const{gl:t,backend:s}=this,{textureGPU:r,glTextureType:n}=s.get(e);s.state.bindTexture(n,r),t.generateMipmap(n)}deallocateRenderBuffers(e){const{gl:t,backend:s}=this;if(e){const r=s.get(e);if(r.renderBufferStorageSetup=void 0,r.framebuffers){for(const e in r.framebuffers)t.deleteFramebuffer(r.framebuffers[e]);delete r.framebuffers}if(r.depthRenderbuffer&&(t.deleteRenderbuffer(r.depthRenderbuffer),delete r.depthRenderbuffer),r.stencilRenderbuffer&&(t.deleteRenderbuffer(r.stencilRenderbuffer),delete r.stencilRenderbuffer),r.msaaFrameBuffer&&(t.deleteFramebuffer(r.msaaFrameBuffer),delete r.msaaFrameBuffer),r.msaaRenderbuffers){for(let e=0;e<r.msaaRenderbuffers.length;e++)t.deleteRenderbuffer(r.msaaRenderbuffers[e]);delete r.msaaRenderbuffers}}}destroyTexture(e){const{gl:t,backend:s}=this,{textureGPU:r,renderTarget:n}=s.get(e);this.deallocateRenderBuffers(n),t.deleteTexture(r),s.delete(e)}copyTextureToTexture(e,t,s=null,r=null,n=0){const{gl:i,backend:o}=this,{state:a}=this.backend,{textureGPU:u,glTextureType:l,glType:d,glFormat:c}=o.get(t);let h,p,g,m,f,y;null!==s?(h=s.max.x-s.min.x,p=s.max.y-s.min.y,g=s.min.x,m=s.min.y):(h=e.image.width,p=e.image.height,g=0,m=0),null!==r?(f=r.x,y=r.y):(f=0,y=0),a.bindTexture(l,u),i.pixelStorei(i.UNPACK_ALIGNMENT,t.unpackAlignment),i.pixelStorei(i.UNPACK_FLIP_Y_WEBGL,t.flipY),i.pixelStorei(i.UNPACK_PREMULTIPLY_ALPHA_WEBGL,t.premultiplyAlpha),i.pixelStorei(i.UNPACK_ALIGNMENT,t.unpackAlignment);const b=i.getParameter(i.UNPACK_ROW_LENGTH),x=i.getParameter(i.UNPACK_IMAGE_HEIGHT),T=i.getParameter(i.UNPACK_SKIP_PIXELS),_=i.getParameter(i.UNPACK_SKIP_ROWS),N=i.getParameter(i.UNPACK_SKIP_IMAGES),v=e.isCompressedTexture?e.mipmaps[n]:e.image;if(i.pixelStorei(i.UNPACK_ROW_LENGTH,v.width),i.pixelStorei(i.UNPACK_IMAGE_HEIGHT,v.height),i.pixelStorei(i.UNPACK_SKIP_PIXELS,g),i.pixelStorei(i.UNPACK_SKIP_ROWS,m),e.isRenderTargetTexture||e.isDepthTexture){const s=o.get(e),r=o.get(t),n=o.get(s.renderTarget),u=o.get(r.renderTarget),l=n.framebuffers[s.cacheKey],d=u.framebuffers[r.cacheKey];a.bindFramebuffer(i.READ_FRAMEBUFFER,l),a.bindFramebuffer(i.DRAW_FRAMEBUFFER,d);let c=i.COLOR_BUFFER_BIT;e.isDepthTexture&&(c=i.DEPTH_BUFFER_BIT),i.blitFramebuffer(g,m,h,p,f,y,h,p,c,i.NEAREST),a.bindFramebuffer(i.READ_FRAMEBUFFER,null),a.bindFramebuffer(i.DRAW_FRAMEBUFFER,null)}else e.isDataTexture?i.texSubImage2D(i.TEXTURE_2D,n,f,y,h,p,c,d,v.data):e.isCompressedTexture?i.compressedTexSubImage2D(i.TEXTURE_2D,n,f,y,v.width,v.height,c,v.data):i.texSubImage2D(i.TEXTURE_2D,n,f,y,h,p,c,d,v);i.pixelStorei(i.UNPACK_ROW_LENGTH,b),i.pixelStorei(i.UNPACK_IMAGE_HEIGHT,x),i.pixelStorei(i.UNPACK_SKIP_PIXELS,T),i.pixelStorei(i.UNPACK_SKIP_ROWS,_),i.pixelStorei(i.UNPACK_SKIP_IMAGES,N),0===n&&t.generateMipmaps&&i.generateMipmap(i.TEXTURE_2D),a.unbindTexture()}copyFramebufferToTexture(e,t,s){const{gl:r}=this,{state:n}=this.backend,{textureGPU:i}=this.backend.get(e),{x:o,y:a,z:u,w:l}=s,d=!0===e.isDepthTexture||t.renderTarget&&t.renderTarget.samples>0,c=t.renderTarget?t.renderTarget.height:this.backend.gerDrawingBufferSize().y;if(d){const s=0!==o||0!==a;let d,h;if(!0===e.isDepthTexture?(d=r.DEPTH_BUFFER_BIT,h=r.DEPTH_ATTACHMENT,t.stencil&&(d|=r.STENCIL_BUFFER_BIT)):(d=r.COLOR_BUFFER_BIT,h=r.COLOR_ATTACHMENT0),s){const e=this.backend.get(t.renderTarget),s=e.framebuffers[t.getCacheKey()],h=e.msaaFrameBuffer;n.bindFramebuffer(r.DRAW_FRAMEBUFFER,s),n.bindFramebuffer(r.READ_FRAMEBUFFER,h);const p=c-a-l;r.blitFramebuffer(o,p,o+u,p+l,o,p,o+u,p+l,d,r.NEAREST),n.bindFramebuffer(r.READ_FRAMEBUFFER,s),n.bindTexture(r.TEXTURE_2D,i),r.copyTexSubImage2D(r.TEXTURE_2D,0,0,0,o,p,u,l),n.unbindTexture()}else{const e=r.createFramebuffer();n.bindFramebuffer(r.DRAW_FRAMEBUFFER,e),r.framebufferTexture2D(r.DRAW_FRAMEBUFFER,h,r.TEXTURE_2D,i,0),r.blitFramebuffer(0,0,u,l,0,0,u,l,d,r.NEAREST),r.deleteFramebuffer(e)}}else n.bindTexture(r.TEXTURE_2D,i),r.copyTexSubImage2D(r.TEXTURE_2D,0,0,0,o,c-l-a,u,l),n.unbindTexture();e.generateMipmaps&&this.generateMipmaps(e),this.backend._setFramebuffer(t)}setupRenderBufferStorage(e,t){const{gl:s}=this,r=t.renderTarget,{samples:n,depthTexture:i,depthBuffer:o,stencilBuffer:a,width:u,height:l}=r;if(s.bindRenderbuffer(s.RENDERBUFFER,e),o&&!a){let t=s.DEPTH_COMPONENT24;n>0?(i&&i.isDepthTexture&&i.type===s.FLOAT&&(t=s.DEPTH_COMPONENT32F),s.renderbufferStorageMultisample(s.RENDERBUFFER,n,t,u,l)):s.renderbufferStorage(s.RENDERBUFFER,t,u,l),s.framebufferRenderbuffer(s.FRAMEBUFFER,s.DEPTH_ATTACHMENT,s.RENDERBUFFER,e)}else o&&a&&(n>0?s.renderbufferStorageMultisample(s.RENDERBUFFER,n,s.DEPTH24_STENCIL8,u,l):s.renderbufferStorage(s.RENDERBUFFER,s.DEPTH_STENCIL,u,l),s.framebufferRenderbuffer(s.FRAMEBUFFER,s.DEPTH_STENCIL_ATTACHMENT,s.RENDERBUFFER,e))}async copyTextureToBuffer(e,t,s,r,n,i){const{backend:o,gl:a}=this,{textureGPU:u,glFormat:l,glType:d}=this.backend.get(e),c=a.createFramebuffer();a.bindFramebuffer(a.READ_FRAMEBUFFER,c);const h=e.isCubeTexture?a.TEXTURE_CUBE_MAP_POSITIVE_X+i:a.TEXTURE_2D;a.framebufferTexture2D(a.READ_FRAMEBUFFER,a.COLOR_ATTACHMENT0,h,u,0);const p=this._getTypedArrayType(d),g=r*n*this._getBytesPerTexel(d,l),m=a.createBuffer();a.bindBuffer(a.PIXEL_PACK_BUFFER,m),a.bufferData(a.PIXEL_PACK_BUFFER,g,a.STREAM_READ),a.readPixels(t,s,r,n,l,d,0),a.bindBuffer(a.PIXEL_PACK_BUFFER,null),await o.utils._clientWaitAsync();const f=new p(g/p.BYTES_PER_ELEMENT);return a.bindBuffer(a.PIXEL_PACK_BUFFER,m),a.getBufferSubData(a.PIXEL_PACK_BUFFER,0,f),a.bindBuffer(a.PIXEL_PACK_BUFFER,null),a.deleteFramebuffer(c),f}_getTypedArrayType(e){const{gl:t}=this;if(e===t.UNSIGNED_BYTE)return Uint8Array;if(e===t.UNSIGNED_SHORT_4_4_4_4)return Uint16Array;if(e===t.UNSIGNED_SHORT_5_5_5_1)return Uint16Array;if(e===t.UNSIGNED_SHORT_5_6_5)return Uint16Array;if(e===t.UNSIGNED_SHORT)return Uint16Array;if(e===t.UNSIGNED_INT)return Uint32Array;if(e===t.HALF_FLOAT)return Uint16Array;if(e===t.FLOAT)return Float32Array;throw new Error(`Unsupported WebGL type: ${e}`)}_getBytesPerTexel(e,t){const{gl:s}=this;let r=0;return e===s.UNSIGNED_BYTE&&(r=1),e!==s.UNSIGNED_SHORT_4_4_4_4&&e!==s.UNSIGNED_SHORT_5_5_5_1&&e!==s.UNSIGNED_SHORT_5_6_5&&e!==s.UNSIGNED_SHORT&&e!==s.HALF_FLOAT||(r=2),e!==s.UNSIGNED_INT&&e!==s.FLOAT||(r=4),t===s.RGBA?4*r:t===s.RGB?3*r:t===s.ALPHA?r:void 0}}class Kv{constructor(e){this.backend=e,this.gl=this.backend.gl,this.availableExtensions=this.gl.getSupportedExtensions(),this.extensions={}}get(e){let t=this.extensions[e];return void 0===t&&(t=this.gl.getExtension(e),this.extensions[e]=t),t}has(e){return this.availableExtensions.includes(e)}}class Xv{constructor(e){this.backend=e,this.maxAnisotropy=null}getMaxAnisotropy(){if(null!==this.maxAnisotropy)return this.maxAnisotropy;const e=this.backend.gl,t=this.backend.extensions;if(!0===t.has("EXT_texture_filter_anisotropic")){const s=t.get("EXT_texture_filter_anisotropic");this.maxAnisotropy=e.getParameter(s.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else this.maxAnisotropy=0;return this.maxAnisotropy}}const Yv={WEBGL_multi_draw:"WEBGL_multi_draw",WEBGL_compressed_texture_astc:"texture-compression-astc",WEBGL_compressed_texture_etc:"texture-compression-etc2",WEBGL_compressed_texture_etc1:"texture-compression-etc1",WEBGL_compressed_texture_pvrtc:"texture-compression-pvrtc",WEBKIT_WEBGL_compressed_texture_pvrtc:"texture-compression-pvrtc",WEBGL_compressed_texture_s3tc:"texture-compression-bc",EXT_texture_compression_bptc:"texture-compression-bptc",EXT_disjoint_timer_query_webgl2:"timestamp-query"};class Qv{constructor(e){this.gl=e.gl,this.extensions=e.extensions,this.info=e.renderer.info,this.mode=null,this.index=0,this.type=null,this.object=null}render(e,t){const{gl:s,mode:r,object:n,type:i,info:o,index:a}=this;0!==a?s.drawElements(r,t,i,e):s.drawArrays(r,e,t),o.update(n,t,r,1)}renderInstances(e,t,s){const{gl:r,mode:n,type:i,index:o,object:a,info:u}=this;0!==s&&(0!==o?r.drawElementsInstanced(n,t,i,e,s):r.drawArraysInstanced(n,e,t,s),u.update(a,t,n,s))}renderMultiDraw(e,t,s){const{extensions:r,mode:n,object:i,info:o}=this;if(0===s)return;const a=r.get("WEBGL_multi_draw");if(null===a)for(let r=0;r<s;r++)this.render(e[r],t[r]);else{0!==this.index?a.multiDrawElementsWEBGL(n,t,0,this.type,e,0,s):a.multiDrawArraysWEBGL(n,e,0,t,0,s);let r=0;for(let e=0;e<s;e++)r+=t[e];o.update(i,r,n,1)}}renderMultiDrawInstances(e,t,s,r){const{extensions:n,mode:i,object:o,info:a}=this;if(0===s)return;const u=n.get("WEBGL_multi_draw");if(null===u)for(let n=0;n<s;n++)this.renderInstances(e[n],t[n],r[n]);else{0!==this.index?u.multiDrawElementsInstancedWEBGL(i,t,0,this.type,e,0,r,0,s):u.multiDrawArraysInstancedWEBGL(i,e,0,t,0,r,0,s);let n=0;for(let e=0;e<s;e++)n+=t[e]*r[e];a.update(o,n,i,1)}}}class Zv extends Pv{constructor(e={}){super(e),this.isWebGLBackend=!0}init(e){super.init(e);const t=this.parameters,s=void 0!==t.context?t.context:e.domElement.getContext("webgl2");function r(t){t.preventDefault();const s={api:"WebGL",message:t.statusMessage||"Unknown reason",reason:null,originalEvent:t};e.onDeviceLost(s)}this._onContextLost=r,e.domElement.addEventListener("webglcontextlost",r,!1),this.gl=s,this.extensions=new Kv(this),this.capabilities=new Xv(this),this.attributeUtils=new Dv(this),this.textureUtils=new qv(this),this.bufferRenderer=new Qv(this),this.state=new kv(this),this.utils=new zv(this),this.vaoCache={},this.transformFeedbackCache={},this.discard=!1,this.trackTimestamp=!0===t.trackTimestamp,this.extensions.get("EXT_color_buffer_float"),this.extensions.get("WEBGL_clip_cull_distance"),this.extensions.get("OES_texture_float_linear"),this.extensions.get("EXT_color_buffer_half_float"),this.extensions.get("WEBGL_multisampled_render_to_texture"),this.extensions.get("WEBGL_render_shared_exponent"),this.extensions.get("WEBGL_multi_draw"),this.disjoint=this.extensions.get("EXT_disjoint_timer_query_webgl2"),this.parallel=this.extensions.get("KHR_parallel_shader_compile"),this._knownBindings=new WeakSet,this._currentContext=null}get coordinateSystem(){return b}async getArrayBufferAsync(e){return await this.attributeUtils.getArrayBufferAsync(e)}async waitForGPU(){await this.utils._clientWaitAsync()}initTimestampQuery(e){if(!this.disjoint||!this.trackTimestamp)return;const t=this.get(e);if(this.queryRunning)return t.queryQueue||(t.queryQueue=[]),void t.queryQueue.push(e);t.activeQuery&&(this.gl.endQuery(this.disjoint.TIME_ELAPSED_EXT),t.activeQuery=null),t.activeQuery=this.gl.createQuery(),null!==t.activeQuery&&(this.gl.beginQuery(this.disjoint.TIME_ELAPSED_EXT,t.activeQuery),this.queryRunning=!0)}prepareTimestampBuffer(e){if(!this.disjoint||!this.trackTimestamp)return;const t=this.get(e);if(t.activeQuery&&(this.gl.endQuery(this.disjoint.TIME_ELAPSED_EXT),t.gpuQueries||(t.gpuQueries=[]),t.gpuQueries.push({query:t.activeQuery}),t.activeQuery=null,this.queryRunning=!1,t.queryQueue&&t.queryQueue.length>0)){const e=t.queryQueue.shift();this.initTimestampQuery(e)}}async resolveTimestampAsync(e,t="render"){if(!this.disjoint||!this.trackTimestamp)return;const s=this.get(e);s.gpuQueries||(s.gpuQueries=[]);for(let e=0;e<s.gpuQueries.length;e++){const r=s.gpuQueries[e],n=this.gl.getQueryParameter(r.query,this.gl.QUERY_RESULT_AVAILABLE),i=this.gl.getParameter(this.disjoint.GPU_DISJOINT_EXT);if(n&&!i){const n=this.gl.getQueryParameter(r.query,this.gl.QUERY_RESULT),i=Number(n)/1e6;this.gl.deleteQuery(r.query),s.gpuQueries.splice(e,1),e--,this.renderer.info.updateTimestamp(t,i)}}}getContext(){return this.gl}beginRender(e){const{gl:t}=this,s=this.get(e);if(this.initTimestampQuery(e),s.previousContext=this._currentContext,this._currentContext=e,this._setFramebuffer(e),this.clear(e.clearColor,e.clearDepth,e.clearStencil,e,!1),e.viewport?this.updateViewport(e):t.viewport(0,0,t.drawingBufferWidth,t.drawingBufferHeight),e.scissor){const{x:s,y:r,width:n,height:i}=e.scissorValue;t.scissor(s,e.height-i-r,n,i)}const r=e.occlusionQueryCount;r>0&&(s.currentOcclusionQueries=s.occlusionQueries,s.currentOcclusionQueryObjects=s.occlusionQueryObjects,s.lastOcclusionObject=null,s.occlusionQueries=new Array(r),s.occlusionQueryObjects=new Array(r),s.occlusionQueryIndex=0)}finishRender(e){const{gl:t,state:s}=this,r=this.get(e),n=r.previousContext,i=e.occlusionQueryCount;i>0&&(i>r.occlusionQueryIndex&&t.endQuery(t.ANY_SAMPLES_PASSED),this.resolveOccludedAsync(e));const o=e.textures;if(null!==o)for(let e=0;e<o.length;e++){const t=o[e];t.generateMipmaps&&this.generateMipmaps(t)}if(this._currentContext=n,null!==e.textures&&e.renderTarget){const r=this.get(e.renderTarget),{samples:n}=e.renderTarget;if(n>0){const n=r.framebuffers[e.getCacheKey()],i=t.COLOR_BUFFER_BIT,o=r.msaaFrameBuffer,a=e.textures;s.bindFramebuffer(t.READ_FRAMEBUFFER,o),s.bindFramebuffer(t.DRAW_FRAMEBUFFER,n);for(let s=0;s<a.length;s++)if(e.scissor){const{x:s,y:n,width:o,height:a}=e.scissorValue,u=e.height-a-n;t.blitFramebuffer(s,u,s+o,u+a,s,u,s+o,u+a,i,t.NEAREST),t.invalidateSubFramebuffer(t.READ_FRAMEBUFFER,r.invalidationArray,s,u,o,a)}else t.blitFramebuffer(0,0,e.width,e.height,0,0,e.width,e.height,i,t.NEAREST),t.invalidateFramebuffer(t.READ_FRAMEBUFFER,r.invalidationArray)}}null!==n&&(this._setFramebuffer(n),n.viewport?this.updateViewport(n):t.viewport(0,0,t.drawingBufferWidth,t.drawingBufferHeight)),this.prepareTimestampBuffer(e)}resolveOccludedAsync(e){const t=this.get(e),{currentOcclusionQueries:s,currentOcclusionQueryObjects:r}=t;if(s&&r){const e=new WeakSet,{gl:n}=this;t.currentOcclusionQueryObjects=null,t.currentOcclusionQueries=null;const i=()=>{let o=0;for(let t=0;t<s.length;t++){const i=s[t];null!==i&&(n.getQueryParameter(i,n.QUERY_RESULT_AVAILABLE)&&(n.getQueryParameter(i,n.QUERY_RESULT)>0&&e.add(r[t]),s[t]=null,n.deleteQuery(i),o++))}o<s.length?requestAnimationFrame(i):t.occluded=e};i()}}isOccluded(e,t){const s=this.get(e);return s.occluded&&s.occluded.has(t)}updateViewport(e){const t=this.gl,{x:s,y:r,width:n,height:i}=e.viewportValue;t.viewport(s,e.height-i-r,n,i)}setScissorTest(e){const t=this.gl;e?t.enable(t.SCISSOR_TEST):t.disable(t.SCISSOR_TEST)}clear(e,t,s,r=null,n=!0){const{gl:i}=this;if(null===r){const e=this.getClearColor();e.r*=e.a,e.g*=e.a,e.b*=e.a,r={textures:null,clearColorValue:e}}let o=0;if(e&&(o|=i.COLOR_BUFFER_BIT),t&&(o|=i.DEPTH_BUFFER_BIT),s&&(o|=i.STENCIL_BUFFER_BIT),0!==o){let a;if(r.clearColorValue?a=r.clearColorValue:(a=this.getClearColor(),a.r*=a.a,a.g*=a.a,a.b*=a.a),t&&this.state.setDepthMask(!0),null===r.textures)i.clearColor(a.r,a.g,a.b,a.a),i.clear(o);else{if(n&&this._setFramebuffer(r),e)for(let e=0;e<r.textures.length;e++)i.clearBufferfv(i.COLOR,e,[a.r,a.g,a.b,a.a]);t&&s?i.clearBufferfi(i.DEPTH_STENCIL,0,1,0):t?i.clearBufferfv(i.DEPTH,0,[1]):s&&i.clearBufferiv(i.STENCIL,0,[0])}}}beginCompute(e){const{state:t,gl:s}=this;t.bindFramebuffer(s.FRAMEBUFFER,null),this.initTimestampQuery(e)}compute(e,t,s,r){const{state:n,gl:i}=this;this.discard||(i.enable(i.RASTERIZER_DISCARD),this.discard=!0);const{programGPU:o,transformBuffers:a,attributes:u}=this.get(r),l=this._getVaoKey(null,u),d=this.vaoCache[l];void 0===d?this._createVao(null,u):i.bindVertexArray(d),n.useProgram(o),this._bindUniforms(s);const c=this._getTransformFeedback(a);i.bindTransformFeedback(i.TRANSFORM_FEEDBACK,c),i.beginTransformFeedback(i.POINTS),u[0].isStorageInstancedBufferAttribute?i.drawArraysInstanced(i.POINTS,0,1,t.count):i.drawArrays(i.POINTS,0,t.count),i.endTransformFeedback(),i.bindTransformFeedback(i.TRANSFORM_FEEDBACK,null);for(let e=0;e<a.length;e++){const t=a[e];t.pbo&&this.textureUtils.copyBufferToTexture(t.transformBuffer,t.pbo),t.switchBuffers()}}finishCompute(e){const t=this.gl;this.discard=!1,t.disable(t.RASTERIZER_DISCARD),this.prepareTimestampBuffer(e),this._currentContext&&this._setFramebuffer(this._currentContext)}draw(e){const{object:t,pipeline:s,material:r,context:n,hardwareClippingPlanes:i}=e,{programGPU:o}=this.get(s),{gl:a,state:u}=this,l=this.get(n),d=e.getDrawParameters();if(null===d)return;this._bindUniforms(e.getBindings());const c=t.isMesh&&t.matrixWorld.determinant()<0;u.setMaterial(r,c,i),u.useProgram(o);let h=e.staticVao;if(void 0===h){const t=this._getVaoKey(e.getIndex(),e.getAttributes());if(h=this.vaoCache[t],void 0===h){let t;({vaoGPU:h,staticVao:t}=this._createVao(e.getIndex(),e.getAttributes())),t&&(e.staticVao=h)}}a.bindVertexArray(h);const p=e.getIndex(),g=l.lastOcclusionObject;if(g!==t&&void 0!==g){if(null!==g&&!0===g.occlusionTest&&(a.endQuery(a.ANY_SAMPLES_PASSED),l.occlusionQueryIndex++),!0===t.occlusionTest){const e=a.createQuery();a.beginQuery(a.ANY_SAMPLES_PASSED,e),l.occlusionQueries[l.occlusionQueryIndex]=e,l.occlusionQueryObjects[l.occlusionQueryIndex]=t}l.lastOcclusionObject=t}const m=this.bufferRenderer;t.isPoints?m.mode=a.POINTS:t.isLineSegments?m.mode=a.LINES:t.isLine?m.mode=a.LINE_STRIP:t.isLineLoop?m.mode=a.LINE_LOOP:!0===r.wireframe?(u.setLineWidth(r.wireframeLinewidth*this.renderer.getPixelRatio()),m.mode=a.LINES):m.mode=a.TRIANGLES;const{vertexCount:f,instanceCount:y}=d;let{firstVertex:b}=d;if(m.object=t,null!==p){b*=p.array.BYTES_PER_ELEMENT;const e=this.get(p);m.index=p.count,m.type=e.type}else m.index=0;t.isBatchedMesh?null!==t._multiDrawInstances?m.renderMultiDrawInstances(t._multiDrawStarts,t._multiDrawCounts,t._multiDrawCount,t._multiDrawInstances):this.hasFeature("WEBGL_multi_draw")?m.renderMultiDraw(t._multiDrawStarts,t._multiDrawCounts,t._multiDrawCount):_s("THREE.WebGLRenderer: WEBGL_multi_draw not supported."):y>1?m.renderInstances(b,f,y):m.render(b,f),a.bindVertexArray(null)}needsRenderUpdate(){return!1}getRenderCacheKey(){return""}createDefaultTexture(e){this.textureUtils.createDefaultTexture(e)}createTexture(e,t){this.textureUtils.createTexture(e,t)}updateTexture(e,t){this.textureUtils.updateTexture(e,t)}generateMipmaps(e){this.textureUtils.generateMipmaps(e)}destroyTexture(e){this.textureUtils.destroyTexture(e)}copyTextureToBuffer(e,t,s,r,n,i){return this.textureUtils.copyTextureToBuffer(e,t,s,r,n,i)}createSampler(){}destroySampler(){}createNodeBuilder(e,t){return new Mv(e,t)}createProgram(e){const t=this.gl,{stage:s,code:r}=e,n="fragment"===s?t.createShader(t.FRAGMENT_SHADER):t.createShader(t.VERTEX_SHADER);t.shaderSource(n,r),t.compileShader(n),this.set(e,{shaderGPU:n})}destroyProgram(){console.warn("Abstract class.")}createRenderPipeline(e,t){const s=this.gl,r=e.pipeline,{fragmentProgram:n,vertexProgram:i}=r,o=s.createProgram(),a=this.get(n).shaderGPU,u=this.get(i).shaderGPU;if(s.attachShader(o,a),s.attachShader(o,u),s.linkProgram(o),this.set(r,{programGPU:o,fragmentShader:a,vertexShader:u}),null!==t&&this.parallel){const n=new Promise((t=>{const n=this.parallel,i=()=>{s.getProgramParameter(o,n.COMPLETION_STATUS_KHR)?(this._completeCompile(e,r),t()):requestAnimationFrame(i)};i()}));t.push(n)}else this._completeCompile(e,r)}_handleSource(e,t){const s=e.split("\n"),r=[],n=Math.max(t-6,0),i=Math.min(t+6,s.length);for(let e=n;e<i;e++){const n=e+1;r.push(`${n===t?">":" "} ${n}: ${s[e]}`)}return r.join("\n")}_getShaderErrors(e,t,s){const r=e.getShaderParameter(t,e.COMPILE_STATUS),n=e.getShaderInfoLog(t).trim();if(r&&""===n)return"";const i=/ERROR: 0:(\d+)/.exec(n);if(i){const r=parseInt(i[1]);return s.toUpperCase()+"\n\n"+n+"\n\n"+this._handleSource(e.getShaderSource(t),r)}return n}_logProgramError(e,t,s){if(this.renderer.debug.checkShaderErrors){const r=this.gl,n=r.getProgramInfoLog(e).trim();if(!1===r.getProgramParameter(e,r.LINK_STATUS))if("function"==typeof this.renderer.debug.onShaderError)this.renderer.debug.onShaderError(r,e,s,t);else{const i=this._getShaderErrors(r,s,"vertex"),o=this._getShaderErrors(r,t,"fragment");console.error("THREE.WebGLProgram: Shader Error "+r.getError()+" - VALIDATE_STATUS "+r.getProgramParameter(e,r.VALIDATE_STATUS)+"\n\nProgram Info Log: "+n+"\n"+i+"\n"+o)}else""!==n&&console.warn("THREE.WebGLProgram: Program Info Log:",n)}}_completeCompile(e,t){const{state:s,gl:r}=this,n=this.get(t),{programGPU:i,fragmentShader:o,vertexShader:a}=n;!1===r.getProgramParameter(i,r.LINK_STATUS)&&this._logProgramError(i,o,a),s.useProgram(i);const u=e.getBindings();this._setupBindings(u,i),this.set(t,{programGPU:i})}createComputePipeline(e,t){const{state:s,gl:r}=this,n={stage:"fragment",code:"#version 300 es\nprecision highp float;\nvoid main() {}"};this.createProgram(n);const{computeProgram:i}=e,o=r.createProgram(),a=this.get(n).shaderGPU,u=this.get(i).shaderGPU,l=i.transforms,d=[],c=[];for(let e=0;e<l.length;e++){const t=l[e];d.push(t.varyingName),c.push(t.attributeNode)}r.attachShader(o,a),r.attachShader(o,u),r.transformFeedbackVaryings(o,d,r.SEPARATE_ATTRIBS),r.linkProgram(o),!1===r.getProgramParameter(o,r.LINK_STATUS)&&this._logProgramError(o,a,u),s.useProgram(o),this._setupBindings(t,o);const h=i.attributes,p=[],g=[];for(let e=0;e<h.length;e++){const t=h[e].node.attribute;p.push(t),this.has(t)||this.attributeUtils.createAttribute(t,r.ARRAY_BUFFER)}for(let e=0;e<c.length;e++){const t=c[e].attribute;this.has(t)||this.attributeUtils.createAttribute(t,r.ARRAY_BUFFER);const s=this.get(t);g.push(s)}this.set(e,{programGPU:o,transformBuffers:g,attributes:p})}createBindings(e,t){if(!1===this._knownBindings.has(t)){this._knownBindings.add(t);let e=0,s=0;for(const r of t){this.set(r,{textures:s,uniformBuffers:e});for(const t of r.bindings)t.isUniformBuffer&&e++,t.isSampledTexture&&s++}}this.updateBindings(e,t)}updateBindings(e){const{gl:t}=this,s=this.get(e);let r=s.uniformBuffers,n=s.textures;for(const s of e.bindings)if(s.isUniformsGroup||s.isUniformBuffer){const e=s.buffer,n=t.createBuffer();t.bindBuffer(t.UNIFORM_BUFFER,n),t.bufferData(t.UNIFORM_BUFFER,e,t.DYNAMIC_DRAW),this.set(s,{index:r++,bufferGPU:n})}else if(s.isSampledTexture){const{textureGPU:e,glTextureType:t}=this.get(s.texture);this.set(s,{index:n++,textureGPU:e,glTextureType:t})}}updateBinding(e){const t=this.gl;if(e.isUniformsGroup||e.isUniformBuffer){const s=this.get(e).bufferGPU,r=e.buffer;t.bindBuffer(t.UNIFORM_BUFFER,s),t.bufferData(t.UNIFORM_BUFFER,r,t.DYNAMIC_DRAW)}}createIndexAttribute(e){const t=this.gl;this.attributeUtils.createAttribute(e,t.ELEMENT_ARRAY_BUFFER)}createAttribute(e){if(this.has(e))return;const t=this.gl;this.attributeUtils.createAttribute(e,t.ARRAY_BUFFER)}createStorageAttribute(e){if(this.has(e))return;const t=this.gl;this.attributeUtils.createAttribute(e,t.ARRAY_BUFFER)}updateAttribute(e){this.attributeUtils.updateAttribute(e)}destroyAttribute(e){this.attributeUtils.destroyAttribute(e)}updateSize(){}hasFeature(e){const t=Object.keys(Yv).filter((t=>Yv[t]===e)),s=this.extensions;for(let e=0;e<t.length;e++)if(s.has(t[e]))return!0;return!1}getMaxAnisotropy(){return this.capabilities.getMaxAnisotropy()}copyTextureToTexture(e,t,s,r,n){this.textureUtils.copyTextureToTexture(e,t,s,r,n)}copyFramebufferToTexture(e,t,s){this.textureUtils.copyFramebufferToTexture(e,t,s)}_setFramebuffer(e){const{gl:t,state:s}=this;let r=null;if(null!==e.textures){const n=e.renderTarget,i=this.get(n),{samples:o,depthBuffer:a,stencilBuffer:u}=n,l=!0===n.isWebGLCubeRenderTarget;let d=i.msaaFrameBuffer,c=i.depthRenderbuffer;const h=am(e);let p;if(l?(i.cubeFramebuffers||(i.cubeFramebuffers={}),p=i.cubeFramebuffers[h]):(i.framebuffers||(i.framebuffers={}),p=i.framebuffers[h]),void 0===p){p=t.createFramebuffer(),s.bindFramebuffer(t.FRAMEBUFFER,p);const r=e.textures;if(l){i.cubeFramebuffers[h]=p;const{textureGPU:e}=this.get(r[0]),s=this.renderer._activeCubeFace;t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_CUBE_MAP_POSITIVE_X+s,e,0)}else{i.framebuffers[h]=p;for(let s=0;s<r.length;s++){const n=r[s],i=this.get(n);i.renderTarget=e.renderTarget,i.cacheKey=h;const o=t.COLOR_ATTACHMENT0+s;t.framebufferTexture2D(t.FRAMEBUFFER,o,t.TEXTURE_2D,i.textureGPU,0)}s.drawBuffers(e,p)}if(null!==e.depthTexture){const s=this.get(e.depthTexture),r=u?t.DEPTH_STENCIL_ATTACHMENT:t.DEPTH_ATTACHMENT;s.renderTarget=e.renderTarget,s.cacheKey=h,t.framebufferTexture2D(t.FRAMEBUFFER,r,t.TEXTURE_2D,s.textureGPU,0)}}if(o>0){if(void 0===d){const r=[];d=t.createFramebuffer(),s.bindFramebuffer(t.FRAMEBUFFER,d);const n=[],l=e.textures;for(let s=0;s<l.length;s++){if(n[s]=t.createRenderbuffer(),t.bindRenderbuffer(t.RENDERBUFFER,n[s]),r.push(t.COLOR_ATTACHMENT0+s),a){const e=u?t.DEPTH_STENCIL_ATTACHMENT:t.DEPTH_ATTACHMENT;r.push(e)}const i=e.textures[s],l=this.get(i);t.renderbufferStorageMultisample(t.RENDERBUFFER,o,l.glInternalFormat,e.width,e.height),t.framebufferRenderbuffer(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0+s,t.RENDERBUFFER,n[s])}if(i.msaaFrameBuffer=d,i.msaaRenderbuffers=n,void 0===c){c=t.createRenderbuffer(),this.textureUtils.setupRenderBufferStorage(c,e),i.depthRenderbuffer=c;const s=u?t.DEPTH_STENCIL_ATTACHMENT:t.DEPTH_ATTACHMENT;r.push(s)}i.invalidationArray=r}r=i.msaaFrameBuffer}else r=p}s.bindFramebuffer(t.FRAMEBUFFER,r)}_getVaoKey(e,t){let s=[];if(null!==e){s+=":"+this.get(e).id}for(let e=0;e<t.length;e++){s+=":"+this.get(t[e]).id}return s}_createVao(e,t){const{gl:s}=this,r=s.createVertexArray();let n="",i=!0;if(s.bindVertexArray(r),null!==e){const t=this.get(e);s.bindBuffer(s.ELEMENT_ARRAY_BUFFER,t.bufferGPU),n+=":"+t.id}for(let e=0;e<t.length;e++){const r=t[e],o=this.get(r);let a,u;n+=":"+o.id,s.bindBuffer(s.ARRAY_BUFFER,o.bufferGPU),s.enableVertexAttribArray(e),(r.isStorageBufferAttribute||r.isStorageInstancedBufferAttribute)&&(i=!1),!0===r.isInterleavedBufferAttribute?(a=r.data.stride*o.bytesPerElement,u=r.offset*o.bytesPerElement):(a=0,u=0),o.isInteger?s.vertexAttribIPointer(e,r.itemSize,o.type,a,u):s.vertexAttribPointer(e,r.itemSize,o.type,r.normalized,a,u),r.isInstancedBufferAttribute&&!r.isInterleavedBufferAttribute?s.vertexAttribDivisor(e,r.meshPerAttribute):r.isInterleavedBufferAttribute&&r.data.isInstancedInterleavedBuffer&&s.vertexAttribDivisor(e,r.data.meshPerAttribute)}return s.bindBuffer(s.ARRAY_BUFFER,null),this.vaoCache[n]=r,{vaoGPU:r,staticVao:i}}_getTransformFeedback(e){let t="";for(let s=0;s<e.length;s++)t+=":"+e[s].id;let s=this.transformFeedbackCache[t];if(void 0!==s)return s;const{gl:r}=this;s=r.createTransformFeedback(),r.bindTransformFeedback(r.TRANSFORM_FEEDBACK,s);for(let t=0;t<e.length;t++){const s=e[t];r.bindBufferBase(r.TRANSFORM_FEEDBACK_BUFFER,t,s.transformBuffer)}return r.bindTransformFeedback(r.TRANSFORM_FEEDBACK,null),this.transformFeedbackCache[t]=s,s}_setupBindings(e,t){const s=this.gl;for(const r of e)for(const e of r.bindings){const r=this.get(e).index;if(e.isUniformsGroup||e.isUniformBuffer){const n=s.getUniformBlockIndex(t,e.name);s.uniformBlockBinding(t,n,r)}else if(e.isSampledTexture){const n=s.getUniformLocation(t,e.name);s.uniform1i(n,r)}}}_bindUniforms(e){const{gl:t,state:s}=this;for(const r of e)for(const e of r.bindings){const r=this.get(e),n=r.index;e.isUniformsGroup||e.isUniformBuffer?s.bindBufferBase(t.UNIFORM_BUFFER,n,r.bufferGPU):e.isSampledTexture&&s.bindTexture(r.glTextureType,r.textureGPU,t.TEXTURE0+n)}}dispose(){this.renderer.domElement.removeEventListener("webglcontextlost",this._onContextLost)}}class Jv extends pv{constructor(e,t){super(e),this.texture=t,this.version=t?t.version:0,this.isSampler=!0}}class eS extends Jv{constructor(e,t,s){super(e,t?t.value:null),this.textureNode=t,this.groupNode=s}update(){this.texture=this.textureNode.value}}class tS extends gv{constructor(e,t){super(e,t?t.array:null),this.attribute=t,this.isStorageBuffer=!0}}let sS=0;class rS extends tS{constructor(e,t){super("StorageBuffer_"+sS++,e?e.value:null),this.nodeUniform=e,this.access=e?e.access:ky,this.groupNode=t}get buffer(){return this.nodeUniform.value}}class nS extends Lg{constructor(e){super(),this.device=e;this.mipmapSampler=e.createSampler({minFilter:cy}),this.flipYSampler=e.createSampler({minFilter:hy}),this.transferPipelines={},this.flipYPipelines={},this.mipmapVertexShaderModule=e.createShaderModule({label:"mipmapVertex",code:"\nstruct VarysStruct {\n\t@builtin( position ) Position: vec4<f32>,\n\t@location( 0 ) vTex : vec2<f32>\n};\n\n@vertex\nfn main( @builtin( vertex_index ) vertexIndex : u32 ) -> VarysStruct {\n\n\tvar Varys : VarysStruct;\n\n\tvar pos = array< vec2<f32>, 4 >(\n\t\tvec2<f32>( -1.0,  1.0 ),\n\t\tvec2<f32>(  1.0,  1.0 ),\n\t\tvec2<f32>( -1.0, -1.0 ),\n\t\tvec2<f32>(  1.0, -1.0 )\n\t);\n\n\tvar tex = array< vec2<f32>, 4 >(\n\t\tvec2<f32>( 0.0, 0.0 ),\n\t\tvec2<f32>( 1.0, 0.0 ),\n\t\tvec2<f32>( 0.0, 1.0 ),\n\t\tvec2<f32>( 1.0, 1.0 )\n\t);\n\n\tVarys.vTex = tex[ vertexIndex ];\n\tVarys.Position = vec4<f32>( pos[ vertexIndex ], 0.0, 1.0 );\n\n\treturn Varys;\n\n}\n"}),this.mipmapFragmentShaderModule=e.createShaderModule({label:"mipmapFragment",code:"\n@group( 0 ) @binding( 0 )\nvar imgSampler : sampler;\n\n@group( 0 ) @binding( 1 )\nvar img : texture_2d<f32>;\n\n@fragment\nfn main( @location( 0 ) vTex : vec2<f32> ) -> @location( 0 ) vec4<f32> {\n\n\treturn textureSample( img, imgSampler, vTex );\n\n}\n"}),this.flipYFragmentShaderModule=e.createShaderModule({label:"flipYFragment",code:"\n@group( 0 ) @binding( 0 )\nvar imgSampler : sampler;\n\n@group( 0 ) @binding( 1 )\nvar img : texture_2d<f32>;\n\n@fragment\nfn main( @location( 0 ) vTex : vec2<f32> ) -> @location( 0 ) vec4<f32> {\n\n\treturn textureSample( img, imgSampler, vec2( vTex.x, 1.0 - vTex.y ) );\n\n}\n"})}getTransferPipeline(e){let t=this.transferPipelines[e];return void 0===t&&(t=this.device.createRenderPipeline({label:`mipmap-${e}`,vertex:{module:this.mipmapVertexShaderModule,entryPoint:"main"},fragment:{module:this.mipmapFragmentShaderModule,entryPoint:"main",targets:[{format:e}]},primitive:{topology:$f,stripIndexFormat:oy},layout:"auto"}),this.transferPipelines[e]=t),t}getFlipYPipeline(e){let t=this.flipYPipelines[e];return void 0===t&&(t=this.device.createRenderPipeline({label:`flipY-${e}`,vertex:{module:this.mipmapVertexShaderModule,entryPoint:"main"},fragment:{module:this.flipYFragmentShaderModule,entryPoint:"main",targets:[{format:e}]},primitive:{topology:$f,stripIndexFormat:oy},layout:"auto"}),this.flipYPipelines[e]=t),t}flipY(e,t,s=0){const r=t.format,{width:n,height:i}=t.size,o=this.getTransferPipeline(r),a=this.getFlipYPipeline(r),u=this.device.createTexture({size:{width:n,height:i,depthOrArrayLayers:1},format:r,usage:GPUTextureUsage.RENDER_ATTACHMENT|GPUTextureUsage.TEXTURE_BINDING}),l=e.createView({baseMipLevel:0,mipLevelCount:1,dimension:Zy,baseArrayLayer:s}),d=u.createView({baseMipLevel:0,mipLevelCount:1,dimension:Zy,baseArrayLayer:0}),c=this.device.createCommandEncoder({}),h=(e,t,s)=>{const r=e.getBindGroupLayout(0),n=this.device.createBindGroup({layout:r,entries:[{binding:0,resource:this.flipYSampler},{binding:1,resource:t}]}),i=c.beginRenderPass({colorAttachments:[{view:s,loadOp:ey,storeOp:Zf,clearValue:[0,0,0,0]}]});i.setPipeline(e),i.setBindGroup(0,n),i.draw(4,1,0,0),i.end()};h(o,l,d),h(a,d,l),this.device.queue.submit([c.finish()]),u.destroy()}generateMipmaps(e,t,s=0){const r=this.get(e);void 0===r.useCount&&(r.useCount=0,r.layers=[]);const n=r.layers[s]||this._mipmapCreateBundles(e,t,s),i=this.device.createCommandEncoder({});this._mipmapRunBundles(i,n),this.device.queue.submit([i.finish()]),0!==r.useCount&&(r.layers[s]=n),r.useCount++}_mipmapCreateBundles(e,t,s){const r=this.getTransferPipeline(t.format),n=r.getBindGroupLayout(0);let i=e.createView({baseMipLevel:0,mipLevelCount:1,dimension:Zy,baseArrayLayer:s});const o=[];for(let a=1;a<t.mipLevelCount;a++){const u=this.device.createBindGroup({layout:n,entries:[{binding:0,resource:this.mipmapSampler},{binding:1,resource:i}]}),l=e.createView({baseMipLevel:a,mipLevelCount:1,dimension:Zy,baseArrayLayer:s}),d={colorAttachments:[{view:l,loadOp:ey,storeOp:Zf,clearValue:[0,0,0,0]}]},c=this.device.createRenderBundleEncoder({colorFormats:[t.format]});c.setPipeline(r),c.setBindGroup(0,u),c.draw(4,1,0,0),o.push({renderBundles:[c.finish()],passDescriptor:d}),i=l}return o}_mipmapRunBundles(e,t){const s=t.length;for(let r=0;r<s;r++){const s=t[r],n=e.beginRenderPass(s.passDescriptor);n.executeBundles(s.renderBundles),n.end()}}}const iS={[gs]:"never",[Ae]:"less",[ys]:"equal",[fs]:"less-equal",[xs]:"greater",[bs]:"greater-equal",[ms]:"always",[Ts]:"not-equal"},oS=[0,1,3,2,4,5];class aS{constructor(e){this.backend=e,this._passUtils=null,this.defaultTexture={},this.defaultCubeTexture={},this.defaultVideoFrame=null,this.colorBuffer=null,this.depthTexture=new B,this.depthTexture.name="depthBuffer"}createSampler(e){const t=this.backend,s=t.device,r=t.get(e),n={addressModeU:this._convertAddressMode(e.wrapS),addressModeV:this._convertAddressMode(e.wrapT),addressModeW:this._convertAddressMode(e.wrapR),magFilter:this._convertFilterMode(e.magFilter),minFilter:this._convertFilterMode(e.minFilter),mipmapFilter:this._convertFilterMode(e.minFilter),maxAnisotropy:1};n.magFilter===cy&&n.minFilter===cy&&n.mipmapFilter===cy&&(n.maxAnisotropy=e.anisotropy),e.isDepthTexture&&null!==e.compareFunction&&(n.compare=iS[e.compareFunction]),r.sampler=s.createSampler(n)}createDefaultTexture(e){let t;const s=uS(e);e.isCubeTexture?t=this._getDefaultCubeTextureGPU(s):e.isVideoTexture?this.backend.get(e).externalTexture=this._getDefaultVideoFrame():t=this._getDefaultTextureGPU(s),this.backend.get(e).texture=t}createTexture(e,t={}){const s=this.backend,r=s.get(e);if(r.initialized)throw new Error("WebGPUTextureUtils: Texture already initialized.");void 0===t.needsMipmaps&&(t.needsMipmaps=!1),void 0===t.levels&&(t.levels=1),void 0===t.depth&&(t.depth=1);const{width:n,height:i,depth:o,levels:a}=t;e.isFramebufferTexture&&(t.renderTarget?t.format=this.backend.utils.getCurrentColorFormat(t.renderTarget):t.format=this.backend.utils.getPreferredCanvasFormat());const u=this._getDimension(e),l=e.internalFormat||t.format||uS(e,s.device);r.format=l;let d=void 0!==t.sampleCount?t.sampleCount:1;d=s.utils.getSampleCount(d);const c=e.isRenderTargetTexture&&!e.isMultisampleRenderTargetTexture?1:d;let h=GPUTextureUsage.TEXTURE_BINDING|GPUTextureUsage.COPY_DST|GPUTextureUsage.COPY_SRC;!0===e.isStorageTexture&&(h|=GPUTextureUsage.STORAGE_BINDING),!0!==e.isCompressedTexture&&!0!==e.isCompressedArrayTexture&&(h|=GPUTextureUsage.RENDER_ATTACHMENT);const p={label:e.name,size:{width:n,height:i,depthOrArrayLayers:o},mipLevelCount:a,sampleCount:c,dimension:u,format:l,usage:h};if(e.isVideoTexture){const t=e.source.data,s=new VideoFrame(t);p.size.width=s.displayWidth,p.size.height=s.displayHeight,s.close(),r.externalTexture=t}else{if(void 0===l)return console.warn("WebGPURenderer: Texture format not supported."),this.createDefaultTexture(e);r.texture=s.device.createTexture(p)}if(e.isRenderTargetTexture&&d>1&&!e.isMultisampleRenderTargetTexture){const e=Object.assign({},p);e.label=e.label+"-msaa",e.sampleCount=d,r.msaaTexture=s.device.createTexture(e)}r.initialized=!0,r.textureDescriptorGPU=p}destroyTexture(e){const t=this.backend,s=t.get(e);s.texture.destroy(),void 0!==s.msaaTexture&&s.msaaTexture.destroy(),t.delete(e)}destroySampler(e){delete this.backend.get(e).sampler}generateMipmaps(e){const t=this.backend.get(e);if(e.isCubeTexture)for(let e=0;e<6;e++)this._generateMipmaps(t.texture,t.textureDescriptorGPU,e);else{const s=e.image.depth||1;for(let e=0;e<s;e++)this._generateMipmaps(t.texture,t.textureDescriptorGPU,e)}}getColorBuffer(){this.colorBuffer&&this.colorBuffer.destroy();const e=this.backend,{width:t,height:s}=e.getDrawingBufferSize();return this.colorBuffer=e.device.createTexture({label:"colorBuffer",size:{width:t,height:s,depthOrArrayLayers:1},sampleCount:e.utils.getSampleCount(e.renderer.samples),format:e.utils.getPreferredCanvasFormat(),usage:GPUTextureUsage.RENDER_ATTACHMENT|GPUTextureUsage.COPY_SRC}),this.colorBuffer}getDepthBuffer(e=!0,t=!1){const s=this.backend,{width:r,height:n}=s.getDrawingBufferSize(),i=this.depthTexture,o=s.get(i).texture;let a,u;if(t?(a=de,u=he):e&&(a=ce,u=f),void 0!==o){if(i.image.width===r&&i.image.height===n&&i.format===a&&i.type===u)return o;this.destroyTexture(i)}return i.name="depthBuffer",i.format=a,i.type=u,i.image.width=r,i.image.height=n,this.createTexture(i,{sampleCount:s.utils.getSampleCount(s.renderer.samples),width:r,height:n}),s.get(i).texture}updateTexture(e,t){const s=this.backend.get(e),{textureDescriptorGPU:r}=s;if(!e.isRenderTargetTexture&&void 0!==r){if(e.isDataTexture)this._copyBufferToTexture(t.image,s.texture,r,0,e.flipY);else if(e.isDataArrayTexture||e.isData3DTexture)for(let n=0;n<t.image.depth;n++)this._copyBufferToTexture(t.image,s.texture,r,n,e.flipY,n);else if(e.isCompressedTexture||e.isCompressedArrayTexture)this._copyCompressedBufferToTexture(e.mipmaps,s.texture,r);else if(e.isCubeTexture)this._copyCubeMapToTexture(t.images,s.texture,r,e.flipY);else if(e.isVideoTexture){const t=e.source.data;s.externalTexture=t}else this._copyImageToTexture(t.image,s.texture,r,0,e.flipY);s.version=e.version,e.onUpdate&&e.onUpdate(e)}}async copyTextureToBuffer(e,t,s,r,n,i){const o=this.backend.device,a=this.backend.get(e),u=a.texture,l=a.textureDescriptorGPU.format,d=this._getBytesPerTexel(l);let c=r*d;c=256*Math.ceil(c/256);const h=o.createBuffer({size:r*n*d,usage:GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ}),p=o.createCommandEncoder();p.copyTextureToBuffer({texture:u,origin:{x:t,y:s,z:i}},{buffer:h,bytesPerRow:c},{width:r,height:n});const g=this._getTypedArrayType(l);o.queue.submit([p.finish()]),await h.mapAsync(GPUMapMode.READ);return new g(h.getMappedRange())}_isEnvironmentTexture(e){const t=e.mapping;return t===j||t===q||t===T||t===_}_getDefaultTextureGPU(e){let t=this.defaultTexture[e];if(void 0===t){const s=new ee;s.minFilter=hs,s.magFilter=hs,this.createTexture(s,{width:1,height:1,format:e}),this.defaultTexture[e]=t=s}return this.backend.get(t).texture}_getDefaultCubeTextureGPU(e){let t=this.defaultTexture[e];if(void 0===t){const s=new W;s.minFilter=hs,s.magFilter=hs,this.createTexture(s,{width:1,height:1,depth:6}),this.defaultCubeTexture[e]=t=s}return this.backend.get(t).texture}_getDefaultVideoFrame(){let e=this.defaultVideoFrame;if(null===e){const t={timestamp:0,codedWidth:1,codedHeight:1,format:"RGBA"};this.defaultVideoFrame=e=new VideoFrame(new Uint8Array([0,0,0,255]),t)}return e}_copyCubeMapToTexture(e,t,s,r){for(let n=0;n<6;n++){const i=e[n],o=!0===r?oS[n]:n;i.isDataTexture?this._copyBufferToTexture(i.image,t,s,o,r):this._copyImageToTexture(i,t,s,o,r)}}_copyImageToTexture(e,t,s,r,n){this.backend.device.queue.copyExternalImageToTexture({source:e},{texture:t,mipLevel:0,origin:{x:0,y:0,z:r}},{width:e.width,height:e.height,depthOrArrayLayers:1}),!0===n&&this._flipY(t,s,r)}_getPassUtils(){let e=this._passUtils;return null===e&&(this._passUtils=e=new nS(this.backend.device)),e}_generateMipmaps(e,t,s=0){this._getPassUtils().generateMipmaps(e,t,s)}_flipY(e,t,s=0){this._getPassUtils().flipY(e,t,s)}_copyBufferToTexture(e,t,s,r,n,i=0){const o=this.backend.device,a=e.data,u=this._getBytesPerTexel(s.format),l=e.width*u;o.queue.writeTexture({texture:t,mipLevel:0,origin:{x:0,y:0,z:r}},a,{offset:e.width*e.height*u*i,bytesPerRow:l},{width:e.width,height:e.height,depthOrArrayLayers:1}),!0===n&&this._flipY(t,s,r)}_copyCompressedBufferToTexture(e,t,s){const r=this.backend.device,n=this._getBlockData(s.format),i=s.size.depthOrArrayLayers>1;for(let o=0;o<e.length;o++){const a=e[o],u=a.width,l=a.height,d=i?s.size.depthOrArrayLayers:1,c=Math.ceil(u/n.width)*n.byteLength,h=c*Math.ceil(l/n.height);for(let e=0;e<d;e++)r.queue.writeTexture({texture:t,mipLevel:o,origin:{x:0,y:0,z:e}},a.data,{offset:e*h,bytesPerRow:c,rowsPerImage:Math.ceil(l/n.height)},{width:Math.ceil(u/n.width)*n.width,height:Math.ceil(l/n.height)*n.height,depthOrArrayLayers:1})}}_getBlockData(e){return e===ay.BC1RGBAUnorm||e===ay.BC1RGBAUnormSRGB?{byteLength:8,width:4,height:4}:e===ay.BC2RGBAUnorm||e===ay.BC2RGBAUnormSRGB||e===ay.BC3RGBAUnorm||e===ay.BC3RGBAUnormSRGB?{byteLength:16,width:4,height:4}:e===ay.BC4RUnorm||e===ay.BC4RSNorm?{byteLength:8,width:4,height:4}:e===ay.BC5RGUnorm||e===ay.BC5RGSnorm||e===ay.BC6HRGBUFloat||e===ay.BC6HRGBFloat||e===ay.BC7RGBAUnorm||e===ay.BC7RGBAUnormSRGB?{byteLength:16,width:4,height:4}:e===ay.ETC2RGB8Unorm||e===ay.ETC2RGB8UnormSRGB||e===ay.ETC2RGB8A1Unorm||e===ay.ETC2RGB8A1UnormSRGB?{byteLength:8,width:4,height:4}:e===ay.ETC2RGBA8Unorm||e===ay.ETC2RGBA8UnormSRGB?{byteLength:16,width:4,height:4}:e===ay.EACR11Unorm||e===ay.EACR11Snorm?{byteLength:8,width:4,height:4}:e===ay.EACRG11Unorm||e===ay.EACRG11Snorm||e===ay.ASTC4x4Unorm||e===ay.ASTC4x4UnormSRGB?{byteLength:16,width:4,height:4}:e===ay.ASTC5x4Unorm||e===ay.ASTC5x4UnormSRGB?{byteLength:16,width:5,height:4}:e===ay.ASTC5x5Unorm||e===ay.ASTC5x5UnormSRGB?{byteLength:16,width:5,height:5}:e===ay.ASTC6x5Unorm||e===ay.ASTC6x5UnormSRGB?{byteLength:16,width:6,height:5}:e===ay.ASTC6x6Unorm||e===ay.ASTC6x6UnormSRGB?{byteLength:16,width:6,height:6}:e===ay.ASTC8x5Unorm||e===ay.ASTC8x5UnormSRGB?{byteLength:16,width:8,height:5}:e===ay.ASTC8x6Unorm||e===ay.ASTC8x6UnormSRGB?{byteLength:16,width:8,height:6}:e===ay.ASTC8x8Unorm||e===ay.ASTC8x8UnormSRGB?{byteLength:16,width:8,height:8}:e===ay.ASTC10x5Unorm||e===ay.ASTC10x5UnormSRGB?{byteLength:16,width:10,height:5}:e===ay.ASTC10x6Unorm||e===ay.ASTC10x6UnormSRGB?{byteLength:16,width:10,height:6}:e===ay.ASTC10x8Unorm||e===ay.ASTC10x8UnormSRGB?{byteLength:16,width:10,height:8}:e===ay.ASTC10x10Unorm||e===ay.ASTC10x10UnormSRGB?{byteLength:16,width:10,height:10}:e===ay.ASTC12x10Unorm||e===ay.ASTC12x10UnormSRGB?{byteLength:16,width:12,height:10}:e===ay.ASTC12x12Unorm||e===ay.ASTC12x12UnormSRGB?{byteLength:16,width:12,height:12}:void 0}_convertAddressMode(e){let t=uy;return e===ls?t=ly:e===cs&&(t=dy),t}_convertFilterMode(e){let t=cy;return e!==hs&&e!==ps&&e!==Pe||(t=hy),t}_getBytesPerTexel(e){return e===ay.R8Unorm||e===ay.R8Snorm||e===ay.R8Uint||e===ay.R8Sint?1:e===ay.R16Uint||e===ay.R16Sint||e===ay.R16Float||e===ay.RG8Unorm||e===ay.RG8Snorm||e===ay.RG8Uint||e===ay.RG8Sint?2:e===ay.R32Uint||e===ay.R32Sint||e===ay.R32Float||e===ay.RG16Uint||e===ay.RG16Sint||e===ay.RG16Float||e===ay.RGBA8Unorm||e===ay.RGBA8UnormSRGB||e===ay.RGBA8Snorm||e===ay.RGBA8Uint||e===ay.RGBA8Sint||e===ay.BGRA8Unorm||e===ay.BGRA8UnormSRGB||e===ay.RGB9E5UFloat||e===ay.RGB10A2Unorm||e===ay.RG11B10UFloat||e===ay.Depth32Float||e===ay.Depth24Plus||e===ay.Depth24PlusStencil8||e===ay.Depth32FloatStencil8?4:e===ay.RG32Uint||e===ay.RG32Sint||e===ay.RG32Float||e===ay.RGBA16Uint||e===ay.RGBA16Sint||e===ay.RGBA16Float?8:e===ay.RGBA32Uint||e===ay.RGBA32Sint||e===ay.RGBA32Float?16:void 0}_getTypedArrayType(e){return e===ay.R8Uint?Uint8Array:e===ay.R8Sint?Int8Array:e===ay.R8Unorm?Uint8Array:e===ay.R8Snorm?Int8Array:e===ay.RG8Uint?Uint8Array:e===ay.RG8Sint?Int8Array:e===ay.RG8Unorm?Uint8Array:e===ay.RG8Snorm?Int8Array:e===ay.RGBA8Uint?Uint8Array:e===ay.RGBA8Sint?Int8Array:e===ay.RGBA8Unorm?Uint8Array:e===ay.RGBA8Snorm?Int8Array:e===ay.R16Uint?Uint16Array:e===ay.R16Sint?Int16Array:e===ay.RG16Uint?Uint16Array:e===ay.RG16Sint?Int16Array:e===ay.RGBA16Uint?Uint16Array:e===ay.RGBA16Sint?Int16Array:e===ay.R16Float||e===ay.RG16Float||e===ay.RGBA16Float?Uint16Array:e===ay.R32Uint?Uint32Array:e===ay.R32Sint?Int32Array:e===ay.R32Float?Float32Array:e===ay.RG32Uint?Uint32Array:e===ay.RG32Sint?Int32Array:e===ay.RG32Float?Float32Array:e===ay.RGBA32Uint?Uint32Array:e===ay.RGBA32Sint?Int32Array:e===ay.RGBA32Float?Float32Array:e===ay.BGRA8Unorm||e===ay.BGRA8UnormSRGB?Uint8Array:e===ay.RGB10A2Unorm||e===ay.RGB9E5UFloat||e===ay.RG11B10UFloat?Uint32Array:e===ay.Depth32Float?Float32Array:e===ay.Depth24Plus||e===ay.Depth24PlusStencil8?Uint32Array:e===ay.Depth32FloatStencil8?Float32Array:void 0}_getDimension(e){let t;return t=e.isData3DTexture?Qy:Yy,t}}function uS(e,t=null){const s=e.format,r=e.type,n=e.colorSpace;let i;if(!0===e.isCompressedTexture||!0===e.isCompressedArrayTexture)switch(s){case Pt:i=n===De?ay.BC1RGBAUnormSRGB:ay.BC1RGBAUnorm;break;case It:i=n===De?ay.BC2RGBAUnormSRGB:ay.BC2RGBAUnorm;break;case Lt:i=n===De?ay.BC3RGBAUnormSRGB:ay.BC3RGBAUnorm;break;case zt:i=n===De?ay.ETC2RGB8UnormSRGB:ay.ETC2RGB8Unorm;break;case $t:i=n===De?ay.ETC2RGBA8UnormSRGB:ay.ETC2RGBA8Unorm;break;case Ht:i=n===De?ay.ASTC4x4UnormSRGB:ay.ASTC4x4Unorm;break;case Wt:i=n===De?ay.ASTC5x4UnormSRGB:ay.ASTC5x4Unorm;break;case jt:i=n===De?ay.ASTC5x5UnormSRGB:ay.ASTC5x5Unorm;break;case qt:i=n===De?ay.ASTC6x5UnormSRGB:ay.ASTC6x5Unorm;break;case Kt:i=n===De?ay.ASTC6x6UnormSRGB:ay.ASTC6x6Unorm;break;case Xt:i=n===De?ay.ASTC8x5UnormSRGB:ay.ASTC8x5Unorm;break;case Yt:i=n===De?ay.ASTC8x6UnormSRGB:ay.ASTC8x6Unorm;break;case Qt:i=n===De?ay.ASTC8x8UnormSRGB:ay.ASTC8x8Unorm;break;case Zt:i=n===De?ay.ASTC10x5UnormSRGB:ay.ASTC10x5Unorm;break;case Jt:i=n===De?ay.ASTC10x6UnormSRGB:ay.ASTC10x6Unorm;break;case es:i=n===De?ay.ASTC10x8UnormSRGB:ay.ASTC10x8Unorm;break;case ts:i=n===De?ay.ASTC10x10UnormSRGB:ay.ASTC10x10Unorm;break;case ss:i=n===De?ay.ASTC12x10UnormSRGB:ay.ASTC12x10Unorm;break;case rs:i=n===De?ay.ASTC12x12UnormSRGB:ay.ASTC12x12Unorm;break;case Ue:i=n===De?ay.RGBA8UnormSRGB:ay.RGBA8Unorm;break;default:console.error("WebGPURenderer: Unsupported texture format.",s)}else switch(s){case Ue:switch(r){case Xe:i=ay.RGBA8Snorm;break;case Ye:i=ay.RGBA16Sint;break;case Ke:i=ay.RGBA16Uint;break;case f:i=ay.RGBA32Uint;break;case y:i=ay.RGBA32Sint;break;case pe:i=n===De?ay.RGBA8UnormSRGB:ay.RGBA8Unorm;break;case ye:i=ay.RGBA16Float;break;case E:i=ay.RGBA32Float;break;default:console.error("WebGPURenderer: Unsupported texture type with RGBAFormat.",r)}break;case je:if(r===wt)i=ay.RGB9E5UFloat;else console.error("WebGPURenderer: Unsupported texture type with RGBFormat.",r);break;case $e:switch(r){case Xe:i=ay.R8Snorm;break;case Ye:i=ay.R16Sint;break;case Ke:i=ay.R16Uint;break;case f:i=ay.R32Uint;break;case y:i=ay.R32Sint;break;case pe:i=ay.R8Unorm;break;case ye:i=ay.R16Float;break;case E:i=ay.R32Float;break;default:console.error("WebGPURenderer: Unsupported texture type with RedFormat.",r)}break;case Ce:switch(r){case Xe:i=ay.RG8Snorm;break;case Ye:i=ay.RG16Sint;break;case Ke:i=ay.RG16Uint;break;case f:i=ay.RG32Uint;break;case y:i=ay.RG32Sint;break;case pe:i=ay.RG8Unorm;break;case ye:i=ay.RG16Float;break;case E:i=ay.RG32Float;break;default:console.error("WebGPURenderer: Unsupported texture type with RGFormat.",r)}break;case ce:switch(r){case Ke:i=ay.Depth16Unorm;break;case f:i=ay.Depth24Plus;break;case E:i=ay.Depth32Float;break;default:console.error("WebGPURenderer: Unsupported texture type with DepthFormat.",r)}break;case de:switch(r){case he:i=ay.Depth24PlusStencil8;break;case E:t&&!1===t.features.has(ib.Depth32FloatStencil8)&&console.error('WebGPURenderer: Depth textures with DepthStencilFormat + FloatType can only be used with the "depth32float-stencil8" GPU feature.'),i=ay.Depth32FloatStencil8;break;default:console.error("WebGPURenderer: Unsupported texture type with DepthStencilFormat.",r)}break;case ze:switch(r){case y:i=ay.R32Sint;break;case f:i=ay.R32Uint;break;default:console.error("WebGPURenderer: Unsupported texture type with RedIntegerFormat.",r)}break;case He:switch(r){case y:i=ay.RG32Sint;break;case f:i=ay.RG32Uint;break;default:console.error("WebGPURenderer: Unsupported texture type with RGIntegerFormat.",r)}break;case qe:switch(r){case y:i=ay.RGBA32Sint;break;case f:i=ay.RGBA32Uint;break;default:console.error("WebGPURenderer: Unsupported texture type with RGBAIntegerFormat.",r)}break;default:console.error("WebGPURenderer: Unsupported texture format.",s)}return i}const lS=/^[fn]*\s*([a-z_0-9]+)?\s*\(([\s\S]*?)\)\s*[\-\>]*\s*([a-z_0-9]+(?:<[\s\S]+?>)?)/i,dS=/([a-z_0-9]+)\s*:\s*([a-z_0-9]+(?:<[\s\S]+?>)?)/gi,cS={f32:"float",i32:"int",u32:"uint",bool:"bool","vec2<f32>":"vec2","vec2<i32>":"ivec2","vec2<u32>":"uvec2","vec2<bool>":"bvec2",vec2f:"vec2",vec2i:"ivec2",vec2u:"uvec2",vec2b:"bvec2","vec3<f32>":"vec3","vec3<i32>":"ivec3","vec3<u32>":"uvec3","vec3<bool>":"bvec3",vec3f:"vec3",vec3i:"ivec3",vec3u:"uvec3",vec3b:"bvec3","vec4<f32>":"vec4","vec4<i32>":"ivec4","vec4<u32>":"uvec4","vec4<bool>":"bvec4",vec4f:"vec4",vec4i:"ivec4",vec4u:"uvec4",vec4b:"bvec4","mat2x2<f32>":"mat2",mat2x2f:"mat2","mat3x3<f32>":"mat3",mat3x3f:"mat3","mat4x4<f32>":"mat4",mat4x4f:"mat4",sampler:"sampler",texture_1d:"texture",texture_2d:"texture",texture_2d_array:"texture",texture_multisampled_2d:"cubeTexture",texture_depth_2d:"depthTexture",texture_3d:"texture3D",texture_cube:"cubeTexture",texture_cube_array:"cubeTexture",texture_storage_1d:"storageTexture",texture_storage_2d:"storageTexture",texture_storage_2d_array:"storageTexture",texture_storage_3d:"storageTexture"};class hS extends WN{constructor(e){const{type:t,inputs:s,name:r,inputsCode:n,blockCode:i,outputType:o}=(e=>{const t=(e=e.trim()).match(lS);if(null!==t&&4===t.length){const s=t[2],r=[];let n=null;for(;null!==(n=dS.exec(s));)r.push({name:n[1],type:n[2]});const i=[];for(let e=0;e<r.length;e++){const{name:t,type:s}=r[e];let n=s;n.startsWith("ptr")?n="pointer":(n.startsWith("texture")&&(n=s.split("<")[0]),n=cS[n]),i.push(new FN(n,t))}const o=e.substring(t[0].length),a=t[3]||"void",u=void 0!==t[1]?t[1]:"";return{type:cS[a]||a,inputs:i,name:u,inputsCode:s,blockCode:o,outputType:a}}throw new Error("FunctionNode: Function is not a WGSL code.")})(e);super(t,s,r),this.inputsCode=n,this.blockCode=i,this.outputType=o}getCode(e=this.name){const t="void"!==this.outputType?"-> "+this.outputType:"";return`fn ${e} ( ${this.inputsCode.trim()} ) ${t}`+this.blockCode}}class pS extends HN{parseFunction(e){return new hS(e)}}const gS=self.GPUShaderStage,mS={[ls]:"repeat",[ds]:"clamp",[cs]:"mirror"},fS={vertex:gS?gS.VERTEX:1,fragment:gS?gS.FRAGMENT:2,compute:gS?gS.COMPUTE:4},yS={instance:!0,swizzleAssign:!1,storageBuffer:!0},bS={"^^":"tsl_xor"},xS={float:"f32",int:"i32",uint:"u32",bool:"bool",color:"vec3<f32>",vec2:"vec2<f32>",ivec2:"vec2<i32>",uvec2:"vec2<u32>",bvec2:"vec2<bool>",vec3:"vec3<f32>",ivec3:"vec3<i32>",uvec3:"vec3<u32>",bvec3:"vec3<bool>",vec4:"vec4<f32>",ivec4:"vec4<i32>",uvec4:"vec4<u32>",bvec4:"vec4<bool>",mat2:"mat2x2<f32>",mat3:"mat3x3<f32>",mat4:"mat4x4<f32>"},TS={},_S={tsl_xor:new ex("fn tsl_xor( a : bool, b : bool ) -> bool { return ( a || b ) && !( a && b ); }"),mod_float:new ex("fn tsl_mod_float( x : f32, y : f32 ) -> f32 { return x - y * floor( x / y ); }"),mod_vec2:new ex("fn tsl_mod_vec2( x : vec2f, y : vec2f ) -> vec2f { return x - y * floor( x / y ); }"),mod_vec3:new ex("fn tsl_mod_vec3( x : vec3f, y : vec3f ) -> vec3f { return x - y * floor( x / y ); }"),mod_vec4:new ex("fn tsl_mod_vec4( x : vec4f, y : vec4f ) -> vec4f { return x - y * floor( x / y ); }"),equals_bool:new ex("fn tsl_equals_bool( a : bool, b : bool ) -> bool { return a == b; }"),equals_bvec2:new ex("fn tsl_equals_bvec2( a : vec2f, b : vec2f ) -> vec2<bool> { return vec2<bool>( a.x == b.x, a.y == b.y ); }"),equals_bvec3:new ex("fn tsl_equals_bvec3( a : vec3f, b : vec3f ) -> vec3<bool> { return vec3<bool>( a.x == b.x, a.y == b.y, a.z == b.z ); }"),equals_bvec4:new ex("fn tsl_equals_bvec4( a : vec4f, b : vec4f ) -> vec4<bool> { return vec4<bool>( a.x == b.x, a.y == b.y, a.z == b.z, a.w == b.w ); }"),repeatWrapping_float:new ex("fn tsl_repeatWrapping_float( coord: f32 ) -> f32 { return fract( coord ); }"),mirrorWrapping_float:new ex("fn tsl_mirrorWrapping_float( coord: f32 ) -> f32 { let mirrored = fract( coord * 0.5 ) * 2.0; return 1.0 - abs( 1.0 - mirrored ); }"),clampWrapping_float:new ex("fn tsl_clampWrapping_float( coord: f32 ) -> f32 { return clamp( coord, 0.0, 1.0 ); }"),repeatWrapping:new ex("\nfn tsl_repeatWrapping( uv : vec2<f32>, dimension : vec2<u32> ) -> vec2<u32> {\n\n\tlet uvScaled = vec2<u32>( uv * vec2<f32>( dimension ) );\n\n\treturn ( ( uvScaled % dimension ) + dimension ) % dimension;\n\n}\n"),biquadraticTexture:new ex("\nfn tsl_biquadraticTexture( map : texture_2d<f32>, coord : vec2f, iRes : vec2u, level : i32 ) -> vec4f {\n\n\tlet res = vec2f( iRes );\n\n\tlet uvScaled = coord * res;\n\tlet uvWrapping = ( ( uvScaled % res ) + res ) % res;\n\n\t// https://www.shadertoy.com/view/WtyXRy\n\n\tlet uv = uvWrapping - 0.5;\n\tlet iuv = floor( uv );\n\tlet f = fract( uv );\n\n\tlet rg1 = textureLoad( map, vec2u( iuv + vec2( 0.5, 0.5 ) ) % iRes, level );\n\tlet rg2 = textureLoad( map, vec2u( iuv + vec2( 1.5, 0.5 ) ) % iRes, level );\n\tlet rg3 = textureLoad( map, vec2u( iuv + vec2( 0.5, 1.5 ) ) % iRes, level );\n\tlet rg4 = textureLoad( map, vec2u( iuv + vec2( 1.5, 1.5 ) ) % iRes, level );\n\n\treturn mix( mix( rg1, rg2, f.x ), mix( rg3, rg4, f.x ), f.y );\n\n}\n")},NS={dFdx:"dpdx",dFdy:"- dpdy",mod_float:"tsl_mod_float",mod_vec2:"tsl_mod_vec2",mod_vec3:"tsl_mod_vec3",mod_vec4:"tsl_mod_vec4",equals_bool:"tsl_equals_bool",equals_bvec2:"tsl_equals_bvec2",equals_bvec3:"tsl_equals_bvec3",equals_bvec4:"tsl_equals_bvec4",inversesqrt:"inverseSqrt",bitcast:"bitcast<f32>"};/Windows/g.test(navigator.userAgent)&&(_S.pow_float=new ex("fn tsl_pow_float( a : f32, b : f32 ) -> f32 { return select( -pow( -a, b ), pow( a, b ), a > 0.0 ); }"),_S.pow_vec2=new ex("fn tsl_pow_vec2( a : vec2f, b : vec2f ) -> vec2f { return vec2f( tsl_pow_float( a.x, b.x ), tsl_pow_float( a.y, b.y ) ); }",[_S.pow_float]),_S.pow_vec3=new ex("fn tsl_pow_vec3( a : vec3f, b : vec3f ) -> vec3f { return vec3f( tsl_pow_float( a.x, b.x ), tsl_pow_float( a.y, b.y ), tsl_pow_float( a.z, b.z ) ); }",[_S.pow_float]),_S.pow_vec4=new ex("fn tsl_pow_vec4( a : vec4f, b : vec4f ) -> vec4f { return vec4f( tsl_pow_float( a.x, b.x ), tsl_pow_float( a.y, b.y ), tsl_pow_float( a.z, b.z ), tsl_pow_float( a.w, b.w ) ); }",[_S.pow_float]),NS.pow_float="tsl_pow_float",NS.pow_vec2="tsl_pow_vec2",NS.pow_vec3="tsl_pow_vec3",NS.pow_vec4="tsl_pow_vec4");let vS="";!0!==/Firefox|Deno/g.test(navigator.userAgent)&&(vS+="diagnostic( off, derivative_uniformity );\n");class SS extends BN{constructor(e,t){super(e,t,new pS),this.uniformGroups={},this.builtins={},this.directives={},this.scopedArrays=new Map}needsToWorkingColorSpace(e){return!0===e.isVideoTexture&&e.colorSpace!==m}_generateTextureSample(e,t,s,r,n=this.shaderStage){return"fragment"===n?r?`textureSample( ${t}, ${t}_sampler, ${s}, ${r} )`:`textureSample( ${t}, ${t}_sampler, ${s} )`:this.isFilteredTexture(e)?this.generateFilteredTexture(e,t,s):this.generateTextureLod(e,t,s,"0")}_generateVideoSample(e,t,s=this.shaderStage){if("fragment"===s)return`textureSampleBaseClampToEdge( ${e}, ${e}_sampler, vec2<f32>( ${t}.x, 1.0 - ${t}.y ) )`;console.error(`WebGPURenderer: THREE.VideoTexture does not support ${s} shader.`)}_generateTextureSampleLevel(e,t,s,r,n,i=this.shaderStage){return"fragment"===i&&!1===this.isUnfilterable(e)?`textureSampleLevel( ${t}, ${t}_sampler, ${s}, ${r} )`:this.isFilteredTexture(e)?this.generateFilteredTexture(e,t,s,r):this.generateTextureLod(e,t,s,r)}generateWrapFunction(e){const t=`tsl_coord_${mS[e.wrapS]}S_${mS[e.wrapT]}T`;let s=TS[t];if(void 0===s){let r=`fn ${t}( coord : vec2f ) -> vec2f {\n\n\treturn vec2f(\n`;const n=(e,t)=>{e===ls?(this._include("repeatWrapping_float"),r+=`\t\ttsl_repeatWrapping_float( coord.${t} )`):e===ds?(this._include("clampWrapping_float"),r+=`\t\ttsl_clampWrapping_float( coord.${t} )`):e===cs?(this._include("mirrorWrapping_float"),r+=`\t\ttsl_mirrorWrapping_float( coord.${t} )`):(r+=`\t\tcoord.${t}`,console.warn(`WebGPURenderer: Unsupported texture wrap type "${e}" for vertex shader.`))};n(e.wrapS,"x"),r+=",\n",n(e.wrapT,"y"),r+="\n\t);\n\n}\n",TS[t]=s=new ex(r)}return s.build(this),t}generateTextureDimension(e,t,s){const r=this.getDataFromNode(e,this.shaderStage,this.globalCache);void 0===r.dimensionsSnippet&&(r.dimensionsSnippet={});let n=r.dimensionsSnippet[s];return void 0===r.dimensionsSnippet[s]&&(n=`textureDimension_${e.id}_${s}`,this.addLineFlowCode(`let ${n} = textureDimensions( ${t}, i32( ${s} ) );`),r.dimensionsSnippet[s]=n),n}generateFilteredTexture(e,t,s,r="0"){this._include("biquadraticTexture");return`tsl_biquadraticTexture( ${t}, ${this.generateWrapFunction(e)}( ${s} ), ${this.generateTextureDimension(e,t,r)}, i32( ${r} ) )`}generateTextureLod(e,t,s,r="0"){this._include("repeatWrapping");return`textureLoad( ${t}, tsl_repeatWrapping( ${s}, ${!0===e.isMultisampleRenderTargetTexture?`textureDimensions( ${t} )`:`textureDimensions( ${t}, 0 )`} ), i32( ${r} ) )`}generateTextureLoad(e,t,s,r,n="0u"){return r?`textureLoad( ${t}, ${s}, ${r}, ${n} )`:`textureLoad( ${t}, ${s}, ${n} )`}generateTextureStore(e,t,s,r){return`textureStore( ${t}, ${s}, ${r} )`}isUnfilterable(e){return"float"!==this.getComponentTypeFromTexture(e)||!this.isAvailable("float32Filterable")&&!0===e.isDataTexture&&e.type===E||!0===e.isMultisampleRenderTargetTexture}generateTexture(e,t,s,r,n=this.shaderStage){let i=null;return i=!0===e.isVideoTexture?this._generateVideoSample(t,s,n):this.isUnfilterable(e)?this.generateTextureLod(e,t,s,"0",r,n):this._generateTextureSample(e,t,s,r,n),i}generateTextureGrad(e,t,s,r,n,i=this.shaderStage){if("fragment"===i)return`textureSampleGrad( ${t}, ${t}_sampler, ${s},  ${r[0]}, ${r[1]} )`;console.error(`WebGPURenderer: THREE.TextureNode.gradient() does not support ${i} shader.`)}generateTextureCompare(e,t,s,r,n,i=this.shaderStage){if("fragment"===i)return`textureSampleCompare( ${t}, ${t}_sampler, ${s}, ${r} )`;console.error(`WebGPURenderer: THREE.DepthTexture.compareFunction() does not support ${i} shader.`)}generateTextureLevel(e,t,s,r,n,i=this.shaderStage){let o=null;return o=!0===e.isVideoTexture?this._generateVideoSample(t,s,i):this._generateTextureSampleLevel(e,t,s,r,n,i),o}generateTextureBias(e,t,s,r,n,i=this.shaderStage){if("fragment"===i)return`textureSampleBias( ${t}, ${t}_sampler, ${s}, ${r} )`;console.error(`WebGPURenderer: THREE.TextureNode.biasNode does not support ${i} shader.`)}getPropertyName(e,t=this.shaderStage){if(!0===e.isNodeVarying&&!0===e.needsInterpolation){if("vertex"===t)return`varyings.${e.name}`}else if(!0===e.isNodeUniform){const t=e.name,s=e.type;return"texture"===s||"cubeTexture"===s||"storageTexture"===s||"texture3D"===s?t:"buffer"===s||"storageBuffer"===s||"indirectStorageBuffer"===s?`NodeBuffer_${e.id}.${t}`:e.groupNode.name+"."+t}return super.getPropertyName(e)}getOutputStructName(){return"output"}_getUniformGroupCount(e){return Object.keys(this.uniforms[e]).length}getFunctionOperator(e){const t=bS[e];return void 0!==t?(this._include(t),t):null}getStorageAccess(e){if(e.isStorageTextureNode)switch(e.access){case Hy:return"read";case $y:return"write";default:return"read_write"}else switch(e.access){case ky:return"read_write";case zy:return"read";default:return"write"}}getUniformFromNode(e,t,s,r=null){const n=super.getUniformFromNode(e,t,s,r),i=this.getDataFromNode(e,s,this.globalCache);if(void 0===i.uniformGPU){let r;const o=e.groupNode,a=o.name,u=this.getBindGroupArray(a,s);if("texture"===t||"cubeTexture"===t||"storageTexture"===t||"texture3D"===t){let i=null;if("texture"===t||"storageTexture"===t?i=new vv(n.name,n.node,o,e.access?e.access:null):"cubeTexture"===t?i=new Sv(n.name,n.node,o,e.access?e.access:null):"texture3D"===t&&(i=new Av(n.name,n.node,o,e.access?e.access:null)),i.store=!0===e.isStorageTextureNode,i.setVisibility(fS[s]),"fragment"===s&&!1===this.isUnfilterable(e.value)&&!1===i.store){const e=new eS(`${n.name}_sampler`,n.node,o);e.setVisibility(fS[s]),u.push(e,i),r=[e,i]}else u.push(i),r=[i]}else if("buffer"===t||"storageBuffer"===t||"indirectStorageBuffer"===t){const n=new("buffer"===t?yv:rS)(e,o);n.setVisibility(fS[s]),u.push(n),r=n}else{const e=this.uniformGroups[s]||(this.uniformGroups[s]={});let i=e[a];void 0===i&&(i=new Tv(a,o),i.setVisibility(fS[s]),e[a]=i,u.push(i)),r=this.getNodeUniform(n,t),i.addUniform(r)}i.uniformGPU=r}return n}getBuiltin(e,t,s,r=this.shaderStage){const n=this.builtins[r]||(this.builtins[r]=new Map);return!1===n.has(e)&&n.set(e,{name:e,property:t,type:s}),t}hasBuiltin(e,t=this.shaderStage){return void 0!==this.builtins[t]&&this.builtins[t].has(e)}getVertexIndex(){return"vertex"===this.shaderStage?this.getBuiltin("vertex_index","vertexIndex","u32","attribute"):"vertexIndex"}buildFunctionCode(e){const t=e.layout,s=this.flowShaderNode(e),r=[];for(const e of t.inputs)r.push(e.name+" : "+this.getType(e.type));let n=`fn ${t.name}( ${r.join(", ")} ) -> ${this.getType(t.type)} {\n${s.vars}\n${s.code}\n`;return s.result&&(n+=`\treturn ${s.result};\n`),n+="\n}\n",n}getInstanceIndex(){return"vertex"===this.shaderStage?this.getBuiltin("instance_index","instanceIndex","u32","attribute"):"instanceIndex"}getInvocationLocalIndex(){return this.getBuiltin("local_invocation_index","invocationLocalIndex","u32","attribute")}getSubgroupSize(){return this.enableSubGroups(),this.getBuiltin("subgroup_size","subgroupSize","u32","attribute")}getInvocationSubgroupIndex(){return this.enableSubGroups(),this.getBuiltin("subgroup_invocation_id","invocationSubgroupIndex","u32","attribute")}getSubgroupIndex(){return this.enableSubGroups(),this.getBuiltin("subgroup_id","subgroupIndex","u32","attribute")}getDrawIndex(){return null}getFrontFacing(){return this.getBuiltin("front_facing","isFront","bool")}getFragCoord(){return this.getBuiltin("position","fragCoord","vec4<f32>")+".xy"}getFragDepth(){return"output."+this.getBuiltin("frag_depth","depth","f32","output")}getClipDistance(){return"varyings.hw_clip_distances"}isFlipY(){return!1}enableDirective(e,t=this.shaderStage){(this.directives[t]||(this.directives[t]=new Set)).add(e)}getDirectives(e){const t=[],s=this.directives[e];if(void 0!==s)for(const e of s)t.push(`enable ${e};`);return t.join("\n")}enableSubGroups(){this.enableDirective("subgroups")}enableSubgroupsF16(){this.enableDirective("subgroups-f16")}enableClipDistances(){this.enableDirective("clip_distances")}enableShaderF16(){this.enableDirective("f16")}enableDualSourceBlending(){this.enableDirective("dual_source_blending")}enableHardwareClipping(e){this.enableClipDistances(),this.getBuiltin("clip_distances","hw_clip_distances",`array<f32, ${e} >`,"vertex")}getBuiltins(e){const t=[],s=this.builtins[e];if(void 0!==s)for(const{name:e,property:r,type:n}of s.values())t.push(`@builtin( ${e} ) ${r} : ${n}`);return t.join(",\n\t")}getScopedArray(e,t,s,r){return!1===this.scopedArrays.has(e)&&this.scopedArrays.set(e,{name:e,scope:t,bufferType:s,bufferCount:r}),e}getScopedArrays(e){if("compute"!==e)return;const t=[];for(const{name:e,scope:s,bufferType:r,bufferCount:n}of this.scopedArrays.values()){const i=this.getType(r);t.push(`var<${s}> ${e}: array< ${i}, ${n} >;`)}return t.join("\n")}getAttributes(e){const t=[];if("compute"===e&&(this.getBuiltin("global_invocation_id","id","vec3<u32>","attribute"),this.getBuiltin("workgroup_id","workgroupId","vec3<u32>","attribute"),this.getBuiltin("local_invocation_id","localId","vec3<u32>","attribute"),this.getBuiltin("num_workgroups","numWorkgroups","vec3<u32>","attribute"),this.renderer.hasFeature("subgroups")&&(this.enableDirective("subgroups",e),this.getBuiltin("subgroup_size","subgroupSize","u32","attribute"))),"vertex"===e||"compute"===e){const e=this.getBuiltins("attribute");e&&t.push(e);const s=this.getAttributesArray();for(let e=0,r=s.length;e<r;e++){const r=s[e],n=r.name,i=this.getType(r.type);t.push(`@location( ${e} ) ${n} : ${i}`)}}return t.join(",\n\t")}getStructMembers(e){const t=[],s=e.getMemberTypes();for(let e=0;e<s.length;e++){const r=s[e];t.push(`\t@location( ${e} ) m${e} : ${r}<f32>`)}const r=this.getBuiltins("output");return r&&t.push("\t"+r),t.join(",\n")}getStructs(e){const t=[],s=this.structs[e];for(let e=0,r=s.length;e<r;e++){const r=s[e],n=r.name;let i=`struct ${n} {\n`;i+=this.getStructMembers(r),i+="\n}",t.push(i),t.push(`\nvar<private> output : ${n};\n\n`)}return t.join("\n\n")}getVar(e,t){return`var ${t} : ${this.getType(e)}`}getVars(e){const t=[],s=this.vars[e];if(void 0!==s)for(const e of s)t.push(`\t${this.getVar(e.type,e.name)};`);return`\n${t.join("\n")}\n`}getVaryings(e){const t=[];if("vertex"===e&&this.getBuiltin("position","Vertex","vec4<f32>","vertex"),"vertex"===e||"fragment"===e){const s=this.varyings,r=this.vars[e];for(let n=0;n<s.length;n++){const i=s[n];if(i.needsInterpolation){let e=`@location( ${n} )`;/^(int|uint|ivec|uvec)/.test(i.type)&&(e+=" @interpolate( flat )"),t.push(`${e} ${i.name} : ${this.getType(i.type)}`)}else"vertex"===e&&!1===r.includes(i)&&r.push(i)}}const s=this.getBuiltins(e);s&&t.push(s);const r=t.join(",\n\t");return"vertex"===e?this._getWGSLStruct("VaryingsStruct","\t"+r):r}getUniforms(e){const t=this.uniforms[e],s=[],r=[],n=[],i={};for(const n of t){const t=n.groupNode.name,o=this.bindingsIndexes[t];if("texture"===n.type||"cubeTexture"===n.type||"storageTexture"===n.type||"texture3D"===n.type){const t=n.node.value;let r;"fragment"===e&&!1===this.isUnfilterable(t)&&!0!==n.node.isStorageTextureNode&&(!0===t.isDepthTexture&&null!==t.compareFunction?s.push(`@binding( ${o.binding++} ) @group( ${o.group} ) var ${n.name}_sampler : sampler_comparison;`):s.push(`@binding( ${o.binding++} ) @group( ${o.group} ) var ${n.name}_sampler : sampler;`));let i="";if(!0===t.isMultisampleRenderTargetTexture&&(i="_multisampled"),!0===t.isCubeTexture)r="texture_cube<f32>";else if(!0===t.isDataArrayTexture||!0===t.isCompressedArrayTexture)r="texture_2d_array<f32>";else if(!0===t.isDepthTexture)r=`texture_depth${i}_2d`;else if(!0===t.isVideoTexture)r="texture_external";else if(!0===t.isData3DTexture)r="texture_3d<f32>";else if(!0===n.node.isStorageTextureNode){r=`texture_storage_2d<${uS(t)}, ${this.getStorageAccess(n.node)}>`}else{r=`texture${i}_2d<${this.getComponentTypeFromTexture(t).charAt(0)}32>`}s.push(`@binding( ${o.binding++} ) @group( ${o.group} ) var ${n.name} : ${r};`)}else if("buffer"===n.type||"storageBuffer"===n.type||"indirectStorageBuffer"===n.type){const e=n.node,t=this.getType(e.bufferType),s=e.bufferCount,i=s>0&&"buffer"===n.type?", "+s:"",a=e.isAtomic?`atomic<${t}>`:`${t}`,u=`\t${n.name} : array< ${a}${i} >\n`,l=e.isStorageBufferNode?`storage, ${this.getStorageAccess(e)}`:"uniform";r.push(this._getWGSLStructBinding("NodeBuffer_"+e.id,u,l,o.binding++,o.group))}else{const e=this.getType(this.getVectorType(n.type)),t=n.groupNode.name;(i[t]||(i[t]={index:o.binding++,id:o.group,snippets:[]})).snippets.push(`\t${n.name} : ${e}`)}}for(const e in i){const t=i[e];n.push(this._getWGSLStructBinding(e,t.snippets.join(",\n"),"uniform",t.index,t.id))}let o=s.join("\n");return o+=r.join("\n"),o+=n.join("\n"),o}buildCode(){const e=null!==this.material?{fragment:{},vertex:{}}:{compute:{}};this.sortBindingGroups();for(const t in e){const s=e[t];s.uniforms=this.getUniforms(t),s.attributes=this.getAttributes(t),s.varyings=this.getVaryings(t),s.structs=this.getStructs(t),s.vars=this.getVars(t),s.codes=this.getCodes(t),s.directives=this.getDirectives(t),s.scopedArrays=this.getScopedArrays(t);let r="// code\n\n";r+=this.flowCode[t];const n=this.flowNodes[t],i=n[n.length-1],o=i.outputNode,a=void 0!==o&&!0===o.isOutputStructNode;for(const e of n){const n=this.getFlowData(e),u=e.name;if(u&&(r.length>0&&(r+="\n"),r+=`\t// flow -> ${u}\n\t`),r+=`${n.code}\n\t`,e===i&&"compute"!==t)if(r+="// result\n\n\t","vertex"===t)r+=`varyings.Vertex = ${n.result};`;else if("fragment"===t)if(a)s.returnType=o.nodeType,r+=`return ${n.result};`;else{let e="\t@location(0) color: vec4<f32>";const t=this.getBuiltins("output");t&&(e+=",\n\t"+t),s.returnType="OutputStruct",s.structs+=this._getWGSLStruct("OutputStruct",e),s.structs+="\nvar<private> output : OutputStruct;\n\n",r+=`output.color = ${n.result};\n\n\treturn output;`}}s.flow=r}null!==this.material?(this.vertexShader=this._getWGSLVertexCode(e.vertex),this.fragmentShader=this._getWGSLFragmentCode(e.fragment)):this.computeShader=this._getWGSLComputeCode(e.compute,(this.object.workgroupSize||[64]).join(", "))}getMethod(e,t=null){let s;return null!==t&&(s=this._getWGSLMethod(e+"_"+t)),void 0===s&&(s=this._getWGSLMethod(e)),s||e}getType(e){return xS[e]||e}isAvailable(e){let t=yS[e];return void 0===t&&("float32Filterable"===e?t=this.renderer.hasFeature("float32-filterable"):"clipDistance"===e&&(t=this.renderer.hasFeature("clip-distances")),yS[e]=t),t}_getWGSLMethod(e){return void 0!==_S[e]&&this._include(e),NS[e]}_include(e){const t=_S[e];return t.build(this),null!==this.currentFunctionNode&&this.currentFunctionNode.includes.push(t),t}_getWGSLVertexCode(e){return`${this.getSignature()}\n// directives\n${e.directives}\n\n// uniforms\n${e.uniforms}\n\n// varyings\n${e.varyings}\nvar<private> varyings : VaryingsStruct;\n\n// codes\n${e.codes}\n\n@vertex\nfn main( ${e.attributes} ) -> VaryingsStruct {\n\n\t// vars\n\t${e.vars}\n\n\t// flow\n\t${e.flow}\n\n\treturn varyings;\n\n}\n`}_getWGSLFragmentCode(e){return`${this.getSignature()}\n// global\n${vS}\n\n// uniforms\n${e.uniforms}\n\n// structs\n${e.structs}\n\n// codes\n${e.codes}\n\n@fragment\nfn main( ${e.varyings} ) -> ${e.returnType} {\n\n\t// vars\n\t${e.vars}\n\n\t// flow\n\t${e.flow}\n\n}\n`}_getWGSLComputeCode(e,t){return`${this.getSignature()}\n// directives\n${e.directives}\n\n// system\nvar<private> instanceIndex : u32;\n\n// locals\n${e.scopedArrays}\n\n// uniforms\n${e.uniforms}\n\n// codes\n${e.codes}\n\n@compute @workgroup_size( ${t} )\nfn main( ${e.attributes} ) {\n\n\t// system\n\tinstanceIndex = id.x + id.y * numWorkgroups.x * u32(${t}) + id.z * numWorkgroups.x * numWorkgroups.y * u32(${t});\n\n\t// vars\n\t${e.vars}\n\n\t// flow\n\t${e.flow}\n\n}\n`}_getWGSLStruct(e,t){return`\nstruct ${e} {\n${t}\n};`}_getWGSLStructBinding(e,t,s,r=0,n=0){const i=e+"Struct";return`${this._getWGSLStruct(i,t)}\n@binding( ${r} ) @group( ${n} )\nvar<${s}> ${e} : ${i};`}}class AS{constructor(e){this.backend=e}getCurrentDepthStencilFormat(e){let t;return null!==e.depthTexture?t=this.getTextureFormatGPU(e.depthTexture):e.depth&&e.stencil?t=ay.Depth24PlusStencil8:e.depth&&(t=ay.Depth24Plus),t}getTextureFormatGPU(e){return this.backend.get(e).format}getCurrentColorFormat(e){let t;return t=null!==e.textures?this.getTextureFormatGPU(e.textures[0]):this.getPreferredCanvasFormat(),t}getCurrentColorSpace(e){return null!==e.textures?e.textures[0].colorSpace:this.backend.renderer.outputColorSpace}getPrimitiveTopology(e,t){return e.isPoints?Of:e.isLineSegments||e.isMesh&&!0===t.wireframe?Gf:e.isLine?kf:e.isMesh?zf:void 0}getSampleCount(e){let t=1;return e>1&&(t=Math.pow(2,Math.floor(Math.log2(e))),2===t&&(t=4)),t}getSampleCountRenderContext(e){return null!==e.textures?this.getSampleCount(e.sampleCount):this.getSampleCount(this.backend.renderer.samples)}getPreferredCanvasFormat(){return navigator.userAgent.includes("Quest")?ay.BGRA8Unorm:navigator.gpu.getPreferredCanvasFormat()}}const RS=new Map([[Int8Array,["sint8","snorm8"]],[Uint8Array,["uint8","unorm8"]],[Int16Array,["sint16","snorm16"]],[Uint16Array,["uint16","unorm16"]],[Int32Array,["sint32","snorm32"]],[Uint32Array,["uint32","unorm32"]],[Float32Array,["float32"]]]),CS=new Map([[Ie,["float16"]]]),ES=new Map([[Int32Array,"sint32"],[Int16Array,"sint32"],[Uint32Array,"uint32"],[Uint16Array,"uint32"],[Float32Array,"float32"]]);class wS{constructor(e){this.backend=e}createAttribute(e,t){const s=this._getBufferAttribute(e),r=this.backend,n=r.get(s);let i=n.buffer;if(void 0===i){const o=r.device;let a=s.array;if(!1===e.normalized&&(a.constructor===Int16Array||a.constructor===Uint16Array)){const e=new Uint32Array(a.length);for(let t=0;t<a.length;t++)e[t]=a[t];a=e}if(s.array=a,(s.isStorageBufferAttribute||s.isStorageInstancedBufferAttribute)&&3===s.itemSize){a=new a.constructor(4*s.count);for(let e=0;e<s.count;e++)a.set(s.array.subarray(3*e,3*e+3),4*e);s.itemSize=4,s.array=a}const u=a.byteLength+(4-a.byteLength%4)%4;i=o.createBuffer({label:s.name,size:u,usage:t,mappedAtCreation:!0}),new a.constructor(i.getMappedRange()).set(a),i.unmap(),n.buffer=i}}updateAttribute(e){const t=this._getBufferAttribute(e),s=this.backend,r=s.device,n=s.get(t).buffer,i=t.array,o=t.updateRanges;if(0===o.length)r.queue.writeBuffer(n,0,i,0);else{for(let e=0,t=o.length;e<t;e++){const t=o[e];r.queue.writeBuffer(n,0,i,t.start*i.BYTES_PER_ELEMENT,t.count*i.BYTES_PER_ELEMENT)}t.clearUpdateRanges()}}createShaderVertexBuffers(e){const t=e.getAttributes(),s=new Map;for(let e=0;e<t.length;e++){const r=t[e],n=r.array.BYTES_PER_ELEMENT,i=this._getBufferAttribute(r);let o=s.get(i);if(void 0===o){let e,t;!0===r.isInterleavedBufferAttribute?(e=r.data.stride*n,t=r.data.isInstancedInterleavedBuffer?nb:rb):(e=r.itemSize*n,t=r.isInstancedBufferAttribute?nb:rb),!1!==r.normalized||r.array.constructor!==Int16Array&&r.array.constructor!==Uint16Array||(e=4),o={arrayStride:e,attributes:[],stepMode:t},s.set(i,o)}const a=this._getVertexFormat(r),u=!0===r.isInterleavedBufferAttribute?r.offset*n:0;o.attributes.push({shaderLocation:e,offset:u,format:a})}return Array.from(s.values())}destroyAttribute(e){const t=this.backend;t.get(this._getBufferAttribute(e)).buffer.destroy(),t.delete(e)}async getArrayBufferAsync(e){const t=this.backend,s=t.device,r=t.get(this._getBufferAttribute(e)).buffer,n=r.size,i=s.createBuffer({label:e.name,size:n,usage:GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ}),o=s.createCommandEncoder({});o.copyBufferToBuffer(r,0,i,0,n),i.unmap();const a=o.finish();s.queue.submit([a]),await i.mapAsync(GPUMapMode.READ);return i.getMappedRange()}_getVertexFormat(e){const{itemSize:t,normalized:s}=e,r=e.array.constructor,n=e.constructor;let i;if(1==t)i=ES.get(r);else{const e=(CS.get(n)||RS.get(r))[s?1:0];if(e){const s=r.BYTES_PER_ELEMENT*t,n=4*Math.floor((s+3)/4)/r.BYTES_PER_ELEMENT;if(n%1)throw new Error("THREE.WebGPUAttributeUtils: Bad vertex format item size.");i=`${e}x${n}`}}return i||console.error("THREE.WebGPUAttributeUtils: Vertex format not supported yet."),i}_getBufferAttribute(e){return e.isInterleavedBufferAttribute&&(e=e.data),e}}class MS{constructor(e){this.backend=e,this.bindGroupLayoutCache=new WeakMap}createBindingsLayout(e){const t=this.backend.device,s=[];let r=0;for(const t of e.bindings){const e={binding:r++,visibility:t.visibility};if(t.isUniformBuffer||t.isStorageBuffer){const s={};t.isStorageBuffer&&(s.type=t.access),e.buffer=s}else if(t.isSampler){const s={};t.texture.isDepthTexture&&null!==t.texture.compareFunction&&(s.type="comparison"),e.sampler=s}else if(t.isSampledTexture&&t.texture.isVideoTexture)e.externalTexture={};else if(t.isSampledTexture&&t.store){const s=this.backend.get(t.texture).texture.format,r=t.access;e.storageTexture={format:s,access:r}}else if(t.isSampledTexture){const s={};if(!0===t.texture.isMultisampleRenderTargetTexture&&(s.multisampled=!0),t.texture.isDepthTexture)s.sampleType=qy;else if(t.texture.isDataTexture||t.texture.isDataArrayTexture||t.texture.isData3DTexture){const e=t.texture.type;e===y?s.sampleType=Ky:e===f?s.sampleType=Xy:e===E&&(this.backend.hasFeature("float32-filterable")?s.sampleType=Wy:s.sampleType=jy)}t.isSampledCubeTexture?s.viewDimension=eb:t.texture.isDataArrayTexture||t.texture.isCompressedArrayTexture?s.viewDimension=Jy:t.isSampledTexture3D&&(s.viewDimension=tb),e.texture=s}else console.error(`WebGPUBindingUtils: Unsupported binding "${t}".`);s.push(e)}return t.createBindGroupLayout({entries:s})}createBindings(e){const{backend:t,bindGroupLayoutCache:s}=this,r=t.get(e);let n=s.get(e.bindingsReference);void 0===n&&(n=this.createBindingsLayout(e),s.set(e.bindingsReference,n));const i=this.createBindGroup(e,n);r.layout=n,r.group=i}updateBinding(e){const t=this.backend,s=t.device,r=e.buffer,n=t.get(e).buffer;s.queue.writeBuffer(n,0,r,0)}createBindGroup(e,t){const s=this.backend,r=s.device;let n=0;const i=[];for(const t of e.bindings){if(t.isUniformBuffer){const e=s.get(t);if(void 0===e.buffer){const s=t.byteLength,n=GPUBufferUsage.UNIFORM|GPUBufferUsage.COPY_DST,i=r.createBuffer({label:"bindingBuffer_"+t.name,size:s,usage:n});e.buffer=i}i.push({binding:n,resource:{buffer:e.buffer}})}else if(t.isStorageBuffer){const e=s.get(t);if(void 0===e.buffer){const r=t.attribute;e.buffer=s.get(r).buffer}i.push({binding:n,resource:{buffer:e.buffer}})}else if(t.isSampler){const e=s.get(t.texture);i.push({binding:n,resource:e.sampler})}else if(t.isSampledTexture){const e=s.get(t.texture);let o;if(void 0!==e.externalTexture)o=r.importExternalTexture({source:e.externalTexture});else{const s=t.store?1:e.texture.mipLevelCount,r=`view-${e.texture.width}-${e.texture.height}-${s}`;if(o=e[r],void 0===o){const n=sb;let i;i=t.isSampledCubeTexture?eb:t.isSampledTexture3D?tb:t.texture.isDataArrayTexture||t.texture.isCompressedArrayTexture?Jy:Zy,o=e[r]=e.texture.createView({aspect:n,dimension:i,mipLevelCount:s})}}i.push({binding:n,resource:o})}n++}return r.createBindGroup({label:"bindGroup_"+e.name,layout:t,entries:i})}}class BS{constructor(e){this.backend=e}_getSampleCount(e){return this.backend.utils.getSampleCountRenderContext(e)}createRenderPipeline(e,t){const{object:s,material:r,geometry:n,pipeline:i}=e,{vertexProgram:o,fragmentProgram:a}=i,u=this.backend,l=u.device,d=u.utils,c=u.get(i),h=[];for(const t of e.getBindings()){const e=u.get(t);h.push(e.layout)}const p=u.attributeUtils.createShaderVertexBuffers(e);let g;!0===r.transparent&&r.blending!==G&&(g=this._getBlending(r));let m={};!0===r.stencilWrite&&(m={compare:this._getStencilCompare(r),failOp:this._getStencilOperation(r.stencilFail),depthFailOp:this._getStencilOperation(r.stencilZFail),passOp:this._getStencilOperation(r.stencilZPass)});const f=this._getColorWriteMask(r),y=[];if(null!==e.context.textures){const t=e.context.textures;for(let e=0;e<t.length;e++){const s=d.getTextureFormatGPU(t[e]);y.push({format:s,blend:g,writeMask:f})}}else{const t=d.getCurrentColorFormat(e.context);y.push({format:t,blend:g,writeMask:f})}const b=u.get(o).module,x=u.get(a).module,T=this._getPrimitiveState(s,n,r),_=this._getDepthCompare(r),N=d.getCurrentDepthStencilFormat(e.context),v=this._getSampleCount(e.context),S={label:`renderPipeline_${r.name||r.type}_${r.id}`,vertex:Object.assign({},b,{buffers:p}),fragment:Object.assign({},x,{targets:y}),primitive:T,multisample:{count:v,alphaToCoverageEnabled:r.alphaToCoverage&&v>1},layout:l.createPipelineLayout({bindGroupLayouts:h})},A={},R=e.context.depth,C=e.context.stencil;if(!0!==R&&!0!==C||(!0===R&&(A.format=N,A.depthWriteEnabled=r.depthWrite,A.depthCompare=_),!0===C&&(A.stencilFront=m,A.stencilBack={},A.stencilReadMask=r.stencilFuncMask,A.stencilWriteMask=r.stencilWriteMask),S.depthStencil=A),null===t)c.pipeline=l.createRenderPipeline(S);else{const e=new Promise((e=>{l.createRenderPipelineAsync(S).then((t=>{c.pipeline=t,e()}))}));t.push(e)}}createBundleEncoder(e){const t=this.backend,{utils:s,device:r}=t,n=s.getCurrentDepthStencilFormat(e),i={label:"renderBundleEncoder",colorFormats:[s.getCurrentColorFormat(e)],depthStencilFormat:n,sampleCount:this._getSampleCount(e)};return r.createRenderBundleEncoder(i)}createComputePipeline(e,t){const s=this.backend,r=s.device,n=s.get(e.computeProgram).module,i=s.get(e),o=[];for(const e of t){const t=s.get(e);o.push(t.layout)}i.pipeline=r.createComputePipeline({compute:n,layout:r.createPipelineLayout({bindGroupLayouts:o})})}_getBlending(e){let t,s;const r=e.blending,n=e.blendSrc,i=e.blendDst,o=e.blendEquation;if(r===mt){const r=null!==e.blendSrcAlpha?e.blendSrcAlpha:n,a=null!==e.blendDstAlpha?e.blendDstAlpha:i,u=null!==e.blendEquationAlpha?e.blendEquationAlpha:o;t={srcFactor:this._getBlendFactor(n),dstFactor:this._getBlendFactor(i),operation:this._getBlendOperation(o)},s={srcFactor:this._getBlendFactor(r),dstFactor:this._getBlendFactor(a),operation:this._getBlendOperation(u)}}else{const n=(e,r,n,i)=>{t={srcFactor:e,dstFactor:r,operation:Ry},s={srcFactor:n,dstFactor:i,operation:Ry}};if(e.premultipliedAlpha)switch(r){case F:n(gy,by,gy,by);break;case bt:n(gy,gy,gy,gy);break;case yt:n(py,fy,py,gy);break;case ft:n(py,my,py,yy)}else switch(r){case F:n(yy,by,gy,by);break;case bt:n(yy,gy,yy,gy);break;case yt:n(py,fy,py,gy);break;case ft:n(py,my,py,my)}}if(void 0!==t&&void 0!==s)return{color:t,alpha:s};console.error("THREE.WebGPURenderer: Invalid blending: ",r)}_getBlendFactor(e){let t;switch(e){case tt:t=py;break;case st:t=gy;break;case rt:t=my;break;case ut:t=fy;break;case nt:t=yy;break;case lt:t=by;break;case ot:t=xy;break;case dt:t=Ty;break;case at:t=_y;break;case ct:t=Ny;break;case it:t=vy;break;case 211:t=Sy;break;case 212:t=Ay;break;default:console.error("THREE.WebGPURenderer: Blend factor not supported.",e)}return t}_getStencilCompare(e){let t;const s=e.stencilFunc;switch(s){case ws:t=Hf;break;case Es:t=Qf;break;case Cs:t=Wf;break;case Rs:t=qf;break;case As:t=jf;break;case Ss:t=Yf;break;case vs:t=Kf;break;case Ns:t=Xf;break;default:console.error("THREE.WebGPURenderer: Invalid stencil function.",s)}return t}_getStencilOperation(e){let t;switch(e){case Ds:t=Fy;break;case Ls:t=Py;break;case Is:t=Iy;break;case Ps:t=Ly;break;case Fs:t=Dy;break;case Us:t=Vy;break;case Bs:t=Oy;break;case Ms:t=Gy;break;default:console.error("THREE.WebGPURenderer: Invalid stencil operation.",t)}return t}_getBlendOperation(e){let t;switch(e){case Ze:t=Ry;break;case Je:t=Cy;break;case et:t=Ey;break;case Os:t=wy;break;case Vs:t=My;break;default:console.error("THREE.WebGPUPipelineUtils: Blend equation not supported.",e)}return t}_getPrimitiveState(e,t,s){const r={},n=this.backend.utils;switch(r.topology=n.getPrimitiveTopology(e,s),null!==t.index&&!0===e.isLine&&!0!==e.isLineSegments&&(r.stripIndexFormat=t.index.array instanceof Uint16Array?iy:oy),s.side){case Oe:r.frontFace=ty,r.cullMode=ny;break;case x:r.frontFace=ty,r.cullMode=ry;break;case le:r.frontFace=ty,r.cullMode=sy;break;default:console.error("THREE.WebGPUPipelineUtils: Unknown material.side value.",s.side)}return r}_getColorWriteMask(e){return!0===e.colorWrite?Uy:By}_getDepthCompare(e){let t;if(!1===e.depthTest)t=Qf;else{const s=e.depthFunc;switch(s){case Rt:t=Hf;break;case At:t=Qf;break;case St:t=Wf;break;case vt:t=qf;break;case Nt:t=jf;break;case _t:t=Yf;break;case Tt:t=Kf;break;case xt:t=Xf;break;default:console.error("THREE.WebGPUPipelineUtils: Invalid depth function.",s)}}return t}}class US extends Pv{constructor(e={}){super(e),this.isWebGPUBackend=!0,this.parameters.alpha=void 0===e.alpha||e.alpha,this.parameters.requiredLimits=void 0===e.requiredLimits?{}:e.requiredLimits,this.trackTimestamp=!0===e.trackTimestamp,this.device=null,this.context=null,this.colorBuffer=null,this.defaultRenderPassdescriptor=null,this.utils=new AS(this),this.attributeUtils=new wS(this),this.bindingUtils=new MS(this),this.pipelineUtils=new BS(this),this.textureUtils=new aS(this),this.occludedResolveCache=new Map}async init(e){await super.init(e);const t=this.parameters;let s;if(void 0===t.device){const e={powerPreference:t.powerPreference},r=await navigator.gpu.requestAdapter(e);if(null===r)throw new Error("WebGPUBackend: Unable to create WebGPU adapter.");const n=Object.values(ib),i=[];for(const e of n)r.features.has(e)&&i.push(e);const o={requiredFeatures:i,requiredLimits:t.requiredLimits};s=await r.requestDevice(o)}else s=t.device;s.lost.then((t=>{const s={api:"WebGPU",message:t.message||"Unknown reason",reason:t.reason||null,originalEvent:t};e.onDeviceLost(s)}));const r=void 0!==t.context?t.context:e.domElement.getContext("webgpu");this.device=s,this.context=r;const n=t.alpha?"premultiplied":"opaque";this.trackTimestamp=this.trackTimestamp&&this.hasFeature(ib.TimestampQuery),this.context.configure({device:this.device,format:this.utils.getPreferredCanvasFormat(),usage:GPUTextureUsage.RENDER_ATTACHMENT|GPUTextureUsage.COPY_SRC,alphaMode:n}),this.updateSize()}get coordinateSystem(){return N}async getArrayBufferAsync(e){return await this.attributeUtils.getArrayBufferAsync(e)}getContext(){return this.context}_getDefaultRenderPassDescriptor(){let e=this.defaultRenderPassdescriptor;if(null===e){const t=this.renderer;e={colorAttachments:[{view:null}]},!0!==this.renderer.depth&&!0!==this.renderer.stencil||(e.depthStencilAttachment={view:this.textureUtils.getDepthBuffer(t.depth,t.stencil).createView()});const s=e.colorAttachments[0];this.renderer.samples>0?s.view=this.colorBuffer.createView():s.resolveTarget=void 0,this.defaultRenderPassdescriptor=e}const t=e.colorAttachments[0];return this.renderer.samples>0?t.resolveTarget=this.context.getCurrentTexture().createView():t.view=this.context.getCurrentTexture().createView(),e}_getRenderPassDescriptor(e){const t=e.renderTarget,s=this.get(t);let r=s.descriptors;if(void 0===r||s.width!==t.width||s.height!==t.height||s.activeMipmapLevel!==t.activeMipmapLevel||s.samples!==t.samples){r={},s.descriptors=r;const e=()=>{t.removeEventListener("dispose",e),this.delete(t)};t.addEventListener("dispose",e)}const n=e.getCacheKey();let i=r[n];if(void 0===i){const o=e.textures,a=[];for(let t=0;t<o.length;t++){const s=this.get(o[t]),r=s.texture.createView({baseMipLevel:e.activeMipmapLevel,mipLevelCount:1,baseArrayLayer:e.activeCubeFace,dimension:Zy});let n,i;void 0!==s.msaaTexture?(n=s.msaaTexture.createView(),i=r):(n=r,i=void 0),a.push({view:n,resolveTarget:i,loadOp:Jf,storeOp:Zf})}if(i={colorAttachments:a},e.depth){const t={view:this.get(e.depthTexture).texture.createView()};i.depthStencilAttachment=t}r[n]=i,s.width=t.width,s.height=t.height,s.samples=t.samples,s.activeMipmapLevel=t.activeMipmapLevel}return i}beginRender(e){const t=this.get(e),s=this.device,r=e.occlusionQueryCount;let n,i;r>0&&(t.currentOcclusionQuerySet&&t.currentOcclusionQuerySet.destroy(),t.currentOcclusionQueryBuffer&&t.currentOcclusionQueryBuffer.destroy(),t.currentOcclusionQuerySet=t.occlusionQuerySet,t.currentOcclusionQueryBuffer=t.occlusionQueryBuffer,t.currentOcclusionQueryObjects=t.occlusionQueryObjects,n=s.createQuerySet({type:"occlusion",count:r}),t.occlusionQuerySet=n,t.occlusionQueryIndex=0,t.occlusionQueryObjects=new Array(r),t.lastOcclusionObject=null),i=null===e.textures?this._getDefaultRenderPassDescriptor():this._getRenderPassDescriptor(e),this.initTimestampQuery(e,i),i.occlusionQuerySet=n;const o=i.depthStencilAttachment;if(null!==e.textures){const t=i.colorAttachments;for(let s=0;s<t.length;s++){const r=t[s];e.clearColor?(r.clearValue=0===s?e.clearColorValue:{r:0,g:0,b:0,a:1},r.loadOp=ey,r.storeOp=Zf):(r.loadOp=Jf,r.storeOp=Zf)}}else{const t=i.colorAttachments[0];e.clearColor?(t.clearValue=e.clearColorValue,t.loadOp=ey,t.storeOp=Zf):(t.loadOp=Jf,t.storeOp=Zf)}e.depth&&(e.clearDepth?(o.depthClearValue=e.clearDepthValue,o.depthLoadOp=ey,o.depthStoreOp=Zf):(o.depthLoadOp=Jf,o.depthStoreOp=Zf)),e.stencil&&(e.clearStencil?(o.stencilClearValue=e.clearStencilValue,o.stencilLoadOp=ey,o.stencilStoreOp=Zf):(o.stencilLoadOp=Jf,o.stencilStoreOp=Zf));const a=s.createCommandEncoder({label:"renderContext_"+e.id}),u=a.beginRenderPass(i);if(t.descriptor=i,t.encoder=a,t.currentPass=u,t.currentSets={attributes:{},bindingGroups:[],pipeline:null,index:null},t.renderBundles=[],e.viewport&&this.updateViewport(e),e.scissor){const{x:t,y:s,width:r,height:n}=e.scissorValue;u.setScissorRect(t,s,r,n)}}finishRender(e){const t=this.get(e),s=e.occlusionQueryCount;if(t.renderBundles.length>0&&t.currentPass.executeBundles(t.renderBundles),s>t.occlusionQueryIndex&&t.currentPass.endOcclusionQuery(),t.currentPass.end(),s>0){const r=8*s;let n=this.occludedResolveCache.get(r);void 0===n&&(n=this.device.createBuffer({size:r,usage:GPUBufferUsage.QUERY_RESOLVE|GPUBufferUsage.COPY_SRC}),this.occludedResolveCache.set(r,n));const i=this.device.createBuffer({size:r,usage:GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ});t.encoder.resolveQuerySet(t.occlusionQuerySet,0,s,n,0),t.encoder.copyBufferToBuffer(n,0,i,0,r),t.occlusionQueryBuffer=i,this.resolveOccludedAsync(e)}if(this.prepareTimestampBuffer(e,t.encoder),this.device.queue.submit([t.encoder.finish()]),null!==e.textures){const t=e.textures;for(let e=0;e<t.length;e++){const s=t[e];!0===s.generateMipmaps&&this.textureUtils.generateMipmaps(s)}}}isOccluded(e,t){const s=this.get(e);return s.occluded&&s.occluded.has(t)}async resolveOccludedAsync(e){const t=this.get(e),{currentOcclusionQueryBuffer:s,currentOcclusionQueryObjects:r}=t;if(s&&r){const e=new WeakSet;t.currentOcclusionQueryObjects=null,t.currentOcclusionQueryBuffer=null,await s.mapAsync(GPUMapMode.READ);const n=s.getMappedRange(),i=new BigUint64Array(n);for(let t=0;t<r.length;t++)i[t]!==BigInt(0)&&e.add(r[t]);s.destroy(),t.occluded=e}}updateViewport(e){const{currentPass:t}=this.get(e),{x:s,y:r,width:n,height:i,minDepth:o,maxDepth:a}=e.viewportValue;t.setViewport(s,r,n,i,o,a)}clear(e,t,s,r=null){const n=this.device,i=this.renderer;let o,a,u,l,d=[];if(e){const e=this.getClearColor();if(!0===this.renderer.alpha){const t=e.a;a={r:e.r*t,g:e.g*t,b:e.b*t,a:t}}else a={r:e.r,g:e.g,b:e.b,a:e.a}}if(null===r){u=i.depth,l=i.stencil;const t=this._getDefaultRenderPassDescriptor();if(e){d=t.colorAttachments;const e=d[0];e.clearValue=a,e.loadOp=ey,e.storeOp=Zf}(u||l)&&(o=t.depthStencilAttachment)}else{if(u=r.depth,l=r.stencil,e)for(const e of r.textures){const t=this.get(e),s=t.texture.createView();let r,n;void 0!==t.msaaTexture?(r=t.msaaTexture.createView(),n=s):(r=s,n=void 0),d.push({view:r,resolveTarget:n,clearValue:a,loadOp:ey,storeOp:Zf})}if(u||l){o={view:this.get(r.depthTexture).texture.createView()}}}u&&(t?(o.depthLoadOp=ey,o.depthClearValue=i.getClearDepth(),o.depthStoreOp=Zf):(o.depthLoadOp=Jf,o.depthStoreOp=Zf)),l&&(s?(o.stencilLoadOp=ey,o.stencilClearValue=i.getClearStencil(),o.stencilStoreOp=Zf):(o.stencilLoadOp=Jf,o.stencilStoreOp=Zf));const c=n.createCommandEncoder({});c.beginRenderPass({colorAttachments:d,depthStencilAttachment:o}).end(),n.queue.submit([c.finish()])}beginCompute(e){const t=this.get(e),s={};this.initTimestampQuery(e,s),t.cmdEncoderGPU=this.device.createCommandEncoder(),t.passEncoderGPU=t.cmdEncoderGPU.beginComputePass(s)}compute(e,t,s,r){const{passEncoderGPU:n}=this.get(e),i=this.get(r).pipeline;n.setPipeline(i);for(let e=0,t=s.length;e<t;e++){const t=s[e],r=this.get(t);n.setBindGroup(e,r.group)}const o=this.device.limits.maxComputeWorkgroupsPerDimension,a=this.get(t);void 0===a.dispatchSize&&(a.dispatchSize={x:0,y:1,z:1});const{dispatchSize:u}=a;t.dispatchCount>o?(u.x=Math.min(t.dispatchCount,o),u.y=Math.ceil(t.dispatchCount/o)):u.x=t.dispatchCount,n.dispatchWorkgroups(u.x,u.y,u.z)}finishCompute(e){const t=this.get(e);t.passEncoderGPU.end(),this.prepareTimestampBuffer(e,t.cmdEncoderGPU),this.device.queue.submit([t.cmdEncoderGPU.finish()])}async waitForGPU(){await this.device.queue.onSubmittedWorkDone()}draw(e,t){const{object:s,context:r,pipeline:n}=e,i=e.getBindings(),o=this.get(r),a=this.get(n).pipeline,u=o.currentSets,l=o.currentPass,d=e.getDrawParameters();if(null===d)return;u.pipeline!==a&&(l.setPipeline(a),u.pipeline=a);const c=u.bindingGroups;for(let e=0,t=i.length;e<t;e++){const t=i[e],s=this.get(t);c[t.index]!==t.id&&(l.setBindGroup(t.index,s.group),c[t.index]=t.id)}const h=e.getIndex(),p=null!==h;if(!0===p&&u.index!==h){const e=this.get(h).buffer,t=h.array instanceof Uint16Array?iy:oy;l.setIndexBuffer(e,t),u.index=h}const g=e.getVertexBuffers();for(let e=0,t=g.length;e<t;e++){const t=g[e];if(u.attributes[e]!==t){const s=this.get(t).buffer;l.setVertexBuffer(e,s),u.attributes[e]=t}}if(void 0!==o.occlusionQuerySet){const e=o.lastOcclusionObject;e!==s&&(null!==e&&!0===e.occlusionTest&&(l.endOcclusionQuery(),o.occlusionQueryIndex++),!0===s.occlusionTest&&(l.beginOcclusionQuery(o.occlusionQueryIndex),o.occlusionQueryObjects[o.occlusionQueryIndex]=s),o.lastOcclusionObject=s)}if(!0===s.isBatchedMesh){const e=s._multiDrawStarts,t=s._multiDrawCounts,r=s._multiDrawCount,n=s._multiDrawInstances,i=p?h.array.BYTES_PER_ELEMENT:1;for(let s=0;s<r;s++){const r=n?n[s]:1,o=r>1?0:s;l.drawIndexed(t[s],r,e[s]/i,0,o)}}else if(!0===p){const{vertexCount:r,instanceCount:n,firstVertex:i}=d,o=e.getIndirect();if(null!==o){const e=this.get(o).buffer;l.drawIndexedIndirect(e,0)}else l.drawIndexed(r,n,i,0,0);t.update(s,r,n)}else{const{vertexCount:r,instanceCount:n,firstVertex:i}=d,o=e.getIndirect();if(null!==o){const e=this.get(o).buffer;l.drawIndirect(e,0)}else l.draw(r,n,i,0);t.update(s,r,n)}}needsRenderUpdate(e){const t=this.get(e),{object:s,material:r}=e,n=this.utils,i=n.getSampleCountRenderContext(e.context),o=n.getCurrentColorSpace(e.context),a=n.getCurrentColorFormat(e.context),u=n.getCurrentDepthStencilFormat(e.context),l=n.getPrimitiveTopology(s,r);let d=!1;return t.material===r&&t.materialVersion===r.version&&t.transparent===r.transparent&&t.blending===r.blending&&t.premultipliedAlpha===r.premultipliedAlpha&&t.blendSrc===r.blendSrc&&t.blendDst===r.blendDst&&t.blendEquation===r.blendEquation&&t.blendSrcAlpha===r.blendSrcAlpha&&t.blendDstAlpha===r.blendDstAlpha&&t.blendEquationAlpha===r.blendEquationAlpha&&t.colorWrite===r.colorWrite&&t.depthWrite===r.depthWrite&&t.depthTest===r.depthTest&&t.depthFunc===r.depthFunc&&t.stencilWrite===r.stencilWrite&&t.stencilFunc===r.stencilFunc&&t.stencilFail===r.stencilFail&&t.stencilZFail===r.stencilZFail&&t.stencilZPass===r.stencilZPass&&t.stencilFuncMask===r.stencilFuncMask&&t.stencilWriteMask===r.stencilWriteMask&&t.side===r.side&&t.alphaToCoverage===r.alphaToCoverage&&t.sampleCount===i&&t.colorSpace===o&&t.colorFormat===a&&t.depthStencilFormat===u&&t.primitiveTopology===l&&t.clippingContextCacheKey===e.clippingContextCacheKey||(t.material=r,t.materialVersion=r.version,t.transparent=r.transparent,t.blending=r.blending,t.premultipliedAlpha=r.premultipliedAlpha,t.blendSrc=r.blendSrc,t.blendDst=r.blendDst,t.blendEquation=r.blendEquation,t.blendSrcAlpha=r.blendSrcAlpha,t.blendDstAlpha=r.blendDstAlpha,t.blendEquationAlpha=r.blendEquationAlpha,t.colorWrite=r.colorWrite,t.depthWrite=r.depthWrite,t.depthTest=r.depthTest,t.depthFunc=r.depthFunc,t.stencilWrite=r.stencilWrite,t.stencilFunc=r.stencilFunc,t.stencilFail=r.stencilFail,t.stencilZFail=r.stencilZFail,t.stencilZPass=r.stencilZPass,t.stencilFuncMask=r.stencilFuncMask,t.stencilWriteMask=r.stencilWriteMask,t.side=r.side,t.alphaToCoverage=r.alphaToCoverage,t.sampleCount=i,t.colorSpace=o,t.colorFormat=a,t.depthStencilFormat=u,t.primitiveTopology=l,t.clippingContextCacheKey=e.clippingContextCacheKey,d=!0),d}getRenderCacheKey(e){const{object:t,material:s}=e,r=this.utils,n=e.context;return[s.transparent,s.blending,s.premultipliedAlpha,s.blendSrc,s.blendDst,s.blendEquation,s.blendSrcAlpha,s.blendDstAlpha,s.blendEquationAlpha,s.colorWrite,s.depthWrite,s.depthTest,s.depthFunc,s.stencilWrite,s.stencilFunc,s.stencilFail,s.stencilZFail,s.stencilZPass,s.stencilFuncMask,s.stencilWriteMask,s.side,r.getSampleCountRenderContext(n),r.getCurrentColorSpace(n),r.getCurrentColorFormat(n),r.getCurrentDepthStencilFormat(n),r.getPrimitiveTopology(t,s),e.getGeometryCacheKey(),e.clippingContextCacheKey].join()}createSampler(e){this.textureUtils.createSampler(e)}destroySampler(e){this.textureUtils.destroySampler(e)}createDefaultTexture(e){this.textureUtils.createDefaultTexture(e)}createTexture(e,t){this.textureUtils.createTexture(e,t)}updateTexture(e,t){this.textureUtils.updateTexture(e,t)}generateMipmaps(e){this.textureUtils.generateMipmaps(e)}destroyTexture(e){this.textureUtils.destroyTexture(e)}copyTextureToBuffer(e,t,s,r,n,i){return this.textureUtils.copyTextureToBuffer(e,t,s,r,n,i)}initTimestampQuery(e,t){if(!this.trackTimestamp)return;const s=this.get(e);if(!s.timeStampQuerySet){const e=this.device.createQuerySet({type:"timestamp",count:2}),r={querySet:e,beginningOfPassWriteIndex:0,endOfPassWriteIndex:1};Object.assign(t,{timestampWrites:r}),s.timeStampQuerySet=e}}prepareTimestampBuffer(e,t){if(!this.trackTimestamp)return;const s=this.get(e),r=2*BigInt64Array.BYTES_PER_ELEMENT;void 0===s.currentTimestampQueryBuffers&&(s.currentTimestampQueryBuffers={resolveBuffer:this.device.createBuffer({label:"timestamp resolve buffer",size:r,usage:GPUBufferUsage.QUERY_RESOLVE|GPUBufferUsage.COPY_SRC}),resultBuffer:this.device.createBuffer({label:"timestamp result buffer",size:r,usage:GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ}),isMappingPending:!1});const{resolveBuffer:n,resultBuffer:i,isMappingPending:o}=s.currentTimestampQueryBuffers;!0!==o&&(t.resolveQuerySet(s.timeStampQuerySet,0,2,n,0),t.copyBufferToBuffer(n,0,i,0,r))}async resolveTimestampAsync(e,t="render"){if(!this.trackTimestamp)return;const s=this.get(e);if(void 0===s.currentTimestampQueryBuffers)return;const{resultBuffer:r,isMappingPending:n}=s.currentTimestampQueryBuffers;!0!==n&&(s.currentTimestampQueryBuffers.isMappingPending=!0,r.mapAsync(GPUMapMode.READ).then((()=>{const e=new BigUint64Array(r.getMappedRange()),n=Number(e[1]-e[0])/1e6;this.renderer.info.updateTimestamp(t,n),r.unmap(),s.currentTimestampQueryBuffers.isMappingPending=!1})))}createNodeBuilder(e,t){return new SS(e,t)}createProgram(e){this.get(e).module={module:this.device.createShaderModule({code:e.code,label:e.stage}),entryPoint:"main"}}destroyProgram(e){this.delete(e)}createRenderPipeline(e,t){this.pipelineUtils.createRenderPipeline(e,t)}createComputePipeline(e,t){this.pipelineUtils.createComputePipeline(e,t)}beginBundle(e){const t=this.get(e);t._currentPass=t.currentPass,t._currentSets=t.currentSets,t.currentSets={attributes:{},bindingGroups:[],pipeline:null,index:null},t.currentPass=this.pipelineUtils.createBundleEncoder(e)}finishBundle(e,t){const s=this.get(e),r=s.currentPass.finish();this.get(t).bundleGPU=r,s.currentSets=s._currentSets,s.currentPass=s._currentPass}addBundle(e,t){this.get(e).renderBundles.push(this.get(t).bundleGPU)}createBindings(e){this.bindingUtils.createBindings(e)}updateBindings(e){this.bindingUtils.createBindings(e)}updateBinding(e){this.bindingUtils.updateBinding(e)}createIndexAttribute(e){this.attributeUtils.createAttribute(e,GPUBufferUsage.INDEX|GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST)}createAttribute(e){this.attributeUtils.createAttribute(e,GPUBufferUsage.VERTEX|GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST)}createStorageAttribute(e){this.attributeUtils.createAttribute(e,GPUBufferUsage.STORAGE|GPUBufferUsage.VERTEX|GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST)}createIndirectStorageAttribute(e){this.attributeUtils.createAttribute(e,GPUBufferUsage.STORAGE|GPUBufferUsage.INDIRECT|GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST)}updateAttribute(e){this.attributeUtils.updateAttribute(e)}destroyAttribute(e){this.attributeUtils.destroyAttribute(e)}updateSize(){this.colorBuffer=this.textureUtils.getColorBuffer(),this.defaultRenderPassdescriptor=null}getMaxAnisotropy(){return 16}hasFeature(e){return this.device.features.has(e)}copyTextureToTexture(e,t,s=null,r=null,n=0){let i=0,o=0,a=0,u=0,l=0,d=0,c=e.image.width,h=e.image.height;null!==s&&(u=s.x,l=s.y,d=s.z||0,c=s.width,h=s.height),null!==r&&(i=r.x,o=r.y,a=r.z||0);const p=this.device.createCommandEncoder({label:"copyTextureToTexture_"+e.id+"_"+t.id}),g=this.get(e).texture,m=this.get(t).texture;p.copyTextureToTexture({texture:g,mipLevel:n,origin:{x:u,y:l,z:d}},{texture:m,mipLevel:n,origin:{x:i,y:o,z:a}},[c,h,1]),this.device.queue.submit([p.finish()])}copyFramebufferToTexture(e,t,s){const r=this.get(t);let n=null;n=t.renderTarget?e.isDepthTexture?this.get(t.depthTexture).texture:this.get(t.textures[0]).texture:e.isDepthTexture?this.textureUtils.getDepthBuffer(t.depth,t.stencil):this.context.getCurrentTexture();const i=this.get(e).texture;if(n.format!==i.format)return void console.error("WebGPUBackend: copyFramebufferToTexture: Source and destination formats do not match.",n.format,i.format);let o;if(r.currentPass?(r.currentPass.end(),o=r.encoder):o=this.device.createCommandEncoder({label:"copyFramebufferToTexture_"+e.id}),o.copyTextureToTexture({texture:n,origin:{x:s.x,y:s.y,z:0}},{texture:i},[s.z,s.w]),e.generateMipmaps&&this.textureUtils.generateMipmaps(e),r.currentPass){const{descriptor:e}=r;for(let t=0;t<e.colorAttachments.length;t++)e.colorAttachments[t].loadOp=Jf;t.depth&&(e.depthStencilAttachment.depthLoadOp=Jf),t.stencil&&(e.depthStencilAttachment.stencilLoadOp=Jf),r.currentPass=o.beginRenderPass(e),r.currentSets={attributes:{},bindingGroups:[],pipeline:null,index:null}}else this.device.queue.submit([o.finish()])}}class FS extends Gs{constructor(e,t,s,r,n,i){super(e,t,s,r,n,i),this.iesMap=null}copy(e,t){return super.copy(e,t),this.iesMap=e.iesMap,this}}class PS extends rv{constructor(){super(),this.addLight(NT,ks),this.addLight(PN,zs),this.addLight(VN,$s),this.addLight(ON,Gs),this.addLight(kN,Hs),this.addLight(zN,Ws),this.addLight($N,js),this.addLight(GN,FS),this.addToneMapping(Hb,qs),this.addToneMapping(Wb,Ks),this.addToneMapping(jb,Xs),this.addToneMapping(Kb,Ys),this.addToneMapping(Zb,Qs),this.addToneMapping(Jb,Zs)}}class IS extends hv{constructor(e={}){let t;e.forceWebGL?t=Zv:(t=US,e.getFallback=()=>(console.warn("THREE.WebGPURenderer: WebGPU is not available, running under WebGL2 backend."),new Zv(e)));super(new t(e),e),this.library=new PS,this.isWebGPURenderer=!0}}class LS extends Js{constructor(){super(),this.isBundleGroup=!0,this.type="BundleGroup",this.static=!0,this.version=0}set needsUpdate(e){!0===e&&this.version++}}const DS=new rh,VS=new xf(DS);class OS{constructor(e,t=Ln(0,0,1,1)){this.renderer=e,this.outputNode=t,this.outputColorTransform=!0,this.needsUpdate=!0,DS.name="PostProcessing"}render(){this.update();const e=this.renderer,t=e.toneMapping,s=e.outputColorSpace;e.toneMapping=d,e.outputColorSpace=Se,VS.render(e),e.toneMapping=t,e.outputColorSpace=s}update(){if(!0===this.needsUpdate){const e=this.renderer,t=e.toneMapping,s=e.outputColorSpace;VS.material.fragmentNode=!0===this.outputColorTransform?cu(this.outputNode,t,s):this.outputNode.context({toneMapping:t,outputColorSpace:s}),VS.material.needsUpdate=!0,this.needsUpdate=!1}}async renderAsync(){this.update();const e=this.renderer,t=e.toneMapping,s=e.outputColorSpace;e.toneMapping=d,e.outputColorSpace=Se,await VS.renderAsync(e),e.toneMapping=t,e.outputColorSpace=s}}function GS(t,s={}){return s.toneMapping=t.toneMapping,s.toneMappingExposure=t.toneMappingExposure,s.outputColorSpace=t.outputColorSpace,s.renderTarget=t.getRenderTarget(),s.activeCubeFace=t.getActiveCubeFace(),s.activeMipmapLevel=t.getActiveMipmapLevel(),s.renderObjectFunction=t.getRenderObjectFunction(),s.pixelRatio=t.getPixelRatio(),s.mrt=t.getMRT(),s.clearColor=t.getClearColor(s.clearColor||new e),s.clearAlpha=t.getClearAlpha(),s.autoClear=t.autoClear,s.scissorTest=t.getScissorTest(),s}function kS(e,t){e.toneMapping=t.toneMapping,e.toneMappingExposure=t.toneMappingExposure,e.outputColorSpace=t.outputColorSpace,e.setRenderTarget(t.renderTarget,t.activeCubeFace,t.activeMipmapLevel),e.setRenderObjectFunction(t.renderObjectFunction),e.setPixelRatio(t.pixelRatio),e.setMRT(t.mrt),e.setClearColor(t.clearColor,t.clearAlpha),e.autoClear=t.autoClear,e.setScissorTest(t.scissorTest)}function zS(e,t,s={}){return(s=GS(e,s)).background=t.background,s.backgroundNode=t.backgroundNode,s.overrideMaterial=t.overrideMaterial,s}var $S=Object.freeze({__proto__:null,resetRendererAndSceneState:function(e,t,s){return s=zS(e,t,s),t.background=null,t.backgroundNode=null,t.overrideMaterial=null,s},resetRendererState:function(e,t){return t=GS(e,t),e.setMRT(null),e.setRenderObjectFunction(null),e.setClearColor(0,1),e.autoClear=!0,t},restoreRendererAndSceneState:function(e,t,s){kS(e,s),t.background=s.background,t.backgroundNode=s.backgroundNode,t.overrideMaterial=s.overrideMaterial},restoreRendererState:kS,saveRendererAndSceneState:zS,saveRendererState:GS});class HS extends ee{constructor(e=1,t=1){super(),this.image={width:e,height:t},this.magFilter=$,this.minFilter=$,this.isStorageTexture=!0}}class WS extends we{constructor(e,t,s=Float32Array){!1===ArrayBuffer.isView(e)&&(e=new s(e*t)),super(e,t),this.isStorageBufferAttribute=!0}}class jS extends R{constructor(e,t,s=Float32Array){!1===ArrayBuffer.isView(e)&&(e=new s(e*t)),super(e,t),this.isStorageInstancedBufferAttribute=!0}}class qS extends WS{constructor(e,t){super(e,t,Uint32Array),this.isIndirectStorageBufferAttribute=!0}}class KS extends er{constructor(e){super(e),this.textures={},this.nodes={}}load(e,t,s,r){const n=new tr(this.manager);n.setPath(this.path),n.setRequestHeader(this.requestHeader),n.setWithCredentials(this.withCredentials),n.load(e,(s=>{try{t(this.parse(JSON.parse(s)))}catch(t){r?r(t):console.error(t),this.manager.itemError(e)}}),s,r)}parseNodes(e){const t={};if(void 0!==e){for(const s of e){const{uuid:e,type:r}=s;t[e]=this.createNodeFromType(r),t[e].uuid=e}const s={nodes:t,textures:this.textures};for(const r of e){r.meta=s;t[r.uuid].deserialize(r),delete r.meta}}return t}parse(e){const t=this.createNodeFromType(e.type);t.uuid=e.uuid;const s={nodes:this.parseNodes(e.nodes),textures:this.textures};return e.meta=s,t.deserialize(e),delete e.meta,t}setTextures(e){return this.textures=e,this}setNodes(e){return this.nodes=e,this}createNodeFromType(e){return void 0===this.nodes[e]?(console.error("THREE.NodeLoader: Node type not found:",e),Sn()):hn(new this.nodes[e])}}class XS extends sr{constructor(e){super(e),this.nodes={},this.nodeMaterials={}}parse(e){const t=super.parse(e),s=this.nodes,r=e.inputNodes;for(const e in r){const n=r[e];t[e]=s[n]}return t}setNodes(e){return this.nodes=e,this}setNodeMaterials(e){return this.nodeMaterials=e,this}createMaterialFromType(e){const t=this.nodeMaterials[e];return void 0!==t?new t:super.createMaterialFromType(e)}}class YS extends rr{constructor(e){super(e),this.nodes={},this.nodeMaterials={},this._nodesJSON=null}setNodes(e){return this.nodes=e,this}setNodeMaterials(e){return this.nodeMaterials=e,this}parse(e,t){this._nodesJSON=e.nodes;const s=super.parse(e,t);return this._nodesJSON=null,s}parseNodes(e,t){if(void 0!==e){const s=new KS;return s.setNodes(this.nodes),s.setTextures(t),s.parseNodes(e)}return{}}parseMaterials(e,t){const s={};if(void 0!==e){const r=this.parseNodes(this._nodesJSON,t),n=new XS;n.setTextures(t),n.setNodes(r),n.setNodeMaterials(this.nodeMaterials);for(let t=0,r=e.length;t<r;t++){const r=e[t];s[r.uuid]=n.parse(r)}}return s}}export{Ys as ACESFilmicToneMapping,bc as AONode,Ze as AddEquation,K as AddOperation,bt as AdditiveBlending,Qs as AgXToneMapping,Mt as AlphaFormat,ms as AlwaysCompare,At as AlwaysDepth,Es as AlwaysStencilFunc,Hs as AmbientLight,kN as AmbientLightNode,xT as AnalyticLightNode,Rr as ArrayElementNode,Fi as AssignNode,pu as AttributeNode,jh as BRDF_GGX,Bh as BRDF_Lambert,x as BackSide,Sh as BasicEnvironmentNode,tc as BatchNode,O as BoxGeometry,dc as Break,we as BufferAttribute,ja as BufferAttributeNode,Te as BufferGeometry,Nl as BufferNode,sd as BumpMapNode,LS as BundleGroup,tu as BypassNode,Xe as ByteType,Ja as CacheNode,Xs as CineonToneMapping,ds as ClampToEdgeWrapping,ex as CodeNode,e as Color,u as ColorManagement,Fa as ColorSpaceNode,Qa as ComputeNode,Ir as ConstNode,_a as ContextNode,lc as Continue,Cr as ConvertNode,H as CubeCamera,T as CubeReflectionMapping,_ as CubeRefractionMapping,W as CubeTexture,Tl as CubeTextureNode,Me as CubeUVReflectionMapping,pt as CullFaceBack,gt as CullFaceFront,ht as CullFaceNone,mt as CustomBlending,qh as DFGApprox,$h as D_GGX,C as DataArrayTexture,ke as DataTexture,Us as DecrementStencilOp,Ms as DecrementWrapStencilOp,ce as DepthFormat,de as DepthStencilFormat,B as DepthTexture,zs as DirectionalLight,PN as DirectionalLightNode,uu as Discard,le as DoubleSide,at as DstAlphaFactor,ot as DstColorFactor,p as DynamicDrawUsage,ao as EPSILON,eg as EnvironmentNode,ys as EqualCompare,Nt as EqualDepth,As as EqualStencilFunc,fh as EquirectUVNode,j as EquirectangularReflectionMapping,q as EquirectangularRefractionMapping,ve as Euler,o as EventDispatcher,ou as ExpressionNode,Mh as F_Schlick,tr as FileLoader,Ie as Float16BufferAttribute,_e as Float32BufferAttribute,E as FloatType,yn as Fn,Tx as FogExp2Node,fx as FogNode,bx as FogRangeNode,w as FramebufferTexture,sl as FrontFacingNode,Oe as FrontSide,Ge as Frustum,Ii as FunctionCallNode,ix as FunctionNode,Mm as FunctionOverloadingNode,YN as GLSLNodeParser,xs as GreaterCompare,Tt as GreaterDepth,bs as GreaterEqualCompare,_t as GreaterEqualDepth,Ss as GreaterEqualStencilFunc,vs as GreaterStencilFunc,Js as Group,ye as HalfFloatType,Ws as HemisphereLight,zN as HemisphereLightNode,FS as IESSpotLight,GN as IESSpotLightNode,uo as INFINITY,_n as If,Fs as IncrementStencilOp,Bs as IncrementWrapStencilOp,jd as IndexNode,qS as IndirectStorageBufferAttribute,Jd as InstanceNode,R as InstancedBufferAttribute,A as InstancedInterleavedBuffer,ih as InstancedPointsNodeMaterial,y as IntType,h as InterleavedBuffer,g as InterleavedBufferAttribute,Ps as InvertStencilOp,_c as IrradianceNode,wr as JoinNode,Ds as KeepStencilOp,Ae as LessCompare,St as LessDepth,fs as LessEqualCompare,vt as LessEqualDepth,Rs as LessEqualStencilFunc,Cs as LessStencilFunc,js as LightProbe,$N as LightProbeNode,iv as Lighting,xc as LightingContextNode,Rh as LightingModel,yc as LightingNode,nT as LightsNode,ch as Line2NodeMaterial,I as LineBasicMaterial,ah as LineBasicNodeMaterial,L as LineDashedMaterial,lh as LineDashedNodeMaterial,$ as LinearFilter,be as LinearMipMapLinearFilter,M as LinearMipmapLinearFilter,Fe as LinearMipmapNearestFilter,Se as LinearSRGBColorSpace,qs as LinearToneMapping,er as Loader,uc as Loop,ac as LoopNode,Ut as LuminanceAlphaFormat,Bt as LuminanceFormat,Tm as MRTNode,pg as MatcapUVNode,U as Material,sr as MaterialLoader,id as MaterialNode,Ul as MaterialReferenceNode,a as MathUtils,n as Matrix3,i as Matrix4,Vs as MaxEquation,bu as MaxMipLevelNode,k as Mesh,Q as MeshBasicMaterial,wh as MeshBasicNodeMaterial,Z as MeshLambertMaterial,Lh as MeshLambertNodeMaterial,ne as MeshMatcapMaterial,fg as MeshMatcapNodeMaterial,D as MeshNormalMaterial,mh as MeshNormalNodeMaterial,J as MeshPhongMaterial,Vh as MeshPhongNodeMaterial,se as MeshPhysicalMaterial,og as MeshPhysicalNodeMaterial,ug as MeshSSSNodeMaterial,te as MeshStandardMaterial,ng as MeshStandardNodeMaterial,re as MeshToonMaterial,hg as MeshToonNodeMaterial,Os as MinEquation,cs as MirroredRepeatWrapping,X as MixOperation,Vu as ModelNode,Hd as ModelViewProjectionNode,mc as MorphNode,ft as MultiplyBlending,Y as MultiplyOperation,hs as NearestFilter,Pe as NearestMipmapLinearFilter,ps as NearestMipmapNearestFilter,Zs as NeutralToneMapping,gs as NeverCompare,Rt as NeverDepth,ws as NeverStencilFunc,G as NoBlending,m as NoColorSpace,d as NoToneMapping,Ar as Node,O_ as NodeAttribute,BN as NodeBuilder,W_ as NodeCache,$_ as NodeCode,UN as NodeFrame,FN as NodeFunctionInput,KS as NodeLoader,rh as NodeMaterial,XS as NodeMaterialLoader,ir as NodeMaterialObserver,YS as NodeObjectLoader,yr as NodeShaderStage,xr as NodeType,G_ as NodeUniform,br as NodeUpdateType,fr as NodeUtils,k_ as NodeVar,z_ as NodeVarying,F as NormalBlending,Zl as NormalMapNode,Ts as NotEqualCompare,xt as NotEqualDepth,Ns as NotEqualStencilFunc,fe as Object3D,Uu as Object3DNode,rr as ObjectLoader,S as ObjectSpaceNormalMap,st as OneFactor,ct as OneMinusDstAlphaFactor,dt as OneMinusDstColorFactor,lt as OneMinusSrcAlphaFactor,ut as OneMinusSrcColorFactor,xe as OrthographicCamera,ym as OutputStructNode,Ve as PCFShadowMap,lo as PI,co as PI2,_N as PMREMGenerator,Qp as PMREMNode,hm as ParameterNode,Vb as PassNode,Be as PerspectiveCamera,Ph as PhongLightingModel,Cp as PhysicalLightingModel,me as Plane,ks as PointLight,NT as PointLightNode,wf as PointUVNode,P as PointsMaterial,bg as PointsNodeMaterial,OS as PostProcessing,$S as PostProcessingUtils,Mb as PosterizeNode,si as PropertyNode,xf as QuadMesh,as as RED_GREEN_RGTC2_Format,is as RED_RGTC1_Format,Le as REVISION,Ue as RGBAFormat,qe as RGBAIntegerFormat,ts as RGBA_ASTC_10x10_Format,Zt as RGBA_ASTC_10x5_Format,Jt as RGBA_ASTC_10x6_Format,es as RGBA_ASTC_10x8_Format,ss as RGBA_ASTC_12x10_Format,rs as RGBA_ASTC_12x12_Format,Ht as RGBA_ASTC_4x4_Format,Wt as RGBA_ASTC_5x4_Format,jt as RGBA_ASTC_5x5_Format,qt as RGBA_ASTC_6x5_Format,Kt as RGBA_ASTC_6x6_Format,Xt as RGBA_ASTC_8x5_Format,Yt as RGBA_ASTC_8x6_Format,Qt as RGBA_ASTC_8x8_Format,ns as RGBA_BPTC_Format,$t as RGBA_ETC2_EAC_Format,Gt as RGBA_PVRTC_2BPPV1_Format,Ot as RGBA_PVRTC_4BPPV1_Format,Pt as RGBA_S3TC_DXT1_Format,It as RGBA_S3TC_DXT3_Format,Lt as RGBA_S3TC_DXT5_Format,je as RGBFormat,We as RGBIntegerFormat,kt as RGB_ETC1_Format,zt as RGB_ETC2_Format,Vt as RGB_PVRTC_2BPPV1_Format,Dt as RGB_PVRTC_4BPPV1_Format,Ft as RGB_S3TC_DXT1_Format,Ce as RGFormat,He as RGIntegerFormat,_f as RTTNode,Sx as RangeNode,$s as RectAreaLight,VN as RectAreaLightNode,$e as RedFormat,ze as RedIntegerFormat,wl as ReferenceNode,pf as ReflectorNode,Ks as ReinhardToneMapping,ru as RemapNode,du as RenderOutputNode,ge as RenderTarget,ka as RendererReferenceNode,ls as RepeatWrapping,Is as ReplaceStencilOp,lu as Return,et as ReverseSubtractEquation,xg as RotateNode,us as SIGNED_RED_GREEN_RGTC2_Format,os as SIGNED_RED_RGTC1_Format,De as SRGBColorSpace,l as SRGBTransfer,z as Scene,Ff as SceneNode,Xh as Schlick_to_F0,Sc as ScreenNode,gx as ScriptableNode,px as ScriptableNodeResources,lx as ScriptableValueNode,Ur as SetNode,cn as ShaderNode,oe as ShadowMaterial,mT as ShadowNode,Ag as ShadowNodeMaterial,Ye as ShortType,nc as SkinningNode,Ee as SphereGeometry,Br as SplitNode,Gs as SpotLight,ON as SpotLightNode,ie as SpriteMaterial,Ng as SpriteNodeMaterial,qm as SpriteSheetUVNode,nt as SrcAlphaFactor,it as SrcAlphaSaturateFactor,rt as SrcColorFactor,gm as StackNode,c as StaticDrawUsage,Df as StorageArrayElementNode,WS as StorageBufferAttribute,ob as StorageBufferNode,jS as StorageInstancedBufferAttribute,HS as StorageTexture,lb as StorageTextureNode,Je as SubtractEquation,yt as SubtractiveBlending,ql as TBNViewMatrix,v as TangentSpaceNormalMap,Er as TempNode,ee as Texture,Cg as Texture3DNode,Tu as TextureNode,fu as TextureSizeNode,$a as ToneMappingNode,zb as ToonOutlinePassNode,Xm as TriplanarTexturesNode,Ne as UVMapping,ue as Uint16BufferAttribute,ae as Uint32BufferAttribute,Al as UniformArrayNode,Kn as UniformGroupNode,ei as UniformNode,pe as UnsignedByteType,he as UnsignedInt248Type,wt as UnsignedInt5999Type,f as UnsignedIntType,Ct as UnsignedShort4444Type,Et as UnsignedShort5551Type,Ke as UnsignedShortType,hb as UserDataNode,Re as VSMShadowMap,kh as V_GGX_SmithCorrelated,Sa as VarNode,Ca as VaryingNode,t as Vector2,s as Vector3,r as Vector4,Cf as VertexColorNode,zc as ViewportDepthNode,Gc as ViewportDepthTextureNode,Fb as ViewportSharedTextureNode,Lc as ViewportTextureNode,wg as VolumeNodeMaterial,b as WebGLCoordinateSystem,V as WebGLCubeRenderTarget,N as WebGPUCoordinateSystem,IS as WebGPURenderer,tt as ZeroFactor,Ls as ZeroStencilOp,Fo as abs,Kb as acesFilmicToneMapping,Bo as acos,Vi as add,Vr as addMethodChaining,hu as addNodeElement,Zb as agxToneMapping,ho as all,fi as alphaT,Xi as and,yi as anisotropy,xi as anisotropyB,bi as anisotropyT,po as any,Nn as append,Hn as arrayBuffer,Mo as asin,Pi as assign,Uo as atan,jo as atan2,$x as atomicAdd,qx as atomicAnd,kx as atomicFunc,Wx as atomicMax,jx as atomicMin,Kx as atomicOr,zx as atomicStore,Hx as atomicSub,Xx as atomicXor,Bi as attenuationColor,Mi as attenuationDistance,gu as attribute,Pf as backgroundBlurriness,If as backgroundIntensity,Lf as backgroundRotation,sc as batch,Wm as billboarding,Ji as bitAnd,eo as bitNot,to as bitOr,so as bitXor,kl as bitangentGeometry,zl as bitangentLocal,$l as bitangentView,Hl as bitangentWorld,Ho as bitcast,qp as blur,Cn as bool,vl as buffer,qa as bufferAttribute,rd as bumpMap,xb as burn,Bn as bvec2,In as bvec3,On as bvec4,su as bypass,eu as cache,Li as call,Au as cameraFar,Su as cameraNear,Mu as cameraNormalMatrix,Bu as cameraPosition,Ru as cameraProjectionMatrix,Cu as cameraProjectionMatrixInverse,Eu as cameraViewMatrix,wu as cameraWorldMatrix,aa as cbrt,wb as cdl,So as ceil,vT as checker,jb as cineonToneMapping,da as clamp,li as clearcoat,di as clearcoatRoughness,tx as code,vn as color,Da as colorSpaceToWorking,ph as colorToDirection,Za as compute,Ta as cond,Na as context,jn as convert,Va as convertColorSpace,vf as convertToTexture,Eo as cos,Qe as createCanvasElement,ta as cross,_l as cubeTexture,Vo as dFdx,Oo as dFdy,Si as dashSize,_r as defaultBuildStages,Tr as defaultShaderStages,ln as defined,fo as degrees,Pm as deltaTime,_x as densityFog,Xc as depth,kb as depthPass,Jo as difference,ii as diffuseColor,_T as directPointLight,hh as directionToColor,Ui as dispersion,Zo as distance,ki as div,Tb as dodge,ea as dot,Zd as drawIndex,Ka as dynamicBufferAttribute,Wn as element,oi as emissive,$i as equal,go as equals,yh as equirectUV,yo as exp,bo as exp2,au as expression,nl as faceDirection,ga as faceForward,Sn as float,vo as floor,yx as fog,Ro as fract,Qn as frameGroup,Im as frameId,rl as frontFacing,$o as fwidth,Sm as gain,Ai as gapSize,dn as getConstNodeType,Tn as getCurrentStack,$p as getDirection,TT as getDistanceAttenuation,Oh as getGeometryRoughness,Rf as getNormalFromDepth,U_ as getParallaxCorrectNormal,Gh as getRoughness,Af as getScreenPosition,F_ as getShIrradianceAt,xm as getTextureIndex,Sf as getViewPosition,nx as glsl,ax as glslFn,vb as grayscale,ji as greaterThan,Ki as greaterThanEqual,Nm as hash,Ku as highPrecisionModelNormalViewMatrix,qu as highPrecisionModelViewMatrix,Rb as hue,ec as instance,Kd as instanceIndex,Xa as instancedBufferAttribute,Ya as instancedDynamicBufferAttribute,An as int,No as inverseSqrt,Qd as invocationLocalIndex,Yd as invocationSubgroupIndex,Ci as ior,pi as iridescence,gi as iridescenceIOR,mi as iridescenceThickness,wn as ivec2,Fn as ivec3,Dn as ivec4,sx as js,va as label,Io as length,ua as lengthSq,Wi as lessThan,qi as lessThanEqual,Zx as lightPosition,tT as lightTargetDirection,Jx as lightTargetPosition,eT as lightViewPosition,Tc as lightingContext,iT as lights,Yc as linearDepth,Hb as linearToneMapping,Mx as localId,xo as log,To as log2,cc as loop,Cb as luminance,Gn as mat2,kn as mat3,zn as mat4,gg as matcapUV,zd as materialAOMap,od as materialAlphaTest,Ad as materialAnisotropy,$d as materialAnisotropyVector,Fd as materialAttenuationColor,Ud as materialAttenuationDistance,xd as materialClearcoat,_d as materialClearcoatNormal,Td as materialClearcoatRoughness,ad as materialColor,Gd as materialDispersion,ld as materialEmissive,Bd as materialIOR,Rd as materialIridescence,Cd as materialIridescenceIOR,Ed as materialIridescenceThickness,kd as materialLightMap,Vd as materialLineDashOffset,Id as materialLineDashSize,Ld as materialLineGapSize,Pd as materialLineScale,Dd as materialLineWidth,yd as materialMetalness,bd as materialNormal,dd as materialOpacity,Od as materialPointWidth,Fl as materialReference,md as materialReflectivity,ml as materialRefractionRatio,Nd as materialRotation,fd as materialRoughness,vd as materialSheen,Sd as materialSheenRoughness,ud as materialShininess,cd as materialSpecular,pd as materialSpecularColor,hd as materialSpecularIntensity,gd as materialSpecularStrength,Md as materialThickness,wd as materialTransmission,Ko as max,xu as maxMipLevel,ui as metalness,qo as min,la as mix,fa as mixElement,Xo as mod,zi as modInt,Ou as modelDirection,Hu as modelNormalMatrix,ku as modelPosition,zu as modelScale,ju as modelViewMatrix,$u as modelViewPosition,Wd as modelViewProjection,Gu as modelWorldMatrix,Wu as modelWorldMatrixInverse,fc as morphReference,_m as mrt,Gi as mul,c_ as mx_aastep,C_ as mx_cell_noise_float,T_ as mx_contrast,E_ as mx_fractal_noise_float,w_ as mx_fractal_noise_vec2,M_ as mx_fractal_noise_vec3,B_ as mx_fractal_noise_vec4,u_ as mx_hsvtorgb,__ as mx_noise_float,N_ as mx_noise_vec3,v_ as mx_noise_vec4,p_ as mx_ramplr,g_ as mx_ramptb,l_ as mx_rgbtohsv,x_ as mx_safepower,f_ as mx_splitlr,y_ as mx_splittb,d_ as mx_srgb_texture_to_lin_rec709,b_ as mx_transform_uv,S_ as mx_worley_noise_float,A_ as mx_worley_noise_vec2,R_ as mx_worley_noise_vec3,Lo as negate,Jb as neutralToneMapping,gn as nodeArray,fn as nodeImmutable,hn as nodeObject,pn as nodeObjects,mn as nodeProxy,al as normalFlat,il as normalGeometry,ol as normalLocal,Jl as normalMap,ul as normalView,ll as normalWorld,Ao as normalize,Qi as not,Hi as notEqual,Ex as numWorkgroups,Fu as objectDirection,Jn as objectGroup,Iu as objectPosition,Lu as objectScale,Du as objectViewPosition,Pu as objectWorldMatrix,Do as oneMinus,Yi as or,Hc as orthographicDepthToViewZ,zm as oscSawtooth,Om as oscSine,Gm as oscSquare,km as oscTriangle,vi as output,bm as outputStruct,Nb as overlay,Um as overloadingFn,vm as parabola,Kl as parallaxDirection,Xl as parallaxUV,pm as parameter,Ob as pass,Gb as passTexture,Am as pcurve,qc as perspectiveDepthToLogarithmicDepth,jc as perspectiveDepthToViewZ,Zp as pmremTexture,Mf as pointUV,Ri as pointWidth,Xu as positionGeometry,Yu as positionLocal,Qu as positionPrevious,el as positionView,tl as positionViewDirection,Zu as positionWorld,Ju as positionWorldDirection,Bb as posterize,sa as pow,ra as pow2,na as pow3,ia as pow4,ri as property,mo as radians,ma as rand,Ax as range,xx as rangeFog,ko as reciprocal,Ml as reference,Bl as referenceBuffer,Qo as reflect,bl as reflectVector,fl as reflectView,mf as reflector,ha as refract,xl as refractVector,yl as refractView,Wb as reinhardToneMapping,io as remainder,nu as remap,iu as remapClamp,Zn as renderGroup,cu as renderOutput,za as rendererReference,Tg as rotate,$m as rotateUV,ai as roughness,Go as round,Nf as rtt,wa as sRGBTransferEOTF,Ma as sRGBTransferOETF,vu as sampler,ca as saturate,Sb as saturation,_b as screen,Cc as screenCoordinate,Rc as screenSize,Ac as screenUV,mx as scriptable,dx as scriptableValue,xa as select,xn as setCurrentStack,Nr as shaderStages,yT as shadow,bT as shadows,Yn as sharedUniformGroup,ci as sheen,hi as sheenRoughness,ro as shiftLeft,no as shiftRight,Ni as shininess,Po as sign,Co as sin,Rm as sinc,ic as skinning,oc as skinningReference,pa as smoothstep,ya as smoothstepElement,Ti as specularColor,_i as specularF90,Hm as spherizeUV,qn as split,Km as spritesheetUV,_o as sqrt,mm as stack,Yo as step,ab as storage,Px as storageBarrier,ub as storageObject,db as storageTexture,$n as string,Oi as sub,Xd as subgroupIndex,Bx as subgroupSize,wo as tan,Pl as tangentGeometry,Il as tangentLocal,Ll as tangentView,Dl as tangentWorld,Ra as temp,_u as texture,Eg as texture3D,Ix as textureBarrier,pp as textureBicubic,Hp as textureCubeUV,Nu as textureLoad,yu as textureSize,cb as textureStore,wi as thickness,Eb as threshold,Fm as time,Vm as timerDelta,Dm as timerGlobal,Lm as timerLocal,Pa as toOutputColorSpace,Ia as toWorkingColorSpace,Ha as toneMapping,Wa as toneMappingExposure,$b as toonOutlinePass,oa as transformDirection,pl as transformNormal,gl as transformNormalToView,Yl as transformedBentNormalView,Wl as transformedBitangentView,jl as transformedBitangentWorld,hl as transformedClearcoatNormalView,dl as transformedNormalView,cl as transformedNormalWorld,Vl as transformedTangentView,Ol as transformedTangentWorld,Ei as transmission,Wo as transpose,Cm as tri,Em as tri3,wm as triNoise3D,Qm as triplanarTexture,Ym as triplanarTextures,zo as trunc,bn as tslFn,Rn as uint,ti as uniform,Rl as uniformArray,Xn as uniformGroup,Cl as uniforms,pb as userData,mu as uv,Mn as uvec2,Pn as uvec3,Vn as uvec4,Ea as varying,ni as varyingProperty,En as vec2,Un as vec3,Ln as vec4,vr as vectorComponents,bb as velocity,Ef as vertexColor,qd as vertexIndex,Ab as vibrance,$c as viewZToOrthographicDepth,Wc as viewZToPerspectiveDepth,Ec as viewport,Pc as viewportBottomLeft,Mc as viewportCoordinate,kc as viewportDepthTexture,Qc as viewportLinearDepth,Vc as viewportMipTexture,Uc as viewportResolution,jm as viewportSafeUV,Pb as viewportSharedTexture,wc as viewportSize,Dc as viewportTexture,Fc as viewportTopLeft,Bc as viewportUV,rx as wgsl,ux as wgslFn,Vx as workgroupArray,Fx as workgroupBarrier,wx as workgroupId,La as workingToColorSpace,Zi as xor};
